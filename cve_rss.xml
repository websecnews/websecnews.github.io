<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Tue, 27 Aug 2024 11:40:25 +0000</lastBuildDate><item><title>CVE-2024-8207 | MongoDB Server binaries may load potentially insecure shared libraries from specific relative paths</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8207</link><description>In certain highly specific configurations of the host system and MongoDB server binary installation on Linux Operating Systems, it may be possible for a unintended actor with host-level access to cause the MongoDB Server binary to load unintended actor-controlled shared libraries when the server binary is started, potentially resulting in the unintended actor gaining full control over the MongoDB server process. This issue affects MongoDB Server v5.0 versions prior to 5.0.14 and MongoDB Server v6.0 versions prior to 6.0.3.

Required Configuration: Only environments with Linux as the underlying operating system is affected by this issue</description><pubDate>Tue, 27 Aug 2024 11:40:27 +0000</pubDate></item><item><title>CVE-2024-7791 | 140+ Widgets | Xpro Addons For Elementor – FREE &amp;lt;= 1.4.4.3 - Authenticated (Contributor+) Stored Cross-Site Scripting via Post Grid Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7791</link><description>The 140+ Widgets | Xpro Addons For Elementor – FREE plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘arrow’ parameter within the Post Grid widget in all versions up to, and including, 1.4.4.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 27 Aug 2024 11:20:45 +0000</pubDate></item><item><title>CVE-2024-8197 | Visual Sound &amp;lt;= 1.03 - Cross-Site Request Forgery to Settings Update</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8197</link><description>The Visual Sound plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.03. This is due to missing or incorrect nonce validation on a function. This makes it possible for unauthenticated attackers to update the plugin's settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 27 Aug 2024 11:20:45 +0000</pubDate></item><item><title>CVE-2024-6789 | Path traversal in M-Files API</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6789</link><description>A path traversal issue in API endpoint in M-Files Server before version 24.8.13981.0 allows authenticated user to read files</description><pubDate>Tue, 27 Aug 2024 10:08:27 +0000</pubDate></item><item><title>CVE-2024-41173 | Beckhoff: Local authentication bypass in the IPC-Diagnostics package included in TwinCAT/BSD</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41173</link><description>The IPC-Diagnostics package included in TwinCAT/BSD is vulnerable to a local authentication bypass by a low privileged attacker.</description><pubDate>Tue, 27 Aug 2024 08:23:47 +0000</pubDate></item><item><title>CVE-2024-41174 | Beckhoff: Improper input neutralization vulnerability in the IPC-Diagnostics package in TwinCAT/BSD</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41174</link><description>The IPC-Diagnostics package in TwinCAT/BSD is susceptible to improper input neutralization by a low-privileged local attacker.</description><pubDate>Tue, 27 Aug 2024 08:23:47 +0000</pubDate></item><item><title>CVE-2024-41175 | Beckhoff: Local Denial-of-Service vulnerability in TwinCAT/BSD and the IPC-Diagnostics package</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41175</link><description>The IPC-Diagnostics package included in TwinCAT/BSD is vulnerable to a local denial-of-service attack by a low privileged attacker.</description><pubDate>Tue, 27 Aug 2024 08:23:47 +0000</pubDate></item><item><title>CVE-2024-41176 | Beckhoff: Local Denial of Service issue in package MDP included in TwinCAT/BSD</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41176</link><description>The MPD package included in TwinCAT/BSD allows an authenticated, low-privileged local
attacker to induce a Denial-of-Service (DoS) condition on the daemon and execute code in
the context of user “root” via a crafted HTTP request.</description><pubDate>Tue, 27 Aug 2024 08:23:48 +0000</pubDate></item><item><title>CVE-2024-7608 | An authenticated user can download sensitive files from Trellix products NX, EX, FX, AX, IVX,  and CMS using path traversal for the URL of n...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7608</link><description>An authenticated user can download sensitive files from Trellix products NX, EX, FX, AX, IVX,  and CMS using path traversal for the URL of network anomaly download_artifact.</description><pubDate>Tue, 27 Aug 2024 07:47:36 +0000</pubDate></item><item><title>CVE-2024-8046 | Logo Showcase Ultimate – Logo Carousel, Logo Slider &amp;amp; Logo Grid &amp;lt;= 1.4.1 - Authenticated (Author+) Stored Cross-Site Scripting via SVG File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8046</link><description>The Logo Showcase Ultimate – Logo Carousel, Logo Slider &amp; Logo Grid plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.4.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.</description><pubDate>Tue, 27 Aug 2024 07:47:36 +0000</pubDate></item><item><title>CVE-2024-6804 | Jeg Elementor Kit &amp;lt;= 2.6.7 - Authenticated (Author+) Stored Cross-Site Scripting via SVG File</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6804</link><description>The Jeg Elementor Kit plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 2.6.7 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.</description><pubDate>Tue, 27 Aug 2024 06:55:02 +0000</pubDate></item><item><title>CVE-2024-7304 | Ninja Tables – Easiest Data Table Builder &amp;lt;= 5.0.12 - Authenticated (Author+) Stored Cross-Site Scripting via SVG File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7304</link><description>The Ninja Tables – Easiest Data Table Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 5.0.12 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.</description><pubDate>Tue, 27 Aug 2024 06:55:02 +0000</pubDate></item><item><title>CVE-2024-6688 | Oxygen Builder &amp;lt;= 4.8.3 - Missing Authorization to Authenticated (Subscriber+) Stylesheet Update</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6688</link><description>The Oxygen Builder plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the oxy_save_css_from_admin AJAX action in all versions up to, and including, 4.8.3. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update stylesheets.</description><pubDate>Tue, 27 Aug 2024 04:44:58 +0000</pubDate></item><item><title>CVE-2024-7125 | Authentication Bypass Vulnerability in Hitachi Ops Center Common Services</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7125</link><description>Authentication Bypass vulnerability in Hitachi Ops Center Common Services.This issue affects Hitachi Ops Center Common Services: from 10.9.3-00 before 11.0.2-01.</description><pubDate>Tue, 27 Aug 2024 04:33:25 +0000</pubDate></item><item><title>CVE-2024-45321 | The App::cpanminus package through 1.7047 for Perl downloads code via insecure HTTP, enabling code execution for network attackers.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45321</link><description>The App::cpanminus package through 1.7047 for Perl downloads code via insecure HTTP, enabling code execution for network attackers.</description><pubDate>Tue, 27 Aug 2024 04:33:26 +0000</pubDate></item><item><title>CVE-2024-43798 | Chisel AUTH environment variable not respected in server entrypoint</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43798</link><description>Chisel is a fast TCP/UDP tunnel, transported over HTTP, secured via SSH. The Chisel server doesn't ever read the documented `AUTH` environment variable used to set credentials, which allows any unauthenticated user to connect, even if credentials were set. Anyone running the Chisel server that is using the `AUTH` environment variable to specify credentials to authenticate against is affected by this vulnerability. Chisel is often used to provide an entrypoint to a private network, which means services that are gated by Chisel may be affected. Additionally, Chisel is often used for exposing services to the internet. An attacker could MITM requests by connecting to a Chisel server and requesting to forward traffic from a remote port. This issue has been addressed in release version 1.10.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Mon, 26 Aug 2024 22:41:20 +0000</pubDate></item><item><title>CVE-2024-45036 | Improper Access Control Vulnerability When Accessing a Maliciously Crafted Tophat Link</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45036</link><description>Tophat is a mobile applications testing harness. An Improper Access Control vulnerability can expose the `TOPHAT_APP_TOKEN` token stored in `~/.tophatrc` through use of a malicious Tophat URL controlled by the attacker. The vulnerability allows Tophat to send this token to the attacker's server without any checks to ensure that the server is trusted. This token can then be used to access internal build artifacts, for mobile applications, not intended to be public. The issue has been patched as of version 1.10.0.  The ability to request artifacts using a Tophat API has been deprecated as this flow was inherently insecure.  Systems that have implemented this kind of endpoint should cease use and invalidate the token immediately. There are no workarounds and all users should update as soon as possible.</description><pubDate>Mon, 26 Aug 2024 22:41:20 +0000</pubDate></item><item><title>CVE-2024-39628 | WordPress Ninja Forms plugin &amp;lt;= 3.8.6 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39628</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Saturday Drive Ninja Forms.This issue affects Ninja Forms: from n/a through 3.8.6.</description><pubDate>Mon, 26 Aug 2024 21:07:25 +0000</pubDate></item><item><title>CVE-2024-39641 | WordPress LearnPress plugin &amp;lt;= 4.2.6.8.2 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39641</link><description>Cross-Site Request Forgery (CSRF) vulnerability in ThimPress LearnPress.This issue affects LearnPress: from n/a through 4.2.6.8.2.</description><pubDate>Mon, 26 Aug 2024 21:07:25 +0000</pubDate></item><item><title>CVE-2024-39645 | WordPress Tutor LMS plugin &amp;lt;= 2.7.2 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39645</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Themeum Tutor LMS.This issue affects Tutor LMS: from n/a through 2.7.2.</description><pubDate>Mon, 26 Aug 2024 21:07:25 +0000</pubDate></item><item><title>CVE-2024-39657 | WordPress Sender plugin &amp;lt;= 2.6.18 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39657</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Sender Sender – Newsletter, SMS and Email Marketing Automation for WooCommerce.This issue affects Sender – Newsletter, SMS and Email Marketing Automation for WooCommerce: from n/a through 2.6.18.</description><pubDate>Mon, 26 Aug 2024 21:07:26 +0000</pubDate></item><item><title>CVE-2024-43116 | WordPress Simple Local Avatars plugin &amp;lt;= 2.7.10 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43116</link><description>Cross-Site Request Forgery (CSRF) vulnerability in 10up Simple Local Avatars.This issue affects Simple Local Avatars: from n/a through 2.7.10.</description><pubDate>Mon, 26 Aug 2024 21:07:26 +0000</pubDate></item><item><title>CVE-2024-43117 | WordPress Hummingbird plugin &amp;lt;= 3.9.1 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43117</link><description>Cross-Site Request Forgery (CSRF) vulnerability in WPMU DEV Hummingbird.This issue affects Hummingbird: from n/a through 3.9.1.</description><pubDate>Mon, 26 Aug 2024 21:07:27 +0000</pubDate></item><item><title>CVE-2024-43265 | WordPress Analytify plugin &amp;lt;= 5.3.1 - CSRF Leading to Optout Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43265</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Analytify.This issue affects Analytify: from n/a through 5.3.1.</description><pubDate>Mon, 26 Aug 2024 21:07:28 +0000</pubDate></item><item><title>CVE-2024-43269 | WordPress Backup and Restore WordPress plugin &amp;lt;= 1.50 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43269</link><description>Cross-Site Request Forgery (CSRF) vulnerability in WPBackItUp Backup and Restore WordPress.This issue affects Backup and Restore WordPress: from n/a through 1.50.</description><pubDate>Mon, 26 Aug 2024 21:07:28 +0000</pubDate></item><item><title>CVE-2024-43287 | WordPress Brevo plugin &amp;lt;= 3.1.82 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43287</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Brevo Newsletter, SMTP, Email marketing and Subscribe forms by Sendinblue.This issue affects Newsletter, SMTP, Email marketing and Subscribe forms by Sendinblue: from n/a through 3.1.82.</description><pubDate>Mon, 26 Aug 2024 21:07:28 +0000</pubDate></item><item><title>CVE-2024-43295 | WordPress WP Data Access plugin &amp;lt;= 5.5.7 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43295</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Passionate Programmers B.V. WP Data Access.This issue affects WP Data Access: from n/a through 5.5.7.</description><pubDate>Mon, 26 Aug 2024 20:52:06 +0000</pubDate></item><item><title>CVE-2024-43299 | WordPress SpeedyCache plugin &amp;lt;= 1.1.8 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43299</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Softaculous Team SpeedyCache.This issue affects SpeedyCache: from n/a through 1.1.8.</description><pubDate>Mon, 26 Aug 2024 20:52:06 +0000</pubDate></item><item><title>CVE-2024-43301 | WordPress Fonts plugin &amp;lt;= 3.7.7 - Cross Site Request Forgery (CSRF) to Stored XSSvulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43301</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Fonts Plugin Fonts allows Stored XSS.This issue affects Fonts: from n/a through 3.7.7.</description><pubDate>Mon, 26 Aug 2024 20:52:07 +0000</pubDate></item><item><title>CVE-2024-43316 | WordPress Stripe Payments For WooCommerce plugin &amp;lt;= 1.9.1 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43316</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Checkout Plugins Stripe Payments For WooCommerce by Checkout.This issue affects Stripe Payments For WooCommerce by Checkout: from n/a through 1.9.1.</description><pubDate>Mon, 26 Aug 2024 20:42:23 +0000</pubDate></item><item><title>CVE-2024-43325 | WordPress Dark Mode for WP Dashboard plugin &amp;lt;= 1.2.3 - Cross Site Request Forgery vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43325</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Naiche Dark Mode for WP Dashboard.This issue affects Dark Mode for WP Dashboard: from n/a through 1.2.3.</description><pubDate>Mon, 26 Aug 2024 20:42:23 +0000</pubDate></item><item><title>CVE-2024-43336 | WordPress WP User Manager – User Profile Builder &amp;amp; Membership plugin &amp;lt;= 2.9.10 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43336</link><description>Cross-Site Request Forgery (CSRF) vulnerability in WP User Manager.This issue affects WP User Manager: from n/a through 2.9.10.</description><pubDate>Mon, 26 Aug 2024 20:42:24 +0000</pubDate></item><item><title>CVE-2024-43337 | WordPress Brave plugin &amp;lt;= 0.7.0 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43337</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Brave Brave Popup Builder.This issue affects Brave Popup Builder: from n/a through 0.7.0.</description><pubDate>Mon, 26 Aug 2024 20:42:24 +0000</pubDate></item><item><title>CVE-2024-43340 | WordPress AFI – The Easiest Integration Plugin plugin &amp;lt;= 1.89.4 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43340</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Nasirahmed Advanced Form Integration.This issue affects Advanced Form Integration: from n/a through 1.89.4.</description><pubDate>Mon, 26 Aug 2024 20:42:25 +0000</pubDate></item><item><title>CVE-2024-43356 | WordPress oik plugin &amp;lt;= 4.12.0 - Arbitrary File Deletion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43356</link><description>Cross-Site Request Forgery (CSRF) vulnerability in bobbingwide.This issue affects oik: from n/a through 4.12.0.</description><pubDate>Mon, 26 Aug 2024 20:42:25 +0000</pubDate></item><item><title>CVE-2024-43915 | WordPress Zephyr Project Manager plugin &amp;lt;=3.3.102 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43915</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Dylan James Zephyr Project Manager allows Reflected XSS.This issue affects Zephyr Project Manager: from n/a through .3.102.</description><pubDate>Mon, 26 Aug 2024 20:42:25 +0000</pubDate></item><item><title>CVE-2024-43214 | WordPress myCred plugin &amp;lt;= 2.7.2 - Sensitive Data Exposure via BAC vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43214</link><description>Missing Authorization vulnerability in myCred.This issue affects myCred: from n/a through 2.7.2.</description><pubDate>Mon, 26 Aug 2024 20:32:22 +0000</pubDate></item><item><title>CVE-2024-43230 | WordPress Shared Files – Premium Download Manager &amp;amp; Secure File Sharing with Frontend File Upload plugin &amp;lt;= 1.7.28 - Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43230</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Shared Files – File Upload Form Shared Files.This issue affects Shared Files: from n/a through 1.7.28.</description><pubDate>Mon, 26 Aug 2024 20:32:23 +0000</pubDate></item><item><title>CVE-2024-43255 | WordPress MyBookTable Bookstore by Stormhill Media plugin &amp;lt;= 3.3.9 - CSRF to XSS vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43255</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Stormhill Media MyBookTable Bookstore allows Cross-Site Scripting (XSS).This issue affects MyBookTable Bookstore: from n/a through 3.3.9.</description><pubDate>Mon, 26 Aug 2024 20:32:23 +0000</pubDate></item><item><title>CVE-2024-43339 | WordPress WordPress Webinar Plugin – WebinarPress plugin &amp;lt;= 1.33.20 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43339</link><description>Cross-Site Request Forgery (CSRF) vulnerability in WebinarPress allows Cross-Site Scripting (XSS).This issue affects WebinarPress: from n/a through 1.33.20.</description><pubDate>Mon, 26 Aug 2024 20:32:23 +0000</pubDate></item><item><title>CVE-2024-43916 | WordPress Zephyr Project Manager plugin &amp;lt;= 3.3.102 - Insecure Direct Object References (IDOR) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43916</link><description>Authorization Bypass Through User-Controlled Key vulnerability in Dylan James Zephyr Project Manager.This issue affects Zephyr Project Manager: from n/a through 3.3.102.</description><pubDate>Mon, 26 Aug 2024 20:32:24 +0000</pubDate></item><item><title>CVE-2024-43251 | WordPress Bit Form Pro plugin &amp;lt;= 2.6.4 - Authenticated Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43251</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Bit Apps Bit Form Pro.This issue affects Bit Form Pro: from n/a through 2.6.4.</description><pubDate>Mon, 26 Aug 2024 20:21:34 +0000</pubDate></item><item><title>CVE-2024-43257 | WordPress Leopard plugin &amp;lt;= 2.0.36 - Subscriber+ Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43257</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Nouthemes Leopard - WordPress offload media.This issue affects Leopard - WordPress offload media: from n/a through 2.0.36.</description><pubDate>Mon, 26 Aug 2024 20:21:34 +0000</pubDate></item><item><title>CVE-2024-43258 | WordPress Store Locator Plus® for WordPress plugin &amp;lt;= 2311.17.01 - Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43258</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Store Locator Plus.This issue affects Store Locator Plus: from n/a through 2311.17.01.</description><pubDate>Mon, 26 Aug 2024 20:21:34 +0000</pubDate></item><item><title>CVE-2024-43259 | WordPress Order Export for WooCommerce plugin &amp;lt;= 3.23 - Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43259</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in JEM Plugins Order Export for WooCommerce.This issue affects Order Export for WooCommerce: from n/a through 3.23.</description><pubDate>Mon, 26 Aug 2024 20:21:35 +0000</pubDate></item><item><title>CVE-2024-43264 | WordPress Create by Mediavine plugin &amp;lt;= 1.9.8 - Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43264</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Mediavine Create by Mediavine.This issue affects Create by Mediavine: from n/a through 1.9.8.</description><pubDate>Mon, 26 Aug 2024 20:21:35 +0000</pubDate></item><item><title>CVE-2024-44793 | A cross-site scripting (XSS) vulnerability in the component /managers/multiple_freeleech.php of Gazelle commit 63b3370 allows attackers to e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44793</link><description>A cross-site scripting (XSS) vulnerability in the component /managers/multiple_freeleech.php of Gazelle commit 63b3370 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the torrents parameter.</description><pubDate>Mon, 26 Aug 2024 20:21:36 +0000</pubDate></item><item><title>CVE-2024-44794 | A cross-site scripting (XSS) vulnerability in the component /master/auth/OnedriveRedirect.php of PicUploader commit fcf82ea allows attackers...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44794</link><description>A cross-site scripting (XSS) vulnerability in the component /master/auth/OnedriveRedirect.php of PicUploader commit fcf82ea allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the error_description parameter.</description><pubDate>Mon, 26 Aug 2024 20:21:37 +0000</pubDate></item><item><title>CVE-2024-44795 | A cross-site scripting (XSS) vulnerability in the component /login/disabled.php of Gazelle commit 63b3370 allows attackers to execute arbitr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44795</link><description>A cross-site scripting (XSS) vulnerability in the component /login/disabled.php of Gazelle commit 63b3370 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the username parameter.</description><pubDate>Mon, 26 Aug 2024 20:21:37 +0000</pubDate></item><item><title>CVE-2024-44796 | A cross-site scripting (XSS) vulnerability in the component /auth/AzureRedirect.php of PicUploader commit fcf82ea allows attackers to execut...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44796</link><description>A cross-site scripting (XSS) vulnerability in the component /auth/AzureRedirect.php of PicUploader commit fcf82ea allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the error_description parameter.</description><pubDate>Mon, 26 Aug 2024 20:21:37 +0000</pubDate></item><item><title>CVE-2024-44797 | A cross-site scripting (XSS) vulnerability in the component /managers/enable_requests.php of Gazelle commit 63b3370 allows attackers to exec...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44797</link><description>A cross-site scripting (XSS) vulnerability in the component /managers/enable_requests.php of Gazelle commit 63b3370 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the view parameter.</description><pubDate>Mon, 26 Aug 2024 20:21:38 +0000</pubDate></item><item><title>CVE-2024-28077 | A denial-of-service issue was discovered on certain GL-iNet devices. Some websites can detect devices exposed to the external network throug...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28077</link><description>A denial-of-service issue was discovered on certain GL-iNet devices. Some websites can detect devices exposed to the external network through DDNS, and consequently obtain the IP addresses and ports of devices that are exposed. By using special usernames and special characters (such as half parentheses or square brackets), one can call the login interface and cause the session-management program to crash, resulting in customers being unable to log into their devices. This affects MT6000 4.5.6, XE3000 4.4.5, X3000 4.4.6, MT3000 4.5.0, MT2500 4.5.0, AXT1800 4.5.0, AX1800 4.5.0, A1300 4.5.0, S200 4.1.4-0300, X750 4.3.7, SFT1200 4.3.7, MT1300 4.3.10, AR750 4.3.10, AR750S 4.3.10, AR300M 4.3.10, AR300M16 4.3.10, B1300 4.3.10, MT300N-V2 4.3.10, and XE300 4.3.16.</description><pubDate>Mon, 26 Aug 2024 19:38:16 +0000</pubDate></item><item><title>CVE-2024-42906 | TestLink before v.1.9.20 is vulnerable to Cross Site Scripting (XSS) via the pop-up on upload file. When uploading a file, the XSS payload c...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42906</link><description>TestLink before v.1.9.20 is vulnerable to Cross Site Scripting (XSS) via the pop-up on upload file. When uploading a file, the XSS payload can be entered into the file name.</description><pubDate>Mon, 26 Aug 2024 19:38:16 +0000</pubDate></item><item><title>CVE-2024-8105 | Insecure Platform Key (PK) used in UEFI system firmware signature</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8105</link><description>A vulnerability related to the use an insecure Platform Key (PK) has been discovered. An attacker with the compromised PK private key can create malicious UEFI software that is signed with a trusted key that has been compromised.</description><pubDate>Mon, 26 Aug 2024 19:18:45 +0000</pubDate></item><item><title>CVE-2024-43802 | heap-buffer-overflow in ins_typebuf() in Vim &amp;lt; 9.1.0697</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43802</link><description>Vim is an improved version of the unix vi text editor. When flushing the typeahead buffer, Vim moves the current position in the typeahead buffer but does not check whether there is enough space left in the buffer to handle the next characters.  So this may lead to the tb_off position within the typebuf variable to point outside of the valid buffer size, which can then later lead to a heap-buffer overflow in e.g. ins_typebuf(). Therefore, when flushing the typeahead buffer, check if there is enough space left before advancing the off position. If not, fall back to flush current typebuf contents. It's not quite clear yet, what can lead to this situation. It seems to happen when error messages occur (which will cause Vim to flush the typeahead buffer) in comnination with several long mappgins and so it may eventually move the off position out of a valid buffer size. Impact is low since it is not easily reproducible and requires to have several mappings active and run into some error condition. But when this happens, this will cause a crash. The issue has been fixed as of Vim patch v9.1.0697. Users are advised to upgrade. There are no known workarounds for this issue.</description><pubDate>Mon, 26 Aug 2024 18:50:52 +0000</pubDate></item><item><title>CVE-2024-43806 | `rustix::fs::Dir` iterator with the `linux_raw` backend can cause memory explosion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43806</link><description>Rustix is a set of safe Rust bindings to POSIX-ish APIs. When using `rustix::fs::Dir` using the `linux_raw` backend, it's possible for the iterator to "get stuck" when an IO error is encountered. Combined with a memory over-allocation issue in `rustix::fs::Dir::read_more`, this can cause quick and unbounded memory explosion (gigabytes in a few seconds if used on a hot path) and eventually lead to an OOM crash of the application. The symptoms were initially discovered in https://github.com/imsnif/bandwhich/issues/284. That post has lots of details of our investigation. Full details can be read on the GHSA-c827-hfw6-qwvm repo advisory. If a program tries to access a directory with its file descriptor after the file has been unlinked (or any other action that leaves the `Dir` iterator in the stuck state), and the implementation does not break after seeing an error, it can cause a memory explosion. As an example, Linux's various virtual file systems (e.g. `/proc`, `/sys`) can contain directories that spontaneously pop in and out of existence. Attempting to iterate over them using `rustix::fs::Dir` directly or indirectly (e.g. with the `procfs` crate) can trigger this fault condition if the implementation decides to continue on errors. An attacker knowledgeable about the implementation details of a vulnerable target can therefore try to trigger this fault condition via any one or a combination of several available APIs. If successful, the application host will quickly run out of memory, after which the application will likely be terminated by an OOM killer, leading to denial of service. This issue has been addressed in release versions 0.35.15, 0.36.16, 0.37.25, and 0.38.19. Users are advised to upgrade. There are no known workarounds for this issue.</description><pubDate>Mon, 26 Aug 2024 18:50:53 +0000</pubDate></item><item><title>CVE-2024-42913 | RuoYi CMS v4.7.9 was discovered to contain a SQL injection vulnerability via the job_id parameter at /sasfs1.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42913</link><description>RuoYi CMS v4.7.9 was discovered to contain a SQL injection vulnerability via the job_id parameter at /sasfs1.</description><pubDate>Mon, 26 Aug 2024 17:38:32 +0000</pubDate></item><item><title>CVE-2024-45265 | A SQL injection vulnerability in the poll component in SkySystem Arfa-CMS before 5.1.3124 allows remote attackers to execute arbitrary SQL c...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45265</link><description>A SQL injection vulnerability in the poll component in SkySystem Arfa-CMS before 5.1.3124 allows remote attackers to execute arbitrary SQL commands via the psid parameter.</description><pubDate>Mon, 26 Aug 2024 17:38:32 +0000</pubDate></item><item><title>CVE-2024-41444 | SeaCMS v12.9 has a SQL injection vulnerability in the key parameter of /js/player/dmplayer/dmku/index.php?ac=so.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41444</link><description>SeaCMS v12.9 has a SQL injection vulnerability in the key parameter of /js/player/dmplayer/dmku/index.php?ac=so.</description><pubDate>Mon, 26 Aug 2024 16:43:09 +0000</pubDate></item><item><title>CVE-2024-42790 | A Reflected Cross Site Scripting (XSS) vulnerability was found in "/music/index.php?page=test" in Kashipara Music Management System v1.0. Th...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42790</link><description>A Reflected Cross Site Scripting (XSS) vulnerability was found in "/music/index.php?page=test" in Kashipara Music Management System v1.0. This vulnerability allows remote attackers to execute arbitrary code via the "page" parameter.</description><pubDate>Mon, 26 Aug 2024 16:43:10 +0000</pubDate></item><item><title>CVE-2024-42792 | A Cross-Site Request Forgery (CSRF) vulnerability was found in Kashipara Music Management System v1.0 via /music/ajax.php?action=delete_play...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42792</link><description>A Cross-Site Request Forgery (CSRF) vulnerability was found in Kashipara Music Management System v1.0 via /music/ajax.php?action=delete_playlist page.</description><pubDate>Mon, 26 Aug 2024 16:43:10 +0000</pubDate></item><item><title>CVE-2024-7401 | Client Enrollment Process Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7401</link><description>Netskope was notified about a security gap in Netskope Client enrollment process where NSClient is using a static token “Orgkey” as authentication parameter. Since this a static token, if leaked, cannot be rotated or revoked. A malicious actor can use this token to enroll NSClient from a customer’s tenant and impersonate a user.</description><pubDate>Mon, 26 Aug 2024 16:43:10 +0000</pubDate></item><item><title>CVE-2024-8174 | code-projects Blood Bank System Login Page login.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8174</link><description>A vulnerability has been found in code-projects Blood Bank System 1.0 and classified as problematic. Affected by this vulnerability is an unknown functionality of the file /login.php of the component Login Page. The manipulation of the argument user leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 26 Aug 2024 16:43:11 +0000</pubDate></item><item><title>CVE-2024-42816 | A cross-site scripting (XSS) vulnerability in the Create Product function of fastapi-admin pro v0.1.4 allows attackers to execute arbitrary ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42816</link><description>A cross-site scripting (XSS) vulnerability in the Create Product function of fastapi-admin pro v0.1.4 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Product Name parameter.</description><pubDate>Mon, 26 Aug 2024 16:26:33 +0000</pubDate></item><item><title>CVE-2024-42818 | A cross-site scripting (XSS) vulnerability in the Config-Create function of fastapi-admin pro v0.1.4 allows attackers to execute arbitrary w...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42818</link><description>A cross-site scripting (XSS) vulnerability in the Config-Create function of fastapi-admin pro v0.1.4 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Product Name parameter.</description><pubDate>Mon, 26 Aug 2024 16:26:34 +0000</pubDate></item><item><title>CVE-2024-43283 | WordPress Contest Gallery plugin &amp;lt;= 23.1.2 - Unauthenticated Comment UserID And IP address Disclosure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43283</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Contest Gallery.This issue affects Contest Gallery: from n/a through 23.1.2.</description><pubDate>Mon, 26 Aug 2024 16:26:34 +0000</pubDate></item><item><title>CVE-2024-43289 | WordPress wpForo Forum plugin &amp;lt;= 2.3.4 - Unauthenticated Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43289</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in gVectors Team wpForo Forum.This issue affects wpForo Forum: from n/a through 2.3.4.</description><pubDate>Mon, 26 Aug 2024 16:26:35 +0000</pubDate></item><item><title>CVE-2024-43319 | WordPress HTML5 Video Player plugin &amp;lt;= 2.5.31 - Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43319</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in bPlugins LLC Flash &amp; HTML5 Video.This issue affects Flash &amp; HTML5 Video: from n/a through 2.5.31.</description><pubDate>Mon, 26 Aug 2024 16:26:35 +0000</pubDate></item><item><title>CVE-2024-8172 | SourceCodester QR Code Attendance System delete-student.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8172</link><description>A vulnerability, which was classified as problematic, has been found in SourceCodester QR Code Attendance System 1.0. This issue affects some unknown processing of the file /endpoint/delete-student.php. The manipulation of the argument student/attendance leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 26 Aug 2024 16:26:36 +0000</pubDate></item><item><title>CVE-2024-8173 | code-projects Blood Bank System Login Page login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8173</link><description>A vulnerability, which was classified as critical, was found in code-projects Blood Bank System 1.0. Affected is an unknown function of the file /login.php of the component Login Page. The manipulation of the argument user leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 26 Aug 2024 16:26:36 +0000</pubDate></item><item><title>CVE-2024-41285 | A stack overflow in FAST FW300R v1.3.13 Build 141023 Rel.61347n allows attackers to execute arbitrary code or cause a Denial of Service (DoS...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41285</link><description>A stack overflow in FAST FW300R v1.3.13 Build 141023 Rel.61347n allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via a crafted file path.</description><pubDate>Mon, 26 Aug 2024 15:48:41 +0000</pubDate></item><item><title>CVE-2024-44549 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.port parameter in the function formGetIptv.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44549</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.port parameter in the function formGetIptv.</description><pubDate>Mon, 26 Aug 2024 15:39:22 +0000</pubDate></item><item><title>CVE-2024-44550 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stbpvid parameter in the function formGetIptv.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44550</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stbpvid parameter in the function formGetIptv.</description><pubDate>Mon, 26 Aug 2024 15:39:23 +0000</pubDate></item><item><title>CVE-2024-44551 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.city.vlan parameter in the function formGetIptv.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44551</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.city.vlan parameter in the function formGetIptv.</description><pubDate>Mon, 26 Aug 2024 15:39:23 +0000</pubDate></item><item><title>CVE-2024-44552 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stballvlans parameter in the function formGetIptv.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44552</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stballvlans parameter in the function formGetIptv.</description><pubDate>Mon, 26 Aug 2024 15:39:24 +0000</pubDate></item><item><title>CVE-2024-44553 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.mode parameter in the function formGetIptv.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44553</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.mode parameter in the function formGetIptv.</description><pubDate>Mon, 26 Aug 2024 15:39:25 +0000</pubDate></item><item><title>CVE-2024-44555 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.city.vlan parameter in the function setIptvInfo.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44555</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.city.vlan parameter in the function setIptvInfo.</description><pubDate>Mon, 26 Aug 2024 15:39:25 +0000</pubDate></item><item><title>CVE-2024-44557 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.mode parameter in the function setIptvInfo.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44557</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.mode parameter in the function setIptvInfo.</description><pubDate>Mon, 26 Aug 2024 15:39:26 +0000</pubDate></item><item><title>CVE-2024-8170 | SourceCodester Zipped Folder Manager App add-folder.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8170</link><description>A vulnerability classified as problematic has been found in SourceCodester Zipped Folder Manager App 1.0. This affects an unknown part of the file /endpoint/add-folder.php. The manipulation of the argument folder leads to unrestricted upload. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 26 Aug 2024 15:39:26 +0000</pubDate></item><item><title>CVE-2024-8171 | itsourcecode Tailoring Management System staffcatedit.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8171</link><description>A vulnerability classified as critical was found in itsourcecode Tailoring Management System 1.0. This vulnerability affects unknown code of the file staffcatedit.php. The manipulation of the argument title leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 26 Aug 2024 15:39:26 +0000</pubDate></item><item><title>CVE-2024-34087 | An SEH-based buffer overflow in the BPQ32 HTTP Server in BPQ32 6.0.24.1 allows remote attackers with access to the Web Terminal to achieve r...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34087</link><description>An SEH-based buffer overflow in the BPQ32 HTTP Server in BPQ32 6.0.24.1 allows remote attackers with access to the Web Terminal to achieve remote code execution via an HTTP POST /TermInput request.</description><pubDate>Mon, 26 Aug 2024 15:28:35 +0000</pubDate></item><item><title>CVE-2024-42788 | A Stored Cross Site Scripting (XSS) vulnerability was found in "/music/ajax.php?action=save_music" in Kashipara Music Management System v1.0...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42788</link><description>A Stored Cross Site Scripting (XSS) vulnerability was found in "/music/ajax.php?action=save_music" in Kashipara Music Management System v1.0. This vulnerability allows remote attackers to execute arbitrary code via "title" &amp; "artist" parameter fields.</description><pubDate>Mon, 26 Aug 2024 15:28:35 +0000</pubDate></item><item><title>CVE-2024-42791 | A Cross-Site Request Forgery (CSRF) vulnerability was found in Kashipara Music Management System v1.0 via /music/ajax.php?action=delete_genr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42791</link><description>A Cross-Site Request Forgery (CSRF) vulnerability was found in Kashipara Music Management System v1.0 via /music/ajax.php?action=delete_genre.</description><pubDate>Mon, 26 Aug 2024 15:28:36 +0000</pubDate></item><item><title>CVE-2024-43967 | WordPress WP Testimonial Widget plugin &amp;lt;= 3.1 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43967</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Stark Digital WP Testimonial Widget allows Stored XSS.This issue affects WP Testimonial Widget: from n/a through 3.1.</description><pubDate>Mon, 26 Aug 2024 15:28:36 +0000</pubDate></item><item><title>CVE-2024-42789 | A Reflected Cross Site Scripting (XSS) vulnerability was found in "/music/controller.php?page=test" in Kashipara Music Management System v1....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42789</link><description>A Reflected Cross Site Scripting (XSS) vulnerability was found in "/music/controller.php?page=test" in Kashipara Music Management System v1.0. This vulnerability allows remote attackers to execute arbitrary code via the "page" parameter.</description><pubDate>Mon, 26 Aug 2024 15:16:19 +0000</pubDate></item><item><title>CVE-2024-43966 | WordPress WP Testimonial Widget plugin &amp;lt;= 3.1 - SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43966</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Stark Digital WP Testimonial Widget.This issue affects WP Testimonial Widget: from n/a through 3.1.</description><pubDate>Mon, 26 Aug 2024 15:16:20 +0000</pubDate></item><item><title>CVE-2024-42787 | A Stored Cross Site Scripting (XSS) vulnerability was found in "/music/ajax.php?action=save_playlist" in Kashipara Music Management System v...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42787</link><description>A Stored Cross Site Scripting (XSS) vulnerability was found in "/music/ajax.php?action=save_playlist" in Kashipara Music Management System v1.0. This vulnerability allows remote attackers to execute arbitrary code via "title" &amp; "description" parameter fields.</description><pubDate>Mon, 26 Aug 2024 15:16:20 +0000</pubDate></item><item><title>CVE-2024-8168 | code-projects Online Bus Reservation Site login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8168</link><description>A vulnerability was found in code-projects Online Bus Reservation Site 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file login.php. The manipulation of the argument Username leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 26 Aug 2024 15:16:21 +0000</pubDate></item><item><title>CVE-2024-8169 | code-projects Online Quiz Site signupuser.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8169</link><description>A vulnerability was found in code-projects Online Quiz Site 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file signupuser.php. The manipulation of the argument lid leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 26 Aug 2024 15:16:21 +0000</pubDate></item><item><title>CVE-2024-7987 | Rockwell Automation ThinManager® ThinServer™ Information Disclosure and Remote Code Execution Vulnerabilities</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7987</link><description>A remote code execution vulnerability exists in the Rockwell Automation ThinManager® ThinServer™
that allows a threat actor to execute arbitrary code with System privileges. To exploit this vulnerability and a threat actor must abuse the ThinServer™ service by creating a junction and use it to upload arbitrary files.</description><pubDate>Mon, 26 Aug 2024 14:54:40 +0000</pubDate></item><item><title>CVE-2024-7988 | ThinManager® ThinServer™ Information Disclosure and Remote Code Execution Vulnerabilities</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7988</link><description>A remote code execution vulnerability exists in the Rockwell Automation ThinManager® ThinServer™ that allows a threat actor to execute arbitrary code with System privileges. This vulnerability exists due to the lack of proper data input validation, which allows files to be overwritten.</description><pubDate>Mon, 26 Aug 2024 14:54:40 +0000</pubDate></item><item><title>CVE-2024-8166 | Ruijie EG2000K index.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8166</link><description>A vulnerability has been found in Ruijie EG2000K 11.1(6)B2 and classified as critical. This vulnerability affects unknown code of the file /tool/index.php?c=download&amp;amp;a=save. The manipulation of the argument content leads to unrestricted upload. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 26 Aug 2024 14:44:42 +0000</pubDate></item><item><title>CVE-2024-8167 | code-projects Job Portal forget.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8167</link><description>A vulnerability was found in code-projects Job Portal 1.0. It has been classified as critical. Affected is an unknown function of the file /forget.php. The manipulation of the argument email/mobile leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 26 Aug 2024 14:44:42 +0000</pubDate></item><item><title>CVE-2024-39097 | There is an Open Redirect vulnerability in Gnuboard v6.0.4 and below via the `url` parameter in login path.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39097</link><description>There is an Open Redirect vulnerability in Gnuboard v6.0.4 and below via the `url` parameter in login path.</description><pubDate>Mon, 26 Aug 2024 14:34:32 +0000</pubDate></item><item><title>CVE-2024-38859 | XSS in view page with SLA column</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38859</link><description>XSS in the view page with the SLA column configured in Checkmk versions prior to 2.3.0p14, 2.2.0p33, 2.1.0p47 and 2.0.0 (EOL) allowed malicious users to execute arbitrary scripts by injecting HTML elements into the SLA column title. These scripts could be executed when the view page was cloned by other users.</description><pubDate>Mon, 26 Aug 2024 14:21:30 +0000</pubDate></item><item><title>CVE-2023-49582 | Apache Portable Runtime (APR): Unexpected lax shared memory permissions</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49582</link><description>Lax permissions set by the Apache Portable Runtime library on Unix platforms would allow local users read access to named shared memory segments, potentially revealing sensitive application data. 

This issue does not affect non-Unix platforms, or builds with APR_USE_SHMEM_SHMGET=1 (apr.h)

Users are recommended to upgrade to APR version 1.7.5, which fixes this issue.</description><pubDate>Mon, 26 Aug 2024 14:21:31 +0000</pubDate></item><item><title>CVE-2024-8165 | Chengdu Everbrite Network Technology BeikeShop export exportZip path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8165</link><description>A vulnerability, which was classified as problematic, was found in Chengdu Everbrite Network Technology BeikeShop up to 1.5.5. This affects the function exportZip of the file /admin/file_manager/export. The manipulation of the argument path leads to path traversal. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 26 Aug 2024 14:21:31 +0000</pubDate></item><item><title>CVE-2024-8164 | Chengdu Everbrite Network Technology BeikeShop FileManagerController.php rename unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8164</link><description>A vulnerability, which was classified as critical, has been found in Chengdu Everbrite Network Technology BeikeShop up to 1.5.5. Affected by this issue is the function rename of the file /Admin/Http/Controllers/FileManagerController.php. The manipulation of the argument new_name leads to unrestricted upload. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 26 Aug 2024 13:39:27 +0000</pubDate></item><item><title>CVE-2024-8162 | TOTOLINK T10 AC1200 Telnet Service product.ini hard-coded credentials</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8162</link><description>A vulnerability classified as critical has been found in TOTOLINK T10 AC1200 4.1.8cu.5207. Affected is an unknown function of the file /squashfs-root/web_cste/cgi-bin/product.ini of the component Telnet Service. The manipulation leads to hard-coded credentials. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 26 Aug 2024 13:27:47 +0000</pubDate></item><item><title>CVE-2024-8163 | Chengdu Everbrite Network Technology BeikeShop files destroyFiles path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8163</link><description>A vulnerability classified as critical was found in Chengdu Everbrite Network Technology BeikeShop up to 1.5.5. Affected by this vulnerability is the function destroyFiles of the file /admin/file_manager/files. The manipulation of the argument files leads to path traversal. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 26 Aug 2024 13:27:48 +0000</pubDate></item><item><title>CVE-2024-44556 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stballvlans parameter in the function setIptvInfo.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44556</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stballvlans parameter in the function setIptvInfo.</description><pubDate>Mon, 26 Aug 2024 12:34:58 +0000</pubDate></item><item><title>CVE-2024-44558 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stbpvid parameter in the function setIptvInfo.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44558</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stbpvid parameter in the function setIptvInfo.</description><pubDate>Mon, 26 Aug 2024 12:34:58 +0000</pubDate></item><item><title>CVE-2024-41879 | RE: New Edge T5 MSRC Case [DCMSFT-1294]</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41879</link><description>Acrobat Reader versions 127.0.2651.105 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.</description><pubDate>Mon, 26 Aug 2024 12:34:59 +0000</pubDate></item><item><title>CVE-2024-44563 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.port parameter in the function setIptvInfo.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44563</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.port parameter in the function setIptvInfo.</description><pubDate>Mon, 26 Aug 2024 12:34:59 +0000</pubDate></item><item><title>CVE-2024-44565 | Tenda AX1806 v1.0.0.1 contains a stack overflow via the serverName parameter in the function form_fast_setting_internet_set.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44565</link><description>Tenda AX1806 v1.0.0.1 contains a stack overflow via the serverName parameter in the function form_fast_setting_internet_set.</description><pubDate>Mon, 26 Aug 2024 12:35:00 +0000</pubDate></item><item><title>CVE-2023-26315 | Xiaomi router has a command injection vulnerability after authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2023-26315</link><description>The Xiaomi router AX9000 has a post-authentication command injection vulnerability. This vulnerability is caused by the lack of input filtering, allowing an attacker to exploit it to obtain root access to the device.</description><pubDate>Mon, 26 Aug 2024 11:57:32 +0000</pubDate></item><item><title>CVE-2024-44938 | jfs: Fix shift-out-of-bounds in dbDiscardAG</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44938</link><description>In the Linux kernel, the following vulnerability has been resolved:

jfs: Fix shift-out-of-bounds in dbDiscardAG

When searching for the next smaller log2 block, BLKSTOL2() returned 0,
causing shift exponent -1 to be negative.

This patch fixes the issue by exiting the loop directly when negative
shift is found.</description><pubDate>Mon, 26 Aug 2024 11:26:42 +0000</pubDate></item><item><title>CVE-2024-44939 | jfs: fix null ptr deref in dtInsertEntry</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44939</link><description>In the Linux kernel, the following vulnerability has been resolved:

jfs: fix null ptr deref in dtInsertEntry

[syzbot reported]
general protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
CPU: 0 PID: 5061 Comm: syz-executor404 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
RIP: 0010:dtInsertEntry+0xd0c/0x1780 fs/jfs/jfs_dtree.c:3713
...
[Analyze]
In dtInsertEntry(), when the pointer h has the same value as p, after writing
name in UniStrncpy_to_le(), p-&gt;header.flag will be cleared. This will cause the
previously true judgment "p-&gt;header.flag &amp; BT-LEAF" to change to no after writing
the name operation, this leads to entering an incorrect branch and accessing the
uninitialized object ih when judging this condition for the second time.

[Fix]
After got the page, check freelist first, if freelist == 0 then exit dtInsert()
and return -EINVAL.</description><pubDate>Mon, 26 Aug 2024 11:26:42 +0000</pubDate></item><item><title>CVE-2024-44940 | fou: remove warn in gue_gro_receive on unsupported protocol</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44940</link><description>In the Linux kernel, the following vulnerability has been resolved:

fou: remove warn in gue_gro_receive on unsupported protocol

Drop the WARN_ON_ONCE inn gue_gro_receive if the encapsulated type is
not known or does not have a GRO handler.

Such a packet is easily constructed. Syzbot generates them and sets
off this warning.

Remove the warning as it is expected and not actionable.

The warning was previously reduced from WARN_ON to WARN_ON_ONCE in
commit 270136613bf7 ("fou: Do WARN_ON_ONCE in gue_gro_receive for bad
proto callbacks").</description><pubDate>Mon, 26 Aug 2024 11:26:43 +0000</pubDate></item><item><title>CVE-2024-44941 | f2fs: fix to cover read extent cache access with lock</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44941</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to cover read extent cache access with lock

syzbot reports a f2fs bug as below:

BUG: KASAN: slab-use-after-free in sanity_check_extent_cache+0x370/0x410 fs/f2fs/extent_cache.c:46
Read of size 4 at addr ffff8880739ab220 by task syz-executor200/5097

CPU: 0 PID: 5097 Comm: syz-executor200 Not tainted 6.9.0-rc6-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
Call Trace:
 
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114
 print_address_description mm/kasan/report.c:377 [inline]
 print_report+0x169/0x550 mm/kasan/report.c:488
 kasan_report+0x143/0x180 mm/kasan/report.c:601
 sanity_check_extent_cache+0x370/0x410 fs/f2fs/extent_cache.c:46
 do_read_inode fs/f2fs/inode.c:509 [inline]
 f2fs_iget+0x33e1/0x46e0 fs/f2fs/inode.c:560
 f2fs_nfs_get_inode+0x74/0x100 fs/f2fs/super.c:3237
 generic_fh_to_dentry+0x9f/0xf0 fs/libfs.c:1413
 exportfs_decode_fh_raw+0x152/0x5f0 fs/exportfs/expfs.c:444
 exportfs_decode_fh+0x3c/0x80 fs/exportfs/expfs.c:584
 do_handle_to_path fs/fhandle.c:155 [inline]
 handle_to_path fs/fhandle.c:210 [inline]
 do_handle_open+0x495/0x650 fs/fhandle.c:226
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

We missed to cover sanity_check_extent_cache() w/ extent cache lock,
so, below race case may happen, result in use after free issue.

- f2fs_iget
 - do_read_inode
  - f2fs_init_read_extent_tree
  : add largest extent entry in to cache
					- shrink
					 - f2fs_shrink_read_extent_tree
					  - __shrink_extent_tree
					   - __detach_extent_node
					   : drop largest extent entry
  - sanity_check_extent_cache
  : access et-&gt;largest w/o lock

let's refactor sanity_check_extent_cache() to avoid extent cache access
and call it before f2fs_init_read_extent_tree() to fix this issue.</description><pubDate>Mon, 26 Aug 2024 11:26:43 +0000</pubDate></item><item><title>CVE-2024-44942 | f2fs: fix to do sanity check on F2FS_INLINE_DATA flag in inode during GC</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44942</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to do sanity check on F2FS_INLINE_DATA flag in inode during GC

syzbot reports a f2fs bug as below:

------------[ cut here ]------------
kernel BUG at fs/f2fs/inline.c:258!
CPU: 1 PID: 34 Comm: kworker/u8:2 Not tainted 6.9.0-rc6-syzkaller-00012-g9e4bc4bcae01 #0
RIP: 0010:f2fs_write_inline_data+0x781/0x790 fs/f2fs/inline.c:258
Call Trace:
 f2fs_write_single_data_page+0xb65/0x1d60 fs/f2fs/data.c:2834
 f2fs_write_cache_pages fs/f2fs/data.c:3133 [inline]
 __f2fs_write_data_pages fs/f2fs/data.c:3288 [inline]
 f2fs_write_data_pages+0x1efe/0x3a90 fs/f2fs/data.c:3315
 do_writepages+0x35b/0x870 mm/page-writeback.c:2612
 __writeback_single_inode+0x165/0x10b0 fs/fs-writeback.c:1650
 writeback_sb_inodes+0x905/0x1260 fs/fs-writeback.c:1941
 wb_writeback+0x457/0xce0 fs/fs-writeback.c:2117
 wb_do_writeback fs/fs-writeback.c:2264 [inline]
 wb_workfn+0x410/0x1090 fs/fs-writeback.c:2304
 process_one_work kernel/workqueue.c:3254 [inline]
 process_scheduled_works+0xa12/0x17c0 kernel/workqueue.c:3335
 worker_thread+0x86d/0xd70 kernel/workqueue.c:3416
 kthread+0x2f2/0x390 kernel/kthread.c:388
 ret_from_fork+0x4d/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244

The root cause is: inline_data inode can be fuzzed, so that there may
be valid blkaddr in its direct node, once f2fs triggers background GC
to migrate the block, it will hit f2fs_bug_on() during dirty page
writeback.

Let's add sanity check on F2FS_INLINE_DATA flag in inode during GC,
so that, it can forbid migrating inline_data inode's data block for
fixing.</description><pubDate>Mon, 26 Aug 2024 11:26:44 +0000</pubDate></item><item><title>CVE-2024-43885 | btrfs: fix double inode unlock for direct IO sync writes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43885</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix double inode unlock for direct IO sync writes

If we do a direct IO sync write, at btrfs_sync_file(), and we need to skip
inode logging or we get an error starting a transaction or an error when
flushing delalloc, we end up unlocking the inode when we shouldn't under
the 'out_release_extents' label, and then unlock it again at
btrfs_direct_write().

Fix that by checking if we have to skip inode unlocking under that label.</description><pubDate>Mon, 26 Aug 2024 10:22:14 +0000</pubDate></item><item><title>CVE-2024-43886 | drm/amd/display: Add null check in resource_log_pipe_topology_update</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43886</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null check in resource_log_pipe_topology_update

[WHY]
When switching from "Extend" to "Second Display Only" we sometimes
call resource_get_otg_master_for_stream on a stream for the eDP,
which is disconnected. This leads to a null pointer dereference.

[HOW]
Added a null check in dc_resource.c/resource_log_pipe_topology_update.</description><pubDate>Mon, 26 Aug 2024 10:22:14 +0000</pubDate></item><item><title>CVE-2024-43887 | net/tcp: Disable TCP-AO static key after RCU grace period</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43887</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/tcp: Disable TCP-AO static key after RCU grace period

The lifetime of TCP-AO static_key is the same as the last
tcp_ao_info. On the socket destruction tcp_ao_info ceases to be
with RCU grace period, while tcp-ao static branch is currently deferred
destructed. The static key definition is
: DEFINE_STATIC_KEY_DEFERRED_FALSE(tcp_ao_needed, HZ);

which means that if RCU grace period is delayed by more than a second
and tcp_ao_needed is in the process of disablement, other CPUs may
yet see tcp_ao_info which atent dead, but soon-to-be.
And that breaks the assumption of static_key_fast_inc_not_disabled().

See the comment near the definition:
&gt; * The caller must make sure that the static key can't get disabled while
&gt; * in this function. It doesn't patch jump labels, only adds a user to
&gt; * an already enabled static key.

Originally it was introduced in commit eb8c507296f6 ("jump_label:
Prevent key-&gt;enabled int overflow"), which is needed for the atomic
contexts, one of which would be the creation of a full socket from a
request socket. In that atomic context, it's known by the presence
of the key (md5/ao) that the static branch is already enabled.
So, the ref counter for that static branch is just incremented
instead of holding the proper mutex.
static_key_fast_inc_not_disabled() is just a helper for such usage
case. But it must not be used if the static branch could get disabled
in parallel as it's not protected by jump_label_mutex and as a result,
races with jump_label_update() implementation details.

Happened on netdev test-bot[1], so not a theoretical issue:

[] jump_label: Fatal kernel bug, unexpected op at tcp_inbound_hash+0x1a7/0x870 [ffffffffa8c4e9b7] (eb 50 0f 1f 44 != 66 90 0f 1f 00)) size:2 type:1
[] ------------[ cut here ]------------
[] kernel BUG at arch/x86/kernel/jump_label.c:73!
[] Oops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN NOPTI
[] CPU: 3 PID: 243 Comm: kworker/3:3 Not tainted 6.10.0-virtme #1
[] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
[] Workqueue: events jump_label_update_timeout
[] RIP: 0010:__jump_label_patch+0x2f6/0x350
...
[] Call Trace:
[]  
[]  arch_jump_label_transform_queue+0x6c/0x110
[]  __jump_label_update+0xef/0x350
[]  __static_key_slow_dec_cpuslocked.part.0+0x3c/0x60
[]  jump_label_update_timeout+0x2c/0x40
[]  process_one_work+0xe3b/0x1670
[]  worker_thread+0x587/0xce0
[]  kthread+0x28a/0x350
[]  ret_from_fork+0x31/0x70
[]  ret_from_fork_asm+0x1a/0x30
[]  
[] Modules linked in: veth
[] ---[ end trace 0000000000000000 ]---
[] RIP: 0010:__jump_label_patch+0x2f6/0x350

[1]: https://netdev-3.bots.linux.dev/vmksft-tcp-ao-dbg/results/696681/5-connect-deny-ipv6/stderr</description><pubDate>Mon, 26 Aug 2024 10:22:15 +0000</pubDate></item><item><title>CVE-2024-43888 | mm: list_lru: fix UAF for memory cgroup</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43888</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm: list_lru: fix UAF for memory cgroup

The mem_cgroup_from_slab_obj() is supposed to be called under rcu lock or
cgroup_mutex or others which could prevent returned memcg from being
freed.  Fix it by adding missing rcu read lock.

Found by code inspection.

[songmuchun@bytedance.com: only grab rcu lock when necessary, per Vlastimil]
  Link: https://lkml.kernel.org/r/20240801024603.1865-1-songmuchun@bytedance.com</description><pubDate>Mon, 26 Aug 2024 10:22:15 +0000</pubDate></item><item><title>CVE-2024-43889 | padata: Fix possible divide-by-0 panic in padata_mt_helper()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43889</link><description>In the Linux kernel, the following vulnerability has been resolved:

padata: Fix possible divide-by-0 panic in padata_mt_helper()

We are hit with a not easily reproducible divide-by-0 panic in padata.c at
bootup time.

  [   10.017908] Oops: divide error: 0000 1 PREEMPT SMP NOPTI
  [   10.017908] CPU: 26 PID: 2627 Comm: kworker/u1666:1 Not tainted 6.10.0-15.el10.x86_64 #1
  [   10.017908] Hardware name: Lenovo ThinkSystem SR950 [7X12CTO1WW]/[7X12CTO1WW], BIOS [PSE140J-2.30] 07/20/2021
  [   10.017908] Workqueue: events_unbound padata_mt_helper
  [   10.017908] RIP: 0010:padata_mt_helper+0x39/0xb0
    :
  [   10.017963] Call Trace:
  [   10.017968]  
  [   10.018004]  ? padata_mt_helper+0x39/0xb0
  [   10.018084]  process_one_work+0x174/0x330
  [   10.018093]  worker_thread+0x266/0x3a0
  [   10.018111]  kthread+0xcf/0x100
  [   10.018124]  ret_from_fork+0x31/0x50
  [   10.018138]  ret_from_fork_asm+0x1a/0x30
  [   10.018147]  

Looking at the padata_mt_helper() function, the only way a divide-by-0
panic can happen is when ps-&gt;chunk_size is 0.  The way that chunk_size is
initialized in padata_do_multithreaded(), chunk_size can be 0 when the
min_chunk in the passed-in padata_mt_job structure is 0.

Fix this divide-by-0 panic by making sure that chunk_size will be at least
1 no matter what the input parameters are.</description><pubDate>Mon, 26 Aug 2024 10:22:16 +0000</pubDate></item><item><title>CVE-2024-43890 | tracing: Fix overflow in get_free_elt()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43890</link><description>In the Linux kernel, the following vulnerability has been resolved:

tracing: Fix overflow in get_free_elt()

"tracing_map-&gt;next_elt" in get_free_elt() is at risk of overflowing.

Once it overflows, new elements can still be inserted into the tracing_map
even though the maximum number of elements (`max_elts`) has been reached.
Continuing to insert elements after the overflow could result in the
tracing_map containing "tracing_map-&gt;max_size" elements, leaving no empty
entries.
If any attempt is made to insert an element into a full tracing_map using
`__tracing_map_insert()`, it will cause an infinite loop with preemption
disabled, leading to a CPU hang problem.

Fix this by preventing any further increments to "tracing_map-&gt;next_elt"
once it reaches "tracing_map-&gt;max_elt".</description><pubDate>Mon, 26 Aug 2024 10:22:16 +0000</pubDate></item><item><title>CVE-2024-43891 | tracing: Have format file honor EVENT_FILE_FL_FREED</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43891</link><description>In the Linux kernel, the following vulnerability has been resolved:

tracing: Have format file honor EVENT_FILE_FL_FREED

When eventfs was introduced, special care had to be done to coordinate the
freeing of the file meta data with the files that are exposed to user
space. The file meta data would have a ref count that is set when the file
is created and would be decremented and freed after the last user that
opened the file closed it. When the file meta data was to be freed, it
would set a flag (EVENT_FILE_FL_FREED) to denote that the file is freed,
and any new references made (like new opens or reads) would fail as it is
marked freed. This allowed other meta data to be freed after this flag was
set (under the event_mutex).

All the files that were dynamically created in the events directory had a
pointer to the file meta data and would call event_release() when the last
reference to the user space file was closed. This would be the time that it
is safe to free the file meta data.

A shortcut was made for the "format" file. It's i_private would point to
the "call" entry directly and not point to the file's meta data. This is
because all format files are the same for the same "call", so it was
thought there was no reason to differentiate them.  The other files
maintain state (like the "enable", "trigger", etc). But this meant if the
file were to disappear, the "format" file would be unaware of it.

This caused a race that could be trigger via the user_events test (that
would create dynamic events and free them), and running a loop that would
read the user_events format files:

In one console run:

 # cd tools/testing/selftests/user_events
 # while true; do ./ftrace_test; done

And in another console run:

 # cd /sys/kernel/tracing/
 # while true; do cat events/user_events/__test_event/format; done 2&gt;/dev/null

With KASAN memory checking, it would trigger a use-after-free bug report
(which was a real bug). This was because the format file was not checking
the file's meta data flag "EVENT_FILE_FL_FREED", so it would access the
event that the file meta data pointed to after the event was freed.

After inspection, there are other locations that were found to not check
the EVENT_FILE_FL_FREED flag when accessing the trace_event_file. Add a
new helper function: event_file_file() that will make sure that the
event_mutex is held, and will return NULL if the trace_event_file has the
EVENT_FILE_FL_FREED flag set. Have the first reference of the struct file
pointer use event_file_file() and check for NULL. Later uses can still use
the event_file_data() helper function if the event_mutex is still held and
was not released since the event_file_file() call.</description><pubDate>Mon, 26 Aug 2024 10:22:17 +0000</pubDate></item><item><title>CVE-2024-43892 | memcg: protect concurrent access to mem_cgroup_idr</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43892</link><description>In the Linux kernel, the following vulnerability has been resolved:

memcg: protect concurrent access to mem_cgroup_idr

Commit 73f576c04b94 ("mm: memcontrol: fix cgroup creation failure after
many small jobs") decoupled the memcg IDs from the CSS ID space to fix the
cgroup creation failures.  It introduced IDR to maintain the memcg ID
space.  The IDR depends on external synchronization mechanisms for
modifications.  For the mem_cgroup_idr, the idr_alloc() and idr_replace()
happen within css callback and thus are protected through cgroup_mutex
from concurrent modifications.  However idr_remove() for mem_cgroup_idr
was not protected against concurrency and can be run concurrently for
different memcgs when they hit their refcnt to zero.  Fix that.

We have been seeing list_lru based kernel crashes at a low frequency in
our fleet for a long time.  These crashes were in different part of
list_lru code including list_lru_add(), list_lru_del() and reparenting
code.  Upon further inspection, it looked like for a given object (dentry
and inode), the super_block's list_lru didn't have list_lru_one for the
memcg of that object.  The initial suspicions were either the object is
not allocated through kmem_cache_alloc_lru() or somehow
memcg_list_lru_alloc() failed to allocate list_lru_one() for a memcg but
returned success.  No evidence were found for these cases.

Looking more deeply, we started seeing situations where valid memcg's id
is not present in mem_cgroup_idr and in some cases multiple valid memcgs
have same id and mem_cgroup_idr is pointing to one of them.  So, the most
reasonable explanation is that these situations can happen due to race
between multiple idr_remove() calls or race between
idr_alloc()/idr_replace() and idr_remove().  These races are causing
multiple memcgs to acquire the same ID and then offlining of one of them
would cleanup list_lrus on the system for all of them.  Later access from
other memcgs to the list_lru cause crashes due to missing list_lru_one.</description><pubDate>Mon, 26 Aug 2024 10:22:17 +0000</pubDate></item><item><title>CVE-2024-43893 | serial: core: check uartclk for zero to avoid divide by zero</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43893</link><description>In the Linux kernel, the following vulnerability has been resolved:

serial: core: check uartclk for zero to avoid divide by zero

Calling ioctl TIOCSSERIAL with an invalid baud_base can
result in uartclk being zero, which will result in a
divide by zero error in uart_get_divisor(). The check for
uartclk being zero in uart_set_info() needs to be done
before other settings are made as subsequent calls to
ioctl TIOCSSERIAL for the same port would be impacted if
the uartclk check was done where uartclk gets set.

Oops: divide error: 0000  PREEMPT SMP KASAN PTI
RIP: 0010:uart_get_divisor (drivers/tty/serial/serial_core.c:580)
Call Trace:
 
serial8250_get_divisor (drivers/tty/serial/8250/8250_port.c:2576
    drivers/tty/serial/8250/8250_port.c:2589)
serial8250_do_set_termios (drivers/tty/serial/8250/8250_port.c:502
    drivers/tty/serial/8250/8250_port.c:2741)
serial8250_set_termios (drivers/tty/serial/8250/8250_port.c:2862)
uart_change_line_settings (./include/linux/spinlock.h:376
    ./include/linux/serial_core.h:608 drivers/tty/serial/serial_core.c:222)
uart_port_startup (drivers/tty/serial/serial_core.c:342)
uart_startup (drivers/tty/serial/serial_core.c:368)
uart_set_info (drivers/tty/serial/serial_core.c:1034)
uart_set_info_user (drivers/tty/serial/serial_core.c:1059)
tty_set_serial (drivers/tty/tty_io.c:2637)
tty_ioctl (drivers/tty/tty_io.c:2647 drivers/tty/tty_io.c:2791)
__x64_sys_ioctl (fs/ioctl.c:52 fs/ioctl.c:907
    fs/ioctl.c:893 fs/ioctl.c:893)
do_syscall_64 (arch/x86/entry/common.c:52
    (discriminator 1) arch/x86/entry/common.c:83 (discriminator 1))
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Rule: add</description><pubDate>Mon, 26 Aug 2024 10:22:17 +0000</pubDate></item><item><title>CVE-2024-43894 | drm/client: fix null pointer dereference in drm_client_modeset_probe</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43894</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/client: fix null pointer dereference in drm_client_modeset_probe

In drm_client_modeset_probe(), the return value of drm_mode_duplicate() is
assigned to modeset-&gt;mode, which will lead to a possible NULL pointer
dereference on failure of drm_mode_duplicate(). Add a check to avoid npd.</description><pubDate>Mon, 26 Aug 2024 10:22:18 +0000</pubDate></item><item><title>CVE-2024-43895 | drm/amd/display: Skip Recompute DSC Params if no Stream on Link</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43895</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Skip Recompute DSC Params if no Stream on Link

[why]
Encounter NULL pointer dereference uner mst + dsc setup.

BUG: kernel NULL pointer dereference, address: 0000000000000008
    PGD 0 P4D 0
    Oops: 0000 [#1] PREEMPT SMP NOPTI
    CPU: 4 PID: 917 Comm: sway Not tainted 6.3.9-arch1-1 #1 124dc55df4f5272ccb409f39ef4872fc2b3376a2
    Hardware name: LENOVO 20NKS01Y00/20NKS01Y00, BIOS R12ET61W(1.31 ) 07/28/2022
    RIP: 0010:drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper]
    Code: 01 00 00 48 8b 85 60 05 00 00 48 63 80 88 00 00 00 3b 43 28 0f 8d 2e 01 00 00 48 8b 53 30 48 8d 04 80 48 8d 04 c2 48 8b 40 18 &lt;48&gt; 8&gt;
    RSP: 0018:ffff960cc2df77d8 EFLAGS: 00010293
    RAX: 0000000000000000 RBX: ffff8afb87e81280 RCX: 0000000000000224
    RDX: ffff8afb9ee37c00 RSI: ffff8afb8da1a578 RDI: ffff8afb87e81280
    RBP: ffff8afb83d67000 R08: 0000000000000001 R09: ffff8afb9652f850
    R10: ffff960cc2df7908 R11: 0000000000000002 R12: 0000000000000000
    R13: ffff8afb8d7688a0 R14: ffff8afb8da1a578 R15: 0000000000000224
    FS:  00007f4dac35ce00(0000) GS:ffff8afe30b00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000008 CR3: 000000010ddc6000 CR4: 00000000003506e0
    Call Trace:

     ? __die+0x23/0x70
     ? page_fault_oops+0x171/0x4e0
     ? plist_add+0xbe/0x100
     ? exc_page_fault+0x7c/0x180
     ? asm_exc_page_fault+0x26/0x30
     ? drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]
     ? drm_dp_atomic_find_time_slots+0x28/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]
     compute_mst_dsc_configs_for_link+0x2ff/0xa40 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     ? fill_plane_buffer_attributes+0x419/0x510 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     compute_mst_dsc_configs_for_state+0x1e1/0x250 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     amdgpu_dm_atomic_check+0xecd/0x1190 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     drm_atomic_check_only+0x5c5/0xa40
     drm_mode_atomic_ioctl+0x76e/0xbc0

[how]
dsc recompute should be skipped if no mode change detected on the new
request. If detected, keep checking whether the stream is already on
current state or not.

(cherry picked from commit 8151a6c13111b465dbabe07c19f572f7cbd16fef)</description><pubDate>Mon, 26 Aug 2024 10:22:18 +0000</pubDate></item><item><title>CVE-2024-43896 | ASoC: cs-amp-lib: Fix NULL pointer crash if efi.get_variable is NULL</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43896</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: cs-amp-lib: Fix NULL pointer crash if efi.get_variable is NULL

Call efi_rt_services_supported() to check that efi.get_variable exists
before calling it.</description><pubDate>Mon, 26 Aug 2024 10:22:19 +0000</pubDate></item><item><title>CVE-2024-43897 | net: drop bad gso csum_start and offset in virtio_net_hdr</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43897</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: drop bad gso csum_start and offset in virtio_net_hdr

Tighten csum_start and csum_offset checks in virtio_net_hdr_to_skb
for GSO packets.

The function already checks that a checksum requested with
VIRTIO_NET_HDR_F_NEEDS_CSUM is in skb linear. But for GSO packets
this might not hold for segs after segmentation.

Syzkaller demonstrated to reach this warning in skb_checksum_help

	offset = skb_checksum_start_offset(skb);
	ret = -EINVAL;
	if (WARN_ON_ONCE(offset &gt;= skb_headlen(skb)))

By injecting a TSO packet:

WARNING: CPU: 1 PID: 3539 at net/core/dev.c:3284 skb_checksum_help+0x3d0/0x5b0
 ip_do_fragment+0x209/0x1b20 net/ipv4/ip_output.c:774
 ip_finish_output_gso net/ipv4/ip_output.c:279 [inline]
 __ip_finish_output+0x2bd/0x4b0 net/ipv4/ip_output.c:301
 iptunnel_xmit+0x50c/0x930 net/ipv4/ip_tunnel_core.c:82
 ip_tunnel_xmit+0x2296/0x2c70 net/ipv4/ip_tunnel.c:813
 __gre_xmit net/ipv4/ip_gre.c:469 [inline]
 ipgre_xmit+0x759/0xa60 net/ipv4/ip_gre.c:661
 __netdev_start_xmit include/linux/netdevice.h:4850 [inline]
 netdev_start_xmit include/linux/netdevice.h:4864 [inline]
 xmit_one net/core/dev.c:3595 [inline]
 dev_hard_start_xmit+0x261/0x8c0 net/core/dev.c:3611
 __dev_queue_xmit+0x1b97/0x3c90 net/core/dev.c:4261
 packet_snd net/packet/af_packet.c:3073 [inline]

The geometry of the bad input packet at tcp_gso_segment:

[   52.003050][ T8403] skb len=12202 headroom=244 headlen=12093 tailroom=0
[   52.003050][ T8403] mac=(168,24) mac_len=24 net=(192,52) trans=244
[   52.003050][ T8403] shinfo(txflags=0 nr_frags=1 gso(size=1552 type=3 segs=0))
[   52.003050][ T8403] csum(0x60000c7 start=199 offset=1536
ip_summed=3 complete_sw=0 valid=0 level=0)

Mitigate with stricter input validation.

csum_offset: for GSO packets, deduce the correct value from gso_type.
This is already done for USO. Extend it to TSO. Let UFO be:
udp[46]_ufo_fragment ignores these fields and always computes the
checksum in software.

csum_start: finding the real offset requires parsing to the transport
header. Do not add a parser, use existing segmentation parsing. Thanks
to SKB_GSO_DODGY, that also catches bad packets that are hw offloaded.
Again test both TSO and USO. Do not test UFO for the above reason, and
do not test UDP tunnel offload.

GSO packet are almost always CHECKSUM_PARTIAL. USO packets may be
CHECKSUM_NONE since commit 10154dbded6d6 ("udp: Allow GSO transmit
from devices with no checksum offload"), but then still these fields
are initialized correctly in udp4_hwcsum/udp6_hwcsum_outgoing. So no
need to test for ip_summed == CHECKSUM_PARTIAL first.

This revises an existing fix mentioned in the Fixes tag, which broke
small packets with GSO offload, as detected by kselftests.</description><pubDate>Mon, 26 Aug 2024 10:22:19 +0000</pubDate></item><item><title>CVE-2024-43898 | ext4: sanity check for NULL pointer after ext4_force_shutdown</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43898</link><description>In the Linux kernel, the following vulnerability has been resolved:

ext4: sanity check for NULL pointer after ext4_force_shutdown

Test case: 2 threads write short inline data to a file.
In ext4_page_mkwrite the resulting inline data is converted.
Handling ext4_grp_locked_error with description "block bitmap
and bg descriptor inconsistent: X vs Y free clusters" calls
ext4_force_shutdown. The conversion clears
EXT4_STATE_MAY_INLINE_DATA but fails for
ext4_destroy_inline_data_nolock and ext4_mark_iloc_dirty due
to ext4_forced_shutdown. The restoration of inline data fails
for the same reason not setting EXT4_STATE_MAY_INLINE_DATA.
Without the flag set a regular process path in ext4_da_write_end
follows trying to dereference page folio private pointer that has
not been set. The fix calls early return with -EIO error shall the
pointer to private be NULL.

Sample crash report:

Unable to handle kernel paging request at virtual address dfff800000000004
KASAN: null-ptr-deref in range [0x0000000000000020-0x0000000000000027]
Mem abort info:
  ESR = 0x0000000096000005
  EC = 0x25: DABT (current EL), IL = 32 bits
  SET = 0, FnV = 0
  EA = 0, S1PTW = 0
  FSC = 0x05: level 1 translation fault
Data abort info:
  ISV = 0, ISS = 0x00000005, ISS2 = 0x00000000
  CM = 0, WnR = 0, TnD = 0, TagAccess = 0
  GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
[dfff800000000004] address between user and kernel address ranges
Internal error: Oops: 0000000096000005 [#1] PREEMPT SMP
Modules linked in:
CPU: 1 PID: 20274 Comm: syz-executor185 Not tainted 6.9.0-rc7-syzkaller-gfda5695d692c #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
pc : __block_commit_write+0x64/0x2b0 fs/buffer.c:2167
lr : __block_commit_write+0x3c/0x2b0 fs/buffer.c:2160
sp : ffff8000a1957600
x29: ffff8000a1957610 x28: dfff800000000000 x27: ffff0000e30e34b0
x26: 0000000000000000 x25: dfff800000000000 x24: dfff800000000000
x23: fffffdffc397c9e0 x22: 0000000000000020 x21: 0000000000000020
x20: 0000000000000040 x19: fffffdffc397c9c0 x18: 1fffe000367bd196
x17: ffff80008eead000 x16: ffff80008ae89e3c x15: 00000000200000c0
x14: 1fffe0001cbe4e04 x13: 0000000000000000 x12: 0000000000000000
x11: 0000000000000001 x10: 0000000000ff0100 x9 : 0000000000000000
x8 : 0000000000000004 x7 : 0000000000000000 x6 : 0000000000000000
x5 : fffffdffc397c9c0 x4 : 0000000000000020 x3 : 0000000000000020
x2 : 0000000000000040 x1 : 0000000000000020 x0 : fffffdffc397c9c0
Call trace:
 __block_commit_write+0x64/0x2b0 fs/buffer.c:2167
 block_write_end+0xb4/0x104 fs/buffer.c:2253
 ext4_da_do_write_end fs/ext4/inode.c:2955 [inline]
 ext4_da_write_end+0x2c4/0xa40 fs/ext4/inode.c:3028
 generic_perform_write+0x394/0x588 mm/filemap.c:3985
 ext4_buffered_write_iter+0x2c0/0x4ec fs/ext4/file.c:299
 ext4_file_write_iter+0x188/0x1780
 call_write_iter include/linux/fs.h:2110 [inline]
 new_sync_write fs/read_write.c:497 [inline]
 vfs_write+0x968/0xc3c fs/read_write.c:590
 ksys_write+0x15c/0x26c fs/read_write.c:643
 __do_sys_write fs/read_write.c:655 [inline]
 __se_sys_write fs/read_write.c:652 [inline]
 __arm64_sys_write+0x7c/0x90 fs/read_write.c:652
 __invoke_syscall arch/arm64/kernel/syscall.c:34 [inline]
 invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:48
 el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:133
 do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:152
 el0_svc+0x54/0x168 arch/arm64/kernel/entry-common.c:712
 el0t_64_sync_handler+0x84/0xfc arch/arm64/kernel/entry-common.c:730
 el0t_64_sync+0x190/0x194 arch/arm64/kernel/entry.S:598
Code: 97f85911 f94002da 91008356 d343fec8 (38796908)
---[ end trace 0000000000000000 ]---
----------------
Code disassembly (best guess):
   0:	97f85911 	bl	0xffffffffffe16444
   4:	f94002da 	ldr	x26, [x22]
   8:	91008356 	add	x22, x26, #0x20
   c:	d343fec8 	lsr	x8, x22, #3
* 10:	38796908 	ldrb	w8, [x8, x25] &lt;-- trapping instruction</description><pubDate>Mon, 26 Aug 2024 10:22:19 +0000</pubDate></item><item><title>CVE-2024-43899 | drm/amd/display: Fix null pointer deref in dcn20_resource.c</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43899</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix null pointer deref in dcn20_resource.c

Fixes a hang thats triggered when MPV is run on a DCN401 dGPU:

mpv --hwdec=vaapi --vo=gpu --hwdec-codecs=all

and then enabling fullscreen playback (double click on the video)

The following calltrace will be seen:

[  181.843989] BUG: kernel NULL pointer dereference, address: 0000000000000000
[  181.843997] #PF: supervisor instruction fetch in kernel mode
[  181.844003] #PF: error_code(0x0010) - not-present page
[  181.844009] PGD 0 P4D 0
[  181.844020] Oops: 0010 [#1] PREEMPT SMP NOPTI
[  181.844028] CPU: 6 PID: 1892 Comm: gnome-shell Tainted: G        W  OE      6.5.0-41-generic #41~22.04.2-Ubuntu
[  181.844038] Hardware name: System manufacturer System Product Name/CROSSHAIR VI HERO, BIOS 6302 10/23/2018
[  181.844044] RIP: 0010:0x0
[  181.844079] Code: Unable to access opcode bytes at 0xffffffffffffffd6.
[  181.844084] RSP: 0018:ffffb593c2b8f7b0 EFLAGS: 00010246
[  181.844093] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000004
[  181.844099] RDX: ffffb593c2b8f804 RSI: ffffb593c2b8f7e0 RDI: ffff9e3c8e758400
[  181.844105] RBP: ffffb593c2b8f7b8 R08: ffffb593c2b8f9c8 R09: ffffb593c2b8f96c
[  181.844110] R10: 0000000000000000 R11: 0000000000000000 R12: ffffb593c2b8f9c8
[  181.844115] R13: 0000000000000001 R14: ffff9e3c88000000 R15: 0000000000000005
[  181.844121] FS:  00007c6e323bb5c0(0000) GS:ffff9e3f85f80000(0000) knlGS:0000000000000000
[  181.844128] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  181.844134] CR2: ffffffffffffffd6 CR3: 0000000140fbe000 CR4: 00000000003506e0
[  181.844141] Call Trace:
[  181.844146]  
[  181.844153]  ? show_regs+0x6d/0x80
[  181.844167]  ? __die+0x24/0x80
[  181.844179]  ? page_fault_oops+0x99/0x1b0
[  181.844192]  ? do_user_addr_fault+0x31d/0x6b0
[  181.844204]  ? exc_page_fault+0x83/0x1b0
[  181.844216]  ? asm_exc_page_fault+0x27/0x30
[  181.844237]  dcn20_get_dcc_compression_cap+0x23/0x30 [amdgpu]
[  181.845115]  amdgpu_dm_plane_validate_dcc.constprop.0+0xe5/0x180 [amdgpu]
[  181.845985]  amdgpu_dm_plane_fill_plane_buffer_attributes+0x300/0x580 [amdgpu]
[  181.846848]  fill_dc_plane_info_and_addr+0x258/0x350 [amdgpu]
[  181.847734]  fill_dc_plane_attributes+0x162/0x350 [amdgpu]
[  181.848748]  dm_update_plane_state.constprop.0+0x4e3/0x6b0 [amdgpu]
[  181.849791]  ? dm_update_plane_state.constprop.0+0x4e3/0x6b0 [amdgpu]
[  181.850840]  amdgpu_dm_atomic_check+0xdfe/0x1760 [amdgpu]</description><pubDate>Mon, 26 Aug 2024 10:22:20 +0000</pubDate></item><item><title>CVE-2024-43900 | media: xc2028: avoid use-after-free in load_firmware_cb()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43900</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: xc2028: avoid use-after-free in load_firmware_cb()

syzkaller reported use-after-free in load_firmware_cb() [1].
The reason is because the module allocated a struct tuner in tuner_probe(),
and then the module initialization failed, the struct tuner was released.
A worker which created during module initialization accesses this struct
tuner later, it caused use-after-free.

The process is as follows:

task-6504           worker_thread
tuner_probe                             &lt;= alloc dvb_frontend [2]
...
request_firmware_nowait                 &lt;= create a worker
...
tuner_remove                            &lt;= free dvb_frontend
...
                    request_firmware_work_func  &lt;= the firmware is ready
                    load_firmware_cb    &lt;= but now the dvb_frontend has been freed

To fix the issue, check the dvd_frontend in load_firmware_cb(), if it is
null, report a warning and just return.

[1]:
    ==================================================================
     BUG: KASAN: use-after-free in load_firmware_cb+0x1310/0x17a0
     Read of size 8 at addr ffff8000d7ca2308 by task kworker/2:3/6504

     Call trace:
      load_firmware_cb+0x1310/0x17a0
      request_firmware_work_func+0x128/0x220
      process_one_work+0x770/0x1824
      worker_thread+0x488/0xea0
      kthread+0x300/0x430
      ret_from_fork+0x10/0x20

     Allocated by task 6504:
      kzalloc
      tuner_probe+0xb0/0x1430
      i2c_device_probe+0x92c/0xaf0
      really_probe+0x678/0xcd0
      driver_probe_device+0x280/0x370
      __device_attach_driver+0x220/0x330
      bus_for_each_drv+0x134/0x1c0
      __device_attach+0x1f4/0x410
      device_initial_probe+0x20/0x30
      bus_probe_device+0x184/0x200
      device_add+0x924/0x12c0
      device_register+0x24/0x30
      i2c_new_device+0x4e0/0xc44
      v4l2_i2c_new_subdev_board+0xbc/0x290
      v4l2_i2c_new_subdev+0xc8/0x104
      em28xx_v4l2_init+0x1dd0/0x3770

     Freed by task 6504:
      kfree+0x238/0x4e4
      tuner_remove+0x144/0x1c0
      i2c_device_remove+0xc8/0x290
      __device_release_driver+0x314/0x5fc
      device_release_driver+0x30/0x44
      bus_remove_device+0x244/0x490
      device_del+0x350/0x900
      device_unregister+0x28/0xd0
      i2c_unregister_device+0x174/0x1d0
      v4l2_device_unregister+0x224/0x380
      em28xx_v4l2_init+0x1d90/0x3770

     The buggy address belongs to the object at ffff8000d7ca2000
      which belongs to the cache kmalloc-2k of size 2048
     The buggy address is located 776 bytes inside of
      2048-byte region [ffff8000d7ca2000, ffff8000d7ca2800)
     The buggy address belongs to the page:
     page:ffff7fe00035f280 count:1 mapcount:0 mapping:ffff8000c001f000 index:0x0
     flags: 0x7ff800000000100(slab)
     raw: 07ff800000000100 ffff7fe00049d880 0000000300000003 ffff8000c001f000
     raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000
     page dumped because: kasan: bad access detected

     Memory state around the buggy address:
      ffff8000d7ca2200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      ffff8000d7ca2280: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     &gt;ffff8000d7ca2300: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                           ^
      ffff8000d7ca2380: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      ffff8000d7ca2400: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ==================================================================

[2]
    Actually, it is allocated for struct tuner, and dvb_frontend is inside.</description><pubDate>Mon, 26 Aug 2024 10:22:20 +0000</pubDate></item><item><title>CVE-2024-43901 | drm/amd/display: Fix NULL pointer dereference for DTN log in DCN401</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43901</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix NULL pointer dereference for DTN log in DCN401

When users run the command:

cat /sys/kernel/debug/dri/0/amdgpu_dm_dtn_log

The following NULL pointer dereference happens:

[  +0.000003] BUG: kernel NULL pointer dereference, address: NULL
[  +0.000005] #PF: supervisor instruction fetch in kernel mode
[  +0.000002] #PF: error_code(0x0010) - not-present page
[  +0.000002] PGD 0 P4D 0
[  +0.000004] Oops: 0010 [#1] PREEMPT SMP NOPTI
[  +0.000003] RIP: 0010:0x0
[  +0.000008] Code: Unable to access opcode bytes at 0xffffffffffffffd6.
[...]
[  +0.000002] PKRU: 55555554
[  +0.000002] Call Trace:
[  +0.000002]  
[  +0.000003]  ? show_regs+0x65/0x70
[  +0.000006]  ? __die+0x24/0x70
[  +0.000004]  ? page_fault_oops+0x160/0x470
[  +0.000006]  ? do_user_addr_fault+0x2b5/0x690
[  +0.000003]  ? prb_read_valid+0x1c/0x30
[  +0.000005]  ? exc_page_fault+0x8c/0x1a0
[  +0.000005]  ? asm_exc_page_fault+0x27/0x30
[  +0.000012]  dcn10_log_color_state+0xf9/0x510 [amdgpu]
[  +0.000306]  ? srso_alias_return_thunk+0x5/0xfbef5
[  +0.000003]  ? vsnprintf+0x2fb/0x600
[  +0.000009]  dcn10_log_hw_state+0xfd0/0xfe0 [amdgpu]
[  +0.000218]  ? __mod_memcg_lruvec_state+0xe8/0x170
[  +0.000008]  ? srso_alias_return_thunk+0x5/0xfbef5
[  +0.000002]  ? debug_smp_processor_id+0x17/0x20
[  +0.000003]  ? srso_alias_return_thunk+0x5/0xfbef5
[  +0.000002]  ? srso_alias_return_thunk+0x5/0xfbef5
[  +0.000002]  ? set_ptes.isra.0+0x2b/0x90
[  +0.000004]  ? srso_alias_return_thunk+0x5/0xfbef5
[  +0.000002]  ? _raw_spin_unlock+0x19/0x40
[  +0.000004]  ? srso_alias_return_thunk+0x5/0xfbef5
[  +0.000002]  ? do_anonymous_page+0x337/0x700
[  +0.000004]  dtn_log_read+0x82/0x120 [amdgpu]
[  +0.000207]  full_proxy_read+0x66/0x90
[  +0.000007]  vfs_read+0xb0/0x340
[  +0.000005]  ? __count_memcg_events+0x79/0xe0
[  +0.000002]  ? srso_alias_return_thunk+0x5/0xfbef5
[  +0.000003]  ? count_memcg_events.constprop.0+0x1e/0x40
[  +0.000003]  ? handle_mm_fault+0xb2/0x370
[  +0.000003]  ksys_read+0x6b/0xf0
[  +0.000004]  __x64_sys_read+0x19/0x20
[  +0.000003]  do_syscall_64+0x60/0x130
[  +0.000004]  entry_SYSCALL_64_after_hwframe+0x6e/0x76
[  +0.000003] RIP: 0033:0x7fdf32f147e2
[...]

This error happens when the color log tries to read the gamut remap
information from DCN401 which is not initialized in the dcn401_dpp_funcs
which leads to a null pointer dereference. This commit addresses this
issue by adding a proper guard to access the gamut_remap callback in
case the specific ASIC did not implement this function.</description><pubDate>Mon, 26 Aug 2024 10:22:21 +0000</pubDate></item><item><title>CVE-2024-43902 | drm/amd/display: Add null checker before passing variables</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43902</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null checker before passing variables

Checks null pointer before passing variables to functions.

This fixes 3 NULL_RETURNS issues reported by Coverity.</description><pubDate>Mon, 26 Aug 2024 10:22:21 +0000</pubDate></item><item><title>CVE-2024-43903 | drm/amd/display: Add NULL check for &amp;#x27;afb&amp;#x27; before dereferencing in amdgpu_dm_plane_handle_cursor_update</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43903</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add NULL check for 'afb' before dereferencing in amdgpu_dm_plane_handle_cursor_update

This commit adds a null check for the 'afb' variable in the
amdgpu_dm_plane_handle_cursor_update function. Previously, 'afb' was
assumed to be null, but was used later in the code without a null check.
This could potentially lead to a null pointer dereference.

Fixes the below:
drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_plane.c:1298 amdgpu_dm_plane_handle_cursor_update() error: we previously assumed 'afb' could be null (see line 1252)</description><pubDate>Mon, 26 Aug 2024 10:22:22 +0000</pubDate></item><item><title>CVE-2024-43904 | drm/amd/display: Add null checks for &amp;#x27;stream&amp;#x27; and &amp;#x27;plane&amp;#x27; before dereferencing</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43904</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null checks for 'stream' and 'plane' before dereferencing

This commit adds null checks for the 'stream' and 'plane' variables in
the dcn30_apply_idle_power_optimizations function. These variables were
previously assumed to be null at line 922, but they were used later in
the code without checking if they were null. This could potentially lead
to a null pointer dereference, which would cause a crash.

The null checks ensure that 'stream' and 'plane' are not null before
they are used, preventing potential crashes.

Fixes the below static smatch checker:
drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn30/dcn30_hwseq.c:938 dcn30_apply_idle_power_optimizations() error: we previously assumed 'stream' could be null (see line 922)
drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn30/dcn30_hwseq.c:940 dcn30_apply_idle_power_optimizations() error: we previously assumed 'plane' could be null (see line 922)</description><pubDate>Mon, 26 Aug 2024 10:22:22 +0000</pubDate></item><item><title>CVE-2024-43905 | drm/amd/pm: Fix the null pointer dereference for vega10_hwmgr</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43905</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/pm: Fix the null pointer dereference for vega10_hwmgr

Check return value and conduct null pointer handling to avoid null pointer dereference.</description><pubDate>Mon, 26 Aug 2024 10:22:22 +0000</pubDate></item><item><title>CVE-2024-43906 | drm/admgpu: fix dereferencing null pointer context</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43906</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/admgpu: fix dereferencing null pointer context

When user space sets an invalid ta type, the pointer context will be empty.
So it need to check the pointer context before using it</description><pubDate>Mon, 26 Aug 2024 10:22:23 +0000</pubDate></item><item><title>CVE-2024-43907 | drm/amdgpu/pm: Fix the null pointer dereference in apply_state_adjust_rules</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43907</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu/pm: Fix the null pointer dereference in apply_state_adjust_rules

Check the pointer value to fix potential null pointer
dereference</description><pubDate>Mon, 26 Aug 2024 10:22:23 +0000</pubDate></item><item><title>CVE-2024-43908 | drm/amdgpu: Fix the null pointer dereference to ras_manager</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43908</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix the null pointer dereference to ras_manager

Check ras_manager before using it</description><pubDate>Mon, 26 Aug 2024 10:22:24 +0000</pubDate></item><item><title>CVE-2024-43909 | drm/amdgpu/pm: Fix the null pointer dereference for smu7</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43909</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu/pm: Fix the null pointer dereference for smu7

optimize the code to avoid pass a null pointer (hwmgr-&gt;backend)
to function smu7_update_edc_leakage_table.</description><pubDate>Mon, 26 Aug 2024 10:22:24 +0000</pubDate></item><item><title>CVE-2024-43910 | bpf: add missing check_func_arg_reg_off() to prevent out-of-bounds memory accesses</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43910</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: add missing check_func_arg_reg_off() to prevent out-of-bounds memory accesses

Currently, it's possible to pass in a modified CONST_PTR_TO_DYNPTR to
a global function as an argument. The adverse effects of this is that
BPF helpers can continue to make use of this modified
CONST_PTR_TO_DYNPTR from within the context of the global function,
which can unintentionally result in out-of-bounds memory accesses and
therefore compromise overall system stability i.e.

[  244.157771] BUG: KASAN: slab-out-of-bounds in bpf_dynptr_data+0x137/0x140
[  244.161345] Read of size 8 at addr ffff88810914be68 by task test_progs/302
[  244.167151] CPU: 0 PID: 302 Comm: test_progs Tainted: G O E 6.10.0-rc3-00131-g66b586715063 #533
[  244.174318] Call Trace:
[  244.175787]  
[  244.177356]  dump_stack_lvl+0x66/0xa0
[  244.179531]  print_report+0xce/0x670
[  244.182314]  ? __virt_addr_valid+0x200/0x3e0
[  244.184908]  kasan_report+0xd7/0x110
[  244.187408]  ? bpf_dynptr_data+0x137/0x140
[  244.189714]  ? bpf_dynptr_data+0x137/0x140
[  244.192020]  bpf_dynptr_data+0x137/0x140
[  244.194264]  bpf_prog_b02a02fdd2bdc5fa_global_call_bpf_dynptr_data+0x22/0x26
[  244.198044]  bpf_prog_b0fe7b9d7dc3abde_callback_adjust_bpf_dynptr_reg_off+0x1f/0x23
[  244.202136]  bpf_user_ringbuf_drain+0x2c7/0x570
[  244.204744]  ? 0xffffffffc0009e58
[  244.206593]  ? __pfx_bpf_user_ringbuf_drain+0x10/0x10
[  244.209795]  bpf_prog_33ab33f6a804ba2d_user_ringbuf_callback_const_ptr_to_dynptr_reg_off+0x47/0x4b
[  244.215922]  bpf_trampoline_6442502480+0x43/0xe3
[  244.218691]  __x64_sys_prlimit64+0x9/0xf0
[  244.220912]  do_syscall_64+0xc1/0x1d0
[  244.223043]  entry_SYSCALL_64_after_hwframe+0x77/0x7f
[  244.226458] RIP: 0033:0x7ffa3eb8f059
[  244.228582] Code: 08 89 e8 5b 5d c3 66 2e 0f 1f 84 00 00 00 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d 8f 1d 0d 00 f7 d8 64 89 01 48
[  244.241307] RSP: 002b:00007ffa3e9c6eb8 EFLAGS: 00000206 ORIG_RAX: 000000000000012e
[  244.246474] RAX: ffffffffffffffda RBX: 00007ffa3e9c7cdc RCX: 00007ffa3eb8f059
[  244.250478] RDX: 00007ffa3eb162b4 RSI: 0000000000000000 RDI: 00007ffa3e9c7fb0
[  244.255396] RBP: 00007ffa3e9c6ed0 R08: 00007ffa3e9c76c0 R09: 0000000000000000
[  244.260195] R10: 0000000000000000 R11: 0000000000000206 R12: ffffffffffffff80
[  244.264201] R13: 000000000000001c R14: 00007ffc5d6b4260 R15: 00007ffa3e1c7000
[  244.268303]  

Add a check_func_arg_reg_off() to the path in which the BPF verifier
verifies the arguments of global function arguments, specifically
those which take an argument of type ARG_PTR_TO_DYNPTR |
MEM_RDONLY. Also, process_dynptr_func() doesn't appear to perform any
explicit and strict type matching on the supplied register type, so
let's also enforce that a register either type PTR_TO_STACK or
CONST_PTR_TO_DYNPTR is by the caller.</description><pubDate>Mon, 26 Aug 2024 10:22:25 +0000</pubDate></item><item><title>CVE-2024-43911 | wifi: mac80211: fix NULL dereference at band check in starting tx ba session</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43911</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: fix NULL dereference at band check in starting tx ba session

In MLD connection, link_data/link_conf are dynamically allocated. They
don't point to vif-&gt;bss_conf. So, there will be no chanreq assigned to
vif-&gt;bss_conf and then the chan will be NULL. Tweak the code to check
ht_supported/vht_supported/has_he/has_eht on sta deflink.

Crash log (with rtw89 version under MLO development):
[ 9890.526087] BUG: kernel NULL pointer dereference, address: 0000000000000000
[ 9890.526102] #PF: supervisor read access in kernel mode
[ 9890.526105] #PF: error_code(0x0000) - not-present page
[ 9890.526109] PGD 0 P4D 0
[ 9890.526114] Oops: 0000 [#1] PREEMPT SMP PTI
[ 9890.526119] CPU: 2 PID: 6367 Comm: kworker/u16:2 Kdump: loaded Tainted: G           OE      6.9.0 #1
[ 9890.526123] Hardware name: LENOVO 2356AD1/2356AD1, BIOS G7ETB3WW (2.73 ) 11/28/2018
[ 9890.526126] Workqueue: phy2 rtw89_core_ba_work [rtw89_core]
[ 9890.526203] RIP: 0010:ieee80211_start_tx_ba_session (net/mac80211/agg-tx.c:618 (discriminator 1)) mac80211
[ 9890.526279] Code: f7 e8 d5 93 3e ea 48 83 c4 28 89 d8 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc 49 8b 84 24 e0 f1 ff ff 48 8b 80 90 1b 00 00 &lt;83&gt; 38 03 0f 84 37 fe ff ff bb ea ff ff ff eb cc 49 8b 84 24 10 f3
All code
========
   0:	f7 e8                	imul   %eax
   2:	d5                   	(bad)
   3:	93                   	xchg   %eax,%ebx
   4:	3e ea                	ds (bad)
   6:	48 83 c4 28          	add    $0x28,%rsp
   a:	89 d8                	mov    %ebx,%eax
   c:	5b                   	pop    %rbx
   d:	41 5c                	pop    %r12
   f:	41 5d                	pop    %r13
  11:	41 5e                	pop    %r14
  13:	41 5f                	pop    %r15
  15:	5d                   	pop    %rbp
  16:	c3                   	retq
  17:	cc                   	int3
  18:	cc                   	int3
  19:	cc                   	int3
  1a:	cc                   	int3
  1b:	49 8b 84 24 e0 f1 ff 	mov    -0xe20(%r12),%rax
  22:	ff
  23:	48 8b 80 90 1b 00 00 	mov    0x1b90(%rax),%rax
  2a:*	83 38 03             	cmpl   $0x3,(%rax)		&lt;-- trapping instruction
  2d:	0f 84 37 fe ff ff    	je     0xfffffffffffffe6a
  33:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
  38:	eb cc                	jmp    0x6
  3a:	49                   	rex.WB
  3b:	8b                   	.byte 0x8b
  3c:	84 24 10             	test   %ah,(%rax,%rdx,1)
  3f:	f3                   	repz

Code starting with the faulting instruction
===========================================
   0:	83 38 03             	cmpl   $0x3,(%rax)
   3:	0f 84 37 fe ff ff    	je     0xfffffffffffffe40
   9:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
   e:	eb cc                	jmp    0xffffffffffffffdc
  10:	49                   	rex.WB
  11:	8b                   	.byte 0x8b
  12:	84 24 10             	test   %ah,(%rax,%rdx,1)
  15:	f3                   	repz
[ 9890.526285] RSP: 0018:ffffb8db09013d68 EFLAGS: 00010246
[ 9890.526291] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff9308e0d656c8
[ 9890.526295] RDX: 0000000000000000 RSI: ffffffffab99460b RDI: ffffffffab9a7685
[ 9890.526300] RBP: ffffb8db09013db8 R08: 0000000000000000 R09: 0000000000000873
[ 9890.526304] R10: ffff9308e0d64800 R11: 0000000000000002 R12: ffff9308e5ff6e70
[ 9890.526308] R13: ffff930952500e20 R14: ffff9309192a8c00 R15: 0000000000000000
[ 9890.526313] FS:  0000000000000000(0000) GS:ffff930b4e700000(0000) knlGS:0000000000000000
[ 9890.526316] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 9890.526318] CR2: 0000000000000000 CR3: 0000000391c58005 CR4: 00000000001706f0
[ 9890.526321] Call Trace:
[ 9890.526324]  
[ 9890.526327] ? show_regs (arch/x86/kernel/dumpstack.c:479)
[ 9890.526335] ? __die (arch/x86/kernel/dumpstack.c:421 arch/x86/kernel/dumpstack.c:434)
[ 9890.526340] ? page_fault_oops (arch/x86/mm/fault.c:713)
[ 9890.526347] ? search_module_extables (kernel/module/main.c:3256 (discriminator
---truncated---</description><pubDate>Mon, 26 Aug 2024 10:22:25 +0000</pubDate></item><item><title>CVE-2024-43912 | wifi: nl80211: disallow setting special AP channel widths</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43912</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: nl80211: disallow setting special AP channel widths

Setting the AP channel width is meant for use with the normal
20/40/... MHz channel width progression, and switching around
in S1G or narrow channels isn't supported. Disallow that.</description><pubDate>Mon, 26 Aug 2024 10:22:25 +0000</pubDate></item><item><title>CVE-2024-43913 | nvme: apple: fix device reference counting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43913</link><description>In the Linux kernel, the following vulnerability has been resolved:

nvme: apple: fix device reference counting

Drivers must call nvme_uninit_ctrl after a successful nvme_init_ctrl.
Split the allocation side out to make the error handling boundary easier
to navigate. The apple driver had been doing this wrong, leaking the
controller device memory on a tagset failure.</description><pubDate>Mon, 26 Aug 2024 10:22:26 +0000</pubDate></item><item><title>CVE-2024-43914 | md/raid5: avoid BUG_ON() while continue reshape after reassembling</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43914</link><description>In the Linux kernel, the following vulnerability has been resolved:

md/raid5: avoid BUG_ON() while continue reshape after reassembling

Currently, mdadm support --revert-reshape to abort the reshape while
reassembling, as the test 07revert-grow. However, following BUG_ON()
can be triggerred by the test:

kernel BUG at drivers/md/raid5.c:6278!
invalid opcode: 0000 [#1] PREEMPT SMP PTI
irq event stamp: 158985
CPU: 6 PID: 891 Comm: md0_reshape Not tainted 6.9.0-03335-g7592a0b0049a #94
RIP: 0010:reshape_request+0x3f1/0xe60
Call Trace:
 
 raid5_sync_request+0x43d/0x550
 md_do_sync+0xb7a/0x2110
 md_thread+0x294/0x2b0
 kthread+0x147/0x1c0
 ret_from_fork+0x59/0x70
 ret_from_fork_asm+0x1a/0x30
 

Root cause is that --revert-reshape update the raid_disks from 5 to 4,
while reshape position is still set, and after reassembling the array,
reshape position will be read from super block, then during reshape the
checking of 'writepos' that is caculated by old reshape position will
fail.

Fix this panic the easy way first, by converting the BUG_ON() to
WARN_ON(), and stop the reshape if checkings fail.

Noted that mdadm must fix --revert-shape as well, and probably md/raid
should enhance metadata validation as well, however this means
reassemble will fail and there must be user tools to fix the wrong
metadata.</description><pubDate>Mon, 26 Aug 2024 10:22:26 +0000</pubDate></item><item><title>CVE-2024-44931 | gpio: prevent potential speculation leaks in gpio_device_get_desc()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44931</link><description>In the Linux kernel, the following vulnerability has been resolved:

gpio: prevent potential speculation leaks in gpio_device_get_desc()

Userspace may trigger a speculative read of an address outside the gpio
descriptor array.
Users can do that by calling gpio_ioctl() with an offset out of range.
Offset is copied from user and then used as an array index to get
the gpio descriptor without sanitization in gpio_device_get_desc().

This change ensures that the offset is sanitized by using
array_index_nospec() to mitigate any possibility of speculative
information leaks.

This bug was discovered and resolved using Coverity Static Analysis
Security Testing (SAST) by Synopsys, Inc.</description><pubDate>Mon, 26 Aug 2024 10:22:27 +0000</pubDate></item><item><title>CVE-2024-44932 | idpf: fix UAFs when destroying the queues</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44932</link><description>In the Linux kernel, the following vulnerability has been resolved:

idpf: fix UAFs when destroying the queues

The second tagged commit started sometimes (very rarely, but possible)
throwing WARNs from
net/core/page_pool.c:page_pool_disable_direct_recycling().
Turned out idpf frees interrupt vectors with embedded NAPIs *before*
freeing the queues making page_pools' NAPI pointers lead to freed
memory before these pools are destroyed by libeth.
It's not clear whether there are other accesses to the freed vectors
when destroying the queues, but anyway, we usually free queue/interrupt
vectors only when the queues are destroyed and the NAPIs are guaranteed
to not be referenced anywhere.

Invert the allocation and freeing logic making queue/interrupt vectors
be allocated first and freed last. Vectors don't require queues to be
present, so this is safe. Additionally, this change allows to remove
that useless queue-&gt;q_vector pointer cleanup, as vectors are still
valid when freeing the queues (+ both are freed within one function,
so it's not clear why nullify the pointers at all).</description><pubDate>Mon, 26 Aug 2024 10:22:27 +0000</pubDate></item><item><title>CVE-2024-44933 | bnxt_en : Fix memory out-of-bounds in bnxt_fill_hw_rss_tbl()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44933</link><description>In the Linux kernel, the following vulnerability has been resolved:

bnxt_en : Fix memory out-of-bounds in bnxt_fill_hw_rss_tbl()

A recent commit has modified the code in __bnxt_reserve_rings() to
set the default RSS indirection table to default only when the number
of RX rings is changing.  While this works for newer firmware that
requires RX ring reservations, it causes the regression on older
firmware not requiring RX ring resrvations (BNXT_NEW_RM() returns
false).

With older firmware, RX ring reservations are not required and so
hw_resc-&gt;resv_rx_rings is not always set to the proper value.  The
comparison:

if (old_rx_rings != bp-&gt;hw_resc.resv_rx_rings)

in __bnxt_reserve_rings() may be false even when the RX rings are
changing.  This will cause __bnxt_reserve_rings() to skip setting
the default RSS indirection table to default to match the current
number of RX rings.  This may later cause bnxt_fill_hw_rss_tbl() to
use an out-of-range index.

We already have bnxt_check_rss_tbl_no_rmgr() to handle exactly this
scenario.  We just need to move it up in bnxt_need_reserve_rings()
to be called unconditionally when using older firmware.  Without the
fix, if the TX rings are changing, we'll skip the
bnxt_check_rss_tbl_no_rmgr() call and __bnxt_reserve_rings() may also
skip the bnxt_set_dflt_rss_indir_tbl() call for the reason explained
in the last paragraph.  Without setting the default RSS indirection
table to default, it causes the regression:

BUG: KASAN: slab-out-of-bounds in __bnxt_hwrm_vnic_set_rss+0xb79/0xe40
Read of size 2 at addr ffff8881c5809618 by task ethtool/31525
Call Trace:
__bnxt_hwrm_vnic_set_rss+0xb79/0xe40
 bnxt_hwrm_vnic_rss_cfg_p5+0xf7/0x460
 __bnxt_setup_vnic_p5+0x12e/0x270
 __bnxt_open_nic+0x2262/0x2f30
 bnxt_open_nic+0x5d/0xf0
 ethnl_set_channels+0x5d4/0xb30
 ethnl_default_set_doit+0x2f1/0x620</description><pubDate>Mon, 26 Aug 2024 10:22:28 +0000</pubDate></item><item><title>CVE-2024-44934 | net: bridge: mcast: wait for previous gc cycles when removing port</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44934</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: bridge: mcast: wait for previous gc cycles when removing port

syzbot hit a use-after-free[1] which is caused because the bridge doesn't
make sure that all previous garbage has been collected when removing a
port. What happens is:
      CPU 1                   CPU 2
 start gc cycle           remove port
                         acquire gc lock first
 wait for lock
                         call br_multicasg_gc() directly
 acquire lock now but    free port
 the port can be freed
 while grp timers still
 running

Make sure all previous gc cycles have finished by using flush_work before
freeing the port.

[1]
  BUG: KASAN: slab-use-after-free in br_multicast_port_group_expired+0x4c0/0x550 net/bridge/br_multicast.c:861
  Read of size 8 at addr ffff888071d6d000 by task syz.5.1232/9699

  CPU: 1 PID: 9699 Comm: syz.5.1232 Not tainted 6.10.0-rc5-syzkaller-00021-g24ca36a562d6 #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/07/2024
  Call Trace:
   
   __dump_stack lib/dump_stack.c:88 [inline]
   dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:114
   print_address_description mm/kasan/report.c:377 [inline]
   print_report+0xc3/0x620 mm/kasan/report.c:488
   kasan_report+0xd9/0x110 mm/kasan/report.c:601
   br_multicast_port_group_expired+0x4c0/0x550 net/bridge/br_multicast.c:861
   call_timer_fn+0x1a3/0x610 kernel/time/timer.c:1792
   expire_timers kernel/time/timer.c:1843 [inline]
   __run_timers+0x74b/0xaf0 kernel/time/timer.c:2417
   __run_timer_base kernel/time/timer.c:2428 [inline]
   __run_timer_base kernel/time/timer.c:2421 [inline]
   run_timer_base+0x111/0x190 kernel/time/timer.c:2437</description><pubDate>Mon, 26 Aug 2024 10:22:28 +0000</pubDate></item><item><title>CVE-2024-44935 | sctp: Fix null-ptr-deref in reuseport_add_sock().</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44935</link><description>In the Linux kernel, the following vulnerability has been resolved:

sctp: Fix null-ptr-deref in reuseport_add_sock().

syzbot reported a null-ptr-deref while accessing sk2-&gt;sk_reuseport_cb in
reuseport_add_sock(). [0]

The repro first creates a listener with SO_REUSEPORT.  Then, it creates
another listener on the same port and concurrently closes the first
listener.

The second listen() calls reuseport_add_sock() with the first listener as
sk2, where sk2-&gt;sk_reuseport_cb is not expected to be cleared concurrently,
but the close() does clear it by reuseport_detach_sock().

The problem is SCTP does not properly synchronise reuseport_alloc(),
reuseport_add_sock(), and reuseport_detach_sock().

The caller of reuseport_alloc() and reuseport_{add,detach}_sock() must
provide synchronisation for sockets that are classified into the same
reuseport group.

Otherwise, such sockets form multiple identical reuseport groups, and
all groups except one would be silently dead.

  1. Two sockets call listen() concurrently
  2. No socket in the same group found in sctp_ep_hashtable[]
  3. Two sockets call reuseport_alloc() and form two reuseport groups
  4. Only one group hit first in __sctp_rcv_lookup_endpoint() receives
      incoming packets

Also, the reported null-ptr-deref could occur.

TCP/UDP guarantees that would not happen by holding the hash bucket lock.

Let's apply the locking strategy to __sctp_hash_endpoint() and
__sctp_unhash_endpoint().

[0]:
Oops: general protection fault, probably for non-canonical address 0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]
CPU: 1 UID: 0 PID: 10230 Comm: syz-executor119 Not tainted 6.10.0-syzkaller-12585-g301927d2d2eb #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/27/2024
RIP: 0010:reuseport_add_sock+0x27e/0x5e0 net/core/sock_reuseport.c:350
Code: 00 0f b7 5d 00 bf 01 00 00 00 89 de e8 1b a4 ff f7 83 fb 01 0f 85 a3 01 00 00 e8 6d a0 ff f7 49 8d 7e 12 48 89 f8 48 c1 e8 03 &lt;42&gt; 0f b6 04 28 84 c0 0f 85 4b 02 00 00 41 0f b7 5e 12 49 8d 7e 14
RSP: 0018:ffffc9000b947c98 EFLAGS: 00010202
RAX: 0000000000000002 RBX: ffff8880252ddf98 RCX: ffff888079478000
RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000012
RBP: 0000000000000001 R08: ffffffff8993e18d R09: 1ffffffff1fef385
R10: dffffc0000000000 R11: fffffbfff1fef386 R12: ffff8880252ddac0
R13: dffffc0000000000 R14: 0000000000000000 R15: 0000000000000000
FS:  00007f24e45b96c0(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007ffcced5f7b8 CR3: 00000000241be000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 
 __sctp_hash_endpoint net/sctp/input.c:762 [inline]
 sctp_hash_endpoint+0x52a/0x600 net/sctp/input.c:790
 sctp_listen_start net/sctp/socket.c:8570 [inline]
 sctp_inet_listen+0x767/0xa20 net/sctp/socket.c:8625
 __sys_listen_socket net/socket.c:1883 [inline]
 __sys_listen+0x1b7/0x230 net/socket.c:1894
 __do_sys_listen net/socket.c:1902 [inline]
 __se_sys_listen net/socket.c:1900 [inline]
 __x64_sys_listen+0x5a/0x70 net/socket.c:1900
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f24e46039b9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 91 1a 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f24e45b9228 EFLAGS: 00000246 ORIG_RAX: 0000000000000032
RAX: ffffffffffffffda RBX: 00007f24e468e428 RCX: 00007f24e46039b9
RDX: 00007f24e46039b9 RSI: 0000000000000003 RDI: 0000000000000004
RBP: 00007f24e468e420 R08: 00007f24e45b96c0 R09: 00007f24e45b96c0
R10: 00007f24e45b96c0 R11: 0000000000000246 R12: 00007f24e468e42c
R13:
---truncated---</description><pubDate>Mon, 26 Aug 2024 10:22:28 +0000</pubDate></item><item><title>CVE-2024-44936 | power: supply: rt5033: Bring back i2c_set_clientdata</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44936</link><description>In the Linux kernel, the following vulnerability has been resolved:

power: supply: rt5033: Bring back i2c_set_clientdata

Commit 3a93da231c12 ("power: supply: rt5033: Use devm_power_supply_register() helper")
reworked the driver to use devm. While at it, the i2c_set_clientdata
was dropped along with the remove callback. Unfortunately other parts
of the driver also rely on i2c clientdata so this causes kernel oops.

Bring the call back to fix the driver.</description><pubDate>Mon, 26 Aug 2024 10:22:29 +0000</pubDate></item><item><title>CVE-2024-44937 | platform/x86: intel-vbtn: Protect ACPI notify handler against recursion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44937</link><description>In the Linux kernel, the following vulnerability has been resolved:

platform/x86: intel-vbtn: Protect ACPI notify handler against recursion

Since commit e2ffcda16290 ("ACPI: OSL: Allow Notify () handlers to run on
all CPUs") ACPI notify handlers like the intel-vbtn notify_handler() may
run on multiple CPU cores racing with themselves.

This race gets hit on Dell Venue 7140 tablets when undocking from
the keyboard, causing the handler to try and register priv-&gt;switches_dev
twice, as can be seen from the dev_info() message getting logged twice:

[ 83.861800] intel-vbtn INT33D6:00: Registering Intel Virtual Switches input-dev after receiving a switch event
[ 83.861858] input: Intel Virtual Switches as /devices/pci0000:00/0000:00:1f.0/PNP0C09:00/INT33D6:00/input/input17
[ 83.861865] intel-vbtn INT33D6:00: Registering Intel Virtual Switches input-dev after receiving a switch event

After which things go seriously wrong:
[ 83.861872] sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:1f.0/PNP0C09:00/INT33D6:00/input/input17'
...
[ 83.861967] kobject: kobject_add_internal failed for input17 with -EEXIST, don't try to register things with the same name in the same directory.
[ 83.877338] BUG: kernel NULL pointer dereference, address: 0000000000000018
...

Protect intel-vbtn notify_handler() from racing with itself with a mutex
to fix this.</description><pubDate>Mon, 26 Aug 2024 10:22:29 +0000</pubDate></item><item><title>CVE-2024-43442 | Stored XSS in System Configuration</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43442</link><description>Improper Neutralization of Input done by an attacker with admin privileges ('Cross-site Scripting') in  OTRS (System Configuration modules) and ((OTRS)) Community Edition allows Cross-Site Scripting (XSS) within the System Configuration targeting other admins.
This issue affects: 

  *  OTRS from 7.0.X through 7.0.50
  *  OTRS 8.0.X
  *  OTRS 2023.X
  *  OTRS from 2024.X through 2024.5.X
  *  ((OTRS)) Community Edition: 6.0.x

Products based on the ((OTRS)) Community Edition also very likely to be affected</description><pubDate>Mon, 26 Aug 2024 08:53:01 +0000</pubDate></item><item><title>CVE-2024-43443 | Stored XSS in process management</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43443</link><description>Improper Neutralization of Input done by an attacker with admin privileges ('Cross-site Scripting') in Process Management modules of OTRS and ((OTRS)) Community Edition allows Cross-Site Scripting (XSS) within the Process Management targeting other admins.
This issue affects: 

  *  OTRS from 7.0.X through 7.0.50
  *  OTRS 8.0.X
  *  OTRS 2023.X
  *  OTRS from 2024.X through 2024.5.X
  *  ((OTRS)) Community Edition: 6.0.x

Products based on the ((OTRS)) Community Edition also very likely to be affected</description><pubDate>Mon, 26 Aug 2024 08:53:01 +0000</pubDate></item><item><title>CVE-2024-43444 | Passwords are written to Admin Log Module</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43444</link><description>Passwords of agents and customers are displayed in plain text in the OTRS admin log module if certain configurations regarding the authentication sources match and debugging for the authentication backend has been enabled.

This issue affects: 

  *  OTRS from 7.0.X through 7.0.50
  *  OTRS 8.0.X
  *  OTRS 2023.X
  *  OTRS from 2024.X through 2024.5.X
  *  ((OTRS)) Community Edition: 6.0.x

Products based on the ((OTRS)) Community Edition also very likely to be affected</description><pubDate>Mon, 26 Aug 2024 08:53:01 +0000</pubDate></item><item><title>CVE-2024-8161 | SQL injection vulnerability in CIGESv2 system</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8161</link><description>SQL injection vulnerability in ATISolutions CIGES affecting versions lower than 2.15.5. This vulnerability allows a remote attacker to send a specially crafted SQL query to the /modules/ajaxServiciosCentro.php point in the idCentro parameter and retrieve all the information stored in the database.</description><pubDate>Mon, 26 Aug 2024 08:53:02 +0000</pubDate></item><item><title>CVE-2024-43884 | Bluetooth: MGMT: Add error handling to pair_device()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43884</link><description>In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: MGMT: Add error handling to pair_device()

hci_conn_params_add() never checks for a NULL value and could lead to a NULL
pointer dereference causing a crash.

Fixed by adding error handling in the function.</description><pubDate>Mon, 26 Aug 2024 07:28:15 +0000</pubDate></item><item><title>CVE-2024-45241 | A traversal vulnerability in GeneralDocs.aspx in CentralSquare CryWolf (False Alarm Management) through 2024-08-09 allows unauthenticated at...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45241</link><description>A traversal vulnerability in GeneralDocs.aspx in CentralSquare CryWolf (False Alarm Management) through 2024-08-09 allows unauthenticated attackers to read files outside of the working web directory via the rpt parameter, leading to the disclosure of sensitive information.</description><pubDate>Mon, 26 Aug 2024 06:37:15 +0000</pubDate></item><item><title>CVE-2024-45256 | An arbitrary file write issue in the exfiltration endpoint in BYOB (Build Your Own Botnet) 2.0 allows attackers to overwrite SQLite database...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45256</link><description>An arbitrary file write issue in the exfiltration endpoint in BYOB (Build Your Own Botnet) 2.0 allows attackers to overwrite SQLite databases and bypass authentication via an unauthenticated HTTP request with a crafted parameter. This occurs in file_add in api/files/routes.py.</description><pubDate>Mon, 26 Aug 2024 06:37:15 +0000</pubDate></item><item><title>CVE-2024-41996 | Validating the order of the public keys in the Diffie-Hellman Key Agreement Protocol, when an approved safe prime is used, allows remote att...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41996</link><description>Validating the order of the public keys in the Diffie-Hellman Key Agreement Protocol, when an approved safe prime is used, allows remote attackers (from the client side) to trigger unnecessarily expensive server-side DHE modular-exponentiation calculations. The client may cause asymmetric resource consumption. The basic attack scenario is that the client must claim that it can only communicate with DHE, and the server must be configured to allow DHE and validate the order of the public key.</description><pubDate>Mon, 26 Aug 2024 06:13:45 +0000</pubDate></item><item><title>CVE-2024-6879 | Quiz and Survey Master (QSM) &amp;lt; 9.1.1 - Contributor+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6879</link><description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.1.1 fails to validate and escape certain Quiz fields before displaying them on a page or post where the Quiz is embedded, which could allows contributor and above roles to perform Stored Cross-Site Scripting (XSS) attacks.</description><pubDate>Mon, 26 Aug 2024 06:13:46 +0000</pubDate></item><item><title>CVE-2024-7313 | Shield Security &amp;lt; 20.0.6 - Reflected XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7313</link><description>The Shield Security  WordPress plugin before 20.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description><pubDate>Mon, 26 Aug 2024 06:13:46 +0000</pubDate></item><item><title>CVE-2024-8073 | Command Injection Vulnerability in Hillstone Networks Web Application Firewall</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8073</link><description>Improper Input Validation vulnerability in Hillstone Networks Hillstone Networks Web Application Firewall on 5.5R6 allows Command Injection.This issue affects Hillstone Networks Web Application Firewall: from 5.5R6-2.6.7 through 5.5R6-2.8.13.</description><pubDate>Mon, 26 Aug 2024 02:47:31 +0000</pubDate></item><item><title>CVE-2024-8154 | SourceCodester QR Code Bookmark System Parameter update-bookmark.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8154</link><description>A vulnerability classified as problematic has been found in SourceCodester QR Code Bookmark System 1.0. Affected is an unknown function of the file /endpoint/update-bookmark.php of the component Parameter Handler. The manipulation of the argument tbl_bookmark_id/name/url leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 23:25:51 +0000</pubDate></item><item><title>CVE-2024-8155 | ContiNew Admin tree sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8155</link><description>A vulnerability classified as critical was found in ContiNew Admin 3.2.0. Affected by this vulnerability is the function top.continew.starter.extension.crud.controller.BaseController#tree of the file /api/system/dept/tree?sort=parentId%2Casc&amp;amp;sort=sort%2Casc. The manipulation of the argument sort leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Sun, 25 Aug 2024 23:25:51 +0000</pubDate></item><item><title>CVE-2024-8152 | SourceCodester QR Code Bookmark System Parameter add-bookmark.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8152</link><description>A vulnerability was found in SourceCodester QR Code Bookmark System 1.0. It has been declared as problematic. This vulnerability affects unknown code of the file /endpoint/add-bookmark.php of the component Parameter Handler. The manipulation of the argument name/url leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 22:42:41 +0000</pubDate></item><item><title>CVE-2024-8153 | SourceCodester QR Code Bookmark System delete-bookmark.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8153</link><description>A vulnerability was found in SourceCodester QR Code Bookmark System 1.0. It has been rated as problematic. This issue affects some unknown processing of the file /endpoint/delete-bookmark.php. The manipulation of the argument bookmark leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 22:42:41 +0000</pubDate></item><item><title>CVE-2024-8150 | ContiNew Admin user sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8150</link><description>A vulnerability was found in ContiNew Admin 3.2.0 and classified as critical. Affected by this issue is the function top.continew.starter.extension.crud.controller.BaseController#page of the file /api/system/user?deptId=1&amp;amp;page=1&amp;amp;size=10. The manipulation of the argument sort leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Sun, 25 Aug 2024 22:17:36 +0000</pubDate></item><item><title>CVE-2024-8151 | SourceCodester Interactive Map with Marker delete-mark.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8151</link><description>A vulnerability was found in SourceCodester Interactive Map with Marker 1.0. It has been classified as problematic. This affects an unknown part of the file /endpoint/delete-mark.php. The manipulation of the argument mark leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 22:17:36 +0000</pubDate></item><item><title>CVE-2024-8158 | User impersonation for lib9p based 9p fileservers</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8158</link><description>A bug in the 9p authentication implementation within lib9p allows an attacker with an existing valid user within the configured auth server to impersonate any other valid filesystem user.

This is due to lib9p not properly verifying that the uname given in the Tauth and Tattach 9p messages matches the client UID returned from the factotum authentication handshake.


The only filesystem making use of these functions within the base 9front systems is the experimental hjfs disk filesystem, other disk filesystems (cwfs and gefs) are not affected by this bug.

This bug was inherited from Plan 9 and is present in all versions of 9front and is remedied fully in commit 9645ae07eb66a59015e3e118d0024790c37400da.</description><pubDate>Sun, 25 Aug 2024 21:38:05 +0000</pubDate></item><item><title>CVE-2024-45258 | The req package before 3.43.4 for Go may send an unintended request when a malformed URL is provided, because cleanHost in http.go intention...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45258</link><description>The req package before 3.43.4 for Go may send an unintended request when a malformed URL is provided, because cleanHost in http.go intentionally uses a "garbage in, garbage out" design.</description><pubDate>Sun, 25 Aug 2024 21:26:46 +0000</pubDate></item><item><title>CVE-2023-48957 | PureVPN Linux client 2.0.2-Productions fails to properly handle DNS queries, allowing them to bypass the VPN tunnel and be sent directly to ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-48957</link><description>PureVPN Linux client 2.0.2-Productions fails to properly handle DNS queries, allowing them to bypass the VPN tunnel and be sent directly to the ISP or default DNS servers.</description><pubDate>Sun, 25 Aug 2024 16:39:54 +0000</pubDate></item><item><title>CVE-2024-8011 | Logitech Options+ on MacOS prior 1.72 allows a local attacker to inject dynamic library within Options+ runtime and abuse permissions grante...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8011</link><description>Logitech Options+ on MacOS prior 1.72 allows a local attacker to inject dynamic library within Options+ runtime and abuse permissions granted by the user to Options+ such as Camera.</description><pubDate>Sun, 25 Aug 2024 11:54:32 +0000</pubDate></item><item><title>CVE-2024-8147 | code-projects Pharmacy Management System index.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8147</link><description>A vulnerability was found in code-projects Pharmacy Management System 1.0 and classified as critical. This issue affects some unknown processing of the file /index.php?action=editPharmacist. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 09:14:09 +0000</pubDate></item><item><title>CVE-2024-8146 | code-projects Pharmacy Management System index.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8146</link><description>A vulnerability has been found in code-projects Pharmacy Management System 1.0 and classified as critical. This vulnerability affects unknown code of the file /index.php?action=editSalesman. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 08:22:44 +0000</pubDate></item><item><title>CVE-2024-42340 | CyberArk - CWE-602: Client-Side Enforcement of Server-Side Security</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42340</link><description>CyberArk - CWE-602: Client-Side Enforcement of Server-Side Security</description><pubDate>Sun, 25 Aug 2024 07:27:23 +0000</pubDate></item><item><title>CVE-2024-42337 | CyberArk -  CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42337</link><description>CyberArk -  CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</description><pubDate>Sun, 25 Aug 2024 07:17:38 +0000</pubDate></item><item><title>CVE-2024-42338 | CyberArk -  CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42338</link><description>CyberArk -  CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</description><pubDate>Sun, 25 Aug 2024 07:17:38 +0000</pubDate></item><item><title>CVE-2024-42339 | CyberArk -  CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42339</link><description>CyberArk -  CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</description><pubDate>Sun, 25 Aug 2024 07:17:39 +0000</pubDate></item><item><title>CVE-2024-8145 | ClassCMS Article admin cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8145</link><description>A vulnerability, which was classified as problematic, has been found in ClassCMS 4.8. Affected by this issue is some unknown functionality of the file /index.php/admin of the component Article Handler. The manipulation of the argument Title leads to basic cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 05:46:54 +0000</pubDate></item><item><title>CVE-2024-8144 | ClassCMS Logo admin cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8144</link><description>A vulnerability classified as problematic was found in ClassCMS 4.8. Affected by this vulnerability is an unknown functionality of the file /index.php/admin of the component Logo Handler. The manipulation leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 03:41:24 +0000</pubDate></item><item><title>CVE-2024-8142 | SourceCodester Daily Calories Monitoring Tool delete-calorie.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8142</link><description>A vulnerability was found in SourceCodester Daily Calories Monitoring Tool 1.0. It has been declared as problematic. This vulnerability affects unknown code of the file /endpoint/delete-calorie.php. The manipulation of the argument calorie leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 02:35:01 +0000</pubDate></item><item><title>CVE-2024-8141 | SourceCodester Daily Calories Monitoring Tool add-calorie.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8141</link><description>A vulnerability was found in SourceCodester Daily Calories Monitoring Tool 1.0. It has been classified as problematic. This affects an unknown part of the file /endpoint/add-calorie.php. The manipulation of the argument calorie_date/calorie_name leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 02:35:02 +0000</pubDate></item><item><title>CVE-2024-45244 | Hyperledger Fabric through 2.5.9 does not verify that a request has a timestamp within the expected time window.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45244</link><description>Hyperledger Fabric through 2.5.9 does not verify that a request has a timestamp within the expected time window.</description><pubDate>Sun, 25 Aug 2024 01:47:03 +0000</pubDate></item><item><title>CVE-2024-8140 | SourceCodester Task Progress Tracker update-task.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8140</link><description>A vulnerability was found in SourceCodester Task Progress Tracker 1.0 and classified as problematic. Affected by this issue is some unknown functionality of the file update-task.php. The manipulation of the argument task_name leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 01:47:03 +0000</pubDate></item><item><title>CVE-2024-8139 | itsourcecode E-Commerce Website search_list.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8139</link><description>A vulnerability has been found in itsourcecode E-Commerce Website 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file search_list.php. The manipulation of the argument user leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 25 Aug 2024 01:47:04 +0000</pubDate></item><item><title>CVE-2024-8138 | code-projects Pharmacy Management System Parameter index.php editManager sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8138</link><description>A vulnerability, which was classified as critical, was found in code-projects Pharmacy Management System 1.0. Affected is the function editManager of the file /index.php?action=editManager of the component Parameter Handler. The manipulation of the argument id as part of String leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available.</description><pubDate>Sun, 25 Aug 2024 01:47:05 +0000</pubDate></item></channel></rss>