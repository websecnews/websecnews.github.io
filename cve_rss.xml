<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Mon, 26 Feb 2024 08:46:15 +0000</lastBuildDate><item><title>CVE-2024-25081 | Splinefont in FontForge through 20230101 allows command injection via crafted filenames.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25081</link><description>Splinefont in FontForge through 20230101 allows command injection via crafted filenames.</description><pubDate>Mon, 26 Feb 2024 08:46:16 +0000</pubDate></item><item><title>CVE-2024-25082 | Splinefont in FontForge through 20230101 allows command injection via crafted archives or compressed files.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25082</link><description>Splinefont in FontForge through 20230101 allows command injection via crafted archives or compressed files.</description><pubDate>Mon, 26 Feb 2024 08:46:17 +0000</pubDate></item><item><title>CVE-2024-1886 | Absolute path traversal attack on LG Signage TV</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1886</link><description>This vulnerability allows remote attackers to traverse the directory on the affected webOS of LG Signage TV.</description><pubDate>Mon, 26 Feb 2024 07:59:16 +0000</pubDate></item><item><title>CVE-2024-1885 | Remote Code Execution attack on LG Signage TV</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1885</link><description>This vulnerability allows remote attackers to execute arbitrary code on the affected webOS of LG Signage TV.</description><pubDate>Mon, 26 Feb 2024 07:45:16 +0000</pubDate></item><item><title>CVE-2024-1735 | A vulnerability has been identified in armeria-saml versions less than 1.27.2, allowing the use of malicious SAML messages to bypass authent...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1735</link><description>A vulnerability has been identified in armeria-saml versions less than 1.27.2, allowing the use of malicious SAML messages to bypass authentication. All users who rely on armeria-saml older than version 1.27.2 must upgrade to 1.27.2 or later.</description><pubDate>Mon, 26 Feb 2024 07:38:17 +0000</pubDate></item><item><title>CVE-2024-27456 | rack-cors (aka Rack CORS Middleware) 2.0.1 has 0666 permissions for the .rb files.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27456</link><description>rack-cors (aka Rack CORS Middleware) 2.0.1 has 0666 permissions for the .rb files.</description><pubDate>Mon, 26 Feb 2024 07:15:58 +0000</pubDate></item><item><title>CVE-2024-27455 | In the Bentley ALIM Web application, certain configuration settings can cause exposure of a user's ALIM session token when the user attempts...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27455</link><description>In the Bentley ALIM Web application, certain configuration settings can cause exposure of a user's ALIM session token when the user attempts to download files. This is fixed in Assetwise ALIM Web 23.00.02.03 and Assetwise Information Integrity Server 23.00.04.04.</description><pubDate>Mon, 26 Feb 2024 05:53:31 +0000</pubDate></item><item><title>CVE-2024-27454 | orjson.loads in orjson before 3.9.15 does not limit recursion for deeply nested JSON documents.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27454</link><description>orjson.loads in orjson before 3.9.15 does not limit recursion for deeply nested JSON documents.</description><pubDate>Mon, 26 Feb 2024 05:53:32 +0000</pubDate></item><item><title>CVE-2024-27447 | pretix before 2024.1.1 mishandles file validation.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27447</link><description>pretix before 2024.1.1 mishandles file validation.</description><pubDate>Mon, 26 Feb 2024 05:25:54 +0000</pubDate></item><item><title>CVE-2024-27444 | langchain_experimental (aka LangChain Experimental) in LangChain before 0.1.8 allows an attacker to bypass the CVE-2023-44467 fix and execut...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27444</link><description>langchain_experimental (aka LangChain Experimental) in LangChain before 0.1.8 allows an attacker to bypass the CVE-2023-44467 fix and execute arbitrary code via the __import__, __subclasses__, __builtins__, __globals__, __getattribute__, __bases__, __mro__, or __base__ attribute in Python code. These are not prohibited by pal_chain/base.py.</description><pubDate>Mon, 26 Feb 2024 04:50:34 +0000</pubDate></item><item><title>CVE-2024-1877 | SourceCodester Employee Management System cancel.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1877</link><description>A vulnerability was found in SourceCodester Employee Management System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /cancel.php. The manipulation of the argument id with the input 1%20or%201=1 leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-254725 was assigned to this vulnerability.</description><pubDate>Mon, 26 Feb 2024 01:33:51 +0000</pubDate></item><item><title>CVE-2024-1878 | SourceCodester Employee Management System myprofile.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1878</link><description>A vulnerability was found in SourceCodester Employee Management System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file /myprofile.php. The manipulation of the argument id with the input 1%20or%201=1 leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-254726 is the identifier assigned to this vulnerability.</description><pubDate>Mon, 26 Feb 2024 01:33:52 +0000</pubDate></item><item><title>CVE-2024-1876 | SourceCodester Employee Management System psubmit.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1876</link><description>A vulnerability was found in SourceCodester Employee Management System 1.0. It has been classified as critical. Affected is an unknown function of the file /psubmit.php. The manipulation of the argument pid with the input '+or+1%3d1%23 leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-254724.</description><pubDate>Mon, 26 Feb 2024 01:33:52 +0000</pubDate></item><item><title>CVE-2024-1875 | SourceCodester Complaint Management System Lodge Complaint Section register-complaint.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1875</link><description>A vulnerability was found in SourceCodester Complaint Management System 1.0 and classified as critical. This issue affects some unknown processing of the file users/register-complaint.php of the component Lodge Complaint Section. The manipulation leads to unrestricted upload. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254723.</description><pubDate>Sun, 25 Feb 2024 23:33:34 +0000</pubDate></item><item><title>CVE-2024-0439 | User can manually send request at manager permission to modify system configurations</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0439</link><description>As a manager, you should not be able to modify a series of settings. In the UI this is indeed hidden as a convenience for the role since most managers would not be savvy enough to modify these settings. They can use their token to still modify those settings though through a standard HTTP request

While this is not a critical vulnerability, it does indeed need to be patched to enforce the expected permission level.</description><pubDate>Sun, 25 Feb 2024 19:51:16 +0000</pubDate></item><item><title>CVE-2024-0440 | SSRF - file:// unsanitized access to underlying host files</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0440</link><description>Attacker, with permission to submit a link or submits a link via POST  to be collected that is using the file:// protocol can then introspect host files and other relatively stored files.</description><pubDate>Sun, 25 Feb 2024 19:16:03 +0000</pubDate></item><item><title>CVE-2024-0435 | User can submit message to self-XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0435</link><description>User can send a chat that contains an XSS opportunity that will then run when the chat is sent and on subsequent page loads.

Given the minimum requirement for a user to send a chat is to be given access to a workspace via an admin the risk is low. Additionally, the location in which the XSS renders is only limited to the user who submits the XSS. 

Ultimately, this attack is limited to the user attacking themselves. There is no anonymous chat submission unless the user does not take the minimum steps required to protect their instance.</description><pubDate>Sun, 25 Feb 2024 17:23:56 +0000</pubDate></item><item><title>CVE-2024-0798 | Privilege bypass to delete uploaded documents or folders</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0798</link><description>A user with a `default` role given to them by the admin can sent `DELETE` HTTP requests to `remove-folder` and `remove-document` to delete folders and source files from the instance even when their role should explicitly not allow this action on the system.</description><pubDate>Sun, 25 Feb 2024 16:49:51 +0000</pubDate></item><item><title>CVE-2024-0436 | Prevent timing attack for single-user password check</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0436</link><description>Theoretically, it would be possible for an attacker to brute-force the password for an instance in single-user password protection mode via a timing attack given the linear nature of the `!==` used for comparison.

The risk is minified by the additional overhead of the request, which varies in a non-constant nature making the attack less reliable to execute</description><pubDate>Sun, 25 Feb 2024 16:36:16 +0000</pubDate></item><item><title>CVE-2021-46904 | net: hso: fix null-ptr-deref during tty device unregistration</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46904</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hso: fix null-ptr-deref during tty device unregistration

Multiple ttys try to claim the same the minor number causing a double
unregistration of the same device. The first unregistration succeeds
but the next one results in a null-ptr-deref.

The get_free_serial_index() function returns an available minor number
but doesn't assign it immediately. The assignment is done by the caller
later. But before this assignment, calls to get_free_serial_index()
would return the same minor number.

Fix this by modifying get_free_serial_index to assign the minor number
immediately after one is found to be and rename it to obtain_minor()
to better reflect what it does. Similary, rename set_serial_by_index()
to release_minor() and modify it to free up the minor number of the
given hso_serial. Every obtain_minor() should have corresponding
release_minor() call.</description><pubDate>Sun, 25 Feb 2024 14:09:29 +0000</pubDate></item><item><title>CVE-2021-46905 | net: hso: fix NULL-deref on disconnect regression</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46905</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hso: fix NULL-deref on disconnect regression

Commit 8a12f8836145 ("net: hso: fix null-ptr-deref during tty device
unregistration") fixed the racy minor allocation reported by syzbot, but
introduced an unconditional NULL-pointer dereference on every disconnect
instead.

Specifically, the serial device table must no longer be accessed after
the minor has been released by hso_serial_tty_unregister().</description><pubDate>Sun, 25 Feb 2024 14:09:29 +0000</pubDate></item><item><title>CVE-2022-48626 | moxart: fix potential use-after-free on remove path</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48626</link><description>In the Linux kernel, the following vulnerability has been resolved:

moxart: fix potential use-after-free on remove path

It was reported that the mmc host structure could be accessed after it
was freed in moxart_remove(), so fix this by saving the base register of
the device and using it instead of the pointer dereference.</description><pubDate>Sun, 25 Feb 2024 14:09:30 +0000</pubDate></item><item><title>CVE-2023-52465 | power: supply: Fix null pointer dereference in smb2_probe</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52465</link><description>In the Linux kernel, the following vulnerability has been resolved:

power: supply: Fix null pointer dereference in smb2_probe

devm_kasprintf and devm_kzalloc return a pointer to dynamically
allocated memory which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:20 +0000</pubDate></item><item><title>CVE-2023-52466 | PCI: Avoid potential out-of-bounds read in pci_dev_for_each_resource()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52466</link><description>In the Linux kernel, the following vulnerability has been resolved:

PCI: Avoid potential out-of-bounds read in pci_dev_for_each_resource()

Coverity complains that pointer in the pci_dev_for_each_resource() may be
wrong, i.e., might be used for the out-of-bounds read.

There is no actual issue right now because we have another check afterwards
and the out-of-bounds read is not being performed. In any case it's better
code with this fixed, hence the proposed change.

As Jonas pointed out "It probably makes the code slightly less performant
as res will now be checked for being not NULL (which will always be true),
but I doubt it will be significant (or in any hot paths)."</description><pubDate>Sun, 25 Feb 2024 08:26:20 +0000</pubDate></item><item><title>CVE-2023-52467 | mfd: syscon: Fix null pointer dereference in of_syscon_register()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52467</link><description>In the Linux kernel, the following vulnerability has been resolved:

mfd: syscon: Fix null pointer dereference in of_syscon_register()

kasprintf() returns a pointer to dynamically allocated memory
which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52468 | class: fix use-after-free in class_register()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52468</link><description>In the Linux kernel, the following vulnerability has been resolved:

class: fix use-after-free in class_register()

The lock_class_key is still registered and can be found in
lock_keys_hash hlist after subsys_private is freed in error
handler path.A task who iterate over the lock_keys_hash
later may cause use-after-free.So fix that up and unregister
the lock_class_key before kfree(cp).

On our platform, a driver fails to kset_register because of
creating duplicate filename '/class/xxx'.With Kasan enabled,
it prints a invalid-access bug report.

KASAN bug report:

BUG: KASAN: invalid-access in lockdep_register_key+0x19c/0x1bc
Write of size 8 at addr 15ffff808b8c0368 by task modprobe/252
Pointer tag: [15], memory tag: [fe]

CPU: 7 PID: 252 Comm: modprobe Tainted: G        W
 6.6.0-mainline-maybe-dirty #1

Call trace:
dump_backtrace+0x1b0/0x1e4
show_stack+0x2c/0x40
dump_stack_lvl+0xac/0xe0
print_report+0x18c/0x4d8
kasan_report+0xe8/0x148
__hwasan_store8_noabort+0x88/0x98
lockdep_register_key+0x19c/0x1bc
class_register+0x94/0x1ec
init_module+0xbc/0xf48 [rfkill]
do_one_initcall+0x17c/0x72c
do_init_module+0x19c/0x3f8
...
Memory state around the buggy address:
ffffff808b8c0100: 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a
ffffff808b8c0200: 8a 8a 8a 8a 8a 8a 8a 8a fe fe fe fe fe fe fe fe
&gt;ffffff808b8c0300: fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe
                                     ^
ffffff808b8c0400: 03 03 03 03 03 03 03 03 03 03 03 03 03 03 03 03

As CONFIG_KASAN_GENERIC is not set, Kasan reports invalid-access
not use-after-free here.In this case, modprobe is manipulating
the corrupted lock_keys_hash hlish where lock_class_key is already
freed before.

It's worth noting that this only can happen if lockdep is enabled,
which is not true for normal system.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52469 | drivers/amd/pm: fix a use-after-free in kv_parse_power_table</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52469</link><description>In the Linux kernel, the following vulnerability has been resolved:

drivers/amd/pm: fix a use-after-free in kv_parse_power_table

When ps allocated by kzalloc equals to NULL, kv_parse_power_table
frees adev-&gt;pm.dpm.ps that allocated before. However, after the control
flow goes through the following call chains:

kv_parse_power_table
  |-&gt; kv_dpm_init
        |-&gt; kv_dpm_sw_init
	      |-&gt; kv_dpm_fini

The adev-&gt;pm.dpm.ps is used in the for loop of kv_dpm_fini after its
first free in kv_parse_power_table and causes a use-after-free bug.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52470 | drm/radeon: check the alloc_workqueue return value in radeon_crtc_init()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52470</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/radeon: check the alloc_workqueue return value in radeon_crtc_init()

check the alloc_workqueue return value in radeon_crtc_init()
to avoid null-ptr-deref.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52471 | ice: Fix some null pointer dereference issues in ice_ptp.c</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52471</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: Fix some null pointer dereference issues in ice_ptp.c

devm_kasprintf() returns a pointer to dynamically allocated memory
which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52472 | crypto: rsa - add a check for allocation failure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52472</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: rsa - add a check for allocation failure

Static checkers insist that the mpi_alloc() allocation can fail so add
a check to prevent a NULL dereference.  Small allocations like this
can't actually fail in current kernels, but adding a check is very
simple and makes the static checkers happy.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52473 | thermal: core: Fix NULL pointer dereference in zone registration error path</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52473</link><description>In the Linux kernel, the following vulnerability has been resolved:

thermal: core: Fix NULL pointer dereference in zone registration error path

If device_register() in thermal_zone_device_register_with_trips()
returns an error, the tz variable is set to NULL and subsequently
dereferenced in kfree(tz-&gt;tzp).

Commit adc8749b150c ("thermal/drivers/core: Use put_device() if
device_register() fails") added the tz = NULL assignment in question to
avoid a possible double-free after dropping the reference to the zone
device.  However, after commit 4649620d9404 ("thermal: core: Make
thermal_zone_device_unregister() return after freeing the zone"), that
assignment has become redundant, because dropping the reference to the
zone device does not cause the zone object to be freed any more.

Drop it to address the NULL pointer dereference.</description><pubDate>Sun, 25 Feb 2024 08:26:23 +0000</pubDate></item><item><title>CVE-2024-0455 | SSRF on AWS deployed instances of AnythingLLM via /metadata</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0455</link><description>The inclusion of the web scraper for AnythingLLM means that any user with the proper authorization level (manager, admin, and when in single user) could put in the URL
```
http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance
```
which is a special IP and URL that resolves only when the request comes from within an EC2 instance. This would allow the user to see the connection/secret credentials for their specific instance and be able to manage it regardless of who deployed it.

The user would have to have pre-existing knowledge of the hosting infra which the target instance is deployed on, but if sent - would resolve if on EC2 and the proper `iptable` or firewall rule is not configured for their setup.</description><pubDate>Sun, 25 Feb 2024 08:26:23 +0000</pubDate></item><item><title>CVE-2024-27359 | Certain WithSecure products allow a Denial of Service because the engine scanner can go into an infinite loop when processing an archive fil...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27359</link><description>Certain WithSecure products allow a Denial of Service because the engine scanner can go into an infinite loop when processing an archive file. This affects WithSecure Client Security 15, WithSecure Server Security 15, WithSecure Email and Server Security 15, WithSecure Elements Endpoint Protection 17 and later, WithSecure Client Security for Mac 15, WithSecure Elements Endpoint Protection for Mac 17 and later, WithSecure Linux Security 64 12.0, WithSecure Linux Protection 12.0, and WithSecure Atlant 1.0.35-1.</description><pubDate>Sun, 25 Feb 2024 07:02:09 +0000</pubDate></item><item><title>CVE-2024-27350 | Amazon Fire OS 7 before 7.6.6.9 and 8 before 8.1.0.3 allows Fire TV applications to establish local ADB (Android Debug Bridge) connections. ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27350</link><description>Amazon Fire OS 7 before 7.6.6.9 and 8 before 8.1.0.3 allows Fire TV applications to establish local ADB (Android Debug Bridge) connections. NOTE: some third parties dispute whether this has security relevance, because an ADB connection is only possible after the (non-default) ADB Debugging option is enabled, and after the initiator of that specific connection attempt has been approved via a full-screen prompt.</description><pubDate>Sun, 25 Feb 2024 03:51:01 +0000</pubDate></item><item><title>CVE-2024-1871 | SourceCodester Employee Management System Project Assignment Report assignp.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1871</link><description>A vulnerability, which was classified as problematic, was found in SourceCodester Employee Management System 1.0. Affected is an unknown function of the file /process/assignp.php of the component Project Assignment Report. The manipulation of the argument pname leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-254694 is the identifier assigned to this vulnerability.</description><pubDate>Sat, 24 Feb 2024 21:37:45 +0000</pubDate></item><item><title>CVE-2024-0243 | Server-side Request Forgery In Recursive URL Loader</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0243</link><description>With the following crawler configuration:

```python
from bs4 import BeautifulSoup as Soup

url = "https://example.com"
loader = RecursiveUrlLoader(
    url=url, max_depth=2, extractor=lambda x: Soup(x, "html.parser").text
)
docs = loader.load()
```

An attacker in control of the contents of `https://example.com` could place a malicious HTML file in there with links like "https://example.completely.different/my_file.html" and the crawler would proceed to download that file as well even though `prevent_outside=True`.

https://github.com/langchain-ai/langchain/blob/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22/libs/community/langchain_community/document_loaders/recursive_url_loader.py#L51-L51

Resolved in https://github.com/langchain-ai/langchain/pull/15559</description><pubDate>Sat, 24 Feb 2024 18:15:15 +0000</pubDate></item><item><title>CVE-2022-34357 | IBM Cognos Analytics Mobile Server denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2022-34357</link><description>IBM Cognos Analytics Mobile Server 11.1.7, 11.2.4, and 12.0.0 is vulnerable to Denial of Service due to due to weak or absence of rate limiting. By making unlimited http requests, it is possible for a single user to exhaust server resources over a period of time making service unavailable for other legitimate users.  IBM X-Force ID:  230510.</description><pubDate>Sat, 24 Feb 2024 15:43:35 +0000</pubDate></item><item><title>CVE-2023-43051 | IBM Cognos Analytics cross-site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-43051</link><description>IBM Cognos Analytics 11.1.7, 11.2.4, and 12.0.0 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  267451.</description><pubDate>Sat, 24 Feb 2024 15:43:35 +0000</pubDate></item><item><title>CVE-2023-30996 | IBM Cognos Analytics cross-origin resource sharing</title><link>https://www.cve.org/CVERecord?id=CVE-2023-30996</link><description>IBM Cognos Analytics 11.1.7, 11.2.4, and 12.0.0 could be vulnerable to information leakage due to unverified sources in messages sent between Windows objects of different origins.  IBM X-Force ID:  254290.</description><pubDate>Sat, 24 Feb 2024 15:36:46 +0000</pubDate></item><item><title>CVE-2023-32344 | IBM Cognos Analytics cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2023-32344</link><description>IBM Cognos Analytics 11.1.7, 11.2.4, and 12.0.0 is vulnerable to form action hijacking where it is possible to modify the form action to reference an arbitrary path.  IBM X-Force ID:  255898.</description><pubDate>Sat, 24 Feb 2024 15:36:46 +0000</pubDate></item><item><title>CVE-2023-38359 | IBM Cognos Analytics cross-site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38359</link><description>IBM Cognos Analytics 11.1.7, 11.2.4, and 12.0.0 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  260744.</description><pubDate>Sat, 24 Feb 2024 15:36:47 +0000</pubDate></item><item><title>CVE-2024-26605 | PCI/ASPM: Fix deadlock when enabling ASPM</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26605</link><description>In the Linux kernel, the following vulnerability has been resolved:

PCI/ASPM: Fix deadlock when enabling ASPM

A last minute revert in 6.7-final introduced a potential deadlock when
enabling ASPM during probe of Qualcomm PCIe controllers as reported by
lockdep:

  ============================================
  WARNING: possible recursive locking detected
  6.7.0 #40 Not tainted
  --------------------------------------------
  kworker/u16:5/90 is trying to acquire lock:
  ffffacfa78ced000 (pci_bus_sem){++++}-{3:3}, at: pcie_aspm_pm_state_change+0x58/0xdc

              but task is already holding lock:
  ffffacfa78ced000 (pci_bus_sem){++++}-{3:3}, at: pci_walk_bus+0x34/0xbc

              other info that might help us debug this:
   Possible unsafe locking scenario:

         CPU0
         ----
    lock(pci_bus_sem);
    lock(pci_bus_sem);

               *** DEADLOCK ***

  Call trace:
   print_deadlock_bug+0x25c/0x348
   __lock_acquire+0x10a4/0x2064
   lock_acquire+0x1e8/0x318
   down_read+0x60/0x184
   pcie_aspm_pm_state_change+0x58/0xdc
   pci_set_full_power_state+0xa8/0x114
   pci_set_power_state+0xc4/0x120
   qcom_pcie_enable_aspm+0x1c/0x3c [pcie_qcom]
   pci_walk_bus+0x64/0xbc
   qcom_pcie_host_post_init_2_7_0+0x28/0x34 [pcie_qcom]

The deadlock can easily be reproduced on machines like the Lenovo ThinkPad
X13s by adding a delay to increase the race window during asynchronous
probe where another thread can take a write lock.

Add a new pci_set_power_state_locked() and associated helper functions that
can be called with the PCI bus semaphore held to avoid taking the read lock
twice.</description><pubDate>Sat, 24 Feb 2024 15:22:04 +0000</pubDate></item><item><title>CVE-2024-26600 | phy: ti: phy-omap-usb2: Fix NULL pointer dereference for SRP</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26600</link><description>In the Linux kernel, the following vulnerability has been resolved:

phy: ti: phy-omap-usb2: Fix NULL pointer dereference for SRP

If the external phy working together with phy-omap-usb2 does not implement
send_srp(), we may still attempt to call it. This can happen on an idle
Ethernet gadget triggering a wakeup for example:

configfs-gadget.g1 gadget.0: ECM Suspend
configfs-gadget.g1 gadget.0: Port suspended. Triggering wakeup
...
Unable to handle kernel NULL pointer dereference at virtual address
00000000 when execute
...
PC is at 0x0
LR is at musb_gadget_wakeup+0x1d4/0x254 [musb_hdrc]
...
musb_gadget_wakeup [musb_hdrc] from usb_gadget_wakeup+0x1c/0x3c [udc_core]
usb_gadget_wakeup [udc_core] from eth_start_xmit+0x3b0/0x3d4 [u_ether]
eth_start_xmit [u_ether] from dev_hard_start_xmit+0x94/0x24c
dev_hard_start_xmit from sch_direct_xmit+0x104/0x2e4
sch_direct_xmit from __dev_queue_xmit+0x334/0xd88
__dev_queue_xmit from arp_solicit+0xf0/0x268
arp_solicit from neigh_probe+0x54/0x7c
neigh_probe from __neigh_event_send+0x22c/0x47c
__neigh_event_send from neigh_resolve_output+0x14c/0x1c0
neigh_resolve_output from ip_finish_output2+0x1c8/0x628
ip_finish_output2 from ip_send_skb+0x40/0xd8
ip_send_skb from udp_send_skb+0x124/0x340
udp_send_skb from udp_sendmsg+0x780/0x984
udp_sendmsg from __sys_sendto+0xd8/0x158
__sys_sendto from ret_fast_syscall+0x0/0x58

Let's fix the issue by checking for send_srp() and set_vbus() before
calling them. For USB peripheral only cases these both could be NULL.</description><pubDate>Sat, 24 Feb 2024 15:10:18 +0000</pubDate></item><item><title>CVE-2024-26601 | ext4: regenerate buddy after block freeing failed if under fc replay</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26601</link><description>In the Linux kernel, the following vulnerability has been resolved:

ext4: regenerate buddy after block freeing failed if under fc replay

This mostly reverts commit 6bd97bf273bd ("ext4: remove redundant
mb_regenerate_buddy()") and reintroduces mb_regenerate_buddy(). Based on
code in mb_free_blocks(), fast commit replay can end up marking as free
blocks that are already marked as such. This causes corruption of the
buddy bitmap so we need to regenerate it in that case.</description><pubDate>Sat, 24 Feb 2024 15:10:19 +0000</pubDate></item><item><title>CVE-2024-26602 | sched/membarrier: reduce the ability to hammer on sys_membarrier</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26602</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched/membarrier: reduce the ability to hammer on sys_membarrier

On some systems, sys_membarrier can be very expensive, causing overall
slowdowns for everything.  So put a lock on the path in order to
serialize the accesses to prevent the ability for this to be called at
too high of a frequency and saturate the machine.</description><pubDate>Sat, 24 Feb 2024 15:10:19 +0000</pubDate></item><item><title>CVE-2024-26603 | x86/fpu: Stop relying on userspace for info to fault in xsave buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26603</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/fpu: Stop relying on userspace for info to fault in xsave buffer

Before this change, the expected size of the user space buffer was
taken from fx_sw-&gt;xstate_size. fx_sw-&gt;xstate_size can be changed
from user-space, so it is possible construct a sigreturn frame where:

 * fx_sw-&gt;xstate_size is smaller than the size required by valid bits in
   fx_sw-&gt;xfeatures.
 * user-space unmaps parts of the sigrame fpu buffer so that not all of
   the buffer required by xrstor is accessible.

In this case, xrstor tries to restore and accesses the unmapped area
which results in a fault. But fault_in_readable succeeds because buf +
fx_sw-&gt;xstate_size is within the still mapped area, so it goes back and
tries xrstor again. It will spin in this loop forever.

Instead, fault in the maximum size which can be touched by XRSTOR (taken
from fpstate-&gt;user_size).

[ dhansen: tweak subject / changelog ]</description><pubDate>Sat, 24 Feb 2024 15:10:19 +0000</pubDate></item><item><title>CVE-2024-26604 | Revert &amp;quot;kobject: Remove redundant checks for whether ktype is NULL&amp;quot;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26604</link><description>In the Linux kernel, the following vulnerability has been resolved:

Revert "kobject: Remove redundant checks for whether ktype is NULL"

This reverts commit 1b28cb81dab7c1eedc6034206f4e8d644046ad31.

It is reported to cause problems, so revert it for now until the root
cause can be found.</description><pubDate>Sat, 24 Feb 2024 15:10:20 +0000</pubDate></item><item><title>CVE-2024-1165 | The Brizy – Page Builder plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 2.4.39 via the 'id'...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1165</link><description>The Brizy – Page Builder plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 2.4.39 via the 'id'. This makes it possible for authenticated attackers, with contributor-level access and above, to upload files to arbitrary locations on the server</description><pubDate>Sat, 24 Feb 2024 09:46:51 +0000</pubDate></item><item><title>CVE-2024-1710 | The Addon Library plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the onAjaxAction fu...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1710</link><description>The Addon Library plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the onAjaxAction function action in all versions up to, and including, 1.3.76. This makes it possible for authenticated attackers, with subscriber-level access and above, to perform several unauthorized actions including uploading arbitrary files.</description><pubDate>Sat, 24 Feb 2024 09:46:51 +0000</pubDate></item><item><title>CVE-2023-5775 | The BackWPup plugin for WordPress is vulnerable to Plaintext Storage of Backup Destination Password in all versions up to, and including, 4....</title><link>https://www.cve.org/CVERecord?id=CVE-2023-5775</link><description>The BackWPup plugin for WordPress is vulnerable to Plaintext Storage of Backup Destination Password in all versions up to, and including, 4.0.2. This is due to to the plugin improperly storing backup destination passwords in plaintext. This makes it possible for authenticated attackers, with administrator-level access, to retrieve the password from the password input field in the UI or from the options table where the password is stored.</description><pubDate>Sat, 24 Feb 2024 08:43:08 +0000</pubDate></item><item><title>CVE-2024-1758 | The SuperFaktura WooCommerce plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 1.40.3 ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1758</link><description>The SuperFaktura WooCommerce plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 1.40.3 via the wc_sf_url_check function. This makes it possible for authenticated attackers, with subscriber-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.</description><pubDate>Sat, 24 Feb 2024 08:43:09 +0000</pubDate></item><item><title>CVE-2024-21501 | Versions of the package sanitize-html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attri...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21501</link><description>Versions of the package sanitize-html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attribute allowed, allowing enumeration of files in the system (including project dependencies). An attacker could exploit this vulnerability to gather details about the file system structure and dependencies of the targeted server.</description><pubDate>Sat, 24 Feb 2024 05:09:32 +0000</pubDate></item><item><title>CVE-2024-21502 | Versions of the package fastecdsa before 2.3.2 are vulnerable to Use of Uninitialized Variable on the stack, via the curvemath_mul function ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21502</link><description>Versions of the package fastecdsa before 2.3.2 are vulnerable to Use of Uninitialized Variable on the stack, via the curvemath_mul function in src/curveMath.c, due to being used and interpreted as user-defined type. Depending on the variable's actual value it could be arbitrary free(), arbitrary realloc(), null pointer dereference and other. Since the stack can be controlled by the attacker, the vulnerability could be used to corrupt allocator structure, leading to possible heap exploitation. The attacker could cause denial of service by exploiting this vulnerability.</description><pubDate>Sat, 24 Feb 2024 05:09:32 +0000</pubDate></item><item><title>CVE-2024-1810 | The Archivist – Custom Archive Templates plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘shortcode_attributes'...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1810</link><description>The Archivist – Custom Archive Templates plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘shortcode_attributes' parameter in all versions up to, and including, 1.7.5 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Sat, 24 Feb 2024 04:35:30 +0000</pubDate></item></channel></rss>