<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Wed, 19 Jun 2024 14:40:51 +0000</lastBuildDate><item><title>CVE-2022-45832 | WordPress Attorney theme &amp;lt;= 3 - Unauth. Arbitrary Content Deletion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2022-45832</link><description>Missing Authorization vulnerability in Hennessey Digital Attorney.This issue affects Attorney: from n/a through 3.</description><pubDate>Wed, 19 Jun 2024 14:40:53 +0000</pubDate></item><item><title>CVE-2023-25697 | WordPress GamiPress plugin &amp;lt;= 2.5.6 - CSRF Leading to Settings Change Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-25697</link><description>Cross-Site Request Forgery (CSRF) vulnerability in GamiPress.This issue affects GamiPress: from n/a through 2.5.6.</description><pubDate>Wed, 19 Jun 2024 14:40:53 +0000</pubDate></item><item><title>CVE-2023-39312 | WordPress Avada theme &amp;lt;= 7.11.1 - Auth. Unrestricted Zip Extraction vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-39312</link><description>Missing Authorization vulnerability in ThemeFusion Avada.This issue affects Avada: from n/a through 7.11.1.</description><pubDate>Wed, 19 Jun 2024 14:40:54 +0000</pubDate></item><item><title>CVE-2023-36515 | WordPress LearnPress plugin &amp;lt;= 4.2.3 - Unauthenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-36515</link><description>Missing Authorization vulnerability in ThimPress LearnPress.This issue affects LearnPress: from n/a through 4.2.3.</description><pubDate>Wed, 19 Jun 2024 14:31:05 +0000</pubDate></item><item><title>CVE-2023-36516 | WordPress LearnPress plugin &amp;lt;= 4.2.3 - Authenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-36516</link><description>Missing Authorization vulnerability in ThimPress LearnPress.This issue affects LearnPress: from n/a through 4.2.3.</description><pubDate>Wed, 19 Jun 2024 14:31:05 +0000</pubDate></item><item><title>CVE-2023-38393 | WordPress Ninja Forms plugin &amp;lt;= 3.6.25 - Subscriber+ Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38393</link><description>Missing Authorization vulnerability in Saturday Drive Ninja Forms.This issue affects Ninja Forms: from n/a through 3.6.25.</description><pubDate>Wed, 19 Jun 2024 14:31:05 +0000</pubDate></item><item><title>CVE-2023-38394 | WordPress Jupiter X Core plugin &amp;lt;= 3.3.0 - Multiple Auth. Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38394</link><description>Missing Authorization vulnerability in Artbees JupiterX Core.This issue affects JupiterX Core: from 3.0.0 through 3.3.0.</description><pubDate>Wed, 19 Jun 2024 14:31:06 +0000</pubDate></item><item><title>CVE-2023-39310 | WordPress Avada Builder plugin &amp;lt;= 3.11.1 - Authenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-39310</link><description>Missing Authorization vulnerability in ThemeFusion Fusion Builder.This issue affects Fusion Builder: from n/a through 3.11.1.</description><pubDate>Wed, 19 Jun 2024 14:17:28 +0000</pubDate></item><item><title>CVE-2024-38608 | net/mlx5e: Fix netif state handling</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38608</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Fix netif state handling

mlx5e_suspend cleans resources only if netif_device_present() returns
true. However, mlx5e_resume changes the state of netif, via
mlx5e_nic_enable, only if reg_state == NETREG_REGISTERED.
In the below case, the above leads to NULL-ptr Oops[1] and memory
leaks:

mlx5e_probe
 _mlx5e_resume
  mlx5e_attach_netdev
   mlx5e_nic_enable  &lt;-- netdev not reg, not calling netif_device_attach()
  register_netdev &lt;-- failed for some reason.
ERROR_FLOW:
 _mlx5e_suspend &lt;-- netif_device_present return false, resources aren't freed :(

Hence, clean resources in this case as well.

[1]
BUG: kernel NULL pointer dereference, address: 0000000000000000
PGD 0 P4D 0
Oops: 0010 [#1] SMP
CPU: 2 PID: 9345 Comm: test-ovs-ct-gen Not tainted 6.5.0_for_upstream_min_debug_2023_09_05_16_01 #1
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
RIP: 0010:0x0
Code: Unable to access opcode bytes at0xffffffffffffffd6.
RSP: 0018:ffff888178aaf758 EFLAGS: 00010246
Call Trace:
 
 ? __die+0x20/0x60
 ? page_fault_oops+0x14c/0x3c0
 ? exc_page_fault+0x75/0x140
 ? asm_exc_page_fault+0x22/0x30
 notifier_call_chain+0x35/0xb0
 blocking_notifier_call_chain+0x3d/0x60
 mlx5_blocking_notifier_call_chain+0x22/0x30 [mlx5_core]
 mlx5_core_uplink_netdev_event_replay+0x3e/0x60 [mlx5_core]
 mlx5_mdev_netdev_track+0x53/0x60 [mlx5_ib]
 mlx5_ib_roce_init+0xc3/0x340 [mlx5_ib]
 __mlx5_ib_add+0x34/0xd0 [mlx5_ib]
 mlx5r_probe+0xe1/0x210 [mlx5_ib]
 ? auxiliary_match_id+0x6a/0x90
 auxiliary_bus_probe+0x38/0x80
 ? driver_sysfs_add+0x51/0x80
 really_probe+0xc9/0x3e0
 ? driver_probe_device+0x90/0x90
 __driver_probe_device+0x80/0x160
 driver_probe_device+0x1e/0x90
 __device_attach_driver+0x7d/0x100
 bus_for_each_drv+0x80/0xd0
 __device_attach+0xbc/0x1f0
 bus_probe_device+0x86/0xa0
 device_add+0x637/0x840
 __auxiliary_device_add+0x3b/0xa0
 add_adev+0xc9/0x140 [mlx5_core]
 mlx5_rescan_drivers_locked+0x22a/0x310 [mlx5_core]
 mlx5_register_device+0x53/0xa0 [mlx5_core]
 mlx5_init_one_devl_locked+0x5c4/0x9c0 [mlx5_core]
 mlx5_init_one+0x3b/0x60 [mlx5_core]
 probe_one+0x44c/0x730 [mlx5_core]
 local_pci_probe+0x3e/0x90
 pci_device_probe+0xbf/0x210
 ? kernfs_create_link+0x5d/0xa0
 ? sysfs_do_create_link_sd+0x60/0xc0
 really_probe+0xc9/0x3e0
 ? driver_probe_device+0x90/0x90
 __driver_probe_device+0x80/0x160
 driver_probe_device+0x1e/0x90
 __device_attach_driver+0x7d/0x100
 bus_for_each_drv+0x80/0xd0
 __device_attach+0xbc/0x1f0
 pci_bus_add_device+0x54/0x80
 pci_iov_add_virtfn+0x2e6/0x320
 sriov_enable+0x208/0x420
 mlx5_core_sriov_configure+0x9e/0x200 [mlx5_core]
 sriov_numvfs_store+0xae/0x1a0
 kernfs_fop_write_iter+0x10c/0x1a0
 vfs_write+0x291/0x3c0
 ksys_write+0x5f/0xe0
 do_syscall_64+0x3d/0x90
 entry_SYSCALL_64_after_hwframe+0x46/0xb0
 CR2: 0000000000000000
 ---[ end trace 0000000000000000  ]---</description><pubDate>Wed, 19 Jun 2024 14:17:29 +0000</pubDate></item><item><title>CVE-2024-38609 | wifi: mt76: connac: check for null before dereferencing</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38609</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mt76: connac: check for null before dereferencing

The wcid can be NULL. It should be checked for validity before
dereferencing it to avoid crash.</description><pubDate>Wed, 19 Jun 2024 14:17:29 +0000</pubDate></item><item><title>CVE-2024-38610 | drivers/virt/acrn: fix PFNMAP PTE checks in acrn_vm_ram_map()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38610</link><description>In the Linux kernel, the following vulnerability has been resolved:

drivers/virt/acrn: fix PFNMAP PTE checks in acrn_vm_ram_map()

Patch series "mm: follow_pte() improvements and acrn follow_pte() fixes".

Patch #1 fixes a bunch of issues I spotted in the acrn driver.  It
compiles, that's all I know.  I'll appreciate some review and testing from
acrn folks.

Patch #2+#3 improve follow_pte(), passing a VMA instead of the MM, adding
more sanity checks, and improving the documentation.  Gave it a quick test
on x86-64 using VM_PAT that ends up using follow_pte().


This patch (of 3):

We currently miss handling various cases, resulting in a dangerous
follow_pte() (previously follow_pfn()) usage.

(1) We're not checking PTE write permissions.

Maybe we should simply always require pte_write() like we do for
pin_user_pages_fast(FOLL_WRITE)? Hard to tell, so let's check for
ACRN_MEM_ACCESS_WRITE for now.

(2) We're not rejecting refcounted pages.

As we are not using MMU notifiers, messing with refcounted pages is
dangerous and can result in use-after-free. Let's make sure to reject them.

(3) We are only looking at the first PTE of a bigger range.

We only lookup a single PTE, but memmap-&gt;len may span a larger area.
Let's loop over all involved PTEs and make sure the PFN range is
actually contiguous. Reject everything else: it couldn't have worked
either way, and rather made use access PFNs we shouldn't be accessing.</description><pubDate>Wed, 19 Jun 2024 14:17:30 +0000</pubDate></item><item><title>CVE-2024-38611 | media: i2c: et8ek8: Don&amp;#x27;t strip remove function when driver is builtin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38611</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: i2c: et8ek8: Don't strip remove function when driver is builtin

Using __exit for the remove function results in the remove callback
being discarded with CONFIG_VIDEO_ET8EK8=y. When such a device gets
unbound (e.g. using sysfs or hotplug), the driver is just removed
without the cleanup being performed. This results in resource leaks. Fix
it by compiling in the remove callback unconditionally.

This also fixes a W=1 modpost warning:

	WARNING: modpost: drivers/media/i2c/et8ek8/et8ek8: section mismatch in reference: et8ek8_i2c_driver+0x10 (section: .data) -&gt; et8ek8_remove (section: .exit.text)</description><pubDate>Wed, 19 Jun 2024 14:17:30 +0000</pubDate></item><item><title>CVE-2024-38612 | ipv6: sr: fix invalid unregister error path</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38612</link><description>In the Linux kernel, the following vulnerability has been resolved:

ipv6: sr: fix invalid unregister error path

The error path of seg6_init() is wrong in case CONFIG_IPV6_SEG6_LWTUNNEL
is not defined. In that case if seg6_hmac_init() fails, the
genl_unregister_family() isn't called.

This issue exist since commit 46738b1317e1 ("ipv6: sr: add option to control
lwtunnel support"), and commit 5559cea2d5aa ("ipv6: sr: fix possible
use-after-free and null-ptr-deref") replaced unregister_pernet_subsys()
with genl_unregister_family() in this error path.</description><pubDate>Wed, 19 Jun 2024 14:17:31 +0000</pubDate></item><item><title>CVE-2024-38613 | m68k: Fix spinlock race in kernel thread creation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38613</link><description>In the Linux kernel, the following vulnerability has been resolved:

m68k: Fix spinlock race in kernel thread creation

Context switching does take care to retain the correct lock owner across
the switch from 'prev' to 'next' tasks.  This does rely on interrupts
remaining disabled for the entire duration of the switch.

This condition is guaranteed for normal process creation and context
switching between already running processes, because both 'prev' and
'next' already have interrupts disabled in their saved copies of the
status register.

The situation is different for newly created kernel threads.  The status
register is set to PS_S in copy_thread(), which does leave the IPL at 0.
Upon restoring the 'next' thread's status register in switch_to() aka
resume(), interrupts then become enabled prematurely.  resume() then
returns via ret_from_kernel_thread() and schedule_tail() where run queue
lock is released (see finish_task_switch() and finish_lock_switch()).

A timer interrupt calling scheduler_tick() before the lock is released
in finish_task_switch() will find the lock already taken, with the
current task as lock owner.  This causes a spinlock recursion warning as
reported by Guenter Roeck.

As far as I can ascertain, this race has been opened in commit
533e6903bea0 ("m68k: split ret_from_fork(), simplify kernel_thread()")
but I haven't done a detailed study of kernel history so it may well
predate that commit.

Interrupts cannot be disabled in the saved status register copy for
kernel threads (init will complain about interrupts disabled when
finally starting user space).  Disable interrupts temporarily when
switching the tasks' register sets in resume().

Note that a simple oriw 0x700,%sr after restoring sr is not enough here
- this leaves enough of a race for the 'spinlock recursion' warning to
still be observed.

Tested on ARAnyM and qemu (Quadra 800 emulation).</description><pubDate>Wed, 19 Jun 2024 14:17:31 +0000</pubDate></item><item><title>CVE-2024-38614 | openrisc: traps: Don&amp;#x27;t send signals to kernel mode threads</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38614</link><description>In the Linux kernel, the following vulnerability has been resolved:

openrisc: traps: Don't send signals to kernel mode threads

OpenRISC exception handling sends signals to user processes on floating
point exceptions and trap instructions (for debugging) among others.
There is a bug where the trap handling logic may send signals to kernel
threads, we should not send these signals to kernel threads, if that
happens we treat it as an error.

This patch adds conditions to die if the kernel receives these
exceptions in kernel mode code.</description><pubDate>Wed, 19 Jun 2024 14:17:32 +0000</pubDate></item><item><title>CVE-2024-38615 | cpufreq: exit() callback is optional</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38615</link><description>In the Linux kernel, the following vulnerability has been resolved:

cpufreq: exit() callback is optional

The exit() callback is optional and shouldn't be called without checking
a valid pointer first.

Also, we must clear freq_table pointer even if the exit() callback isn't
present.</description><pubDate>Wed, 19 Jun 2024 14:17:32 +0000</pubDate></item><item><title>CVE-2024-38616 | wifi: carl9170: re-fix fortified-memset warning</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38616</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: carl9170: re-fix fortified-memset warning

The carl9170_tx_release() function sometimes triggers a fortified-memset
warning in my randconfig builds:

In file included from include/linux/string.h:254,
                 from drivers/net/wireless/ath/carl9170/tx.c:40:
In function 'fortify_memset_chk',
    inlined from 'carl9170_tx_release' at drivers/net/wireless/ath/carl9170/tx.c:283:2,
    inlined from 'kref_put' at include/linux/kref.h:65:3,
    inlined from 'carl9170_tx_put_skb' at drivers/net/wireless/ath/carl9170/tx.c:342:9:
include/linux/fortify-string.h:493:25: error: call to '__write_overflow_field' declared with attribute warning: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Werror=attribute-warning]
  493 |                         __write_overflow_field(p_size_field, size);

Kees previously tried to avoid this by using memset_after(), but it seems
this does not fully address the problem. I noticed that the memset_after()
here is done on a different part of the union (status) than the original
cast was from (rate_driver_data), which may confuse the compiler.

Unfortunately, the memset_after() trick does not work on driver_rates[]
because that is part of an anonymous struct, and I could not get
struct_group() to do this either. Using two separate memset() calls
on the two members does address the warning though.</description><pubDate>Wed, 19 Jun 2024 14:17:32 +0000</pubDate></item><item><title>CVE-2024-38617 | kunit/fortify: Fix mismatched kvalloc()/vfree() usage</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38617</link><description>In the Linux kernel, the following vulnerability has been resolved:

kunit/fortify: Fix mismatched kvalloc()/vfree() usage

The kv*() family of tests were accidentally freeing with vfree() instead
of kvfree(). Use kvfree() instead.</description><pubDate>Wed, 19 Jun 2024 14:17:33 +0000</pubDate></item><item><title>CVE-2024-38618 | ALSA: timer: Set lower bound of start tick time</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38618</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: timer: Set lower bound of start tick time

Currently ALSA timer doesn't have the lower limit of the start tick
time, and it allows a very small size, e.g. 1 tick with 1ns resolution
for hrtimer.  Such a situation may lead to an unexpected RCU stall,
where  the callback repeatedly queuing the expire update, as reported
by fuzzer.

This patch introduces a sanity check of the timer start tick time, so
that the system returns an error when a too small start size is set.
As of this patch, the lower limit is hard-coded to 100us, which is
small enough but can still work somehow.</description><pubDate>Wed, 19 Jun 2024 14:17:33 +0000</pubDate></item><item><title>CVE-2023-36676 | WordPress Spectra plugin &amp;lt;= 2.6.6 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-36676</link><description>Missing Authorization vulnerability in Brainstorm Force Spectra.This issue affects Spectra: from n/a through 2.6.6.</description><pubDate>Wed, 19 Jun 2024 13:58:30 +0000</pubDate></item><item><title>CVE-2023-36683 | WordPress Schema Pro plugin &amp;lt;= 2.7.8 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-36683</link><description>Missing Authorization vulnerability in WP SCHEMA PRO Schema Pro.This issue affects Schema Pro: from n/a through 2.7.8.</description><pubDate>Wed, 19 Jun 2024 13:58:30 +0000</pubDate></item><item><title>CVE-2023-36684 | WordPress Convert Pro plugin &amp;lt;= 1.7.5 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-36684</link><description>Missing Authorization vulnerability in Brainstorm Force Convert Pro.This issue affects Convert Pro: from n/a through 1.7.5.</description><pubDate>Wed, 19 Jun 2024 13:58:31 +0000</pubDate></item><item><title>CVE-2023-37869 | WordPress Premium Addons PRO plugin &amp;lt;= 2.9.0 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37869</link><description>Missing Authorization vulnerability in Premium Addons Premium Addons PRO.This issue affects Premium Addons PRO: from n/a through 2.9.0.</description><pubDate>Wed, 19 Jun 2024 13:58:31 +0000</pubDate></item><item><title>CVE-2024-23443 | A high-privileged user, allowed to create custom osquery packs 17 could affect the availability of Kibana by uploading a maliciously crafted...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23443</link><description>A high-privileged user, allowed to create custom osquery packs 17 could affect the availability of Kibana by uploading a maliciously crafted osquery pack.</description><pubDate>Wed, 19 Jun 2024 13:58:31 +0000</pubDate></item><item><title>CVE-2024-38601 | ring-buffer: Fix a race between readers and resize checks</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38601</link><description>In the Linux kernel, the following vulnerability has been resolved:

ring-buffer: Fix a race between readers and resize checks

The reader code in rb_get_reader_page() swaps a new reader page into the
ring buffer by doing cmpxchg on old-&gt;list.prev-&gt;next to point it to the
new page. Following that, if the operation is successful,
old-&gt;list.next-&gt;prev gets updated too. This means the underlying
doubly-linked list is temporarily inconsistent, page-&gt;prev-&gt;next or
page-&gt;next-&gt;prev might not be equal back to page for some page in the
ring buffer.

The resize operation in ring_buffer_resize() can be invoked in parallel.
It calls rb_check_pages() which can detect the described inconsistency
and stop further tracing:

[  190.271762] ------------[ cut here ]------------
[  190.271771] WARNING: CPU: 1 PID: 6186 at kernel/trace/ring_buffer.c:1467 rb_check_pages.isra.0+0x6a/0xa0
[  190.271789] Modules linked in: [...]
[  190.271991] Unloaded tainted modules: intel_uncore_frequency(E):1 skx_edac(E):1
[  190.272002] CPU: 1 PID: 6186 Comm: cmd.sh Kdump: loaded Tainted: G            E      6.9.0-rc6-default #5 158d3e1e6d0b091c34c3b96bfd99a1c58306d79f
[  190.272011] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.0-0-gd239552c-rebuilt.opensuse.org 04/01/2014
[  190.272015] RIP: 0010:rb_check_pages.isra.0+0x6a/0xa0
[  190.272023] Code: [...]
[  190.272028] RSP: 0018:ffff9c37463abb70 EFLAGS: 00010206
[  190.272034] RAX: ffff8eba04b6cb80 RBX: 0000000000000007 RCX: ffff8eba01f13d80
[  190.272038] RDX: ffff8eba01f130c0 RSI: ffff8eba04b6cd00 RDI: ffff8eba0004c700
[  190.272042] RBP: ffff8eba0004c700 R08: 0000000000010002 R09: 0000000000000000
[  190.272045] R10: 00000000ffff7f52 R11: ffff8eba7f600000 R12: ffff8eba0004c720
[  190.272049] R13: ffff8eba00223a00 R14: 0000000000000008 R15: ffff8eba067a8000
[  190.272053] FS:  00007f1bd64752c0(0000) GS:ffff8eba7f680000(0000) knlGS:0000000000000000
[  190.272057] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  190.272061] CR2: 00007f1bd6662590 CR3: 000000010291e001 CR4: 0000000000370ef0
[  190.272070] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[  190.272073] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[  190.272077] Call Trace:
[  190.272098]  
[  190.272189]  ring_buffer_resize+0x2ab/0x460
[  190.272199]  __tracing_resize_ring_buffer.part.0+0x23/0xa0
[  190.272206]  tracing_resize_ring_buffer+0x65/0x90
[  190.272216]  tracing_entries_write+0x74/0xc0
[  190.272225]  vfs_write+0xf5/0x420
[  190.272248]  ksys_write+0x67/0xe0
[  190.272256]  do_syscall_64+0x82/0x170
[  190.272363]  entry_SYSCALL_64_after_hwframe+0x76/0x7e
[  190.272373] RIP: 0033:0x7f1bd657d263
[  190.272381] Code: [...]
[  190.272385] RSP: 002b:00007ffe72b643f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
[  190.272391] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f1bd657d263
[  190.272395] RDX: 0000000000000002 RSI: 0000555a6eb538e0 RDI: 0000000000000001
[  190.272398] RBP: 0000555a6eb538e0 R08: 000000000000000a R09: 0000000000000000
[  190.272401] R10: 0000555a6eb55190 R11: 0000000000000246 R12: 00007f1bd6662500
[  190.272404] R13: 0000000000000002 R14: 00007f1bd6667c00 R15: 0000000000000002
[  190.272412]  
[  190.272414] ---[ end trace 0000000000000000 ]---

Note that ring_buffer_resize() calls rb_check_pages() only if the parent
trace_buffer has recording disabled. Recent commit d78ab792705c
("tracing: Stop current tracer when resizing buffer") causes that it is
now always the case which makes it more likely to experience this issue.

The window to hit this race is nonetheless very small. To help
reproducing it, one can add a delay loop in rb_get_reader_page():

 ret = rb_head_page_replace(reader, cpu_buffer-&gt;reader_page);
 if (!ret)
 	goto spin;
 for (unsigned i = 0; i &lt; 1U &lt;&lt; 26; i++)  /* inserted delay loop */
 	__asm__ __volatile__ ("" : : : "memory");
 rb_list_head(reader-&gt;list.next)-&gt;prev = &amp;amp;cpu_buffer-&gt;reader_page-&gt;list;

.. 
---truncated---</description><pubDate>Wed, 19 Jun 2024 13:58:32 +0000</pubDate></item><item><title>CVE-2024-38602 | ax25: Fix reference count leak issues of ax25_dev</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38602</link><description>In the Linux kernel, the following vulnerability has been resolved:

ax25: Fix reference count leak issues of ax25_dev

The ax25_addr_ax25dev() and ax25_dev_device_down() exist a reference
count leak issue of the object "ax25_dev".

Memory leak issue in ax25_addr_ax25dev():

The reference count of the object "ax25_dev" can be increased multiple
times in ax25_addr_ax25dev(). This will cause a memory leak.

Memory leak issues in ax25_dev_device_down():

The reference count of ax25_dev is set to 1 in ax25_dev_device_up() and
then increase the reference count when ax25_dev is added to ax25_dev_list.
As a result, the reference count of ax25_dev is 2. But when the device is
shutting down. The ax25_dev_device_down() drops the reference count once
or twice depending on if we goto unlock_put or not, which will cause
memory leak.

As for the issue of ax25_addr_ax25dev(), it is impossible for one pointer
to be on a list twice. So add a break in ax25_addr_ax25dev(). As for the
issue of ax25_dev_device_down(), increase the reference count of ax25_dev
once in ax25_dev_device_up() and decrease the reference count of ax25_dev
after it is removed from the ax25_dev_list.</description><pubDate>Wed, 19 Jun 2024 13:58:32 +0000</pubDate></item><item><title>CVE-2024-38603 | drivers/perf: hisi: hns3: Actually use devm_add_action_or_reset()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38603</link><description>In the Linux kernel, the following vulnerability has been resolved:

drivers/perf: hisi: hns3: Actually use devm_add_action_or_reset()

pci_alloc_irq_vectors() allocates an irq vector. When devm_add_action()
fails, the irq vector is not freed, which leads to a memory leak.

Replace the devm_add_action with devm_add_action_or_reset to ensure
the irq vector can be destroyed when it fails.</description><pubDate>Wed, 19 Jun 2024 13:58:32 +0000</pubDate></item><item><title>CVE-2024-38604 | block: refine the EOF check in blkdev_iomap_begin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38604</link><description>In the Linux kernel, the following vulnerability has been resolved:

block: refine the EOF check in blkdev_iomap_begin

blkdev_iomap_begin rounds down the offset to the logical block size
before stashing it in iomap-&gt;offset and checking that it still is
inside the inode size.

Check the i_size check to the raw pos value so that we don't try a
zero size write if iter-&gt;pos is unaligned.</description><pubDate>Wed, 19 Jun 2024 13:58:33 +0000</pubDate></item><item><title>CVE-2024-38605 | ALSA: core: Fix NULL module pointer assignment at card init</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38605</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: core: Fix NULL module pointer assignment at card init

The commit 81033c6b584b ("ALSA: core: Warn on empty module")
introduced a WARN_ON() for a NULL module pointer passed at snd_card
object creation, and it also wraps the code around it with '#ifdef
MODULE'.  This works in most cases, but the devils are always in
details.  "MODULE" is defined when the target code (i.e. the sound
core) is built as a module; but this doesn't mean that the caller is
also built-in or not.  Namely, when only the sound core is built-in
(CONFIG_SND=y) while the driver is a module (CONFIG_SND_USB_AUDIO=m),
the passed module pointer is ignored even if it's non-NULL, and
card-&gt;module remains as NULL.  This would result in the missing module
reference up/down at the device open/close, leading to a race with the
code execution after the module removal.

For addressing the bug, move the assignment of card-&gt;module again out
of ifdef.  The WARN_ON() is still wrapped with ifdef because the
module can be really NULL when all sound drivers are built-in.

Note that we keep 'ifdef MODULE' for WARN_ON(), otherwise it would
lead to a false-positive NULL module check.  Admittedly it won't catch
perfectly, i.e. no check is performed when CONFIG_SND=y.  But, it's no
real problem as it's only for debugging, and the condition is pretty
rare.</description><pubDate>Wed, 19 Jun 2024 13:58:33 +0000</pubDate></item><item><title>CVE-2024-38606 | crypto: qat - validate slices count returned by FW</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38606</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: qat - validate slices count returned by FW

The function adf_send_admin_tl_start() enables the telemetry (TL)
feature on a QAT device by sending the ICP_QAT_FW_TL_START message to
the firmware. This triggers the FW to start writing TL data to a DMA
buffer in memory and returns an array containing the number of
accelerators of each type (slices) supported by this HW.
The pointer to this array is stored in the adf_tl_hw_data data
structure called slice_cnt.

The array slice_cnt is then used in the function tl_print_dev_data()
to report in debugfs only statistics about the supported accelerators.
An incorrect value of the elements in slice_cnt might lead to an out
of bounds memory read.
At the moment, there isn't an implementation of FW that returns a wrong
value, but for robustness validate the slice count array returned by FW.</description><pubDate>Wed, 19 Jun 2024 13:58:34 +0000</pubDate></item><item><title>CVE-2024-38607 | macintosh/via-macii: Fix &amp;quot;BUG: sleeping function called from invalid context&amp;quot;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38607</link><description>In the Linux kernel, the following vulnerability has been resolved:

macintosh/via-macii: Fix "BUG: sleeping function called from invalid context"

The via-macii ADB driver calls request_irq() after disabling hard
interrupts. But disabling interrupts isn't necessary here because the
VIA shift register interrupt was masked during VIA1 initialization.</description><pubDate>Wed, 19 Jun 2024 13:58:34 +0000</pubDate></item><item><title>CVE-2023-37872 | WordPress WooCommerce Ship to Multiple Addresses plugin &amp;lt;= 3.8.5 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37872</link><description>Missing Authorization vulnerability in Woo WooCommerce Ship to Multiple Addresses.This issue affects WooCommerce Ship to Multiple Addresses: from n/a through 3.8.5.</description><pubDate>Wed, 19 Jun 2024 13:48:32 +0000</pubDate></item><item><title>CVE-2024-38329 | IBM Storage Protect for Virtual Environments: Data Protection for VMware security bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38329</link><description>IBM Storage Protect for Virtual Environments: Data Protection for VMware 8.1.0.0 through 8.1.22.0 could allow a remote authenticated attacker to bypass security restrictions, caused by improper validation of user permission. By sending a specially crafted request, an attacker could exploit this vulnerability to change its settings, trigger backups, restore backups, and also delete all previous backups via log rotation.  IBM X-Force ID:  294994.</description><pubDate>Wed, 19 Jun 2024 13:48:32 +0000</pubDate></item><item><title>CVE-2024-38589 | netrom: fix possible dead-lock in nr_rt_ioctl()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38589</link><description>In the Linux kernel, the following vulnerability has been resolved:

netrom: fix possible dead-lock in nr_rt_ioctl()

syzbot loves netrom, and found a possible deadlock in nr_rt_ioctl [1]

Make sure we always acquire nr_node_list_lock before nr_node_lock(nr_node)

[1]
WARNING: possible circular locking dependency detected
6.9.0-rc7-syzkaller-02147-g654de42f3fc6 #0 Not tainted
------------------------------------------------------
syz-executor350/5129 is trying to acquire lock:
 ffff8880186e2070 (&amp;amp;nr_node-&gt;node_lock){+...}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]
 ffff8880186e2070 (&amp;amp;nr_node-&gt;node_lock){+...}-{2:2}, at: nr_node_lock include/net/netrom.h:152 [inline]
 ffff8880186e2070 (&amp;amp;nr_node-&gt;node_lock){+...}-{2:2}, at: nr_dec_obs net/netrom/nr_route.c:464 [inline]
 ffff8880186e2070 (&amp;amp;nr_node-&gt;node_lock){+...}-{2:2}, at: nr_rt_ioctl+0x1bb/0x1090 net/netrom/nr_route.c:697

but task is already holding lock:
 ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]
 ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: nr_dec_obs net/netrom/nr_route.c:462 [inline]
 ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: nr_rt_ioctl+0x10a/0x1090 net/netrom/nr_route.c:697

which lock already depends on the new lock.

the existing dependency chain (in reverse order) is:

-&gt; #1 (nr_node_list_lock){+...}-{2:2}:
        lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5754
        __raw_spin_lock_bh include/linux/spinlock_api_smp.h:126 [inline]
        _raw_spin_lock_bh+0x35/0x50 kernel/locking/spinlock.c:178
        spin_lock_bh include/linux/spinlock.h:356 [inline]
        nr_remove_node net/netrom/nr_route.c:299 [inline]
        nr_del_node+0x4b4/0x820 net/netrom/nr_route.c:355
        nr_rt_ioctl+0xa95/0x1090 net/netrom/nr_route.c:683
        sock_do_ioctl+0x158/0x460 net/socket.c:1222
        sock_ioctl+0x629/0x8e0 net/socket.c:1341
        vfs_ioctl fs/ioctl.c:51 [inline]
        __do_sys_ioctl fs/ioctl.c:904 [inline]
        __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:890
        do_syscall_x64 arch/x86/entry/common.c:52 [inline]
        do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-&gt; #0 (&amp;amp;nr_node-&gt;node_lock){+...}-{2:2}:
        check_prev_add kernel/locking/lockdep.c:3134 [inline]
        check_prevs_add kernel/locking/lockdep.c:3253 [inline]
        validate_chain+0x18cb/0x58e0 kernel/locking/lockdep.c:3869
        __lock_acquire+0x1346/0x1fd0 kernel/locking/lockdep.c:5137
        lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5754
        __raw_spin_lock_bh include/linux/spinlock_api_smp.h:126 [inline]
        _raw_spin_lock_bh+0x35/0x50 kernel/locking/spinlock.c:178
        spin_lock_bh include/linux/spinlock.h:356 [inline]
        nr_node_lock include/net/netrom.h:152 [inline]
        nr_dec_obs net/netrom/nr_route.c:464 [inline]
        nr_rt_ioctl+0x1bb/0x1090 net/netrom/nr_route.c:697
        sock_do_ioctl+0x158/0x460 net/socket.c:1222
        sock_ioctl+0x629/0x8e0 net/socket.c:1341
        vfs_ioctl fs/ioctl.c:51 [inline]
        __do_sys_ioctl fs/ioctl.c:904 [inline]
        __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:890
        do_syscall_x64 arch/x86/entry/common.c:52 [inline]
        do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(nr_node_list_lock);
                               lock(&amp;amp;nr_node-&gt;node_lock);
                               lock(nr_node_list_lock);
  lock(&amp;amp;nr_node-&gt;node_lock);

 *** DEADLOCK ***

1 lock held by syz-executor350/5129:
  #0: ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]
  #0: ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: nr_dec_obs net/netrom/nr_route.c:462 [inline]
  #0: ffffffff8f70
---truncated---</description><pubDate>Wed, 19 Jun 2024 13:48:33 +0000</pubDate></item><item><title>CVE-2024-38590 | RDMA/hns: Modify the print level of CQE error</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38590</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Modify the print level of CQE error

Too much print may lead to a panic in kernel. Change ibdev_err() to
ibdev_err_ratelimited(), and change the printing level of cqe dump
to debug level.</description><pubDate>Wed, 19 Jun 2024 13:48:33 +0000</pubDate></item><item><title>CVE-2024-38591 | RDMA/hns: Fix deadlock on SRQ async events.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38591</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Fix deadlock on SRQ async events.

xa_lock for SRQ table may be required in AEQ. Use xa_store_irq()/
xa_erase_irq() to avoid deadlock.</description><pubDate>Wed, 19 Jun 2024 13:48:34 +0000</pubDate></item><item><title>CVE-2024-38592 | drm/mediatek: Init `ddp_comp` with devm_kcalloc()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38592</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/mediatek: Init `ddp_comp` with devm_kcalloc()

In the case where `conn_routes` is true we allocate an extra slot in
the `ddp_comp` array but mtk_drm_crtc_create() never seemed to
initialize it in the test case I ran. For me, this caused a later
crash when we looped through the array in mtk_drm_crtc_mode_valid().
This showed up for me when I booted with `slub_debug=FZPUA` which
poisons the memory initially. Without `slub_debug` I couldn't
reproduce, presumably because the later code handles the value being
NULL and in most cases (not guaranteed in all cases) the memory the
allocator returned started out as 0.

It really doesn't hurt to initialize the array with devm_kcalloc()
since the array is small and the overhead of initting a handful of
elements to 0 is small. In general initting memory to zero is a safer
practice and usually it's suggested to only use the non-initting alloc
functions if you really need to.

Let's switch the function to use an allocation function that zeros the
memory. For me, this avoids the crash.</description><pubDate>Wed, 19 Jun 2024 13:48:34 +0000</pubDate></item><item><title>CVE-2024-38593 | net: micrel: Fix receiving the timestamp in the frame for lan8841</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38593</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: micrel: Fix receiving the timestamp in the frame for lan8841

The blamed commit started to use the ptp workqueue to get the second
part of the timestamp. And when the port was set down, then this
workqueue is stopped. But if the config option NETWORK_PHY_TIMESTAMPING
is not enabled, then the ptp_clock is not initialized so then it would
crash when it would try to access the delayed work.
So then basically by setting up and then down the port, it would crash.
The fix consists in checking if the ptp_clock is initialized and only
then cancel the delayed work.</description><pubDate>Wed, 19 Jun 2024 13:48:34 +0000</pubDate></item><item><title>CVE-2024-38594 | net: stmmac: move the EST lock to struct stmmac_priv</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38594</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: stmmac: move the EST lock to struct stmmac_priv

Reinitialize the whole EST structure would also reset the mutex
lock which is embedded in the EST structure, and then trigger
the following warning. To address this, move the lock to struct
stmmac_priv. We also need to reacquire the mutex lock when doing
this initialization.

DEBUG_LOCKS_WARN_ON(lock-&gt;magic != lock)
WARNING: CPU: 3 PID: 505 at kernel/locking/mutex.c:587 __mutex_lock+0xd84/0x1068
 Modules linked in:
 CPU: 3 PID: 505 Comm: tc Not tainted 6.9.0-rc6-00053-g0106679839f7-dirty #29
 Hardware name: NXP i.MX8MPlus EVK board (DT)
 pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : __mutex_lock+0xd84/0x1068
 lr : __mutex_lock+0xd84/0x1068
 sp : ffffffc0864e3570
 x29: ffffffc0864e3570 x28: ffffffc0817bdc78 x27: 0000000000000003
 x26: ffffff80c54f1808 x25: ffffff80c9164080 x24: ffffffc080d723ac
 x23: 0000000000000000 x22: 0000000000000002 x21: 0000000000000000
 x20: 0000000000000000 x19: ffffffc083bc3000 x18: ffffffffffffffff
 x17: ffffffc08117b080 x16: 0000000000000002 x15: ffffff80d2d40000
 x14: 00000000000002da x13: ffffff80d2d404b8 x12: ffffffc082b5a5c8
 x11: ffffffc082bca680 x10: ffffffc082bb2640 x9 : ffffffc082bb2698
 x8 : 0000000000017fe8 x7 : c0000000ffffefff x6 : 0000000000000001
 x5 : ffffff8178fe0d48 x4 : 0000000000000000 x3 : 0000000000000027
 x2 : ffffff8178fe0d50 x1 : 0000000000000000 x0 : 0000000000000000
 Call trace:
  __mutex_lock+0xd84/0x1068
  mutex_lock_nested+0x28/0x34
  tc_setup_taprio+0x118/0x68c
  stmmac_setup_tc+0x50/0xf0
  taprio_change+0x868/0xc9c</description><pubDate>Wed, 19 Jun 2024 13:48:35 +0000</pubDate></item><item><title>CVE-2024-38595 | net/mlx5: Fix peer devlink set for SF representor devlink port</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38595</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix peer devlink set for SF representor devlink port

The cited patch change register devlink flow, and neglect to reflect
the changes for peer devlink set logic. Peer devlink set is
triggering a call trace if done after devl_register.[1]

Hence, align peer devlink set logic with register devlink flow.

[1]
WARNING: CPU: 4 PID: 3394 at net/devlink/core.c:155 devlink_rel_nested_in_add+0x177/0x180
CPU: 4 PID: 3394 Comm: kworker/u40:1 Not tainted 6.9.0-rc4_for_linust_min_debug_2024_04_16_14_08 #1
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
Workqueue: mlx5_vhca_event0 mlx5_vhca_state_work_handler [mlx5_core]
RIP: 0010:devlink_rel_nested_in_add+0x177/0x180
Call Trace:
 
 ? __warn+0x78/0x120
 ? devlink_rel_nested_in_add+0x177/0x180
 ? report_bug+0x16d/0x180
 ? handle_bug+0x3c/0x60
 ? exc_invalid_op+0x14/0x70
 ? asm_exc_invalid_op+0x16/0x20
 ? devlink_port_init+0x30/0x30
 ? devlink_port_type_clear+0x50/0x50
 ? devlink_rel_nested_in_add+0x177/0x180
 ? devlink_rel_nested_in_add+0xdd/0x180
 mlx5_sf_mdev_event+0x74/0xb0 [mlx5_core]
 notifier_call_chain+0x35/0xb0
 blocking_notifier_call_chain+0x3d/0x60
 mlx5_blocking_notifier_call_chain+0x22/0x30 [mlx5_core]
 mlx5_sf_dev_probe+0x185/0x3e0 [mlx5_core]
 auxiliary_bus_probe+0x38/0x80
 ? driver_sysfs_add+0x51/0x80
 really_probe+0xc5/0x3a0
 ? driver_probe_device+0x90/0x90
 __driver_probe_device+0x80/0x160
 driver_probe_device+0x1e/0x90
 __device_attach_driver+0x7d/0x100
 bus_for_each_drv+0x80/0xd0
 __device_attach+0xbc/0x1f0
 bus_probe_device+0x86/0xa0
 device_add+0x64f/0x860
 __auxiliary_device_add+0x3b/0xa0
 mlx5_sf_dev_add+0x139/0x330 [mlx5_core]
 mlx5_sf_dev_state_change_handler+0x1e4/0x250 [mlx5_core]
 notifier_call_chain+0x35/0xb0
 blocking_notifier_call_chain+0x3d/0x60
 mlx5_vhca_state_work_handler+0x151/0x200 [mlx5_core]
 process_one_work+0x13f/0x2e0
 worker_thread+0x2bd/0x3c0
 ? rescuer_thread+0x410/0x410
 kthread+0xc4/0xf0
 ? kthread_complete_and_exit+0x20/0x20
 ret_from_fork+0x2d/0x50
 ? kthread_complete_and_exit+0x20/0x20
 ret_from_fork_asm+0x11/0x20</description><pubDate>Wed, 19 Jun 2024 13:48:35 +0000</pubDate></item><item><title>CVE-2024-38596 | af_unix: Fix data races in unix_release_sock/unix_stream_sendmsg</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38596</link><description>In the Linux kernel, the following vulnerability has been resolved:

af_unix: Fix data races in unix_release_sock/unix_stream_sendmsg

A data-race condition has been identified in af_unix. In one data path,
the write function unix_release_sock() atomically writes to
sk-&gt;sk_shutdown using WRITE_ONCE. However, on the reader side,
unix_stream_sendmsg() does not read it atomically. Consequently, this
issue is causing the following KCSAN splat to occur:

	BUG: KCSAN: data-race in unix_release_sock / unix_stream_sendmsg

	write (marked) to 0xffff88867256ddbb of 1 bytes by task 7270 on cpu 28:
	unix_release_sock (net/unix/af_unix.c:640)
	unix_release (net/unix/af_unix.c:1050)
	sock_close (net/socket.c:659 net/socket.c:1421)
	__fput (fs/file_table.c:422)
	__fput_sync (fs/file_table.c:508)
	__se_sys_close (fs/open.c:1559 fs/open.c:1541)
	__x64_sys_close (fs/open.c:1541)
	x64_sys_call (arch/x86/entry/syscall_64.c:33)
	do_syscall_64 (arch/x86/entry/common.c:?)
	entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

	read to 0xffff88867256ddbb of 1 bytes by task 989 on cpu 14:
	unix_stream_sendmsg (net/unix/af_unix.c:2273)
	__sock_sendmsg (net/socket.c:730 net/socket.c:745)
	____sys_sendmsg (net/socket.c:2584)
	__sys_sendmmsg (net/socket.c:2638 net/socket.c:2724)
	__x64_sys_sendmmsg (net/socket.c:2753 net/socket.c:2750 net/socket.c:2750)
	x64_sys_call (arch/x86/entry/syscall_64.c:33)
	do_syscall_64 (arch/x86/entry/common.c:?)
	entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

	value changed: 0x01 -&gt; 0x03

The line numbers are related to commit dd5a440a31fa ("Linux 6.9-rc7").

Commit e1d09c2c2f57 ("af_unix: Fix data races around sk-&gt;sk_shutdown.")
addressed a comparable issue in the past regarding sk-&gt;sk_shutdown.
However, it overlooked resolving this particular data path.
This patch only offending unix_stream_sendmsg() function, since the
other reads seem to be protected by unix_state_lock() as discussed in</description><pubDate>Wed, 19 Jun 2024 13:48:35 +0000</pubDate></item><item><title>CVE-2024-38597 | eth: sungem: remove .ndo_poll_controller to avoid deadlocks</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38597</link><description>In the Linux kernel, the following vulnerability has been resolved:

eth: sungem: remove .ndo_poll_controller to avoid deadlocks

Erhard reports netpoll warnings from sungem:

  netpoll_send_skb_on_dev(): eth0 enabled interrupts in poll (gem_start_xmit+0x0/0x398)
  WARNING: CPU: 1 PID: 1 at net/core/netpoll.c:370 netpoll_send_skb+0x1fc/0x20c

gem_poll_controller() disables interrupts, which may sleep.
We can't sleep in netpoll, it has interrupts disabled completely.
Strangely, gem_poll_controller() doesn't even poll the completions,
and instead acts as if an interrupt has fired so it just schedules
NAPI and exits. None of this has been necessary for years, since
netpoll invokes NAPI directly.</description><pubDate>Wed, 19 Jun 2024 13:48:36 +0000</pubDate></item><item><title>CVE-2024-38598 | md: fix resync softlockup when bitmap size is less than array size</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38598</link><description>In the Linux kernel, the following vulnerability has been resolved:

md: fix resync softlockup when bitmap size is less than array size

Is is reported that for dm-raid10, lvextend + lvchange --syncaction will
trigger following softlockup:

kernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]
CPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1
RIP: 0010:_raw_spin_unlock_irq+0x13/0x30
Call Trace:
 
 md_bitmap_start_sync+0x6b/0xf0
 raid10_sync_request+0x25c/0x1b40 [raid10]
 md_do_sync+0x64b/0x1020
 md_thread+0xa7/0x170
 kthread+0xcf/0x100
 ret_from_fork+0x30/0x50
 ret_from_fork_asm+0x1a/0x30

And the detailed process is as follows:

md_do_sync
 j = mddev-&gt;resync_min
 while (j &lt; max_sectors)
  sectors = raid10_sync_request(mddev, j, &amp;amp;skipped)
   if (!md_bitmap_start_sync(..., &amp;amp;sync_blocks))
    // md_bitmap_start_sync set sync_blocks to 0
    return sync_blocks + sectors_skippe;
  // sectors = 0;
  j += sectors;
  // j never change

Root cause is that commit 301867b1c168 ("md/raid10: check
slab-out-of-bounds in md_bitmap_get_counter") return early from
md_bitmap_get_counter(), without setting returned blocks.

Fix this problem by always set returned blocks from
md_bitmap_get_counter"(), as it used to be.

Noted that this patch just fix the softlockup problem in kernel, the
case that bitmap size doesn't match array size still need to be fixed.</description><pubDate>Wed, 19 Jun 2024 13:48:36 +0000</pubDate></item><item><title>CVE-2024-38599 | jffs2: prevent xattr node from overflowing the eraseblock</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38599</link><description>In the Linux kernel, the following vulnerability has been resolved:

jffs2: prevent xattr node from overflowing the eraseblock

Add a check to make sure that the requested xattr node size is no larger
than the eraseblock minus the cleanmarker.

Unlike the usual inode nodes, the xattr nodes aren't split into parts
and spread across multiple eraseblocks, which means that a xattr node
must not occupy more than one eraseblock. If the requested xattr value is
too large, the xattr node can spill onto the next eraseblock, overwriting
the nodes and causing errors such as:

jffs2: argh. node added in wrong place at 0x0000b050(2)
jffs2: nextblock 0x0000a000, expected at 0000b00c
jffs2: error: (823) do_verify_xattr_datum: node CRC failed at 0x01e050,
read=0xfc892c93, calc=0x000000
jffs2: notice: (823) jffs2_get_inode_nodes: Node header CRC failed
at 0x01e00c. {848f,2fc4,0fef511f,59a3d171}
jffs2: Node at 0x0000000c with length 0x00001044 would run over the
end of the erase block
jffs2: Perhaps the file system was created with the wrong erase size?
jffs2: jffs2_scan_eraseblock(): Magic bitmask 0x1985 not found
at 0x00000010: 0x1044 instead

This breaks the filesystem and can lead to KASAN crashes such as:

BUG: KASAN: slab-out-of-bounds in jffs2_sum_add_kvec+0x125e/0x15d0
Read of size 4 at addr ffff88802c31e914 by task repro/830
CPU: 0 PID: 830 Comm: repro Not tainted 6.9.0-rc3+ #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
BIOS Arch Linux 1.16.3-1-1 04/01/2014
Call Trace:
 
 dump_stack_lvl+0xc6/0x120
 print_report+0xc4/0x620
 ? __virt_addr_valid+0x308/0x5b0
 kasan_report+0xc1/0xf0
 ? jffs2_sum_add_kvec+0x125e/0x15d0
 ? jffs2_sum_add_kvec+0x125e/0x15d0
 jffs2_sum_add_kvec+0x125e/0x15d0
 jffs2_flash_direct_writev+0xa8/0xd0
 jffs2_flash_writev+0x9c9/0xef0
 ? __x64_sys_setxattr+0xc4/0x160
 ? do_syscall_64+0x69/0x140
 ? entry_SYSCALL_64_after_hwframe+0x76/0x7e
 [...]

Found by Linux Verification Center (linuxtesting.org) with Syzkaller.</description><pubDate>Wed, 19 Jun 2024 13:48:37 +0000</pubDate></item><item><title>CVE-2024-38600 | ALSA: Fix deadlocks with kctl removals at disconnection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38600</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: Fix deadlocks with kctl removals at disconnection

In snd_card_disconnect(), we set card-&gt;shutdown flag at the beginning,
call callbacks and do sync for card-&gt;power_ref_sleep waiters at the
end.  The callback may delete a kctl element, and this can lead to a
deadlock when the device was in the suspended state.  Namely:

* A process waits for the power up at snd_power_ref_and_wait() in
  snd_ctl_info() or read/write() inside card-&gt;controls_rwsem.

* The system gets disconnected meanwhile, and the driver tries to
  delete a kctl via snd_ctl_remove*(); it tries to take
  card-&gt;controls_rwsem again, but this is already locked by the
  above.  Since the sleeper isn't woken up, this deadlocks.

An easy fix is to wake up sleepers before processing the driver
disconnect callbacks but right after setting the card-&gt;shutdown flag.
Then all sleepers will abort immediately, and the code flows again.

So, basically this patch moves the wait_event() call at the right
timing.  While we're at it, just to be sure, call wait_event_all()
instead of wait_event(), although we don't use exclusive events on
this queue for now.</description><pubDate>Wed, 19 Jun 2024 13:48:37 +0000</pubDate></item><item><title>CVE-2024-36979 | net: bridge: mst: fix vlan use-after-free</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36979</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: bridge: mst: fix vlan use-after-free

syzbot reported a suspicious rcu usage[1] in bridge's mst code. While
fixing it I noticed that nothing prevents a vlan to be freed while
walking the list from the same path (br forward delay timer). Fix the rcu
usage and also make sure we are not accessing freed memory by making
br_mst_vlan_set_state use rcu read lock.

[1]
 WARNING: suspicious RCU usage
 6.9.0-rc6-syzkaller #0 Not tainted
 -----------------------------
 net/bridge/br_private.h:1599 suspicious rcu_dereference_protected() usage!
 ...
 stack backtrace:
 CPU: 1 PID: 8017 Comm: syz-executor.1 Not tainted 6.9.0-rc6-syzkaller #0
 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
 Call Trace:
  
  __dump_stack lib/dump_stack.c:88 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114
  lockdep_rcu_suspicious+0x221/0x340 kernel/locking/lockdep.c:6712
  nbp_vlan_group net/bridge/br_private.h:1599 [inline]
  br_mst_set_state+0x1ea/0x650 net/bridge/br_mst.c:105
  br_set_state+0x28a/0x7b0 net/bridge/br_stp.c:47
  br_forward_delay_timer_expired+0x176/0x440 net/bridge/br_stp_timer.c:88
  call_timer_fn+0x18e/0x650 kernel/time/timer.c:1793
  expire_timers kernel/time/timer.c:1844 [inline]
  __run_timers kernel/time/timer.c:2418 [inline]
  __run_timer_base+0x66a/0x8e0 kernel/time/timer.c:2429
  run_timer_base kernel/time/timer.c:2438 [inline]
  run_timer_softirq+0xb7/0x170 kernel/time/timer.c:2448
  __do_softirq+0x2c6/0x980 kernel/softirq.c:554
  invoke_softirq kernel/softirq.c:428 [inline]
  __irq_exit_rcu+0xf2/0x1c0 kernel/softirq.c:633
  irq_exit_rcu+0x9/0x30 kernel/softirq.c:645
  instr_sysvec_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1043 [inline]
  sysvec_apic_timer_interrupt+0xa6/0xc0 arch/x86/kernel/apic/apic.c:1043
  
  
 asm_sysvec_apic_timer_interrupt+0x1a/0x20 arch/x86/include/asm/idtentry.h:702
 RIP: 0010:lock_acquire+0x264/0x550 kernel/locking/lockdep.c:5758
 Code: 2b 00 74 08 4c 89 f7 e8 ba d1 84 00 f6 44 24 61 02 0f 85 85 01 00 00 41 f7 c7 00 02 00 00 74 01 fb 48 c7 44 24 40 0e 36 e0 45 &lt;4b&gt; c7 44 25 00 00 00 00 00 43 c7 44 25 09 00 00 00 00 43 c7 44 25
 RSP: 0018:ffffc90013657100 EFLAGS: 00000206
 RAX: 0000000000000001 RBX: 1ffff920026cae2c RCX: 0000000000000001
 RDX: dffffc0000000000 RSI: ffffffff8bcaca00 RDI: ffffffff8c1eaa60
 RBP: ffffc90013657260 R08: ffffffff92efe507 R09: 1ffffffff25dfca0
 R10: dffffc0000000000 R11: fffffbfff25dfca1 R12: 1ffff920026cae28
 R13: dffffc0000000000 R14: ffffc90013657160 R15: 0000000000000246</description><pubDate>Wed, 19 Jun 2024 13:48:38 +0000</pubDate></item><item><title>CVE-2024-38538 | net: bridge: xmit: make sure we have at least eth header len bytes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38538</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: bridge: xmit: make sure we have at least eth header len bytes

syzbot triggered an uninit value[1] error in bridge device's xmit path
by sending a short (less than ETH_HLEN bytes) skb. To fix it check if
we can actually pull that amount instead of assuming.

Tested with dropwatch:
 drop at: br_dev_xmit+0xb93/0x12d0 [bridge] (0xffffffffc06739b3)
 origin: software
 timestamp: Mon May 13 11:31:53 2024 778214037 nsec
 protocol: 0x88a8
 length: 2
 original length: 2
 drop reason: PKT_TOO_SMALL

[1]
BUG: KMSAN: uninit-value in br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 __netdev_start_xmit include/linux/netdevice.h:4903 [inline]
 netdev_start_xmit include/linux/netdevice.h:4917 [inline]
 xmit_one net/core/dev.c:3531 [inline]
 dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3547
 __dev_queue_xmit+0x34db/0x5350 net/core/dev.c:4341
 dev_queue_xmit include/linux/netdevice.h:3091 [inline]
 __bpf_tx_skb net/core/filter.c:2136 [inline]
 __bpf_redirect_common net/core/filter.c:2180 [inline]
 __bpf_redirect+0x14a6/0x1620 net/core/filter.c:2187
 ____bpf_clone_redirect net/core/filter.c:2460 [inline]
 bpf_clone_redirect+0x328/0x470 net/core/filter.c:2432
 ___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997
 __bpf_prog_run512+0xb5/0xe0 kernel/bpf/core.c:2238
 bpf_dispatcher_nop_func include/linux/bpf.h:1234 [inline]
 __bpf_prog_run include/linux/filter.h:657 [inline]
 bpf_prog_run include/linux/filter.h:664 [inline]
 bpf_test_run+0x499/0xc30 net/bpf/test_run.c:425
 bpf_prog_test_run_skb+0x14ea/0x1f20 net/bpf/test_run.c:1058
 bpf_prog_test_run+0x6b7/0xad0 kernel/bpf/syscall.c:4269
 __sys_bpf+0x6aa/0xd90 kernel/bpf/syscall.c:5678
 __do_sys_bpf kernel/bpf/syscall.c:5767 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5765 [inline]
 __x64_sys_bpf+0xa0/0xe0 kernel/bpf/syscall.c:5765
 x64_sys_call+0x96b/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:322
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f</description><pubDate>Wed, 19 Jun 2024 13:48:38 +0000</pubDate></item><item><title>CVE-2024-38539 | RDMA/cma: Fix kmemleak in rdma_core observed during blktests nvme/rdma use siw</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38539</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/cma: Fix kmemleak in rdma_core observed during blktests nvme/rdma use siw

When running blktests nvme/rdma, the following kmemleak issue will appear.

kmemleak: Kernel memory leak detector initialized (mempool available:36041)
kmemleak: Automatic memory scanning thread started
kmemleak: 2 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
kmemleak: 8 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
kmemleak: 17 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
kmemleak: 4 new suspected memory leaks (see /sys/kernel/debug/kmemleak)

unreferenced object 0xffff88855da53400 (size 192):
  comm "rdma", pid 10630, jiffies 4296575922
  hex dump (first 32 bytes):
    37 00 00 00 00 00 00 00 c0 ff ff ff 1f 00 00 00  7...............
    10 34 a5 5d 85 88 ff ff 10 34 a5 5d 85 88 ff ff  .4.].....4.]....
  backtrace (crc 47f66721):
    [] kmalloc_trace+0x30d/0x3b0
    [] alloc_gid_entry+0x47/0x380 [ib_core]
    [] add_modify_gid+0x166/0x930 [ib_core]
    [] ib_cache_update.part.0+0x6d8/0x910 [ib_core]
    [] ib_cache_setup_one+0x24a/0x350 [ib_core]
    [] ib_register_device+0x9e/0x3a0 [ib_core]
    [] 0xffffffffc2a3d389
    [] nldev_newlink+0x2b8/0x520 [ib_core]
    [] rdma_nl_rcv_msg+0x2c3/0x520 [ib_core]
    []
rdma_nl_rcv_skb.constprop.0.isra.0+0x23c/0x3a0 [ib_core]
    [] netlink_unicast+0x445/0x710
    [] netlink_sendmsg+0x761/0xc40
    [] __sys_sendto+0x3a9/0x420
    [] __x64_sys_sendto+0xdc/0x1b0
    [] do_syscall_64+0x93/0x180
    [] entry_SYSCALL_64_after_hwframe+0x71/0x79

The root cause: rdma_put_gid_attr is not called when sgid_attr is set
to ERR_PTR(-ENODEV).</description><pubDate>Wed, 19 Jun 2024 13:48:38 +0000</pubDate></item><item><title>CVE-2024-38540 | bnxt_re: avoid shift undefined behavior in bnxt_qplib_alloc_init_hwq</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38540</link><description>In the Linux kernel, the following vulnerability has been resolved:

bnxt_re: avoid shift undefined behavior in bnxt_qplib_alloc_init_hwq

Undefined behavior is triggered when bnxt_qplib_alloc_init_hwq is called
with hwq_attr-&gt;aux_depth != 0 and hwq_attr-&gt;aux_stride == 0.
In that case, "roundup_pow_of_two(hwq_attr-&gt;aux_stride)" gets called.
roundup_pow_of_two is documented as undefined for 0.

Fix it in the one caller that had this combination.

The undefined behavior was detected by UBSAN:
  UBSAN: shift-out-of-bounds in ./include/linux/log2.h:57:13
  shift exponent 64 is too large for 64-bit type 'long unsigned int'
  CPU: 24 PID: 1075 Comm: (udev-worker) Not tainted 6.9.0-rc6+ #4
  Hardware name: Abacus electric, s.r.o. - servis@abacus.cz Super Server/H12SSW-iN, BIOS 2.7 10/25/2023
  Call Trace:
   
   dump_stack_lvl+0x5d/0x80
   ubsan_epilogue+0x5/0x30
   __ubsan_handle_shift_out_of_bounds.cold+0x61/0xec
   __roundup_pow_of_two+0x25/0x35 [bnxt_re]
   bnxt_qplib_alloc_init_hwq+0xa1/0x470 [bnxt_re]
   bnxt_qplib_create_qp+0x19e/0x840 [bnxt_re]
   bnxt_re_create_qp+0x9b1/0xcd0 [bnxt_re]
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? __kmalloc+0x1b6/0x4f0
   ? create_qp.part.0+0x128/0x1c0 [ib_core]
   ? __pfx_bnxt_re_create_qp+0x10/0x10 [bnxt_re]
   create_qp.part.0+0x128/0x1c0 [ib_core]
   ib_create_qp_kernel+0x50/0xd0 [ib_core]
   create_mad_qp+0x8e/0xe0 [ib_core]
   ? __pfx_qp_event_handler+0x10/0x10 [ib_core]
   ib_mad_init_device+0x2be/0x680 [ib_core]
   add_client_context+0x10d/0x1a0 [ib_core]
   enable_device_and_get+0xe0/0x1d0 [ib_core]
   ib_register_device+0x53c/0x630 [ib_core]
   ? srso_alias_return_thunk+0x5/0xfbef5
   bnxt_re_probe+0xbd8/0xe50 [bnxt_re]
   ? __pfx_bnxt_re_probe+0x10/0x10 [bnxt_re]
   auxiliary_bus_probe+0x49/0x80
   ? driver_sysfs_add+0x57/0xc0
   really_probe+0xde/0x340
   ? pm_runtime_barrier+0x54/0x90
   ? __pfx___driver_attach+0x10/0x10
   __driver_probe_device+0x78/0x110
   driver_probe_device+0x1f/0xa0
   __driver_attach+0xba/0x1c0
   bus_for_each_dev+0x8f/0xe0
   bus_add_driver+0x146/0x220
   driver_register+0x72/0xd0
   __auxiliary_driver_register+0x6e/0xd0
   ? __pfx_bnxt_re_mod_init+0x10/0x10 [bnxt_re]
   bnxt_re_mod_init+0x3e/0xff0 [bnxt_re]
   ? __pfx_bnxt_re_mod_init+0x10/0x10 [bnxt_re]
   do_one_initcall+0x5b/0x310
   do_init_module+0x90/0x250
   init_module_from_file+0x86/0xc0
   idempotent_init_module+0x121/0x2b0
   __x64_sys_finit_module+0x5e/0xb0
   do_syscall_64+0x82/0x160
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? syscall_exit_to_user_mode_prepare+0x149/0x170
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? syscall_exit_to_user_mode+0x75/0x230
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? do_syscall_64+0x8e/0x160
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? __count_memcg_events+0x69/0x100
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? count_memcg_events.constprop.0+0x1a/0x30
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? handle_mm_fault+0x1f0/0x300
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? do_user_addr_fault+0x34e/0x640
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? srso_alias_return_thunk+0x5/0xfbef5
   entry_SYSCALL_64_after_hwframe+0x76/0x7e
  RIP: 0033:0x7f4e5132821d
  Code: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d e3 db 0c 00 f7 d8 64 89 01 48
  RSP: 002b:00007ffca9c906a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
  RAX: ffffffffffffffda RBX: 0000563ec8a8f130 RCX: 00007f4e5132821d
  RDX: 0000000000000000 RSI: 00007f4e518fa07d RDI: 000000000000003b
  RBP: 00007ffca9c90760 R08: 00007f4e513f6b20 R09: 00007ffca9c906f0
  R10: 0000563ec8a8faa0 R11: 0000000000000246 R12: 00007f4e518fa07d
  R13: 0000000000020000 R14: 0000563ec8409e90 R15: 0000563ec8a8fa60
   
  ---[ end trace ]---</description><pubDate>Wed, 19 Jun 2024 13:48:39 +0000</pubDate></item><item><title>CVE-2024-38541 | of: module: add buffer overflow check in of_modalias()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38541</link><description>In the Linux kernel, the following vulnerability has been resolved:

of: module: add buffer overflow check in of_modalias()

In of_modalias(), if the buffer happens to be too small even for the 1st
snprintf() call, the len parameter will become negative and str parameter
(if not NULL initially) will point beyond the buffer's end. Add the buffer
overflow check after the 1st snprintf() call and fix such check after the
strlen() call (accounting for the terminating NUL char).</description><pubDate>Wed, 19 Jun 2024 13:48:39 +0000</pubDate></item><item><title>CVE-2024-38542 | RDMA/mana_ib: boundary check before installing cq callbacks</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38542</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/mana_ib: boundary check before installing cq callbacks

Add a boundary check inside mana_ib_install_cq_cb to prevent index overflow.</description><pubDate>Wed, 19 Jun 2024 13:48:40 +0000</pubDate></item><item><title>CVE-2024-38543 | lib/test_hmm.c: handle src_pfns and dst_pfns allocation failure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38543</link><description>In the Linux kernel, the following vulnerability has been resolved:

lib/test_hmm.c: handle src_pfns and dst_pfns allocation failure

The kcalloc() in dmirror_device_evict_chunk() will return null if the
physical memory has run out.  As a result, if src_pfns or dst_pfns is
dereferenced, the null pointer dereference bug will happen.

Moreover, the device is going away.  If the kcalloc() fails, the pages
mapping a chunk could not be evicted.  So add a __GFP_NOFAIL flag in
kcalloc().

Finally, as there is no need to have physically contiguous memory, Switch
kcalloc() to kvcalloc() in order to avoid failing allocations.</description><pubDate>Wed, 19 Jun 2024 13:48:40 +0000</pubDate></item><item><title>CVE-2024-38544 | RDMA/rxe: Fix seg fault in rxe_comp_queue_pkt</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38544</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/rxe: Fix seg fault in rxe_comp_queue_pkt

In rxe_comp_queue_pkt() an incoming response packet skb is enqueued to the
resp_pkts queue and then a decision is made whether to run the completer
task inline or schedule it. Finally the skb is dereferenced to bump a 'hw'
performance counter. This is wrong because if the completer task is
already running in a separate thread it may have already processed the skb
and freed it which can cause a seg fault.  This has been observed
infrequently in testing at high scale.

This patch fixes this by changing the order of enqueuing the packet until
after the counter is accessed.</description><pubDate>Wed, 19 Jun 2024 13:48:40 +0000</pubDate></item><item><title>CVE-2024-38545 | RDMA/hns: Fix UAF for cq async event</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38545</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Fix UAF for cq async event

The refcount of CQ is not protected by locks. When CQ asynchronous
events and CQ destruction are concurrent, CQ may have been released,
which will cause UAF.

Use the xa_lock() to protect the CQ refcount.</description><pubDate>Wed, 19 Jun 2024 13:48:41 +0000</pubDate></item><item><title>CVE-2024-38546 | drm: vc4: Fix possible null pointer dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38546</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm: vc4: Fix possible null pointer dereference

In vc4_hdmi_audio_init() of_get_address() may return
NULL which is later dereferenced. Fix this bug by adding NULL check.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 19 Jun 2024 13:48:41 +0000</pubDate></item><item><title>CVE-2024-38547 | media: atomisp: ssh_css: Fix a null-pointer dereference in load_video_binaries</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38547</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: atomisp: ssh_css: Fix a null-pointer dereference in load_video_binaries

The allocation failure of mycs-&gt;yuv_scaler_binary in load_video_binaries()
is followed with a dereference of mycs-&gt;yuv_scaler_binary after the
following call chain:

sh_css_pipe_load_binaries()
  |-&gt; load_video_binaries(mycs-&gt;yuv_scaler_binary == NULL)
  |
  |-&gt; sh_css_pipe_unload_binaries()
        |-&gt; unload_video_binaries()

In unload_video_binaries(), it calls to ia_css_binary_unload with argument
&amp;amp;pipe-&gt;pipe_settings.video.yuv_scaler_binary[i], which refers to the
same memory slot as mycs-&gt;yuv_scaler_binary. Thus, a null-pointer
dereference is triggered.</description><pubDate>Wed, 19 Jun 2024 13:48:41 +0000</pubDate></item><item><title>CVE-2024-38548 | drm: bridge: cdns-mhdp8546: Fix possible null pointer dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38548</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm: bridge: cdns-mhdp8546: Fix possible null pointer dereference

In cdns_mhdp_atomic_enable(), the return value of drm_mode_duplicate() is
assigned to mhdp_state-&gt;current_mode, and there is a dereference of it in
drm_mode_set_name(), which will lead to a NULL pointer dereference on
failure of drm_mode_duplicate().

Fix this bug add a check of mhdp_state-&gt;current_mode.</description><pubDate>Wed, 19 Jun 2024 13:48:42 +0000</pubDate></item><item><title>CVE-2024-38549 | drm/mediatek: Add 0 size check to mtk_drm_gem_obj</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38549</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/mediatek: Add 0 size check to mtk_drm_gem_obj

Add a check to mtk_drm_gem_init if we attempt to allocate a GEM object
of 0 bytes. Currently, no such check exists and the kernel will panic if
a userspace application attempts to allocate a 0x0 GBM buffer.

Tested by attempting to allocate a 0x0 GBM buffer on an MT8188 and
verifying that we now return EINVAL.</description><pubDate>Wed, 19 Jun 2024 13:48:42 +0000</pubDate></item><item><title>CVE-2024-38550 | ASoC: kirkwood: Fix potential NULL dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38550</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: kirkwood: Fix potential NULL dereference

In kirkwood_dma_hw_params() mv_mbus_dram_info() returns NULL if
CONFIG_PLAT_ORION macro is not defined.
Fix this bug by adding NULL check.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 19 Jun 2024 13:48:42 +0000</pubDate></item><item><title>CVE-2024-38551 | ASoC: mediatek: Assign dummy when codec not specified for a DAI link</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38551</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: mediatek: Assign dummy when codec not specified for a DAI link

MediaTek sound card drivers are checking whether a DAI link is present
and used on a board to assign the correct parameters and this is done
by checking the codec DAI names at probe time.

If no real codec is present, assign the dummy codec to the DAI link
to avoid NULL pointer during string comparison.</description><pubDate>Wed, 19 Jun 2024 13:48:43 +0000</pubDate></item><item><title>CVE-2024-38552 | drm/amd/display: Fix potential index out of bounds in color transformation function</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38552</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix potential index out of bounds in color transformation function

Fixes index out of bounds issue in the color transformation function.
The issue could occur when the index 'i' exceeds the number of transfer
function points (TRANSFER_FUNC_POINTS).

The fix adds a check to ensure 'i' is within bounds before accessing the
transfer function points. If 'i' is out of bounds, an error message is
logged and the function returns false to indicate an error.

Reported by smatch:
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:405 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-&gt;tf_pts.red' 1025 &lt;= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:406 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-&gt;tf_pts.green' 1025 &lt;= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:407 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-&gt;tf_pts.blue' 1025 &lt;= s32max</description><pubDate>Wed, 19 Jun 2024 13:48:43 +0000</pubDate></item><item><title>CVE-2024-38553 | net: fec: remove .ndo_poll_controller to avoid deadlocks</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38553</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: fec: remove .ndo_poll_controller to avoid deadlocks

There is a deadlock issue found in sungem driver, please refer to the
commit ac0a230f719b ("eth: sungem: remove .ndo_poll_controller to avoid
deadlocks"). The root cause of the issue is that netpoll is in atomic
context and disable_irq() is called by .ndo_poll_controller interface
of sungem driver, however, disable_irq() might sleep. After analyzing
the implementation of fec_poll_controller(), the fec driver should have
the same issue. Due to the fec driver uses NAPI for TX completions, the
.ndo_poll_controller is unnecessary to be implemented in the fec driver,
so fec_poll_controller() can be safely removed.</description><pubDate>Wed, 19 Jun 2024 13:48:44 +0000</pubDate></item><item><title>CVE-2024-38554 | ax25: Fix reference count leak issue of net_device</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38554</link><description>In the Linux kernel, the following vulnerability has been resolved:

ax25: Fix reference count leak issue of net_device

There is a reference count leak issue of the object "net_device" in
ax25_dev_device_down(). When the ax25 device is shutting down, the
ax25_dev_device_down() drops the reference count of net_device one
or zero times depending on if we goto unlock_put or not, which will
cause memory leak.

In order to solve the above issue, decrease the reference count of
net_device after dev-&gt;ax25_ptr is set to null.</description><pubDate>Wed, 19 Jun 2024 13:48:44 +0000</pubDate></item><item><title>CVE-2024-38555 | net/mlx5: Discard command completions in internal error</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38555</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Discard command completions in internal error

Fix use after free when FW completion arrives while device is in
internal error state. Avoid calling completion handler in this case,
since the device will flush the command interface and trigger all
completions manually.

Kernel log:
------------[ cut here ]------------
refcount_t: underflow; use-after-free.
...
RIP: 0010:refcount_warn_saturate+0xd8/0xe0
...
Call Trace:

? __warn+0x79/0x120
? refcount_warn_saturate+0xd8/0xe0
? report_bug+0x17c/0x190
? handle_bug+0x3c/0x60
? exc_invalid_op+0x14/0x70
? asm_exc_invalid_op+0x16/0x20
? refcount_warn_saturate+0xd8/0xe0
cmd_ent_put+0x13b/0x160 [mlx5_core]
mlx5_cmd_comp_handler+0x5f9/0x670 [mlx5_core]
cmd_comp_notifier+0x1f/0x30 [mlx5_core]
notifier_call_chain+0x35/0xb0
atomic_notifier_call_chain+0x16/0x20
mlx5_eq_async_int+0xf6/0x290 [mlx5_core]
notifier_call_chain+0x35/0xb0
atomic_notifier_call_chain+0x16/0x20
irq_int_handler+0x19/0x30 [mlx5_core]
__handle_irq_event_percpu+0x4b/0x160
handle_irq_event+0x2e/0x80
handle_edge_irq+0x98/0x230
__common_interrupt+0x3b/0xa0
common_interrupt+0x7b/0xa0


asm_common_interrupt+0x22/0x40</description><pubDate>Wed, 19 Jun 2024 13:48:44 +0000</pubDate></item><item><title>CVE-2024-38556 | net/mlx5: Add a timeout to acquire the command queue semaphore</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38556</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Add a timeout to acquire the command queue semaphore

Prevent forced completion handling on an entry that has not yet been
assigned an index, causing an out of bounds access on idx = -22.
Instead of waiting indefinitely for the sem, blocking flow now waits for
index to be allocated or a sem acquisition timeout before beginning the
timer for FW completion.

Kernel log example:
mlx5_core 0000:06:00.0: wait_func_handle_exec_timeout:1128:(pid 185911): cmd[-22]: CREATE_UCTX(0xa04) No done completion</description><pubDate>Wed, 19 Jun 2024 13:48:45 +0000</pubDate></item><item><title>CVE-2024-38557 | net/mlx5: Reload only IB representors upon lag disable/enable</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38557</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Reload only IB representors upon lag disable/enable

On lag disable, the bond IB device along with all of its
representors are destroyed, and then the slaves' representors get reloaded.

In case the slave IB representor load fails, the eswitch error flow
unloads all representors, including ethernet representors, where the
netdevs get detached and removed from lag bond. Such flow is inaccurate
as the lag driver is not responsible for loading/unloading ethernet
representors. Furthermore, the flow described above begins by holding
lag lock to prevent bond changes during disable flow. However, when
reaching the ethernet representors detachment from lag, the lag lock is
required again, triggering the following deadlock:

Call trace:
__switch_to+0xf4/0x148
__schedule+0x2c8/0x7d0
schedule+0x50/0xe0
schedule_preempt_disabled+0x18/0x28
__mutex_lock.isra.13+0x2b8/0x570
__mutex_lock_slowpath+0x1c/0x28
mutex_lock+0x4c/0x68
mlx5_lag_remove_netdev+0x3c/0x1a0 [mlx5_core]
mlx5e_uplink_rep_disable+0x70/0xa0 [mlx5_core]
mlx5e_detach_netdev+0x6c/0xb0 [mlx5_core]
mlx5e_netdev_change_profile+0x44/0x138 [mlx5_core]
mlx5e_netdev_attach_nic_profile+0x28/0x38 [mlx5_core]
mlx5e_vport_rep_unload+0x184/0x1b8 [mlx5_core]
mlx5_esw_offloads_rep_load+0xd8/0xe0 [mlx5_core]
mlx5_eswitch_reload_reps+0x74/0xd0 [mlx5_core]
mlx5_disable_lag+0x130/0x138 [mlx5_core]
mlx5_lag_disable_change+0x6c/0x70 [mlx5_core] // hold ldev-&gt;lock
mlx5_devlink_eswitch_mode_set+0xc0/0x410 [mlx5_core]
devlink_nl_cmd_eswitch_set_doit+0xdc/0x180
genl_family_rcv_msg_doit.isra.17+0xe8/0x138
genl_rcv_msg+0xe4/0x220
netlink_rcv_skb+0x44/0x108
genl_rcv+0x40/0x58
netlink_unicast+0x198/0x268
netlink_sendmsg+0x1d4/0x418
sock_sendmsg+0x54/0x60
__sys_sendto+0xf4/0x120
__arm64_sys_sendto+0x30/0x40
el0_svc_common+0x8c/0x120
do_el0_svc+0x30/0xa0
el0_svc+0x20/0x30
el0_sync_handler+0x90/0xb8
el0_sync+0x160/0x180

Thus, upon lag enable/disable, load and unload only the IB representors
of the slaves preventing the deadlock mentioned above.

While at it, refactor the mlx5_esw_offloads_rep_load() function to have
a static helper method for its internal logic, in symmetry with the
representor unload design.</description><pubDate>Wed, 19 Jun 2024 13:48:45 +0000</pubDate></item><item><title>CVE-2024-38558 | net: openvswitch: fix overwriting ct original tuple for ICMPv6</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38558</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: openvswitch: fix overwriting ct original tuple for ICMPv6

OVS_PACKET_CMD_EXECUTE has 3 main attributes:
 - OVS_PACKET_ATTR_KEY - Packet metadata in a netlink format.
 - OVS_PACKET_ATTR_PACKET - Binary packet content.
 - OVS_PACKET_ATTR_ACTIONS - Actions to execute on the packet.

OVS_PACKET_ATTR_KEY is parsed first to populate sw_flow_key structure
with the metadata like conntrack state, input port, recirculation id,
etc.  Then the packet itself gets parsed to populate the rest of the
keys from the packet headers.

Whenever the packet parsing code starts parsing the ICMPv6 header, it
first zeroes out fields in the key corresponding to Neighbor Discovery
information even if it is not an ND packet.

It is an 'ipv6.nd' field.  However, the 'ipv6' is a union that shares
the space between 'nd' and 'ct_orig' that holds the original tuple
conntrack metadata parsed from the OVS_PACKET_ATTR_KEY.

ND packets should not normally have conntrack state, so it's fine to
share the space, but normal ICMPv6 Echo packets or maybe other types of
ICMPv6 can have the state attached and it should not be overwritten.

The issue results in all but the last 4 bytes of the destination
address being wiped from the original conntrack tuple leading to
incorrect packet matching and potentially executing wrong actions
in case this packet recirculates within the datapath or goes back
to userspace.

ND fields should not be accessed in non-ND packets, so not clearing
them should be fine.  Executing memset() only for actual ND packets to
avoid the issue.

Initializing the whole thing before parsing is needed because ND packet
may not contain all the options.

The issue only affects the OVS_PACKET_CMD_EXECUTE path and doesn't
affect packets entering OVS datapath from network interfaces, because
in this case CT metadata is populated from skb after the packet is
already parsed.</description><pubDate>Wed, 19 Jun 2024 13:48:45 +0000</pubDate></item><item><title>CVE-2024-38559 | scsi: qedf: Ensure the copied buf is NUL terminated</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38559</link><description>In the Linux kernel, the following vulnerability has been resolved:

scsi: qedf: Ensure the copied buf is NUL terminated

Currently, we allocate a count-sized kernel buffer and copy count from
userspace to that buffer. Later, we use kstrtouint on this buffer but we
don't ensure that the string is terminated inside the buffer, this can
lead to OOB read when using kstrtouint. Fix this issue by using
memdup_user_nul instead of memdup_user.</description><pubDate>Wed, 19 Jun 2024 13:48:46 +0000</pubDate></item><item><title>CVE-2024-38560 | scsi: bfa: Ensure the copied buf is NUL terminated</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38560</link><description>In the Linux kernel, the following vulnerability has been resolved:

scsi: bfa: Ensure the copied buf is NUL terminated

Currently, we allocate a nbytes-sized kernel buffer and copy nbytes from
userspace to that buffer. Later, we use sscanf on this buffer but we don't
ensure that the string is terminated inside the buffer, this can lead to
OOB read when using sscanf. Fix this issue by using memdup_user_nul instead
of memdup_user.</description><pubDate>Wed, 19 Jun 2024 13:48:46 +0000</pubDate></item><item><title>CVE-2024-38561 | kunit: Fix kthread reference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38561</link><description>In the Linux kernel, the following vulnerability has been resolved:

kunit: Fix kthread reference

There is a race condition when a kthread finishes after the deadline and
before the call to kthread_stop(), which may lead to use after free.</description><pubDate>Wed, 19 Jun 2024 13:48:46 +0000</pubDate></item><item><title>CVE-2024-38562 | wifi: nl80211: Avoid address calculations via out of bounds array indexing</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38562</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: nl80211: Avoid address calculations via out of bounds array indexing

Before request-&gt;channels[] can be used, request-&gt;n_channels must be set.
Additionally, address calculations for memory after the "channels" array
need to be calculated from the allocation base ("request") rather than
via the first "out of bounds" index of "channels", otherwise run-time
bounds checking will throw a warning.</description><pubDate>Wed, 19 Jun 2024 13:48:47 +0000</pubDate></item><item><title>CVE-2024-38563 | wifi: mt76: mt7996: fix potential memory leakage when reading chip temperature</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38563</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mt76: mt7996: fix potential memory leakage when reading chip temperature

Without this commit, reading chip temperature will cause memory leakage.</description><pubDate>Wed, 19 Jun 2024 13:48:47 +0000</pubDate></item><item><title>CVE-2024-38564 | bpf: Add BPF_PROG_TYPE_CGROUP_SKB attach type enforcement in BPF_LINK_CREATE</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38564</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Add BPF_PROG_TYPE_CGROUP_SKB attach type enforcement in BPF_LINK_CREATE

bpf_prog_attach uses attach_type_to_prog_type to enforce proper
attach type for BPF_PROG_TYPE_CGROUP_SKB. link_create uses
bpf_prog_get and relies on bpf_prog_attach_check_attach_type
to properly verify prog_type  attach_type association.

Add missing attach_type enforcement for the link_create case.
Otherwise, it's currently possible to attach cgroup_skb prog
types to other cgroup hooks.</description><pubDate>Wed, 19 Jun 2024 13:48:47 +0000</pubDate></item><item><title>CVE-2024-38565 | wifi: ar5523: enable proper endpoint verification</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38565</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: ar5523: enable proper endpoint verification

Syzkaller reports [1] hitting a warning about an endpoint in use
not having an expected type to it.

Fix the issue by checking for the existence of all proper
endpoints with their according types intact.

Sadly, this patch has not been tested on real hardware.

[1] Syzkaller report:
------------[ cut here ]------------
usb 1-1: BOGUS urb xfer, pipe 3 != type 1
WARNING: CPU: 0 PID: 3643 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504
...
Call Trace:
 
 ar5523_cmd+0x41b/0x780 drivers/net/wireless/ath/ar5523/ar5523.c:275
 ar5523_cmd_read drivers/net/wireless/ath/ar5523/ar5523.c:302 [inline]
 ar5523_host_available drivers/net/wireless/ath/ar5523/ar5523.c:1376 [inline]
 ar5523_probe+0x14b0/0x1d10 drivers/net/wireless/ath/ar5523/ar5523.c:1655
 usb_probe_interface+0x30f/0x7f0 drivers/usb/core/driver.c:396
 call_driver_probe drivers/base/dd.c:560 [inline]
 really_probe+0x249/0xb90 drivers/base/dd.c:639
 __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778
 driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808
 __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936
 bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427
 __device_attach+0x1e4/0x530 drivers/base/dd.c:1008
 bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487
 device_add+0xbd9/0x1e90 drivers/base/core.c:3517
 usb_set_configuration+0x101d/0x1900 drivers/usb/core/message.c:2170
 usb_generic_driver_probe+0xbe/0x100 drivers/usb/core/generic.c:238
 usb_probe_device+0xd8/0x2c0 drivers/usb/core/driver.c:293
 call_driver_probe drivers/base/dd.c:560 [inline]
 really_probe+0x249/0xb90 drivers/base/dd.c:639
 __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778
 driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808
 __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936
 bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427
 __device_attach+0x1e4/0x530 drivers/base/dd.c:1008
 bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487
 device_add+0xbd9/0x1e90 drivers/base/core.c:3517
 usb_new_device.cold+0x685/0x10ad drivers/usb/core/hub.c:2573
 hub_port_connect drivers/usb/core/hub.c:5353 [inline]
 hub_port_connect_change drivers/usb/core/hub.c:5497 [inline]
 port_event drivers/usb/core/hub.c:5653 [inline]
 hub_event+0x26cb/0x45d0 drivers/usb/core/hub.c:5735
 process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289
 worker_thread+0x669/0x1090 kernel/workqueue.c:2436
 kthread+0x2e8/0x3a0 kernel/kthread.c:376
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306</description><pubDate>Wed, 19 Jun 2024 13:48:48 +0000</pubDate></item><item><title>CVE-2024-38566 | bpf: Fix verifier assumptions about socket-&amp;gt;sk</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38566</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix verifier assumptions about socket-&gt;sk

The verifier assumes that 'sk' field in 'struct socket' is valid
and non-NULL when 'socket' pointer itself is trusted and non-NULL.
That may not be the case when socket was just created and
passed to LSM socket_accept hook.
Fix this verifier assumption and adjust tests.</description><pubDate>Wed, 19 Jun 2024 13:48:48 +0000</pubDate></item><item><title>CVE-2024-38567 | wifi: carl9170: add a proper sanity check for endpoints</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38567</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: carl9170: add a proper sanity check for endpoints

Syzkaller reports [1] hitting a warning which is caused by presence
of a wrong endpoint type at the URB sumbitting stage. While there
was a check for a specific 4th endpoint, since it can switch types
between bulk and interrupt, other endpoints are trusted implicitly.
Similar warning is triggered in a couple of other syzbot issues [2].

Fix the issue by doing a comprehensive check of all endpoints
taking into account difference between high- and full-speed
configuration.

[1] Syzkaller report:
...
WARNING: CPU: 0 PID: 4721 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504
...
Call Trace:
 
 carl9170_usb_send_rx_irq_urb+0x273/0x340 drivers/net/wireless/ath/carl9170/usb.c:504
 carl9170_usb_init_device drivers/net/wireless/ath/carl9170/usb.c:939 [inline]
 carl9170_usb_firmware_finish drivers/net/wireless/ath/carl9170/usb.c:999 [inline]
 carl9170_usb_firmware_step2+0x175/0x240 drivers/net/wireless/ath/carl9170/usb.c:1028
 request_firmware_work_func+0x130/0x240 drivers/base/firmware_loader/main.c:1107
 process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289
 worker_thread+0x669/0x1090 kernel/workqueue.c:2436
 kthread+0x2e8/0x3a0 kernel/kthread.c:376
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308
 

[2] Related syzkaller crashes:</description><pubDate>Wed, 19 Jun 2024 13:48:49 +0000</pubDate></item><item><title>CVE-2024-38568 | drivers/perf: hisi: hns3: Fix out-of-bound access when valid event group</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38568</link><description>In the Linux kernel, the following vulnerability has been resolved:

drivers/perf: hisi: hns3: Fix out-of-bound access when valid event group

The perf tool allows users to create event groups through following
cmd [1], but the driver does not check whether the array index is out
of bounds when writing data to the event_group array. If the number of
events in an event_group is greater than HNS3_PMU_MAX_HW_EVENTS, the
memory write overflow of event_group array occurs.

Add array index check to fix the possible array out of bounds violation,
and return directly when write new events are written to array bounds.

There are 9 different events in an event_group.
[1] perf stat -e '{pmu/event1/, ... ,pmu/event9/}</description><pubDate>Wed, 19 Jun 2024 13:48:49 +0000</pubDate></item><item><title>CVE-2024-38569 | drivers/perf: hisi_pcie: Fix out-of-bound access when valid event group</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38569</link><description>In the Linux kernel, the following vulnerability has been resolved:

drivers/perf: hisi_pcie: Fix out-of-bound access when valid event group

The perf tool allows users to create event groups through following
cmd [1], but the driver does not check whether the array index is out of
bounds when writing data to the event_group array. If the number of events
in an event_group is greater than HISI_PCIE_MAX_COUNTERS, the memory write
overflow of event_group array occurs.

Add array index check to fix the possible array out of bounds violation,
and return directly when write new events are written to array bounds.

There are 9 different events in an event_group.
[1] perf stat -e '{pmu/event1/, ... ,pmu/event9/}'</description><pubDate>Wed, 19 Jun 2024 13:48:49 +0000</pubDate></item><item><title>CVE-2024-38570 | gfs2: Fix potential glock use-after-free on unmount</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38570</link><description>In the Linux kernel, the following vulnerability has been resolved:

gfs2: Fix potential glock use-after-free on unmount

When a DLM lockspace is released and there ares still locks in that
lockspace, DLM will unlock those locks automatically.  Commit
fb6791d100d1b started exploiting this behavior to speed up filesystem
unmount: gfs2 would simply free glocks it didn't want to unlock and then
release the lockspace.  This didn't take the bast callbacks for
asynchronous lock contention notifications into account, which remain
active until until a lock is unlocked or its lockspace is released.

To prevent those callbacks from accessing deallocated objects, put the
glocks that should not be unlocked on the sd_dead_glocks list, release
the lockspace, and only then free those glocks.

As an additional measure, ignore unexpected ast and bast callbacks if
the receiving glock is dead.</description><pubDate>Wed, 19 Jun 2024 13:48:50 +0000</pubDate></item><item><title>CVE-2024-38571 | thermal/drivers/tsens: Fix null pointer dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38571</link><description>In the Linux kernel, the following vulnerability has been resolved:

thermal/drivers/tsens: Fix null pointer dereference

compute_intercept_slope() is called from calibrate_8960() (in tsens-8960.c)
as compute_intercept_slope(priv, p1, NULL, ONE_PT_CALIB) which lead to null
pointer dereference (if DEBUG or DYNAMIC_DEBUG set).
Fix this bug by adding null pointer check.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 19 Jun 2024 13:48:50 +0000</pubDate></item><item><title>CVE-2024-38572 | wifi: ath12k: fix out-of-bound access of qmi_invoke_handler()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38572</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: ath12k: fix out-of-bound access of qmi_invoke_handler()

Currently, there is no terminator entry for ath12k_qmi_msg_handlers hence
facing below KASAN warning,

 ==================================================================
 BUG: KASAN: global-out-of-bounds in qmi_invoke_handler+0xa4/0x148
 Read of size 8 at addr ffffffd00a6428d8 by task kworker/u8:2/1273

 CPU: 0 PID: 1273 Comm: kworker/u8:2 Not tainted 5.4.213 #0
 Workqueue: qmi_msg_handler qmi_data_ready_work
 Call trace:
  dump_backtrace+0x0/0x20c
  show_stack+0x14/0x1c
  dump_stack+0xe0/0x138
  print_address_description.isra.5+0x30/0x330
  __kasan_report+0x16c/0x1bc
  kasan_report+0xc/0x14
  __asan_load8+0xa8/0xb0
  qmi_invoke_handler+0xa4/0x148
  qmi_handle_message+0x18c/0x1bc
  qmi_data_ready_work+0x4ec/0x528
  process_one_work+0x2c0/0x440
  worker_thread+0x324/0x4b8
  kthread+0x210/0x228
  ret_from_fork+0x10/0x18

 The address belongs to the variable:
  ath12k_mac_mon_status_filter_default+0x4bd8/0xfffffffffffe2300 [ath12k]
 [...]
 ==================================================================

Add a dummy terminator entry at the end to assist the qmi_invoke_handler()
in traversing up to the terminator entry without accessing an
out-of-boundary index.

Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.0.1-00029-QCAHKSWPL_SILICONZ-1</description><pubDate>Wed, 19 Jun 2024 13:48:50 +0000</pubDate></item><item><title>CVE-2024-38573 | cppc_cpufreq: Fix possible null pointer dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38573</link><description>In the Linux kernel, the following vulnerability has been resolved:

cppc_cpufreq: Fix possible null pointer dereference

cppc_cpufreq_get_rate() and hisi_cppc_cpufreq_get_rate() can be called from
different places with various parameters. So cpufreq_cpu_get() can return
null as 'policy' in some circumstances.
Fix this bug by adding null return check.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 19 Jun 2024 13:48:51 +0000</pubDate></item><item><title>CVE-2024-38574 | libbpf: Prevent null-pointer dereference when prog to load has no BTF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38574</link><description>In the Linux kernel, the following vulnerability has been resolved:

libbpf: Prevent null-pointer dereference when prog to load has no BTF

In bpf_objec_load_prog(), there's no guarantee that obj-&gt;btf is non-NULL
when passing it to btf__fd(), and this function does not perform any
check before dereferencing its argument (as bpf_object__btf_fd() used to
do). As a consequence, we get segmentation fault errors in bpftool (for
example) when trying to load programs that come without BTF information.

v2: Keep btf__fd() in the fix instead of reverting to bpf_object__btf_fd().</description><pubDate>Wed, 19 Jun 2024 13:48:51 +0000</pubDate></item><item><title>CVE-2024-38575 | wifi: brcmfmac: pcie: handle randbuf allocation failure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38575</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: brcmfmac: pcie: handle randbuf allocation failure

The kzalloc() in brcmf_pcie_download_fw_nvram() will return null
if the physical memory has run out. As a result, if we use
get_random_bytes() to generate random bytes in the randbuf, the
null pointer dereference bug will happen.

In order to prevent allocation failure, this patch adds a separate
function using buffer on kernel stack to generate random bytes in
the randbuf, which could prevent the kernel stack from overflow.</description><pubDate>Wed, 19 Jun 2024 13:48:51 +0000</pubDate></item><item><title>CVE-2024-38576 | rcu: Fix buffer overflow in print_cpu_stall_info()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38576</link><description>In the Linux kernel, the following vulnerability has been resolved:

rcu: Fix buffer overflow in print_cpu_stall_info()

The rcuc-starvation output from print_cpu_stall_info() might overflow the
buffer if there is a huge difference in jiffies difference.  The situation
might seem improbable, but computers sometimes get very confused about
time, which can result in full-sized integers, and, in this case,
buffer overflow.

Also, the unsigned jiffies difference is printed using %ld, which is
normally for signed integers.  This is intentional for debugging purposes,
but it is not obvious from the code.

This commit therefore changes sprintf() to snprintf() and adds a
clarifying comment about intention of %ld format.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 19 Jun 2024 13:48:52 +0000</pubDate></item><item><title>CVE-2024-38577 | rcu-tasks: Fix show_rcu_tasks_trace_gp_kthread buffer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38577</link><description>In the Linux kernel, the following vulnerability has been resolved:

rcu-tasks: Fix show_rcu_tasks_trace_gp_kthread buffer overflow

There is a possibility of buffer overflow in
show_rcu_tasks_trace_gp_kthread() if counters, passed
to sprintf() are huge. Counter numbers, needed for this
are unrealistically high, but buffer overflow is still
possible.

Use snprintf() with buffer size instead of sprintf().

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 19 Jun 2024 13:48:52 +0000</pubDate></item><item><title>CVE-2024-38578 | ecryptfs: Fix buffer size for tag 66 packet</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38578</link><description>In the Linux kernel, the following vulnerability has been resolved:

ecryptfs: Fix buffer size for tag 66 packet

The 'TAG 66 Packet Format' description is missing the cipher code and
checksum fields that are packed into the message packet. As a result,
the buffer allocated for the packet is 3 bytes too small and
write_tag_66_packet() will write up to 3 bytes past the end of the
buffer.

Fix this by increasing the size of the allocation so the whole packet
will always fit in the buffer.

This fixes the below kasan slab-out-of-bounds bug:

  BUG: KASAN: slab-out-of-bounds in ecryptfs_generate_key_packet_set+0x7d6/0xde0
  Write of size 1 at addr ffff88800afbb2a5 by task touch/181

  CPU: 0 PID: 181 Comm: touch Not tainted 6.6.13-gnu #1 4c9534092be820851bb687b82d1f92a426598dc6
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2/GNU Guix 04/01/2014
  Call Trace:
   
   dump_stack_lvl+0x4c/0x70
   print_report+0xc5/0x610
   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0
   ? kasan_complete_mode_report_info+0x44/0x210
   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0
   kasan_report+0xc2/0x110
   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0
   __asan_store1+0x62/0x80
   ecryptfs_generate_key_packet_set+0x7d6/0xde0
   ? __pfx_ecryptfs_generate_key_packet_set+0x10/0x10
   ? __alloc_pages+0x2e2/0x540
   ? __pfx_ovl_open+0x10/0x10 [overlay 30837f11141636a8e1793533a02e6e2e885dad1d]
   ? dentry_open+0x8f/0xd0
   ecryptfs_write_metadata+0x30a/0x550
   ? __pfx_ecryptfs_write_metadata+0x10/0x10
   ? ecryptfs_get_lower_file+0x6b/0x190
   ecryptfs_initialize_file+0x77/0x150
   ecryptfs_create+0x1c2/0x2f0
   path_openat+0x17cf/0x1ba0
   ? __pfx_path_openat+0x10/0x10
   do_filp_open+0x15e/0x290
   ? __pfx_do_filp_open+0x10/0x10
   ? __kasan_check_write+0x18/0x30
   ? _raw_spin_lock+0x86/0xf0
   ? __pfx__raw_spin_lock+0x10/0x10
   ? __kasan_check_write+0x18/0x30
   ? alloc_fd+0xf4/0x330
   do_sys_openat2+0x122/0x160
   ? __pfx_do_sys_openat2+0x10/0x10
   __x64_sys_openat+0xef/0x170
   ? __pfx___x64_sys_openat+0x10/0x10
   do_syscall_64+0x60/0xd0
   entry_SYSCALL_64_after_hwframe+0x6e/0xd8
  RIP: 0033:0x7f00a703fd67
  Code: 25 00 00 41 00 3d 00 00 41 00 74 37 64 8b 04 25 18 00 00 00 85 c0 75 5b 44 89 e2 48 89 ee bf 9c ff ff ff b8 01 01 00 00 0f 05 &lt;48&gt; 3d 00 f0 ff ff 0f 87 85 00 00 00 48 83 c4 68 5d 41 5c c3 0f 1f
  RSP: 002b:00007ffc088e30b0 EFLAGS: 00000246 ORIG_RAX: 0000000000000101
  RAX: ffffffffffffffda RBX: 00007ffc088e3368 RCX: 00007f00a703fd67
  RDX: 0000000000000941 RSI: 00007ffc088e48d7 RDI: 00000000ffffff9c
  RBP: 00007ffc088e48d7 R08: 0000000000000001 R09: 0000000000000000
  R10: 00000000000001b6 R11: 0000000000000246 R12: 0000000000000941
  R13: 0000000000000000 R14: 00007ffc088e48d7 R15: 00007f00a7180040
   

  Allocated by task 181:
   kasan_save_stack+0x2f/0x60
   kasan_set_track+0x29/0x40
   kasan_save_alloc_info+0x25/0x40
   __kasan_kmalloc+0xc5/0xd0
   __kmalloc+0x66/0x160
   ecryptfs_generate_key_packet_set+0x6d2/0xde0
   ecryptfs_write_metadata+0x30a/0x550
   ecryptfs_initialize_file+0x77/0x150
   ecryptfs_create+0x1c2/0x2f0
   path_openat+0x17cf/0x1ba0
   do_filp_open+0x15e/0x290
   do_sys_openat2+0x122/0x160
   __x64_sys_openat+0xef/0x170
   do_syscall_64+0x60/0xd0
   entry_SYSCALL_64_after_hwframe+0x6e/0xd8</description><pubDate>Wed, 19 Jun 2024 13:48:52 +0000</pubDate></item><item><title>CVE-2024-38579 | crypto: bcm - Fix pointer arithmetic</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38579</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: bcm - Fix pointer arithmetic

In spu2_dump_omd() value of ptr is increased by ciph_key_len
instead of hash_iv_len which could lead to going beyond the
buffer boundaries.
Fix this bug by changing ciph_key_len to hash_iv_len.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 19 Jun 2024 13:48:53 +0000</pubDate></item><item><title>CVE-2024-38580 | epoll: be better about file lifetimes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38580</link><description>In the Linux kernel, the following vulnerability has been resolved:

epoll: be better about file lifetimes

epoll can call out to vfs_poll() with a file pointer that may race with
the last 'fput()'. That would make f_count go down to zero, and while
the ep-&gt;mtx locking means that the resulting file pointer tear-down will
be blocked until the poll returns, it means that f_count is already
dead, and any use of it won't actually get a reference to the file any
more: it's dead regardless.

Make sure we have a valid ref on the file pointer before we call down to
vfs_poll() from the epoll routines.</description><pubDate>Wed, 19 Jun 2024 13:48:53 +0000</pubDate></item><item><title>CVE-2024-38581 | drm/amdgpu/mes: fix use-after-free issue</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38581</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu/mes: fix use-after-free issue

Delete fence fallback timer to fix the ramdom
use-after-free issue.

v2: move to amdgpu_mes.c</description><pubDate>Wed, 19 Jun 2024 13:48:54 +0000</pubDate></item><item><title>CVE-2024-38582 | nilfs2: fix potential hang in nilfs_detach_log_writer()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38582</link><description>In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix potential hang in nilfs_detach_log_writer()

Syzbot has reported a potential hang in nilfs_detach_log_writer() called
during nilfs2 unmount.

Analysis revealed that this is because nilfs_segctor_sync(), which
synchronizes with the log writer thread, can be called after
nilfs_segctor_destroy() terminates that thread, as shown in the call trace
below:

nilfs_detach_log_writer
  nilfs_segctor_destroy
    nilfs_segctor_kill_thread  --&gt; Shut down log writer thread
    flush_work
      nilfs_iput_work_func
        nilfs_dispose_list
          iput
            nilfs_evict_inode
              nilfs_transaction_commit
                nilfs_construct_segment (if inode needs sync)
                  nilfs_segctor_sync  --&gt; Attempt to synchronize with
                                          log writer thread
                           *** DEADLOCK ***

Fix this issue by changing nilfs_segctor_sync() so that the log writer
thread returns normally without synchronizing after it terminates, and by
forcing tasks that are already waiting to complete once after the thread
terminates.

The skipped inode metadata flushout will then be processed together in the
subsequent cleanup work in nilfs_segctor_destroy().</description><pubDate>Wed, 19 Jun 2024 13:48:54 +0000</pubDate></item><item><title>CVE-2024-38583 | nilfs2: fix use-after-free of timer for log writer thread</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38583</link><description>In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix use-after-free of timer for log writer thread

Patch series "nilfs2: fix log writer related issues".

This bug fix series covers three nilfs2 log writer-related issues,
including a timer use-after-free issue and potential deadlock issue on
unmount, and a potential freeze issue in event synchronization found
during their analysis.  Details are described in each commit log.


This patch (of 3):

A use-after-free issue has been reported regarding the timer sc_timer on
the nilfs_sc_info structure.

The problem is that even though it is used to wake up a sleeping log
writer thread, sc_timer is not shut down until the nilfs_sc_info structure
is about to be freed, and is used regardless of the thread's lifetime.

Fix this issue by limiting the use of sc_timer only while the log writer
thread is alive.</description><pubDate>Wed, 19 Jun 2024 13:48:54 +0000</pubDate></item><item><title>CVE-2024-38584 | net: ti: icssg_prueth: Fix NULL pointer dereference in prueth_probe()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38584</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: ti: icssg_prueth: Fix NULL pointer dereference in prueth_probe()

In the prueth_probe() function, if one of the calls to emac_phy_connect()
fails due to of_phy_connect() returning NULL, then the subsequent call to
phy_attached_info() will dereference a NULL pointer.

Check the return code of emac_phy_connect and fail cleanly if there is an
error.</description><pubDate>Wed, 19 Jun 2024 13:48:55 +0000</pubDate></item><item><title>CVE-2024-38585 | tools/nolibc/stdlib: fix memory error in realloc()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38585</link><description>In the Linux kernel, the following vulnerability has been resolved:

tools/nolibc/stdlib: fix memory error in realloc()

Pass user_p_len to memcpy() instead of heap-&gt;len to prevent realloc()
from copying an extra sizeof(heap) bytes from beyond the allocated
region.</description><pubDate>Wed, 19 Jun 2024 13:48:55 +0000</pubDate></item><item><title>CVE-2024-38586 | r8169: Fix possible ring buffer corruption on fragmented Tx packets.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38586</link><description>In the Linux kernel, the following vulnerability has been resolved:

r8169: Fix possible ring buffer corruption on fragmented Tx packets.

An issue was found on the RTL8125b when transmitting small fragmented
packets, whereby invalid entries were inserted into the transmit ring
buffer, subsequently leading to calls to dma_unmap_single() with a null
address.

This was caused by rtl8169_start_xmit() not noticing changes to nr_frags
which may occur when small packets are padded (to work around hardware
quirks) in rtl8169_tso_csum_v2().

To fix this, postpone inspecting nr_frags until after any padding has been
applied.</description><pubDate>Wed, 19 Jun 2024 13:48:55 +0000</pubDate></item><item><title>CVE-2024-38587 | speakup: Fix sizeof() vs ARRAY_SIZE() bug</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38587</link><description>In the Linux kernel, the following vulnerability has been resolved:

speakup: Fix sizeof() vs ARRAY_SIZE() bug

The "buf" pointer is an array of u16 values.  This code should be
using ARRAY_SIZE() (which is 256) instead of sizeof() (which is 512),
otherwise it can the still got out of bounds.</description><pubDate>Wed, 19 Jun 2024 13:48:56 +0000</pubDate></item><item><title>CVE-2024-38588 | ftrace: Fix possible use-after-free issue in ftrace_location()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38588</link><description>In the Linux kernel, the following vulnerability has been resolved:

ftrace: Fix possible use-after-free issue in ftrace_location()

KASAN reports a bug:

  BUG: KASAN: use-after-free in ftrace_location+0x90/0x120
  Read of size 8 at addr ffff888141d40010 by task insmod/424
  CPU: 8 PID: 424 Comm: insmod Tainted: G        W          6.9.0-rc2+
  [...]
  Call Trace:
   
   dump_stack_lvl+0x68/0xa0
   print_report+0xcf/0x610
   kasan_report+0xb5/0xe0
   ftrace_location+0x90/0x120
   register_kprobe+0x14b/0xa40
   kprobe_init+0x2d/0xff0 [kprobe_example]
   do_one_initcall+0x8f/0x2d0
   do_init_module+0x13a/0x3c0
   load_module+0x3082/0x33d0
   init_module_from_file+0xd2/0x130
   __x64_sys_finit_module+0x306/0x440
   do_syscall_64+0x68/0x140
   entry_SYSCALL_64_after_hwframe+0x71/0x79

The root cause is that, in lookup_rec(), ftrace record of some address
is being searched in ftrace pages of some module, but those ftrace pages
at the same time is being freed in ftrace_release_mod() as the
corresponding module is being deleted:

           CPU1                       |      CPU2
  register_kprobes() {                | delete_module() {
    check_kprobe_address_safe() {     |
      arch_check_ftrace_location() {  |
        ftrace_location() {           |
          lookup_rec() // USE!        |   ftrace_release_mod() // Free!

To fix this issue:
  1. Hold rcu lock as accessing ftrace pages in ftrace_location_range();
  2. Use ftrace_location_range() instead of lookup_rec() in
     ftrace_location();
  3. Call synchronize_rcu() before freeing any ftrace pages both in
     ftrace_process_locs()/ftrace_release_mod()/ftrace_free_mem().</description><pubDate>Wed, 19 Jun 2024 13:48:56 +0000</pubDate></item><item><title>CVE-2023-38386 | WordPress Ninja Forms plugin &amp;lt;= 3.6.25 - Contributor+ Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38386</link><description>Missing Authorization vulnerability in Saturday Drive Ninja Forms.This issue affects Ninja Forms: from n/a through 3.6.25.</description><pubDate>Wed, 19 Jun 2024 13:11:43 +0000</pubDate></item><item><title>CVE-2023-36512 | WordPress AutomateWoo plugin &amp;lt;= 5.7.5 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-36512</link><description>Missing Authorization vulnerability in Woo AutomateWoo.This issue affects AutomateWoo: from n/a through 5.7.5.</description><pubDate>Wed, 19 Jun 2024 12:52:34 +0000</pubDate></item><item><title>CVE-2023-35049 | WordPress WooCommerce Stripe Payment Gateway plugin &amp;lt;= 7.4.0 - Unauthenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-35049</link><description>Missing Authorization vulnerability in WooCommerce WooCommerce Stripe Payment Gateway.This issue affects WooCommerce Stripe Payment Gateway: from n/a through 7.4.0.</description><pubDate>Wed, 19 Jun 2024 12:52:35 +0000</pubDate></item><item><title>CVE-2023-35050 | WordPress Elementor Pro plugin &amp;lt;= 3.13.0 - Auth. Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-35050</link><description>Missing Authorization vulnerability in Elementor Elementor Pro.This issue affects Elementor Pro: from n/a through 3.13.0.</description><pubDate>Wed, 19 Jun 2024 12:52:35 +0000</pubDate></item><item><title>CVE-2023-37870 | WordPress WooCommerce Warranty Requests plugin &amp;lt;= 2.1.9 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37870</link><description>Missing Authorization vulnerability in Woo WooCommerce Warranty Requests.This issue affects WooCommerce Warranty Requests: from n/a through 2.1.9.</description><pubDate>Wed, 19 Jun 2024 12:52:36 +0000</pubDate></item><item><title>CVE-2023-41805 | Broken Access Control vulnerability in multiple Brainstorm Force plugins</title><link>https://www.cve.org/CVERecord?id=CVE-2023-41805</link><description>Missing Authorization vulnerability in Brainstorm Force Premium Starter Templates, Brainstorm Force Starter Templates astra-sites.This issue affects Premium Starter Templates: from n/a through 3.2.5; Starter Templates: from n/a through 3.2.5.</description><pubDate>Wed, 19 Jun 2024 12:52:36 +0000</pubDate></item><item><title>CVE-2023-39922 | WordPress Avada theme &amp;lt;= 7.11.1 - Authenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-39922</link><description>Missing Authorization vulnerability in ThemeFusion Avada.This issue affects Avada: from n/a through 7.11.1.</description><pubDate>Wed, 19 Jun 2024 12:24:46 +0000</pubDate></item><item><title>CVE-2023-39990 | WordPress Paid Memberships Pro plugin &amp;lt;= 1.2.3 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-39990</link><description>Missing Authorization vulnerability in Paid Memberships Pro.This issue affects Paid Memberships Pro: from n/a through 1.2.3.</description><pubDate>Wed, 19 Jun 2024 12:24:47 +0000</pubDate></item><item><title>CVE-2023-39993 | WordPress ElementsKit Lite plugin &amp;lt;= 2.9.0 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-39993</link><description>Missing Authorization vulnerability in Wpmet Elements kit Elementor addons.This issue affects Elements kit Elementor addons: from n/a through 2.9.0.</description><pubDate>Wed, 19 Jun 2024 12:24:47 +0000</pubDate></item><item><title>CVE-2023-39998 | WordPress BeTheme theme &amp;lt;= 27.1.1 - Author+ Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-39998</link><description>Missing Authorization vulnerability in Muffingroup Betheme.This issue affects Betheme: from n/a through 27.1.1.</description><pubDate>Wed, 19 Jun 2024 12:24:47 +0000</pubDate></item><item><title>CVE-2023-40004 | WordPress All-in-One WP Migration Google Drive Extension plugin &amp;lt;= 2.79 - Unauth. Access Token Manipulation vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-40004</link><description>Missing Authorization vulnerability in ServMask All-in-One WP Migration Box Extension, ServMask All-in-One WP Migration OneDrive Extension, ServMask All-in-One WP Migration Dropbox Extension, ServMask All-in-One WP Migration Google Drive Extension.This issue affects All-in-One WP Migration Box Extension: from n/a through 1.53; All-in-One WP Migration OneDrive Extension: from n/a through 1.66; All-in-One WP Migration Dropbox Extension: from n/a through 3.75; All-in-One WP Migration Google Drive Extension: from n/a through 2.79.</description><pubDate>Wed, 19 Jun 2024 12:24:48 +0000</pubDate></item><item><title>CVE-2023-40608 | WordPress Paid Memberships Pro CCBill Gateway plugin &amp;lt;= 0.3 - Unauthenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-40608</link><description>Missing Authorization vulnerability in Paid Memberships Pro Paid Memberships Pro CCBill Gateway.This issue affects Paid Memberships Pro CCBill Gateway: from n/a through 0.3.</description><pubDate>Wed, 19 Jun 2024 12:24:49 +0000</pubDate></item><item><title>CVE-2023-44148 | WordPress Astra Bulk Edit plugin &amp;lt;= 1.2.7 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-44148</link><description>Missing Authorization vulnerability in Brainstorm Force Astra Bulk Edit.This issue affects Astra Bulk Edit: from n/a through 1.2.7.</description><pubDate>Wed, 19 Jun 2024 12:24:49 +0000</pubDate></item><item><title>CVE-2023-44151 | WordPress Pre-Publish Checklist plugin &amp;lt;= 1.1.1 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-44151</link><description>Missing Authorization vulnerability in Brainstorm Force Pre-Publish Checklist.This issue affects Pre-Publish Checklist: from n/a through 1.1.1.</description><pubDate>Wed, 19 Jun 2024 12:24:50 +0000</pubDate></item><item><title>CVE-2023-45658 | WordPress Nexter theme &amp;lt;= 2.0.3 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-45658</link><description>Missing Authorization vulnerability in POSIMYTH Nexter.This issue affects Nexter: from n/a through 2.0.3.</description><pubDate>Wed, 19 Jun 2024 12:24:50 +0000</pubDate></item><item><title>CVE-2023-46146 | WordPress Themify Ultra theme &amp;lt;= 7.3.5 - Multiple Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-46146</link><description>Missing Authorization vulnerability in Themify Themify Ultra.This issue affects Themify Ultra: from n/a through 7.3.5.</description><pubDate>Wed, 19 Jun 2024 11:24:41 +0000</pubDate></item><item><title>CVE-2023-46148 | WordPress Themify Ultra theme &amp;lt;= 7.3.5 - Authenticated Arbitrary Settings Change vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-46148</link><description>Missing Authorization vulnerability in Themify Themify Ultra.This issue affects Themify Ultra: from n/a through 7.3.5.</description><pubDate>Wed, 19 Jun 2024 11:24:41 +0000</pubDate></item><item><title>CVE-2023-47681 | WordPress WooCommerce Checkout Manager plugin &amp;lt;= 7.3.0 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-47681</link><description>Missing Authorization vulnerability in QuadLayers WooCommerce Checkout Manager.This issue affects WooCommerce Checkout Manager: from n/a through 7.3.0.</description><pubDate>Wed, 19 Jun 2024 11:24:42 +0000</pubDate></item><item><title>CVE-2023-47770 | WordPress BeTheme theme &amp;lt;= 27.1.1 - Contributor+ Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-47770</link><description>Missing Authorization vulnerability in Muffin Group Betheme.This issue affects Betheme: from n/a through 27.1.1.</description><pubDate>Wed, 19 Jun 2024 11:24:42 +0000</pubDate></item><item><title>CVE-2023-47771 | WordPress Essential Grid plugin &amp;lt;= 3.0.18 - Multiple Authenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-47771</link><description>Missing Authorization vulnerability in ThemePunch OHG Essential Grid.This issue affects Essential Grid: from n/a through 3.0.18.</description><pubDate>Wed, 19 Jun 2024 10:47:20 +0000</pubDate></item><item><title>CVE-2023-47783 | WordPress Thrive Theme Builder theme &amp;lt; 3.24.0 -  Multiple Authenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-47783</link><description>Missing Authorization vulnerability in Thrive Themes Thrive Theme Builder.This issue affects Thrive Theme Builder: from n/a before 3.24.0.</description><pubDate>Wed, 19 Jun 2024 10:47:20 +0000</pubDate></item><item><title>CVE-2023-47788 | WordPress Jetpack plugin &amp;lt; 12.7 - Contributor+ Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-47788</link><description>Missing Authorization vulnerability in Automattic Jetpack.This issue affects Jetpack: from n/a before 12.7.</description><pubDate>Wed, 19 Jun 2024 10:37:16 +0000</pubDate></item><item><title>CVE-2023-48759 | WordPress JetElements For Elementor plugin &amp;lt;= 2.6.13 - Unauthenticated Arbitrary Attachment Download vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-48759</link><description>Missing Authorization vulnerability in Crocoblock JetElements For Elementor.This issue affects JetElements For Elementor: from n/a through 2.6.13.</description><pubDate>Wed, 19 Jun 2024 10:37:16 +0000</pubDate></item><item><title>CVE-2023-48760 | WordPress JetElements For Elementor plugin &amp;lt;= 2.6.13 - Unauthenticated Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-48760</link><description>Missing Authorization vulnerability in Crocoblock JetElements For Elementor.This issue affects JetElements For Elementor: from n/a through 2.6.13.</description><pubDate>Wed, 19 Jun 2024 10:37:17 +0000</pubDate></item><item><title>CVE-2023-48761 | WordPress JetElements For Elementor plugin &amp;lt;= 2.6.13 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-48761</link><description>Missing Authorization vulnerability in Crocoblock JetElements For Elementor.This issue affects JetElements For Elementor: from n/a through 2.6.13.</description><pubDate>Wed, 19 Jun 2024 10:37:17 +0000</pubDate></item><item><title>CVE-2024-35765 | WordPress Greenshift – animation and page builder blocks plugin &amp;lt;= 8.8.9.1 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35765</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Wpsoul Greenshift – animation and page builder blocks allows Stored XSS.This issue affects Greenshift – animation and page builder blocks: from n/a through 8.8.9.1.</description><pubDate>Wed, 19 Jun 2024 10:37:17 +0000</pubDate></item><item><title>CVE-2024-35780 | WordPress Page Builder: Live Composer plugin &amp;lt;= 1.5.42 - Contributor+ PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35780</link><description>Deserialization of Untrusted Data vulnerability in Live Composer Team Page Builder: Live Composer.This issue affects Page Builder: Live Composer: from n/a through 1.5.42.</description><pubDate>Wed, 19 Jun 2024 10:37:18 +0000</pubDate></item><item><title>CVE-2023-50900 | WordPress Master Slider plugin &amp;lt;= 3.9.10 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50900</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Averta Master Slider.This issue affects Master Slider: from n/a through 3.9.10.</description><pubDate>Wed, 19 Jun 2024 10:24:10 +0000</pubDate></item><item><title>CVE-2024-5676 | Paradox IP150 Internet Module Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5676</link><description>The Paradox IP150 Internet Module in version 1.40.00 is vulnerable to Cross-Site Request Forgery (CSRF) attacks due to a lack of countermeasures and the use of the HTTP method `GET` to introduce changes in the system.</description><pubDate>Wed, 19 Jun 2024 10:00:27 +0000</pubDate></item><item><title>CVE-2023-6495 | YARPP – Yet Another Related Posts Plugin &amp;lt;= 5.30.9 - Authenticated(Administrator+) Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6495</link><description>The YARPP – Yet Another Related Posts Plugin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to and including 5.30.9 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Wed, 19 Jun 2024 08:44:01 +0000</pubDate></item><item><title>CVE-2024-0383 | WP Recipe Maker &amp;lt;= 9.1.0 - Authenticated (Contributor+) Stored Cross-Site Scripting via &amp;#x27;group_tag&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0383</link><description>The WP Recipe Maker plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's [wprm-recipe-instructions] and [wprm-recipe-ingredients] shortcodes in all versions up to, and including, 9.1.0 due to insufficient restrictions on the 'group_tag' attribute . This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 19 Jun 2024 08:44:02 +0000</pubDate></item><item><title>CVE-2024-4632 | WooCommerce Checkout &amp;amp; Funnel Builder by CartFlows – Create High Converting Stores For WooCommerce &amp;lt;= 2.0.7 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4632</link><description>The WooCommerce Checkout &amp; Funnel Builder by CartFlows – Create High Converting Stores For WooCommerce plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘custom_upload_mimes’ function in versions up to, and including, 2.0.7 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 19 Jun 2024 08:44:02 +0000</pubDate></item><item><title>CVE-2024-0789 | WP Maintenance &amp;lt;= 6.1.9.2 - IP Spoofing to Maintenance Mode Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0789</link><description>The WP Maintenance plugin for WordPress is vulnerable to IP Address Spoofing in all versions up to, and including, 6.1.9.2 due to insufficient IP address validation and use of user-supplied HTTP headers as a primary method for IP retrieval. This makes it possible for unauthenticated attackers to bypass maintenance mode.</description><pubDate>Wed, 19 Jun 2024 07:46:39 +0000</pubDate></item><item><title>CVE-2024-1407 | Paid Memberships Pro &amp;lt;= 2.12.10 - Cross-Site Request Forgery to Membership Modification</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1407</link><description>The Paid Memberships Pro – Content Restriction, User Registration, &amp; Paid Subscriptions plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 2.12.10. This is due to missing or incorrect nonce validation on multiple functions. This makes it possible for unauthenticated attackers to subscribe to, modify, or cancel membership for a user via a forged request granted they can trick a user into performing an action such as clicking on a link.</description><pubDate>Wed, 19 Jun 2024 07:15:46 +0000</pubDate></item><item><title>CVE-2024-3894 | Photo Gallery, Images, Slider in Rbs Image Gallery &amp;lt;= 3.2.19 - Authenticated (Author+) Stored Cross-Site Scripting via Image Title</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3894</link><description>The Photo Gallery, Images, Slider in Rbs Image Gallery plugin for WordPress is vulnerable to Stored Cross-Site Scripting via an Image Title in all versions up to, and including, 3.2.19 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 19 Jun 2024 07:15:46 +0000</pubDate></item><item><title>CVE-2024-36252 | Improper restriction of communication channel to intended endpoints issue exists in Ricoh Streamline NX PC Client ver.3.6.x and earlier. If ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36252</link><description>Improper restriction of communication channel to intended endpoints issue exists in Ricoh Streamline NX PC Client ver.3.6.x and earlier. If this vulnerability is exploited, arbitrary code may be executed on the PC where the product is installed.</description><pubDate>Wed, 19 Jun 2024 06:47:27 +0000</pubDate></item><item><title>CVE-2024-36480 | Use of hard-coded credentials issue exists in Ricoh Streamline NX PC Client ver.3.7.2 and earlier. If this vulnerability is exploited, an at...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36480</link><description>Use of hard-coded credentials issue exists in Ricoh Streamline NX PC Client ver.3.7.2 and earlier. If this vulnerability is exploited, an attacker may obtain LocalSystem Account of the PC where the product is installed. As a result, unintended operations may be performed on the PC.</description><pubDate>Wed, 19 Jun 2024 06:47:27 +0000</pubDate></item><item><title>CVE-2024-37124 | Use of potentially dangerous function issue exists in Ricoh Streamline NX PC Client. If this vulnerability is exploited, an attacker may cre...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37124</link><description>Use of potentially dangerous function issue exists in Ricoh Streamline NX PC Client. If this vulnerability is exploited, an attacker may create an arbitrary file in the PC where the product is installed.</description><pubDate>Wed, 19 Jun 2024 06:47:27 +0000</pubDate></item><item><title>CVE-2024-37387 | Use of potentially dangerous function issue exists in Ricoh Streamline NX PC Client. If this vulnerability is exploited, files in the PC whe...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37387</link><description>Use of potentially dangerous function issue exists in Ricoh Streamline NX PC Client. If this vulnerability is exploited, files in the PC where the product is installed may be altered.</description><pubDate>Wed, 19 Jun 2024 06:47:28 +0000</pubDate></item><item><title>CVE-2024-37881 | SiteGuard WP Plugin provides a functionality to customize the path to the login page wp-login.php and implements a measure to avoid redirect...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37881</link><description>SiteGuard WP Plugin provides a functionality to customize the path to the login page wp-login.php and implements a measure to avoid redirection from other URLs. However, SiteGuard WP Plugin versions prior to 1.7.7 missed to implement a measure to avoid redirection from wp-register.php. As a result, the customized path to the login page may be exposed.</description><pubDate>Wed, 19 Jun 2024 06:47:29 +0000</pubDate></item><item><title>CVE-2024-36978 | net: sched: sch_multiq: fix possible OOB write in multiq_tune()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36978</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: sched: sch_multiq: fix possible OOB write in multiq_tune()

q-&gt;bands will be assigned to qopt-&gt;bands to execute subsequent code logic
after kmalloc. So the old q-&gt;bands should not be used in kmalloc.
Otherwise, an out-of-bounds write will occur.</description><pubDate>Wed, 19 Jun 2024 06:37:42 +0000</pubDate></item><item><title>CVE-2024-5208 | Uncontrolled Resource Consumption in mintplex-labs/anything-llm</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5208</link><description>An uncontrolled resource consumption vulnerability exists in the `upload-link` endpoint of mintplex-labs/anything-llm. This vulnerability allows attackers to cause a denial of service (DOS) by shutting down the server through sending invalid upload requests. Specifically, the server can be made to shut down by sending an empty body with a 'Content-Length: 0' header or by sending a body with arbitrary content, such as 'asdasdasd', with a 'Content-Length: 9' header. The vulnerability is reproducible by users with at least a 'Manager' role, sending a crafted request to any workspace. This issue indicates that a previous fix was not effective in mitigating the vulnerability.</description><pubDate>Wed, 19 Jun 2024 06:21:13 +0000</pubDate></item><item><title>CVE-2023-6692 | Ultimate Blocks – WordPress Blocks Plugin &amp;lt;= 3.0.8 - Authenticated(Contributor+) Stored Cross-Site Scripting via metabox</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6692</link><description>The Ultimate Blocks – WordPress Blocks Plugin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's tab anchor metabox in all versions up to, and including, 3.0.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 19 Jun 2024 05:46:45 +0000</pubDate></item><item><title>CVE-2024-5343 | Photo Gallery, Images, Slider in Rbs Image Gallery &amp;lt;= 3.2.19 - Cross-Site Request Forgery to Post Creation and Limited Data Loss</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5343</link><description>The Photo Gallery, Images, Slider in Rbs Image Gallery plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 3.2.19. This is due to missing or incorrect nonce validation on the 'rbs_ajax_create_article' and 'rbs_ajax_reset_views' functions. This makes it possible for unauthenticated attackers to create new posts and reset gallery view counts via a forged request granted they can trick a Contributor+ level user into performing an action such as clicking on a link.</description><pubDate>Wed, 19 Jun 2024 05:46:45 +0000</pubDate></item><item><title>CVE-2024-5574 | WP Magazine Modules Lite &amp;lt;= 1.1.2 - Authenticated (Contributor+) Local File Inclusion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5574</link><description>The WP Magazine Modules Lite plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.1.2 via the 'blockLayout' parameter. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description><pubDate>Wed, 19 Jun 2024 05:46:46 +0000</pubDate></item><item><title>CVE-2024-5853 | Image Optimizer, Resizer and CDN – Sirv &amp;lt;= 7.2.6 - Authenticated (Contributor+) Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5853</link><description>The Image Optimizer, Resizer and CDN – Sirv plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the sirv_upload_file_by_chanks AJAX action in all versions up to, and including, 7.2.6. This makes it possible for authenticated attackers, with Contributor-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Wed, 19 Jun 2024 05:46:46 +0000</pubDate></item><item><title>CVE-2024-6132 | Pexels: Free Stock Photos &amp;lt;= 1.2.2 - Authenticated (Contributor+) Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6132</link><description>The Pexels: Free Stock Photos plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the 'pexels_fsp_images_options_validate' function in all versions up to, and including, 1.2.2. This makes it possible for authenticated attackers, with contributor-level and above permissions, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Wed, 19 Jun 2024 05:46:47 +0000</pubDate></item><item><title>CVE-2024-35298 | Improper authorization in handler for custom URL scheme issue in 'ZOZOTOWN' App for Android versions prior to 7.39.6 allows an attacker to l...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35298</link><description>Improper authorization in handler for custom URL scheme issue in 'ZOZOTOWN' App for Android versions prior to 7.39.6 allows an attacker to lead a user to access an arbitrary website via another application installed on the user's device. As a result, the user may become a victim of a phishing attack.</description><pubDate>Wed, 19 Jun 2024 05:22:13 +0000</pubDate></item><item><title>CVE-2024-3229 | Salon Booking System &amp;lt;= 10.2 - Unauthenticated Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3229</link><description>The Salon booking system plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the SLN_Action_Ajax_ImportAssistants function along with missing authorization checks in all versions up to, and including, 10.2. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Wed, 19 Jun 2024 04:40:57 +0000</pubDate></item><item><title>CVE-2024-2381 | AliExpress Dropshipping with AliNext Lite &amp;lt;= 3.3.5 - Authenticated (Subscriber+) Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2381</link><description>The AliExpress Dropshipping with AliNext Lite plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the ajax_save_image function in all versions up to, and including, 3.3.5. This makes it possible for authenticated attackers, with subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Wed, 19 Jun 2024 03:21:12 +0000</pubDate></item><item><title>CVE-2024-3984 | EmbedSocial – Social Media Feeds, Reviews and Galleries &amp;lt;= 1.1.29 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3984</link><description>The EmbedSocial – Social Media Feeds, Reviews and Galleries plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'embedsocial_reviews' shortcode in all versions up to, and including, 1.1.29 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 19 Jun 2024 03:21:13 +0000</pubDate></item><item><title>CVE-2024-4450 | AliExpress Dropshipping with AliNext Lite &amp;lt;= 3.3.5 - Missing Authorization via Several Functions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4450</link><description>The AliExpress Dropshipping with AliNext Lite plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on several functions in the ImportAjaxController.php file in all versions up to, and including, 3.3.5. This makes it possible for authenticated attackers, with subscriber-level access and above, to perform several actions like importing and modifying products.</description><pubDate>Wed, 19 Jun 2024 03:21:13 +0000</pubDate></item><item><title>CVE-2024-4541 | Custom Product List Table &amp;lt;= 3.0.0 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4541</link><description>The Custom Product List Table plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 3.0.0. This is due to missing or incorrect nonce validation when modifying products. This makes it possible for unauthenticated attackers to add, delete, bulk edit, approve or cancel products via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 19 Jun 2024 03:21:14 +0000</pubDate></item><item><title>CVE-2024-4623 | Blogmentor – Blog Layouts for Elementor &amp;lt;= 1.5 - Authenticated (Contributor+) Stored Cross-Site Scripting via pagination_style Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4623</link><description>The Blogmentor – Blog Layouts for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘pagination_style’ parameter in all versions up to, and including, 1.5 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 19 Jun 2024 03:21:14 +0000</pubDate></item><item><title>CVE-2024-4663 | OSM Map Widget for Elementor &amp;lt;= 1.2.2 - Authenticated (Contributor+) Stored Cross-Site Scripting via id Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4663</link><description>The OSM Map Widget for Elementor plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘id’ parameter in all versions up to, and including, 1.2.2 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Wed, 19 Jun 2024 03:21:14 +0000</pubDate></item><item><title>CVE-2024-4787 | Cost Calculator Builder PRO &amp;lt;= 3.1.75 - Unauthenticated Arbitrary Email Sending</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4787</link><description>The Cost Calculator Builder PRO for WordPress is vulnerable to arbitrary email sending vulnerability in versions up to, and including, 3.1.75. This is due to insufficient limitations on the email recipient and the content in the 'send_pdf' and the 'send_pdf_front' functions which are reachable via AJAX. This makes it possible for unauthenticated attackers to send emails with any content to any recipient.</description><pubDate>Wed, 19 Jun 2024 03:21:15 +0000</pubDate></item><item><title>CVE-2024-4873 | Replace Image &amp;lt;= 1.1.10 - Insecure Direct Object Reference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4873</link><description>The Replace Image plugin for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 1.1.10 via the image replacement functionality due to missing validation on a user controlled key. This makes it possible for authenticated attackers, with Author-level access and above, to replace images uploaded by higher level users such as admins.</description><pubDate>Wed, 19 Jun 2024 03:21:15 +0000</pubDate></item><item><title>CVE-2024-5021 | WordPress Picture / Portfolio / Media Gallery &amp;lt;= 3.0.1 - Unauthenticated Server-Side Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5021</link><description>The WordPress Picture / Portfolio / Media Gallery plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 3.0.1 via the 'file_get_contents' function. This makes it possible for unauthenticated attackers to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.</description><pubDate>Wed, 19 Jun 2024 03:21:16 +0000</pubDate></item><item><title>CVE-2024-5649 | Universal Slider &amp;lt;= 1.6.5 - Authenticated (Contributor+) PHP Object Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5649</link><description>The Universal Slider plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.6.5 via deserialization of untrusted input 'fsl_get_gallery_value' function. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.</description><pubDate>Wed, 19 Jun 2024 03:21:16 +0000</pubDate></item><item><title>CVE-2024-5724 | Photo Video Gallery Master &amp;lt;= 1.5.3 - Authenticated (Contributor+) PHP Object Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5724</link><description>The Photo Video Gallery Master plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.5.3 via deserialization of untrusted input 'PVGM_all_photos_details' parameter. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.</description><pubDate>Wed, 19 Jun 2024 03:21:17 +0000</pubDate></item><item><title>CVE-2024-5768 | MIMO Woocommerce Order Tracking &amp;lt;= 1.0.2 - Missing Authorization to Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5768</link><description>The MIMO Woocommerce Order Tracking plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'mimo_update_provider' function in all versions up to, and including, 1.0.2. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update shipping provider information, including adding stored cross-site scripting.</description><pubDate>Wed, 19 Jun 2024 03:21:17 +0000</pubDate></item><item><title>CVE-2024-6125 | Login with phone number &amp;lt;= 1.7.34 - Insecure Password Reset Mechanism</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6125</link><description>The Login with phone number plugin for WordPress is vulnerable to unauthorized password resets in versions up to, and including 1.7.34. This is due to the plugin generating too weak a reset code, and the code used to reset the password has no attempt or time limit. This makes it possible for unauthenticated attackers to reset the password of arbitrary users by guessing a 6-digit numeric reset code.</description><pubDate>Wed, 19 Jun 2024 02:29:45 +0000</pubDate></item><item><title>CVE-2024-6142 | Actiontec WCB6200Q uh_tcp_recv_content Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6142</link><description>Actiontec WCB6200Q uh_tcp_recv_content Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Actiontec WCB6200Q routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the HTTP server. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length buffer. An attacker can leverage this vulnerability to execute code in the context of the HTTP server. Was ZDI-CAN-21410.</description><pubDate>Tue, 18 Jun 2024 23:44:27 +0000</pubDate></item><item><title>CVE-2024-6143 | Actiontec WCB6200Q uh_tcp_recv_header Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6143</link><description>Actiontec WCB6200Q uh_tcp_recv_header Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Actiontec WCB6200Q routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the HTTP server. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length buffer. An attacker can leverage this vulnerability to execute code in the context of the HTTP server. Was ZDI-CAN-21414.</description><pubDate>Tue, 18 Jun 2024 23:44:27 +0000</pubDate></item><item><title>CVE-2024-6144 | Actiontec WCB6200Q Multipart Boundary Stack-based Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6144</link><description>Actiontec WCB6200Q Multipart Boundary Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Actiontec WCB6200Q routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the HTTP server. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of the HTTP server. Was ZDI-CAN-21416.</description><pubDate>Tue, 18 Jun 2024 23:44:27 +0000</pubDate></item><item><title>CVE-2024-6145 | Actiontec WCB6200Q Cookie Format String Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6145</link><description>Actiontec WCB6200Q Cookie Format String Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Actiontec WCB6200Q routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the HTTP server. A crafted Cookie header in an HTTP request can trigger the use of a format specifier from a user-supplied string. An attacker can leverage this vulnerability to execute code in the context of the HTTP server. Was ZDI-CAN-21417.</description><pubDate>Tue, 18 Jun 2024 23:44:28 +0000</pubDate></item><item><title>CVE-2024-6146 | Actiontec WCB6200Q uh_get_postdata_withupload Stack-based Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6146</link><description>Actiontec WCB6200Q uh_get_postdata_withupload Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Actiontec WCB6200Q routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the HTTP server. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of the HTTP server. Was ZDI-CAN-21418.</description><pubDate>Tue, 18 Jun 2024 23:44:28 +0000</pubDate></item><item><title>CVE-2024-5970 | MaxGalleria &amp;lt;= 6.4.4 - Authenticated (Contributor+) Stored Cross-Site Scripting via maxgallery_thumb Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5970</link><description>The MaxGalleria plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's maxgallery_thumb shortcode in all versions up to, and including, 6.4.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 18 Jun 2024 21:40:10 +0000</pubDate></item><item><title>CVE-2024-6128 | spa-cartcms Checkout Page checkout behavioral workflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6128</link><description>A vulnerability, which was classified as problematic, has been found in spa-cartcms 1.9.0.6. This issue affects some unknown processing of the file /checkout of the component Checkout Page. The manipulation of the argument quantity with the input -10 leads to enforcement of behavioral workflow. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-268895.</description><pubDate>Tue, 18 Jun 2024 21:19:56 +0000</pubDate></item><item><title>CVE-2024-6129 | spa-cartcms Username login observable behavioral discrepancy</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6129</link><description>A vulnerability, which was classified as problematic, was found in spa-cartcms 1.9.0.6. Affected is an unknown function of the file /login of the component Username Handler. The manipulation of the argument email leads to observable behavioral discrepancy. It is possible to launch the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-268896.</description><pubDate>Tue, 18 Jun 2024 21:19:56 +0000</pubDate></item><item><title>CVE-2024-38273 | moodle: BigBlueButton web service leaks meeting joining information to users who should not have access</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38273</link><description>Insufficient capability checks meant it was possible for users to gain access to BigBlueButton join URLs they did not have permission to access.</description><pubDate>Tue, 18 Jun 2024 19:59:02 +0000</pubDate></item><item><title>CVE-2024-38274 | moodle: stored XSS via calendar&amp;#x27;s event title when deleting the event</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38274</link><description>Insufficient escaping of calendar event titles resulted in a stored XSS risk in the event deletion prompt.</description><pubDate>Tue, 18 Jun 2024 19:59:02 +0000</pubDate></item><item><title>CVE-2024-38275 | moodle: HTTP authorization header is preserved between &amp;quot;emulated redirects&amp;quot;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38275</link><description>The cURL wrapper in Moodle retained the original request headers when following redirects, so HTTP authorization header information could be unintentionally sent in requests to redirect URLs.</description><pubDate>Tue, 18 Jun 2024 19:59:03 +0000</pubDate></item><item><title>CVE-2024-38276 | moodle: CSRF risks due to misuse of confirm_sesskey</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38276</link><description>Incorrect CSRF token checks resulted in multiple CSRF risks.</description><pubDate>Tue, 18 Jun 2024 19:59:03 +0000</pubDate></item><item><title>CVE-2024-38277 | moodle: QR login key and auto-login key for the Moodle mobile app should be generated as separate keys</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38277</link><description>A unique key should be generated for a user's QR login key and their auto-login key, so the same key cannot be used interchangeably between the two.</description><pubDate>Tue, 18 Jun 2024 19:59:03 +0000</pubDate></item><item><title>CVE-2024-36975 | KEYS: trusted: Do not use WARN when encode fails</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36975</link><description>In the Linux kernel, the following vulnerability has been resolved:

KEYS: trusted: Do not use WARN when encode fails

When asn1_encode_sequence() fails, WARN is not the correct solution.

1. asn1_encode_sequence() is not an internal function (located
   in lib/asn1_encode.c).
2. Location is known, which makes the stack trace useless.
3. Results a crash if panic_on_warn is set.

It is also noteworthy that the use of WARN is undocumented, and it
should be avoided unless there is a carefully considered rationale to
use it.

Replace WARN with pr_err, and print the return value instead, which is
only useful piece of information.</description><pubDate>Tue, 18 Jun 2024 19:39:06 +0000</pubDate></item><item><title>CVE-2024-36976 | Revert &amp;quot;media: v4l2-ctrls: show all owned controls in log_status&amp;quot;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36976</link><description>In the Linux kernel, the following vulnerability has been resolved:

Revert "media: v4l2-ctrls: show all owned controls in log_status"

This reverts commit 9801b5b28c6929139d6fceeee8d739cc67bb2739.

This patch introduced a potential deadlock scenario:

[Wed May  8 10:02:06 2024]  Possible unsafe locking scenario:

[Wed May  8 10:02:06 2024]        CPU0                    CPU1
[Wed May  8 10:02:06 2024]        ----                    ----
[Wed May  8 10:02:06 2024]   lock(vivid_ctrls:1620:(hdl_vid_cap)-&gt;_lock);
[Wed May  8 10:02:06 2024]                                lock(vivid_ctrls:1608:(hdl_user_vid)-&gt;_lock);
[Wed May  8 10:02:06 2024]                                lock(vivid_ctrls:1620:(hdl_vid_cap)-&gt;_lock);
[Wed May  8 10:02:06 2024]   lock(vivid_ctrls:1608:(hdl_user_vid)-&gt;_lock);

For now just revert.</description><pubDate>Tue, 18 Jun 2024 19:39:06 +0000</pubDate></item><item><title>CVE-2024-36977 | usb: dwc3: Wait unconditionally after issuing EndXfer command</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36977</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: dwc3: Wait unconditionally after issuing EndXfer command

Currently all controller IP/revisions except DWC3_usb3 &gt;= 310a
wait 1ms unconditionally for ENDXFER completion when IOC is not
set. This is because DWC_usb3 controller revisions &gt;= 3.10a
supports GUCTL2[14: Rst_actbitlater] bit which allows polling
CMDACT bit to know whether ENDXFER command is completed.

Consider a case where an IN request was queued, and parallelly
soft_disconnect was called (due to ffs_epfile_release). This
eventually calls stop_active_transfer with IOC cleared, hence
send_gadget_ep_cmd() skips waiting for CMDACT cleared during
EndXfer. For DWC3 controllers with revisions &gt;= 310a, we don't
forcefully wait for 1ms either, and we proceed by unmapping the
requests. If ENDXFER didn't complete by this time, it leads to
SMMU faults since the controller would still be accessing those
requests.

Fix this by ensuring ENDXFER completion by adding 1ms delay in
__dwc3_stop_active_transfer() unconditionally.</description><pubDate>Tue, 18 Jun 2024 19:39:07 +0000</pubDate></item><item><title>CVE-2024-36974 | net/sched: taprio: always validate TCA_TAPRIO_ATTR_PRIOMAP</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36974</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/sched: taprio: always validate TCA_TAPRIO_ATTR_PRIOMAP

If one TCA_TAPRIO_ATTR_PRIOMAP attribute has been provided,
taprio_parse_mqprio_opt() must validate it, or userspace
can inject arbitrary data to the kernel, the second time
taprio_change() is called.

First call (with valid attributes) sets dev-&gt;num_tc
to a non zero value.

Second call (with arbitrary mqprio attributes)
returns early from taprio_parse_mqprio_opt()
and bad things can happen.</description><pubDate>Tue, 18 Jun 2024 19:27:34 +0000</pubDate></item><item><title>CVE-2024-37821 | An arbitrary file upload vulnerability in the Upload Template function of Dolibarr ERP CRM up to v19.0.1 allows attackers to execute arbitra...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37821</link><description>An arbitrary file upload vulnerability in the Upload Template function of Dolibarr ERP CRM up to v19.0.1 allows attackers to execute arbitrary code via uploading a crafted .SQL file.</description><pubDate>Tue, 18 Jun 2024 19:27:34 +0000</pubDate></item><item><title>CVE-2022-23829 | A potential weakness in AMD SPI protection features may allow a malicious attacker with Ring0 (kernel mode) access to bypass the native Syst...</title><link>https://www.cve.org/CVERecord?id=CVE-2022-23829</link><description>A potential weakness in AMD SPI protection features may allow a malicious attacker with Ring0 (kernel mode) access to bypass the native System Management Mode (SMM) ROM protections.</description><pubDate>Tue, 18 Jun 2024 19:17:21 +0000</pubDate></item><item><title>CVE-2024-37791 | DuxCMS3 v3.1.3 was discovered to contain a SQL injection vulnerability via the keyword parameter at /article/Content/index?class_id.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37791</link><description>DuxCMS3 v3.1.3 was discovered to contain a SQL injection vulnerability via the keyword parameter at /article/Content/index?class_id.</description><pubDate>Tue, 18 Jun 2024 19:01:02 +0000</pubDate></item><item><title>CVE-2024-22002 | CORSAIR iCUE 5.9.105 with iCUE Murals on Windows allows unprivileged users to insert DLL files in the cuepkg-1.2.6 subdirectory of the insta...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22002</link><description>CORSAIR iCUE 5.9.105 with iCUE Murals on Windows allows unprivileged users to insert DLL files in the cuepkg-1.2.6 subdirectory of the installation directory.</description><pubDate>Tue, 18 Jun 2024 18:41:17 +0000</pubDate></item><item><title>CVE-2024-37904 | Denial of service from maliciously configured Git repository in Minder</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37904</link><description>Minder is an open source Software Supply Chain Security Platform. Minder's Git provider is vulnerable to a denial of service from a maliciously configured GitHub repository. The Git provider clones users repositories using the `github.com/go-git/go-git/v5` library on lines `L55-L89`. The Git provider does the following on the lines `L56-L62`. First, it sets the `CloneOptions`, specifying the url, the depth etc. It then validates the options. It then sets up an in-memory filesystem, to which it clones and Finally, it clones the repository. The `(g *Git) Clone()` method is vulnerable to a DoS attack: A Minder user can instruct Minder to clone a large repository which will exhaust memory and crash the Minder server. The root cause of this vulnerability is a combination of the following conditions: 1. Users can control the Git URL which Minder clones, 2. Minder does not enforce a size limit to the repository, 3. Minder clones the entire repository into memory. This issue has been addressed in commit `7979b43` which has been included in release version v0.0.52. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Tue, 18 Jun 2024 17:30:21 +0000</pubDate></item><item><title>CVE-2024-21685 | This High severity Information Disclosure vulnerability was introduced in versions 9.4.0, 9.12.0, and 9.15.0 of Jira Core Data Center. &#13;
	&#13;
...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21685</link><description>This High severity Information Disclosure vulnerability was introduced in versions 9.4.0, 9.12.0, and 9.15.0 of Jira Core Data Center. 
	
	This Information Disclosure vulnerability, with a CVSS Score of 7.4, allows an unauthenticated attacker to view sensitive information via an Information Disclosure vulnerability which has high impact to confidentiality, no impact to integrity, no impact to availability, and requires user interaction. 
	
	Atlassian recommends that Jira Core Data Center customers upgrade to latest version, if you are unable to do so, upgrade your instance to one of the specified supported fixed versions:
		
		Jira Core Data Center 9.4: Upgrade to a release greater than or equal to 9.4.21
		
		Jira Core Data Center 9.12: Upgrade to a release greater than or equal to 9.12.8
		
		Jira Core Data Center 9.16: Upgrade to a release greater than or equal to 9.16.0
		
		
	
	See the release notes. You can download the latest version of Jira Core Data Center from the download center. 
	
	This vulnerability was found internally.</description><pubDate>Tue, 18 Jun 2024 17:10:44 +0000</pubDate></item><item><title>CVE-2024-38351 | Password auth and OAuth2 unverified email linking</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38351</link><description>Pocketbase is an open source web backend written in go. In affected versions a malicious user may be able to compromise other user accounts. In order to be exploited users must have both OAuth2 and Password auth methods enabled. A possible attack scenario could be: 1. a malicious actor register with the targeted user's email (it is unverified), 2. at some later point in time the targeted user stumble on your app and decides to sign-up with OAuth2 (_this step could be also initiated by the attacker by sending an invite email to the targeted user_), 3. on successful OAuth2 auth we search for an existing PocketBase user matching with the OAuth2 user's email and associate them, 4. because we haven't changed the password of the existing PocketBase user during the linking, the malicious actor has access to the targeted user account and will be able to login with the initially created email/password. To prevent this for happening we now reset the password for this specific case if the previously created user wasn't verified (an exception to this is if the linking is explicit/manual, aka. when you send `Authorization:TOKEN` with the OAuth2 auth call). Additionally to warn existing users we now send an email alert in case the user has logged in with password but has at least one OAuth2 account linked. The flow will be further improved with ongoing refactoring and we will start sending emails for "unrecognized device" logins (OTP and MFA is already implemented and will be available with the next v0.23.0 release in the near future). For the time being users are advised to update to version 0.22.14. There are no known workarounds for this vulnerability.</description><pubDate>Tue, 18 Jun 2024 17:10:44 +0000</pubDate></item><item><title>CVE-2024-37799 | CodeProjects Restaurant Reservation System v1.0 was discovered to contain a SQL injection vulnerability via the reserv_id parameter at view_...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37799</link><description>CodeProjects Restaurant Reservation System v1.0 was discovered to contain a SQL injection vulnerability via the reserv_id parameter at view_reservations.php.</description><pubDate>Tue, 18 Jun 2024 16:54:00 +0000</pubDate></item><item><title>CVE-2024-38348 | CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Staff Info module vi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38348</link><description>CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Staff Info module via the searvalu parameter.</description><pubDate>Tue, 18 Jun 2024 16:54:01 +0000</pubDate></item><item><title>CVE-2024-37803 | Multiple stored cross-site scripting (XSS) vulnerabilities in CodeProjects Health Care hospital Management System v1.0 allows attackers to e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37803</link><description>Multiple stored cross-site scripting (XSS) vulnerabilities in CodeProjects Health Care hospital Management System v1.0 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the fname and lname parameters under the Staff Info page.</description><pubDate>Tue, 18 Jun 2024 16:44:11 +0000</pubDate></item><item><title>CVE-2024-38347 | CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Room Information mod...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38347</link><description>CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Room Information module via the id parameter.</description><pubDate>Tue, 18 Jun 2024 16:44:12 +0000</pubDate></item><item><title>CVE-2024-37800 | CodeProjects Restaurant Reservation System v1.0 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the Date ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37800</link><description>CodeProjects Restaurant Reservation System v1.0 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the Date parameter at index.php.</description><pubDate>Tue, 18 Jun 2024 16:33:12 +0000</pubDate></item><item><title>CVE-2024-37802 | CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Patient Info module ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37802</link><description>CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Patient Info module via the searvalu parameter.</description><pubDate>Tue, 18 Jun 2024 16:33:13 +0000</pubDate></item><item><title>CVE-2024-5275 | Hard-coded password in FileCatalyst Direct 3.8.10 Build 138 TransferAgent (and earlier) and FileCatalyst Workflow 5.1.6 Build 130 (and earlier)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5275</link><description>A hard-coded password in the FileCatalyst TransferAgent can be found which can be used to unlock the keystore from which contents may be read out, for example, the private key for certificates. Exploit of this vulnerability could lead to a machine-in-the-middle (MiTM) attack against users of the agent. This issue affects all versions of FileCatalyst Direct from 3.8.10 Build 138 and earlier and all versions of FileCatalyst Workflow from 5.1.6 Build 130 and earlier.</description><pubDate>Tue, 18 Jun 2024 14:30:29 +0000</pubDate></item><item><title>CVE-2023-47726 | IBM QRadar Suite improper input validation</title><link>https://www.cve.org/CVERecord?id=CVE-2023-47726</link><description>IBM QRadar Suite Software 1.10.12.0 through 1.10.21.0 and IBM Cloud Pak for Security 1.10.12.0 through 1.10.21.0 could allow an authenticated user to execute certain arbitrary commands due to improper input validation.  IBM X-Force ID:  272087.</description><pubDate>Tue, 18 Jun 2024 13:46:25 +0000</pubDate></item><item><title>CVE-2024-6116 | itsourcecode Simple Online Hotel Reservation System edit_room.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6116</link><description>A vulnerability, which was classified as critical, has been found in itsourcecode Simple Online Hotel Reservation System 1.0. Affected by this issue is some unknown functionality of the file edit_room.php. The manipulation of the argument photo leads to unrestricted upload. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-268868.</description><pubDate>Tue, 18 Jun 2024 13:46:25 +0000</pubDate></item><item><title>CVE-2024-6114 | itsourcecode Monbela Tourist Inn Online Reservation System controller.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6114</link><description>A vulnerability classified as critical has been found in itsourcecode Monbela Tourist Inn Online Reservation System up to 1.0. Affected is an unknown function of the file controller.php. The manipulation of the argument image leads to unrestricted upload. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-268866 is the identifier assigned to this vulnerability.</description><pubDate>Tue, 18 Jun 2024 13:26:28 +0000</pubDate></item><item><title>CVE-2024-6115 | itsourcecode Simple Online Hotel Reservation System add_room.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6115</link><description>A vulnerability classified as critical was found in itsourcecode Simple Online Hotel Reservation System 1.0. Affected by this vulnerability is an unknown functionality of the file add_room.php. The manipulation of the argument photo leads to unrestricted upload. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-268867.</description><pubDate>Tue, 18 Jun 2024 13:26:29 +0000</pubDate></item><item><title>CVE-2024-6111 | itsourcecode Pool of Bethesda Online Reservation System login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6111</link><description>A vulnerability classified as critical has been found in itsourcecode Pool of Bethesda Online Reservation System 1.0. This affects an unknown part of the file login.php. The manipulation of the argument email leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-268857 was assigned to this vulnerability.</description><pubDate>Tue, 18 Jun 2024 12:48:08 +0000</pubDate></item><item><title>CVE-2024-6112 | itsourcecode Pool of Bethesda Online Reservation System index.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6112</link><description>A vulnerability classified as critical was found in itsourcecode Pool of Bethesda Online Reservation System 1.0. This vulnerability affects unknown code of the file index.php. The manipulation of the argument log_email leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-268858 is the identifier assigned to this vulnerability.</description><pubDate>Tue, 18 Jun 2024 12:48:08 +0000</pubDate></item><item><title>CVE-2024-5967 | Keycloak: leak of configured ldap bind credentials through the keycloak admin console</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5967</link><description>A vulnerability was found in Keycloak. The LDAP testing endpoint allows changing the Connection URL  independently without re-entering the currently configured LDAP bind credentials. This flaw allows an attacker with admin access (permission manage-realm) to change the LDAP host URL ("Connection URL") to a machine they control. The Keycloak server will connect to the attacker's host and try to authenticate with the configured credentials, thus leaking them to the attacker. As a consequence, an attacker who has compromised the admin console or compromised a user with sufficient privileges can leak domain credentials and attack the domain.</description><pubDate>Tue, 18 Jun 2024 12:16:02 +0000</pubDate></item><item><title>CVE-2024-6109 | itsourcecode Tailoring Management System addmeasurement.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6109</link><description>A vulnerability was found in itsourcecode Tailoring Management System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file addmeasurement.php. The manipulation of the argument id leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-268855.</description><pubDate>Tue, 18 Jun 2024 11:33:15 +0000</pubDate></item><item><title>CVE-2024-6110 | itsourcecode Magbanua Beach Resort Online Reservation System controller.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6110</link><description>A vulnerability was found in itsourcecode Magbanua Beach Resort Online Reservation System up to 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file controller.php. The manipulation of the argument image leads to unrestricted upload. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-268856.</description><pubDate>Tue, 18 Jun 2024 11:33:15 +0000</pubDate></item><item><title>CVE-2024-38504 | In JetBrains YouTrack before 2024.2.34646 the Guest User Account was enabled for attaching files to articles</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38504</link><description>In JetBrains YouTrack before 2024.2.34646 the Guest User Account was enabled for attaching files to articles</description><pubDate>Tue, 18 Jun 2024 10:54:04 +0000</pubDate></item><item><title>CVE-2024-38505 | In JetBrains YouTrack before 2024.2.34646 user access token was sent to the third-party site</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38505</link><description>In JetBrains YouTrack before 2024.2.34646 user access token was sent to the third-party site</description><pubDate>Tue, 18 Jun 2024 10:54:04 +0000</pubDate></item><item><title>CVE-2024-38506 | In JetBrains YouTrack before 2024.2.34646 user without appropriate permissions could enable the auto-attach option for workflows</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38506</link><description>In JetBrains YouTrack before 2024.2.34646 user without appropriate permissions could enable the auto-attach option for workflows</description><pubDate>Tue, 18 Jun 2024 10:54:05 +0000</pubDate></item><item><title>CVE-2024-38507 | In JetBrains Hub before 2024.2.34646 stored XSS via project description was possible</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38507</link><description>In JetBrains Hub before 2024.2.34646 stored XSS via project description was possible</description><pubDate>Tue, 18 Jun 2024 10:54:05 +0000</pubDate></item><item><title>CVE-2024-5953 | 389-ds-base: malformed userpassword hash may cause denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5953</link><description>A denial of service vulnerability was found in the 389-ds-base LDAP server. This issue may allow an authenticated user to cause a server denial of service while attempting to log in with a user with a malformed hash in their password.</description><pubDate>Tue, 18 Jun 2024 10:19:17 +0000</pubDate></item><item><title>CVE-2024-6108 | Genexis Tilgin Home Gateway Login cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6108</link><description>A vulnerability was found in Genexis Tilgin Home Gateway 322_AS0500-03_05_13_05. It has been classified as problematic. Affected is an unknown function of the file /vood/cgi-bin/vood_view.cgi?act=index&amp;lang;=EN# of the component Login. The manipulation of the argument errmsg leads to basic cross site scripting. It is possible to launch the attack remotely. VDB-268854 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 18 Jun 2024 10:19:17 +0000</pubDate></item><item><title>CVE-2024-5899 | Improper trust check in Bazel Build intellij plugin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5899</link><description>When Bazel Plugin in intellij imports a project (either using "import project" or "Auto import") the dialog for trusting the project is not displayed. This comes from the fact that both call the method ProjectBuilder.createProject which then calls ProjectManager.getInstance().createProject. This method, as its name suggests is intended to create a new project, not to import an existing one. 
We recommend upgrading to version 2024.06.04.0.2 or beyond for the IntelliJ, CLion and Android Studio Bazel plugins.</description><pubDate>Tue, 18 Jun 2024 08:34:11 +0000</pubDate></item><item><title>CVE-2024-5533 | Divi &amp;lt;= 4.25.1 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5533</link><description>The Divi theme for WordPress is vulnerable to Stored Cross-Site Scripting in all versions up to, and including, 4.25.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 18 Jun 2024 07:55:43 +0000</pubDate></item><item><title>CVE-2024-0066 | Johan Fagerström, member of the AXIS OS Bug Bounty Program, has found that a O3C feature may expose sensitive traffic between the client (Ax...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0066</link><description>Johan Fagerström, member of the AXIS OS Bug Bounty Program, has found that a O3C feature may expose sensitive traffic between the client (Axis device) and (O3C) server. If O3C is not being used this flaw does not apply. 
Axis has released patched AXIS OS versions for the highlighted flaw. Please refer to the Axis security advisory for more information and solution.</description><pubDate>Tue, 18 Jun 2024 06:13:41 +0000</pubDate></item><item><title>CVE-2024-3276 | FooBox (Free and Premium) &amp;lt; 2.7.28 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link><description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description><pubDate>Tue, 18 Jun 2024 06:13:42 +0000</pubDate></item><item><title>CVE-2024-4094 | Simple Share Buttons Adder &amp;lt; 8.5.1 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link><description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description><pubDate>Tue, 18 Jun 2024 06:13:42 +0000</pubDate></item><item><title>CVE-2024-5172 | Expert Invoice &amp;lt;= 1.0.2 -Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link><description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Tue, 18 Jun 2024 06:13:42 +0000</pubDate></item><item><title>CVE-2023-5527 | Business Directory Plugin &amp;lt;= 6.4.3 - Authenticated (Author+) CSV Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2023-5527</link><description>The Business Directory Plugin plugin for WordPress is vulnerable to CSV Injection in versions up to, and including, 6.4.3 via the class-csv-exporter.php file. This allows authenticated attackers, with author-level permissions and above, to embed untrusted input into CSV files exported by administrators, which can result in code execution when these files are downloaded and opened on a local system with a vulnerable configuration.</description><pubDate>Tue, 18 Jun 2024 05:53:24 +0000</pubDate></item><item><title>CVE-2024-33620 | Absolute path traversal vulnerability exists in ID Link Manager and FUJITSU Software TIME CREATOR. If this vulnerability is exploited, the f...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33620</link><description>Absolute path traversal vulnerability exists in ID Link Manager and FUJITSU Software TIME CREATOR. If this vulnerability is exploited, the file contents including sensitive information on the server may be retrieved by an unauthenticated remote attacker.</description><pubDate>Tue, 18 Jun 2024 05:53:24 +0000</pubDate></item><item><title>CVE-2024-33622 | Missing authentication for critical function vulnerability exists in ID Link Manager and FUJITSU Software TIME CREATOR. If this vulnerabilit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33622</link><description>Missing authentication for critical function vulnerability exists in ID Link Manager and FUJITSU Software TIME CREATOR. If this vulnerability is exploited, sensitive information may be obtained and/or the information stored in the database may be altered by a remote authenticated attacker.</description><pubDate>Tue, 18 Jun 2024 05:53:24 +0000</pubDate></item><item><title>CVE-2024-34024 | Observable response discrepancy issue exists in ID Link Manager and FUJITSU Software TIME CREATOR. If this vulnerability is exploited, an un...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34024</link><description>Observable response discrepancy issue exists in ID Link Manager and FUJITSU Software TIME CREATOR. If this vulnerability is exploited, an unauthenticated remote attacker may determine if a username is valid or not.</description><pubDate>Tue, 18 Jun 2024 05:53:25 +0000</pubDate></item><item><title>CVE-2024-37079 | vCenter Server contains a heap-overflow vulnerability in the implementation of the DCERPC protocol. A malicious actor with network access to...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37079</link><description>vCenter Server contains a heap-overflow vulnerability in the implementation of the DCERPC protocol. A malicious actor with network access to vCenter Server may trigger this vulnerability by sending a specially crafted network packet potentially leading to remote code execution.</description><pubDate>Tue, 18 Jun 2024 05:53:25 +0000</pubDate></item><item><title>CVE-2024-37080 | vCenter Server contains a heap-overflow vulnerability in the implementation of the DCERPC protocol. A malicious actor with network access to...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37080</link><description>vCenter Server contains a heap-overflow vulnerability in the implementation of the DCERPC protocol. A malicious actor with network access to vCenter Server may trigger this vulnerability by sending a specially crafted network packet potentially leading to remote code execution.</description><pubDate>Tue, 18 Jun 2024 05:53:25 +0000</pubDate></item><item><title>CVE-2024-37081 | The vCenter Server contains multiple local privilege escalation vulnerabilities due to misconfiguration of sudo. An authenticated local user...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37081</link><description>The vCenter Server contains multiple local privilege escalation vulnerabilities due to misconfiguration of sudo. An authenticated local user with non-administrative privileges may exploit these issues to elevate privileges to root on vCenter Server Appliance.</description><pubDate>Tue, 18 Jun 2024 05:53:26 +0000</pubDate></item><item><title>CVE-2024-5860 | Tickera &amp;lt;= 3.5.2.8 - Missing Authorization to Authenticated (Susbcriber+) Ticket Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5860</link><description>The Tickera – WordPress Event Ticketing plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the tc_dl_delete_tickets AJAX action in all versions up to, and including, 3.5.2.8. This makes it possible for authenticated attackers, with Subscriber-level access and above, to delete all tickets associated with events.</description><pubDate>Tue, 18 Jun 2024 03:32:33 +0000</pubDate></item><item><title>CVE-2024-0845 | PDF Viewer for Elementor &amp;lt;= 2.9.3 - Authenticated (Contributor+) Stored Cross-Site Scripting via render</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0845</link><description>The PDF Viewer for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the render function in all versions up to, and including, 2.9.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 18 Jun 2024 02:45:38 +0000</pubDate></item><item><title>CVE-2024-1634 | Scheduling Plugin – Online Booking for WordPress &amp;lt;= 3.5.10 - Missing Authorization to Unauthenticated Service Disconnection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1634</link><description>The Scheduling Plugin – Online Booking for WordPress plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the 'cbsb_disconnect_settings' function in all versions up to, and including, 3.5.10. This makes it possible for unauthenticated attackers to disconnect the plugin from the startbooking service and remove connection data.</description><pubDate>Tue, 18 Jun 2024 02:45:39 +0000</pubDate></item><item><title>CVE-2024-4375 | Master Slider – Responsive Touch Slider &amp;lt;= 3.9.10 - Authenticated (Contributor+) Stored Cross-Site Scripting via ms_layer Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4375</link><description>The Master Slider – Responsive Touch Slider plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'ms_layer' shortcode in all versions up to, and including, 3.9.10 due to insufficient input sanitization and output escaping on the 'css_id' user supplied attribute. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 18 Jun 2024 02:45:39 +0000</pubDate></item><item><title>CVE-2024-5541 | Ibtana - WordPress Website Builder &amp;lt;= 1.2.3.3 - Unauthenticated reCAPTCHA Settings Update</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5541</link><description>The Ibtana – WordPress Website Builder plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'ibtana_visual_editor_register_ajax_json_endpont' function in all versions up to, and including, 1.2.3.3. This makes it possible for unauthenticated attackers to update option values for reCAPTCHA keys on the WordPress site. This can be leveraged to bypass reCAPTCHA on the site.</description><pubDate>Tue, 18 Jun 2024 02:45:40 +0000</pubDate></item><item><title>CVE-2024-6084 | itsourcecode Pool of Bethesda Online Reservation System uploadImage unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6084</link><description>A vulnerability has been found in itsourcecode Pool of Bethesda Online Reservation System up to 1.0 and classified as critical. Affected by this vulnerability is the function uploadImage of the file /admin/mod_room/controller.php?action=add. The manipulation of the argument image leads to unrestricted upload. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-268825 was assigned to this vulnerability.</description><pubDate>Tue, 18 Jun 2024 01:45:39 +0000</pubDate></item><item><title>CVE-2024-6083 | PHPVibe Media Upload Page upload-mp3.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6083</link><description>A vulnerability, which was classified as critical, was found in PHPVibe 11.0.46. Affected is an unknown function of the file /app/uploading/upload-mp3.php of the component Media Upload Page. The manipulation of the argument file leads to unrestricted upload. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-268824. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 17 Jun 2024 23:42:16 +0000</pubDate></item><item><title>CVE-2024-6080 | Intelbras InControl unquoted search path</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6080</link><description>A vulnerability classified as critical was found in Intelbras InControl 2.21.56. This vulnerability affects unknown code. The manipulation leads to unquoted search path. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used. VDB-268822 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 17 Jun 2024 23:22:02 +0000</pubDate></item><item><title>CVE-2024-6082 | PHPVibe Global Options Page functionalities.global.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6082</link><description>A vulnerability, which was classified as problematic, has been found in PHPVibe 11.0.46. This issue affects some unknown processing of the file functionalities.global.php of the component Global Options Page. The manipulation of the argument site-logo-text leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-268823. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 17 Jun 2024 23:22:02 +0000</pubDate></item><item><title>CVE-2024-6067 | SourceCodester Music Class Enrollment System sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6067</link><description>A vulnerability classified as critical was found in SourceCodester Music Class Enrollment System 1.0. Affected by this vulnerability is an unknown functionality of the file /mces/?p=class/view_class. The manipulation of the argument id leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-268795.</description><pubDate>Mon, 17 Jun 2024 21:37:56 +0000</pubDate></item><item><title>CVE-2024-6065 | itsourcecode Bakery Online Ordering System index.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6065</link><description>A vulnerability was found in itsourcecode Bakery Online Ordering System 1.0. It has been rated as critical. This issue affects some unknown processing of the file index.php. The manipulation of the argument user_email leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-268793 was assigned to this vulnerability.</description><pubDate>Mon, 17 Jun 2024 21:15:00 +0000</pubDate></item><item><title>CVE-2024-6066 | SourceCodester Best House Rental Management System payment_report.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6066</link><description>A vulnerability classified as critical has been found in SourceCodester Best House Rental Management System 1.0. Affected is an unknown function of the file payment_report.php. The manipulation of the argument month_of leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-268794 is the identifier assigned to this vulnerability.</description><pubDate>Mon, 17 Jun 2024 21:15:01 +0000</pubDate></item><item><title>CVE-2024-37828 | A stored cross-site scripting (XSS) in Vermeg Agile Reporter v23.2.1 allows attackers to execute arbitrary web scripts or HTML via a crafted...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37828</link><description>A stored cross-site scripting (XSS) in Vermeg Agile Reporter v23.2.1 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Message field under the Set Broadcast Message module.</description><pubDate>Mon, 17 Jun 2024 20:46:29 +0000</pubDate></item><item><title>CVE-2024-6063 | GPAC MP4Box dmx_m2ts.c m2tsdmx_on_event null pointer dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6063</link><description>A vulnerability was found in GPAC 2.5-DEV-rev228-g11067ea92-master. It has been classified as problematic. This affects the function m2tsdmx_on_event of the file src/filters/dmx_m2ts.c of the component MP4Box. The manipulation leads to null pointer dereference. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The patch is named 8767ed0a77c4b02287db3723e92c2169f67c85d5. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-268791.</description><pubDate>Mon, 17 Jun 2024 20:36:51 +0000</pubDate></item><item><title>CVE-2024-6064 | GPAC MP4Box loader_xmt.c xmt_node_end use after free</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6064</link><description>A vulnerability was found in GPAC 2.5-DEV-rev228-g11067ea92-master. It has been declared as problematic. This vulnerability affects the function xmt_node_end of the file src/scene_manager/loader_xmt.c of the component MP4Box. The manipulation leads to use after free. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used. The name of the patch is f4b3e4d2f91bc1749e7a924a8ab171af03a355a8/c1b9c794bad8f262c56f3cf690567980d96662f5. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-268792.</description><pubDate>Mon, 17 Jun 2024 20:36:52 +0000</pubDate></item><item><title>CVE-2023-37057 | An issue in JLINK Unionman Technology Co. Ltd Jlink AX1800 v.1.0 allows a remote attacker to execute arbitrary code via the router's authent...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37057</link><description>An issue in JLINK Unionman Technology Co. Ltd Jlink AX1800 v.1.0 allows a remote attacker to execute arbitrary code via the router's authentication mechanism.</description><pubDate>Mon, 17 Jun 2024 20:25:55 +0000</pubDate></item><item><title>CVE-2024-34833 | Sourcecodester Payroll Management System v1.0 is vulnerable to File Upload. Users can upload images via the "save_settings" page. An unauthe...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34833</link><description>Sourcecodester Payroll Management System v1.0 is vulnerable to File Upload. Users can upload images via the "save_settings" page. An unauthenticated attacker can leverage this functionality to upload a malicious PHP file instead. Successful exploitation of this vulnerability results in the ability to execute arbitrary code as the user running the web server.</description><pubDate>Mon, 17 Jun 2024 20:25:55 +0000</pubDate></item><item><title>CVE-2023-37058 | Insecure Permissions vulnerability in JLINK Unionman Technology Co. Ltd Jlink AX1800 v.1.0 allows a remote attacker to escalate privileges v...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37058</link><description>Insecure Permissions vulnerability in JLINK Unionman Technology Co. Ltd Jlink AX1800 v.1.0 allows a remote attacker to escalate privileges via a crafted command.</description><pubDate>Mon, 17 Jun 2024 20:25:56 +0000</pubDate></item><item><title>CVE-2024-37798 | Cross-site scripting (XSS) vulnerability in search-appointment.php in the Admin Panel in Phpgurukul Beauty Parlour Management System 1.0 all...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37798</link><description>Cross-site scripting (XSS) vulnerability in search-appointment.php in the Admin Panel in Phpgurukul Beauty Parlour Management System 1.0 allows remote attackers to inject arbitrary web script or HTML via the search input field.</description><pubDate>Mon, 17 Jun 2024 20:25:56 +0000</pubDate></item><item><title>CVE-2024-37305 | Buffer overflow in deserialization in oqs-provider</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37305</link><description>oqs-provider is a provider for the OpenSSL 3 cryptography library that adds support for post-quantum cryptography in TLS, X.509, and S/MIME using post-quantum algorithms from liboqs. Flaws have been identified in the way oqs-provider handles lengths decoded with DECODE_UINT32 at the start of serialized hybrid (traditional + post-quantum) keys and signatures. Unchecked length values are later used for memory reads and writes; malformed input can lead to crashes or information leakage. Handling of plain/non-hybrid PQ key operation is not affected. This issue has been patched in in v0.6.1. All users are advised to upgrade. There are no workarounds for this issue.</description><pubDate>Mon, 17 Jun 2024 19:56:44 +0000</pubDate></item><item><title>CVE-2024-37893 | MFA bypass in oauth flow in Firefly III</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37893</link><description>Firefly III is a free and open source personal finance manager. In affected versions an MFA bypass in the Firefly III OAuth flow may allow malicious users to bypass the MFA-check. This allows malicious users to use password spraying to gain access to Firefly III data using passwords stolen from other sources. As OAuth applications are easily enumerable using an incrementing id, an attacker could try sign an OAuth application up to a users profile quite easily if they have created one. The attacker would also need to know the victims username and password. This problem has been patched in Firefly III v6.1.17 and up. Users are advised to upgrade. Users unable to upgrade should Use a unique password for their Firefly III instance and store their password securely, i.e. in a password manager.</description><pubDate>Mon, 17 Jun 2024 19:46:49 +0000</pubDate></item><item><title>CVE-2024-37896 | SQL injection vulnerability in Gin-vue-admin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37896</link><description>Gin-vue-admin is a backstage management system based on vue and gin. Gin-vue-admin &lt;= v2.6.5 has SQL injection vulnerability. The SQL injection vulnerabilities occur when a web application allows users to input data into SQL queries without sufficiently validating or sanitizing the input. Failing to properly enforce restrictions on user input could mean that even a basic form input field can be used to inject arbitrary and potentially dangerous SQL commands. This could lead to unauthorized access to the database, data leakage, data manipulation, or even complete compromise of the database server. This vulnerability has been addressed in commit `53d033821` which has been included in release version 2.6.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Mon, 17 Jun 2024 19:46:50 +0000</pubDate></item><item><title>CVE-2024-37895 | API Key Leak in lobe-chat</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37895</link><description>Lobe Chat is an open-source LLMs/AI chat framework. In affected versions if an attacker can successfully authenticate through SSO/Access Code, they can obtain the real backend API Key by modifying the base URL to their own attack URL on the frontend and setting up a server-side request. This issue has been addressed in version 0.162.25. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Mon, 17 Jun 2024 19:37:14 +0000</pubDate></item><item><title>CVE-2024-6061 | GPAC MP4Box isoffin_read.c isoffin_process infinite loop</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6061</link><description>A vulnerability has been found in GPAC 2.5-DEV-rev228-g11067ea92-master and classified as problematic. Affected by this vulnerability is the function isoffin_process of the file src/filters/isoffin_read.c of the component MP4Box. The manipulation leads to infinite loop. It is possible to launch the attack on the local host. The exploit has been disclosed to the public and may be used. The identifier of the patch is 20c0f29139a82779b86453ce7f68d0681ec7624c. It is recommended to apply a patch to fix this issue. The identifier VDB-268789 was assigned to this vulnerability.</description><pubDate>Mon, 17 Jun 2024 19:37:15 +0000</pubDate></item><item><title>CVE-2024-6062 | GPAC MP4Box load_text.c swf_svg_add_iso_sample null pointer dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6062</link><description>A vulnerability was found in GPAC 2.5-DEV-rev228-g11067ea92-master and classified as problematic. Affected by this issue is the function swf_svg_add_iso_sample of the file src/filters/load_text.c of the component MP4Box. The manipulation leads to null pointer dereference. The attack needs to be approached locally. The exploit has been disclosed to the public and may be used. The patch is identified as 31e499d310a48bd17c8b055a0bfe0fe35887a7cd. It is recommended to apply a patch to fix this issue. VDB-268790 is the identifier assigned to this vulnerability.</description><pubDate>Mon, 17 Jun 2024 19:37:15 +0000</pubDate></item><item><title>CVE-2024-37891 | Proxy-Authorization request header isn&amp;#x27;t stripped during cross-origin redirects in urllib3</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37891</link><description>urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.</description><pubDate>Mon, 17 Jun 2024 19:25:55 +0000</pubDate></item><item><title>CVE-2024-37902 | Path thraversal in DeepJavaLibrary</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37902</link><description>DeepJavaLibrary(DJL) is an Engine-Agnostic Deep Learning Framework in Java. DJL versions 0.1.0 through 0.27.0 do not prevent absolute path archived artifacts from inserting archived files directly into the system, overwriting system files. This is fixed in DJL 0.28.0 and patched in DJL Large Model Inference containers version 0.27.0. Users are advised to upgrade.</description><pubDate>Mon, 17 Jun 2024 19:25:55 +0000</pubDate></item><item><title>CVE-2024-37890 | Denial of service when handling a request with many HTTP headers in ws</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37890</link><description>ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.</description><pubDate>Mon, 17 Jun 2024 19:25:56 +0000</pubDate></item><item><title>CVE-2024-36543 | Incorrect access control in the Kafka Connect REST API in the STRIMZI Project 0.41.0 and earlier allows an attacker to deny the service for ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36543</link><description>Incorrect access control in the Kafka Connect REST API in the STRIMZI Project 0.41.0 and earlier allows an attacker to deny the service for Kafka Mirroring, potentially mirror the topics' content to his Kafka cluster via a malicious connector (bypassing Kafka ACL if it exists), and potentially steal Kafka SASL credentials, by querying the MirrorMaker Kafka REST API.</description><pubDate>Mon, 17 Jun 2024 19:16:18 +0000</pubDate></item><item><title>CVE-2024-38449 | A Directory Traversal vulnerability in KasmVNC 1.3.1.230e50f7b89663316c70de7b0e3db6f6b9340489 and possibly earlier versions allows remote au...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38449</link><description>A Directory Traversal vulnerability in KasmVNC 1.3.1.230e50f7b89663316c70de7b0e3db6f6b9340489 and possibly earlier versions allows remote authenticated attackers to browse parent directories and read the content of files outside the scope of the application.</description><pubDate>Mon, 17 Jun 2024 18:49:29 +0000</pubDate></item><item><title>CVE-2024-37840 | SQL injection vulnerability in processscore.php in Itsourcecode Learning Management System Project In PHP With Source Code v1.0 allows remot...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37840</link><description>SQL injection vulnerability in processscore.php in Itsourcecode Learning Management System Project In PHP With Source Code v1.0 allows remote attackers to execute arbitrary SQL commands via the LessonID parameter.</description><pubDate>Mon, 17 Jun 2024 18:39:26 +0000</pubDate></item><item><title>CVE-2024-6059 | Ingenico Estate Manager News Feed messages cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6059</link><description>A vulnerability, which was classified as problematic, has been found in Ingenico Estate Manager 2023. This issue affects some unknown processing of the file /emgui/rest/ums/messages of the component News Feed. The manipulation of the argument message leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-268787. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 17 Jun 2024 18:39:26 +0000</pubDate></item><item><title>CVE-2018-25103 | Use-after-free vulnerability in lighttpd  &amp;lt;= 1.4.50</title><link>https://www.cve.org/CVERecord?id=CVE-2018-25103</link><description>There exists a use-after-free-vulnerability in lighttpd &lt;= 1.4.50 that can allow access to do a case-insensitive comparison against the reused pointer.</description><pubDate>Mon, 17 Jun 2024 18:27:44 +0000</pubDate></item><item><title>CVE-2024-37794 | Improper input validation in CVC5 Solver v1.1.3 allows attackers to cause a Denial of Service (DoS) via a crafted SMT2 input file.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37794</link><description>Improper input validation in CVC5 Solver v1.1.3 allows attackers to cause a Denial of Service (DoS) via a crafted SMT2 input file.</description><pubDate>Mon, 17 Jun 2024 18:27:45 +0000</pubDate></item><item><title>CVE-2024-37795 | A segmentation fault in CVC5 Solver v1.1.3 allows attackers to cause a Denial of Service (DoS) via a crafted SMT-LIB input file containing t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37795</link><description>A segmentation fault in CVC5 Solver v1.1.3 allows attackers to cause a Denial of Service (DoS) via a crafted SMT-LIB input file containing the `set-logic` command with specific formatting errors.</description><pubDate>Mon, 17 Jun 2024 18:27:45 +0000</pubDate></item><item><title>CVE-2024-6058 | LabVantage LIMS cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6058</link><description>A vulnerability classified as problematic has been found in LabVantage LIMS 2017. This affects an unknown part of the file /labvantage/rc?command=page&amp;amp;page=SampleHistoricalList&amp;_iframename=list&amp;__crc=crc_1701669816260. The manipulation of the argument height/width leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-268785 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 17 Jun 2024 18:27:46 +0000</pubDate></item><item><title>CVE-2024-36973 | misc: microchip: pci1xxxx: fix double free in the error handling of gp_aux_bus_probe()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36973</link><description>In the Linux kernel, the following vulnerability has been resolved:

misc: microchip: pci1xxxx: fix double free in the error handling of gp_aux_bus_probe()

When auxiliary_device_add() returns error and then calls
auxiliary_device_uninit(), callback function
gp_auxiliary_device_release() calls ida_free() and
kfree(aux_device_wrapper) to free memory. We should't
call them again in the error handling path.

Fix this by skipping the redundant cleanup functions.</description><pubDate>Mon, 17 Jun 2024 17:59:59 +0000</pubDate></item><item><title>CVE-2024-37662 | TP-LINK TL-7DR5130 v1.0.23 is vulnerable to TCP DoS or hijacking attacks. An attacker in the same WLAN as the victim can disconnect or hijac...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37662</link><description>TP-LINK TL-7DR5130 v1.0.23 is vulnerable to TCP DoS or hijacking attacks. An attacker in the same WLAN as the victim can disconnect or hijack the traffic between the victim and any remote server by sending out forged TCP RST messages to evict NAT mappings in the router.</description><pubDate>Mon, 17 Jun 2024 18:00:00 +0000</pubDate></item><item><title>CVE-2024-6056 | nasirkhan Laravel Starter Password Reset forgot-password observable response discrepancy</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6056</link><description>A vulnerability was found in nasirkhan Laravel Starter up to 11.8.0. It has been rated as problematic. Affected by this issue is some unknown functionality of the file /forgot-password of the component Password Reset Handler. The manipulation of the argument Email leads to observable response discrepancy. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-268784. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 17 Jun 2024 17:40:05 +0000</pubDate></item><item><title>CVE-2024-36527 | puppeteer-renderer v.3.2.0 and before is vulnerable to Directory Traversal. Attackers can exploit the URL parameter using the file protocol ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36527</link><description>puppeteer-renderer v.3.2.0 and before is vulnerable to Directory Traversal. Attackers can exploit the URL parameter using the file protocol to read sensitive information from the server.</description><pubDate>Mon, 17 Jun 2024 17:40:06 +0000</pubDate></item><item><title>CVE-2024-37661 | TP-LINK TL-7DR5130 v1.0.23 is vulnerable to forged ICMP redirect message attacks. An attacker in the same WLAN as the victim can hijack the ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37661</link><description>TP-LINK TL-7DR5130 v1.0.23 is vulnerable to forged ICMP redirect message attacks. An attacker in the same WLAN as the victim can hijack the traffic between the victim and any remote server by sending out forged ICMP redirect messages.</description><pubDate>Mon, 17 Jun 2024 17:40:06 +0000</pubDate></item><item><title>CVE-2024-37663 | Redmi router RB03 v1.0.57 is vulnerable to forged ICMP redirect message attacks. An attacker in the same WLAN as the victim can hijack the t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37663</link><description>Redmi router RB03 v1.0.57 is vulnerable to forged ICMP redirect message attacks. An attacker in the same WLAN as the victim can hijack the traffic between the victim and any remote server by sending out forged ICMP redirect messages.</description><pubDate>Mon, 17 Jun 2024 17:30:07 +0000</pubDate></item><item><title>CVE-2024-37664 | Redmi router RB03 v1.0.57 is vulnerable to TCP DoS or hijacking attacks. An attacker in the same WLAN as the victim can disconnect or hijack...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37664</link><description>Redmi router RB03 v1.0.57 is vulnerable to TCP DoS or hijacking attacks. An attacker in the same WLAN as the victim can disconnect or hijack the traffic between the victim and any remote server by sending out forged TCP RST messages to evict NAT mappings in the router.</description><pubDate>Mon, 17 Jun 2024 17:30:08 +0000</pubDate></item><item><title>CVE-2024-36578 | akbr update 1.0.0 is vulnerable to Prototype Pollution via update/index.js.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36578</link><description>akbr update 1.0.0 is vulnerable to Prototype Pollution via update/index.js.</description><pubDate>Mon, 17 Jun 2024 15:48:27 +0000</pubDate></item><item><title>CVE-2024-36573 | almela obx before v.0.0.4 has a Prototype Pollution issue which allows arbitrary code execution via the obx/build/index.js:656), reduce (@al...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36573</link><description>almela obx before v.0.0.4 has a Prototype Pollution issue which allows arbitrary code execution via the obx/build/index.js:656), reduce (@almela/obx/build/index.js:470), Object.set (obx/build/index.js:269) component.</description><pubDate>Mon, 17 Jun 2024 15:38:25 +0000</pubDate></item><item><title>CVE-2024-36574 | A Prototype Pollution issue in flatten-json 1.0.1 allows an attacker to execute arbitrary code via module.exports.unflattenJSON (flatten-jso...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36574</link><description>A Prototype Pollution issue in flatten-json 1.0.1 allows an attacker to execute arbitrary code via module.exports.unflattenJSON (flatten-json/index.js:42)</description><pubDate>Mon, 17 Jun 2024 15:38:25 +0000</pubDate></item><item><title>CVE-2024-0397 | Memory race condition in ssl.SSLContext certificate store methods</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0397</link><description>A defect was discovered in the Python “ssl” module where there is a memory
race condition with the ssl.SSLContext methods “cert_store_stats()” and
“get_ca_certs()”. The race condition can be triggered if the methods are
called at the same time as certificates are loaded into the SSLContext,
such as during the TLS handshake with a certificate directory configured.
This issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.</description><pubDate>Mon, 17 Jun 2024 15:28:06 +0000</pubDate></item><item><title>CVE-2024-36575 | A Prototype Pollution issue in getsetprop 1.1.0 allows an attacker to execute arbitrary code via global.accessor.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36575</link><description>A Prototype Pollution issue in getsetprop 1.1.0 allows an attacker to execute arbitrary code via global.accessor.</description><pubDate>Mon, 17 Jun 2024 15:28:06 +0000</pubDate></item><item><title>CVE-2024-36577 | apphp js-object-resolver &lt; 3.1.1 is vulnerable to Prototype Pollution via Module.setNestedProperty.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36577</link><description>apphp js-object-resolver &lt; 3.1.1 is vulnerable to Prototype Pollution via Module.setNestedProperty.</description><pubDate>Mon, 17 Jun 2024 15:28:06 +0000</pubDate></item><item><title>CVE-2024-36581 | A Prototype Pollution issue in abw badger-database 1.2.1 allows an attacker to execute arbitrary code via dist/badger-database.esm.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36581</link><description>A Prototype Pollution issue in abw badger-database 1.2.1 allows an attacker to execute arbitrary code via dist/badger-database.esm.</description><pubDate>Mon, 17 Jun 2024 15:28:07 +0000</pubDate></item><item><title>CVE-2024-4032 | Incorrect IPv4 and IPv6 private ranges</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4032</link><description>The “ipaddress” module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as “globally reachable” or “private”. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn’t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.

CPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.</description><pubDate>Mon, 17 Jun 2024 15:28:07 +0000</pubDate></item><item><title>CVE-2024-36582 | alexbinary object-deep-assign 1.0.11 is vulnerable to Prototype Pollution via the extend() method of Module.deepAssign (/src/index.js)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36582</link><description>alexbinary object-deep-assign 1.0.11 is vulnerable to Prototype Pollution via the extend() method of Module.deepAssign (/src/index.js)</description><pubDate>Mon, 17 Jun 2024 15:11:22 +0000</pubDate></item><item><title>CVE-2024-37158 | Evmos is missing precompile checks</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37158</link><description>Evmos is the Ethereum Virtual Machine (EVM) Hub on the Cosmos Network. Preliminary checks on actions computed by the clawback vesting accounts are performed in the ante handler. Evmos core, implements two different ante handlers: one for Cosmos transactions and one for Ethereum transactions. Checks performed on the two implementation are different. The vulnerability discovered allowed a clawback account to bypass Cosmos ante handler checks by sending an Ethereum transaction targeting a precompile used to interact with a Cosmos SDK module. This vulnerability is fixed in 18.0.0.</description><pubDate>Mon, 17 Jun 2024 14:20:11 +0000</pubDate></item><item><title>CVE-2024-37159 | Evmos is missing create validator check</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37159</link><description>Evmos is the Ethereum Virtual Machine (EVM) Hub on the Cosmos Network. This vulnerability allowed a user to create a validator using vested tokens to deposit the self-bond. This vulnerability is fixed in 18.0.0.</description><pubDate>Mon, 17 Jun 2024 14:20:12 +0000</pubDate></item><item><title>CVE-2024-37619 | StrongShop v1.0 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the spec_group_id parameter at /spec/inde...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37619</link><description>StrongShop v1.0 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the spec_group_id parameter at /spec/index.blade.php.</description><pubDate>Mon, 17 Jun 2024 13:59:08 +0000</pubDate></item><item><title>CVE-2024-37620 | PHPVOD v4.0 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the id parameter at /view/admin/view.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37620</link><description>PHPVOD v4.0 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the id parameter at /view/admin/view.php.</description><pubDate>Mon, 17 Jun 2024 13:59:09 +0000</pubDate></item><item><title>CVE-2024-37621 | StrongShop v1.0 was discovered to contain a Server-Side Template Injection (SSTI) vulnerability via the component /shippingOptionConfig/inde...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37621</link><description>StrongShop v1.0 was discovered to contain a Server-Side Template Injection (SSTI) vulnerability via the component /shippingOptionConfig/index.blade.php.</description><pubDate>Mon, 17 Jun 2024 13:59:09 +0000</pubDate></item><item><title>CVE-2024-37622 | Xinhu RockOA v2.6.3 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the num parameter at /flow/flow.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37622</link><description>Xinhu RockOA v2.6.3 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the num parameter at /flow/flow.php.</description><pubDate>Mon, 17 Jun 2024 13:59:10 +0000</pubDate></item><item><title>CVE-2024-37623 | Xinhu RockOA v2.6.3 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the /kaoqin/tpl_kaoqin_locationchange...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37623</link><description>Xinhu RockOA v2.6.3 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the /kaoqin/tpl_kaoqin_locationchange.html component.</description><pubDate>Mon, 17 Jun 2024 13:59:10 +0000</pubDate></item><item><title>CVE-2024-37624 | Xinhu RockOA v2.6.3 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the /chajian/inputChajian.php. compon...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37624</link><description>Xinhu RockOA v2.6.3 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the /chajian/inputChajian.php. component.</description><pubDate>Mon, 17 Jun 2024 13:59:11 +0000</pubDate></item><item><title>CVE-2024-37625 | zhimengzhe iBarn v1.5 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the $search parameter at /index.php...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37625</link><description>zhimengzhe iBarn v1.5 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the $search parameter at /index.php.</description><pubDate>Mon, 17 Jun 2024 13:59:11 +0000</pubDate></item><item><title>CVE-2024-38469 | zhimengzhe iBarn v1.5 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the $search parameter at /pay.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38469</link><description>zhimengzhe iBarn v1.5 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the $search parameter at /pay.php.</description><pubDate>Mon, 17 Jun 2024 13:59:11 +0000</pubDate></item><item><title>CVE-2024-38470 | zhimengzhe iBarn v1.5 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the $search parameter at /own.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38470</link><description>zhimengzhe iBarn v1.5 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the $search parameter at /own.php.</description><pubDate>Mon, 17 Jun 2024 13:59:12 +0000</pubDate></item><item><title>CVE-2024-36580 | A Prototype Pollution issue in cdr0 sg 1.0.10 allows an attacker to execute arbitrary code.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36580</link><description>A Prototype Pollution issue in cdr0 sg 1.0.10 allows an attacker to execute arbitrary code.</description><pubDate>Mon, 17 Jun 2024 13:59:13 +0000</pubDate></item><item><title>CVE-2024-36583 | A Prototype Pollution issue in byondreal accessor &lt;= 1.0.0 allows an attacker to execute arbitrary code via @byondreal/accessor/index.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36583</link><description>A Prototype Pollution issue in byondreal accessor &lt;= 1.0.0 allows an attacker to execute arbitrary code via @byondreal/accessor/index.</description><pubDate>Mon, 17 Jun 2024 13:59:13 +0000</pubDate></item><item><title>CVE-2024-37848 | SQL Injection vulnerability in Online-Bookstore-Project-In-PHP v1.0 allows a local attacker to execute arbitrary code via the admin_delete.p...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37848</link><description>SQL Injection vulnerability in Online-Bookstore-Project-In-PHP v1.0 allows a local attacker to execute arbitrary code via the admin_delete.php component.</description><pubDate>Mon, 17 Jun 2024 13:49:27 +0000</pubDate></item><item><title>CVE-2024-6057 | Improper authentication in the vault password feature in Devolutions Remote Desktop Manager 2024.1.31.0 and earlier allows an attacker that ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6057</link><description>Improper authentication in the vault password feature in Devolutions Remote Desktop Manager 2024.1.31.0 and earlier allows an attacker that has compromised an access to an RDM instance to bypass the vault master password via the offline mode feature.</description><pubDate>Mon, 17 Jun 2024 13:16:50 +0000</pubDate></item><item><title>CVE-2024-6055 | Improper removal of sensitive information in data source export feature in Devolutions Remote Desktop Manager 2024.1.32.0 and earlier on Win...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6055</link><description>Improper removal of sensitive information in data source export feature in Devolutions Remote Desktop Manager 2024.1.32.0 and earlier on Windows allows an attacker that obtains the exported settings to recover powershell credentials configured on the data source via stealing the configuration file.</description><pubDate>Mon, 17 Jun 2024 13:16:51 +0000</pubDate></item><item><title>CVE-2024-5741 | XSS in inventory view</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5741</link><description>Stored XSS in inventory tree rendering in Checkmk before 2.3.0p7, 2.2.0p28, 2.1.0p45 and 2.0.0 (EOL)</description><pubDate>Mon, 17 Jun 2024 11:25:57 +0000</pubDate></item><item><title>CVE-2024-36277 | Improper verification of cryptographic signature issue exists in "FreeFrom - the nostr client" App versions prior to 1.3.5 for Android and i...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36277</link><description>Improper verification of cryptographic signature issue exists in "FreeFrom - the nostr client" App versions prior to 1.3.5 for Android and iOS. The affected app cannot detect event data with invalid signatures.</description><pubDate>Mon, 17 Jun 2024 07:47:05 +0000</pubDate></item><item><title>CVE-2024-36279 | Reliance on obfuscation or encryption of security-relevant inputs without integrity checking issue exists in "FreeFrom - the nostr client" A...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36279</link><description>Reliance on obfuscation or encryption of security-relevant inputs without integrity checking issue exists in "FreeFrom - the nostr client" App versions prior to 1.3.5 for Android and iOS. If this vulnerability is exploited, the content of direct messages (DMs) between users may be manipulated by a man-in-the-middle attack.</description><pubDate>Mon, 17 Jun 2024 07:47:06 +0000</pubDate></item><item><title>CVE-2024-36289 | Reusing a nonce, key pair in encryption issue exists in "FreeFrom - the nostr client" App versions prior to 1.3.5 for Android and iOS. If th...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36289</link><description>Reusing a nonce, key pair in encryption issue exists in "FreeFrom - the nostr client" App versions prior to 1.3.5 for Android and iOS. If this vulnerability is exploited, the content of direct messages (DMs) between users may be manipulated by a man-in-the-middle attack.</description><pubDate>Mon, 17 Jun 2024 07:47:06 +0000</pubDate></item><item><title>CVE-2024-6048 | Openfind MailGates and MailAudit - OS Command Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6048</link><description>Openfind's MailGates and MailAudit fail to properly filter user input when analyzing email attachments. An unauthenticated remote attacker can exploit this vulnerability to inject system commands and execute them on the remote server.</description><pubDate>Mon, 17 Jun 2024 07:36:53 +0000</pubDate></item><item><title>CVE-2024-5650 | DLL Hijacking vulnerability has been found in CENTUM CAMS Log server provided by Yokogawa Electric Corporation. If an attacker is somehow ab...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5650</link><description>DLL Hijacking vulnerability has been found in CENTUM CAMS Log server provided by Yokogawa Electric Corporation. If an attacker is somehow able to intrude into a computer that installed affected product or access to a shared folder, by replacing the DLL file with a tampered one, it is possible to execute arbitrary programs with the authority of the SYSTEM account.

The affected products and versions are as follows:
CENTUM CS 3000 R3.08.10 to R3.09.50
CENTUM VP R4.01.00 to R4.03.00, R5.01.00 to R5.04.20, R6.01.00 to R6.11.10.</description><pubDate>Mon, 17 Jun 2024 06:33:58 +0000</pubDate></item><item><title>CVE-2024-3236 | Easy Notify Lite &amp;lt; 1.1.33 - Contributor+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link><description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description><pubDate>Mon, 17 Jun 2024 06:10:44 +0000</pubDate></item><item><title>CVE-2024-4305 | PostX &amp;lt; 4.1.0 - Contributor+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link><description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description><pubDate>Mon, 17 Jun 2024 06:10:44 +0000</pubDate></item><item><title>CVE-2024-6047 | GeoVision EOL device - OS Command Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6047</link><description>Certain EOL GeoVision devices fail to properly filter user input for the specific functionality. Unauthenticated remote attackers can exploit this vulnerability to inject and execute arbitrary system commands on the device.</description><pubDate>Mon, 17 Jun 2024 06:10:45 +0000</pubDate></item><item><title>CVE-2024-6046 | SECOM WRTR-304GN-304TW-UPSC - OS Command Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6046</link><description>SECOM WRTR-304GN-304TW-UPSC V02(unsupported-when-assigned) does not properly filter user input in the specific functionality. Unauthenticated remote attackers can exploit this vulnerability to inject and execute arbitrary system commands on the device.</description><pubDate>Mon, 17 Jun 2024 03:41:39 +0000</pubDate></item><item><title>CVE-2024-6045 | D-Link router - Hidden Backdoor</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6045</link><description>Certain models of D-Link wireless routers contain an undisclosed factory testing backdoor. Unauthenticated attackers on the local area network can force the device to enable Telnet service by accessing a specific URL and can log in by using the administrator credentials obtained from analyzing the firmware.</description><pubDate>Mon, 17 Jun 2024 03:31:33 +0000</pubDate></item><item><title>CVE-2024-5163 | Improper permission settings for mobile applications (com.transsion.carlcare) may lead to user password and account security risks.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5163</link><description>Improper permission settings for mobile applications (com.transsion.carlcare) may lead to user password and account security risks.</description><pubDate>Mon, 17 Jun 2024 03:14:45 +0000</pubDate></item><item><title>CVE-2024-6044 | D-Link router - Arbitrary File Reading</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6044</link><description>Certain models of D-Link wireless routers have a path traversal vulnerability. Unauthenticated attackers on the same local area network can read arbitrary system files by manipulating the URL.</description><pubDate>Mon, 17 Jun 2024 02:44:35 +0000</pubDate></item><item><title>CVE-2024-6043 | SourceCodester Best House Rental Management System admin_class.php login sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6043</link><description>A vulnerability classified as critical has been found in SourceCodester Best House Rental Management System 1.0. This affects the function login of the file admin_class.php. The manipulation of the argument username leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-268767.</description><pubDate>Mon, 17 Jun 2024 01:09:26 +0000</pubDate></item></channel></rss>