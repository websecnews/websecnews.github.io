<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Sun, 23 Jun 2024 21:26:22 +0000</lastBuildDate><item><title>CVE-2024-39331 | In Emacs before 29.4, org-link-expand-abbrev in lisp/ol.el expands a %(...) link abbrev even when it specifies an unsafe function, such as s...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39331</link><description>In Emacs before 29.4, org-link-expand-abbrev in lisp/ol.el expands a %(...) link abbrev even when it specifies an unsafe function, such as shell-command-to-string. This affects Org Mode before 9.7.5.</description><pubDate>Sun, 23 Jun 2024 21:26:24 +0000</pubDate></item><item><title>CVE-2024-4841 | Path Traversal in parisneo/lollms-webui</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4841</link><description>A Path Traversal vulnerability exists in the parisneo/lollms-webui, specifically within the 'add_reference_to_local_mode' function due to the lack of input sanitization. This vulnerability affects versions v9.6 to the latest. By exploiting this vulnerability, an attacker can predict the folders, subfolders, and files present on the victim's computer. The vulnerability is present in the way the application handles the 'path' parameter in HTTP requests to the '/add_reference_to_local_model' endpoint.</description><pubDate>Sun, 23 Jun 2024 14:47:23 +0000</pubDate></item><item><title>CVE-2024-6269 | Ruijie RG-UAC HTTP POST Request sxh_vpnlic.php get_ip.addr_details command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6269</link><description>A vulnerability has been found in Ruijie RG-UAC 1.0 and classified as critical. This vulnerability affects the function get_ip.addr_details of the file /view/vpn/autovpn/sxh_vpnlic.php of the component HTTP POST Request Handler. The manipulation of the argument indevice leads to command injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-269482 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Sun, 23 Jun 2024 11:39:09 +0000</pubDate></item><item><title>CVE-2024-6268 | lahirudanushka School Management System Login Page login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6268</link><description>A vulnerability, which was classified as critical, has been found in lahirudanushka School Management System 1.0.0/1.0.1. Affected by this issue is some unknown functionality of the file login.php of the component Login Page. The manipulation of the argument email leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269480.</description><pubDate>Sun, 23 Jun 2024 09:39:20 +0000</pubDate></item><item><title>CVE-2024-6267 | SourceCodester Service Provider Management System System Info Page index.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6267</link><description>A vulnerability classified as problematic was found in SourceCodester Service Provider Management System 1.0. Affected by this vulnerability is an unknown functionality of the file system_info/index.php of the component System Info Page. The manipulation of the argument System Name/System Short Name leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-269479.</description><pubDate>Sun, 23 Jun 2024 06:19:50 +0000</pubDate></item><item><title>CVE-2024-6266 | Pear Admin Boot loadDictItem sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6266</link><description>A vulnerability classified as critical has been found in Pear Admin Boot up to 2.0.2. Affected is an unknown function of the file /system/dictData/loadDictItem. The manipulation leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-269478 is the identifier assigned to this vulnerability.</description><pubDate>Sun, 23 Jun 2024 02:42:44 +0000</pubDate></item><item><title>CVE-2024-38319 | IBM Security SOAR code execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38319</link><description>IBM Security SOAR 51.0.2.0 could allow an authenticated user to execute malicious code loaded from a specially crafted script.  IBM X-Force ID:  294830.</description><pubDate>Sat, 22 Jun 2024 19:13:46 +0000</pubDate></item><item><title>CVE-2024-5443 | Remote Code Execution via Path Traversal in parisneo/lollms</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5443</link><description>CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`""`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions up to 5.9.0, and has been addressed in version 9.8.</description><pubDate>Sat, 22 Jun 2024 16:26:20 +0000</pubDate></item><item><title>CVE-2024-6253 | itsourcecode Online Food Ordering System purchase.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6253</link><description>A vulnerability was found in itsourcecode Online Food Ordering System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file /purchase.php. The manipulation of the argument customer leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269420.</description><pubDate>Sat, 22 Jun 2024 14:17:10 +0000</pubDate></item><item><title>CVE-2024-6252 | Zorlan SkyCaiji Task cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6252</link><description>A vulnerability has been found in Zorlan SkyCaiji up to 2.8 and classified as problematic. Affected by this vulnerability is an unknown functionality of the component Task Handler. The manipulation of the argument onerror leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-269419.</description><pubDate>Sat, 22 Jun 2024 12:26:58 +0000</pubDate></item><item><title>CVE-2024-6251 | playSMS New Phonebook cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6251</link><description>A vulnerability, which was classified as problematic, was found in playSMS 1.4.3. Affected is an unknown function of the file /index.php?app=main&amp;amp;inc=feature_phonebook&amp;amp;op=phonebook_list of the component New Phonebook Handler. The manipulation of the argument name/email leads to basic cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-269418 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Sat, 22 Jun 2024 11:36:27 +0000</pubDate></item><item><title>CVE-2024-38379 | Apache Allura: Stored authenticated XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38379</link><description>Apache Allura's neighborhood settings are vulnerable to a stored XSS attack.Â  Only neighborhood admins can access these settings, so the scope of risk is limited to configurations where neighborhood admins are not fully trusted.

This issue affects Apache Allura: from 1.4.0 through 1.17.0.

Users are recommended to upgrade to version 1.17.1, which fixes the issue.</description><pubDate>Sat, 22 Jun 2024 09:23:30 +0000</pubDate></item><item><title>CVE-2024-3593 | UberMenu &amp;lt;= 3.8.3 - Cross-Site Request Forgery to Settings Reset</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3593</link><description>The UberMenu plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 3.8.3. This is due to missing or incorrect nonce validation on the ubermenu_delete_all_item_settings and ubermenu_reset_settings functions. This makes it possible for unauthenticated attackers to delete and reset the plugin's settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Sat, 22 Jun 2024 05:57:25 +0000</pubDate></item><item><title>CVE-2024-5596 | ARMember Premium &amp;lt;= 6.7 - Cross-Site Request Forgery via multiple functions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5596</link><description>The ARMember Premium plugin for WordPress is vulnerable to Cross-Site Request Forgery in versions up to, and including, 6.7. This is due to incorrectly implemented nonce validation function on multiple functions. This makes it possible for unauthenticated attackers to modify, or delete user meta and plugin options which can lead to limited privilege escalation.</description><pubDate>Sat, 22 Jun 2024 05:57:25 +0000</pubDate></item><item><title>CVE-2024-4940 | Open Redirect in gradio-app/gradio</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4940</link><description>An open redirect vulnerability exists in the gradio-app/gradio, affecting the latest version. The vulnerability allows an attacker to redirect users to arbitrary websites, which can be exploited for phishing attacks, Cross-site Scripting (XSS), Server-Side Request Forgery (SSRF), amongst others. This issue is due to improper validation of user-supplied input in the handling of URLs. Attackers can exploit this vulnerability by crafting a malicious URL that, when processed by the application, redirects the user to an attacker-controlled web page.</description><pubDate>Sat, 22 Jun 2024 05:37:38 +0000</pubDate></item><item><title>CVE-2024-21514 | This affects versions of the package opencart/opencart from 0.0.0. An SQL Injection issue was identified in the Divido payment extension for...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21514</link><description>This affects versions of the package opencart/opencart from 0.0.0. An SQL Injection issue was identified in the Divido payment extension for OpenCart, which is included by default in version 3.0.3.9. As an anonymous unauthenticated user, if the Divido payment module is installed (it does not have to be enabled), it is possible to exploit SQL injection to gain unauthorised access to the backend database. For any site which is vulnerable, any unauthenticated user could exploit this to dump the entire OpenCart database, including customer PII data.</description><pubDate>Sat, 22 Jun 2024 05:27:41 +0000</pubDate></item><item><title>CVE-2024-21515 | This affects versions of the package opencart/opencart from 4.0.0.0. A reflected XSS issue was identified in the filename parameter of the a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21515</link><description>This affects versions of the package opencart/opencart from 4.0.0.0. A reflected XSS issue was identified in the filename parameter of the admin tool/log route. An attacker could obtain a user's token by tricking the user to click on a maliciously crafted URL. The user is then prompted to login and redirected again upon authentication with the payload automatically executing. If the attacked user has admin privileges, this vulnerability could be used as the start of a chain of exploits like Zip Slip or arbitrary file write vulnerabilities in the admin functionality.&#13;&#13;**Notes:**&#13;&#13;1) This is only exploitable if the attacker knows the name or path of the admin directory. The name of the directory is "admin" by default but there is a pop-up in the dashboard warning users to rename it.&#13;&#13;2) The fix for this vulnerability is incomplete. The redirect is removed so that it is not possible for an attacker to control the redirect post admin login anymore, but it is still possible to exploit this issue in admin if the user is authenticated as an admin already.</description><pubDate>Sat, 22 Jun 2024 05:27:41 +0000</pubDate></item><item><title>CVE-2024-21516 | This affects versions of the package opencart/opencart from 4.0.0.0. A reflected XSS issue was identified in the directory parameter of admi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21516</link><description>This affects versions of the package opencart/opencart from 4.0.0.0. A reflected XSS issue was identified in the directory parameter of admin common/filemanager.list route. An attacker could obtain a user's token by tricking the user to click on a maliciously crafted URL. The user is then prompted to login and redirected again upon authentication with the payload automatically executing. If the attacked user has admin privileges, this vulnerability could be used as the start of a chain of exploits like Zip Slip or arbitrary file write vulnerabilities in the admin functionality.&#13;&#13;**Notes:**&#13;&#13;1) This is only exploitable if the attacker knows the name or path of the admin directory. The name of the directory is "admin" by default but there is a pop-up in the dashboard warning users to rename it.&#13;&#13;2) The fix for this vulnerability is incomplete. The redirect is removed so that it is not possible for an attacker to control the redirect post admin login anymore, but it is still possible to exploit this issue in admin if the user is authenticated as an admin already.</description><pubDate>Sat, 22 Jun 2024 05:27:42 +0000</pubDate></item><item><title>CVE-2024-21517 | This affects versions of the package opencart/opencart from 4.0.0.0. A reflected XSS issue was identified in the redirect parameter of custo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21517</link><description>This affects versions of the package opencart/opencart from 4.0.0.0. A reflected XSS issue was identified in the redirect parameter of customer account/login route. An attacker can inject arbitrary HTML and Javascript into the page response. As this vulnerability is present in the account functionality it could be used to target and attack customers of the OpenCart shop.&#13;&#13;**Notes:**&#13;&#13;1) The fix for this vulnerability is incomplete</description><pubDate>Sat, 22 Jun 2024 05:27:42 +0000</pubDate></item><item><title>CVE-2024-21518 | This affects versions of the package opencart/opencart from 4.0.0.0. A Zip Slip issue was identified via the marketplace installer due to im...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21518</link><description>This affects versions of the package opencart/opencart from 4.0.0.0. A Zip Slip issue was identified via the marketplace installer due to improper sanitization of the target path, allowing files within a malicious archive to traverse the filesystem and be extracted to arbitrary locations. An attacker can create arbitrary files in the web root of the application and overwrite other existing files by exploiting this vulnerability.</description><pubDate>Sat, 22 Jun 2024 05:27:43 +0000</pubDate></item><item><title>CVE-2024-21519 | This affects versions of the package opencart/opencart from 4.0.0.0. An Arbitrary File Creation issue was identified via the database restor...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21519</link><description>This affects versions of the package opencart/opencart from 4.0.0.0. An Arbitrary File Creation issue was identified via the database restoration functionality. By injecting PHP code into the database, an attacker with admin privileges can create a backup file with an arbitrary filename (including the extension), within /system/storage/backup.&#13;&#13;**Note:**&#13;&#13;It is less likely for the created file to be available within the web root, as part of the security recommendations for the application suggest moving the storage path outside of the web root.</description><pubDate>Sat, 22 Jun 2024 05:27:43 +0000</pubDate></item><item><title>CVE-2024-4874 | Bricks Builder &amp;lt;= 1.9.8 - Insecure Direct Object Reference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4874</link><description>The Bricks Builder plugin for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 1.9.8 via the postId parameter due to missing validation on a user controlled key. This makes it possible for authenticated attackers, with Contributor-level access and above, to modify posts and pages created by other users including admins. As a requirement for this, an admin would have to enable access to the editor specifically for such a user or enable it for all users with a certain user account type.</description><pubDate>Sat, 22 Jun 2024 04:41:42 +0000</pubDate></item><item><title>CVE-2024-5965 | Mosaic &amp;lt;= 1.7.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Button Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5965</link><description>The Mosaic theme for WordPress is vulnerable to Stored Cross-Site Scripting via the âlinkâ parameter within the theme's Button shortcode in all versions up to, and including, 1.7.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 22 Jun 2024 03:37:02 +0000</pubDate></item><item><title>CVE-2024-5966 | Grey Opaque &amp;lt;= 2.0.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Download-Button Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5966</link><description>The Grey Opaque theme for WordPress is vulnerable to Stored Cross-Site Scripting via the âurlâ parameter within the theme's Download-Button shortcode in all versions up to, and including, 2.0.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 22 Jun 2024 03:37:02 +0000</pubDate></item><item><title>CVE-2024-2484 | Orbit Fox by ThemeIsle &amp;lt;= 2.10.34 - Authenticated (Contributor+) Stored Cross-Site Scripting via Services and Post Type Grid Widgets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2484</link><description>The Orbit Fox by ThemeIsle plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Services and Post Type Grid widgets in all versions up to, and including, 2.10.34 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 22 Jun 2024 02:21:36 +0000</pubDate></item><item><title>CVE-2024-4313 | Table Addons for Elementor &amp;lt;= 2.1.2 - Authenticated (Contributor+) Stored Cross-Site Scripting via _id Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4313</link><description>The Table Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the â_idâ parameter in all versions up to, and including, 2.1.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 22 Jun 2024 02:21:36 +0000</pubDate></item><item><title>CVE-2024-5346 | Flatsome | Multi-Purpose Responsive WooCommerce Theme &amp;lt;= 3.18.7 - Authenticated (Contributor+) Stored Cross-Site Scripting via Multiple Shortcodes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5346</link><description>The Flatsome theme for WordPress is vulnerable to Stored Cross-Site Scripting via the UX Countdown, Video Button, UX Video, UX Slider, UX Sidebar, and UX Payment Icons shortcodes in all versions up to, and including, 3.18.7 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 22 Jun 2024 02:21:36 +0000</pubDate></item><item><title>CVE-2024-5791 | Appointment Booking and Online Scheduling &amp;lt;= 4.4.2 - Missing Authorization to Unauthenticated Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5791</link><description>The Online Booking &amp; Scheduling Calendar for WordPress by vcita plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'wp_id' parameter in all versions up to, and including, 4.4.2 due to missing authorization checks on processAction function, as well as insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts that will execute whenever a user accesses a wp-admin dashboard.</description><pubDate>Sat, 22 Jun 2024 02:21:37 +0000</pubDate></item><item><title>CVE-2024-6120 | Sparkle Demo Importer &amp;lt;= 1.4.7 - Missing Authorization to Authorized(Subscriber+) Post/Pages/Attachements Deletion and Demo Data Import</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6120</link><description>The Sparkle Demo Importer plugin for WordPress is vulnerable to unauthorized database reset and demo data import due to a missing capability check on the multiple functions in all versions up to and including 1.4.7. This makes it possible for authenticated attackers, with Subscriber-level access and above, to delete all posts, pages, and uploaded files, as well as download and install a limited set of demo plugins.</description><pubDate>Fri, 21 Jun 2024 23:42:55 +0000</pubDate></item><item><title>CVE-2014-5470 | Actual Analyzer through 2014-08-29 allows code execution via shell metacharacters because untrusted input is used for part of the input data...</title><link>https://www.cve.org/CVERecord?id=CVE-2014-5470</link><description>Actual Analyzer through 2014-08-29 allows code execution via shell metacharacters because untrusted input is used for part of the input data passed to an eval operation.</description><pubDate>Fri, 21 Jun 2024 22:21:39 +0000</pubDate></item><item><title>CVE-2022-42974 | In Kostal PIKO 1.5-1 MP plus HMI OEM p 1.0.1, the web application for the Solar Panel is vulnerable to a Stored Cross-Site Scripting (XSS) a...</title><link>https://www.cve.org/CVERecord?id=CVE-2022-42974</link><description>In Kostal PIKO 1.5-1 MP plus HMI OEM p 1.0.1, the web application for the Solar Panel is vulnerable to a Stored Cross-Site Scripting (XSS) attack on /file.bootloader.upload.html. The application fails to sanitize the parameter filename, in a POST request to /file.bootloader.upload.html for a system update, thus allowing one to inject HTML and/or JavaScript on the page that will then be processed and stored by the application. Any subsequent requests to pages that retrieve the malicious content will automatically exploit the vulnerability on the victim's browser. This also happens because the tag is loaded in the function innerHTML in the page HTML.</description><pubDate>Fri, 21 Jun 2024 22:21:39 +0000</pubDate></item><item><title>CVE-2024-34989 | In the module RSI PDF/HTML catalog evolution (prestapdf) &lt;= 7.0.0 from RSI for PrestaShop, a guest can perform SQL injection via `PrestaPDFP...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34989</link><description>In the module RSI PDF/HTML catalog evolution (prestapdf) &lt;= 7.0.0 from RSI for PrestaShop, a guest can perform SQL injection via `PrestaPDFProductListModuleFrontController::queryDb().'</description><pubDate>Fri, 21 Jun 2024 22:21:40 +0000</pubDate></item><item><title>CVE-2024-36532 | Insecure permissions in kruise v1.6.2 allows attackers to access sensitive data and escalate privileges by obtaining the service account's t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36532</link><description>Insecure permissions in kruise v1.6.2 allows attackers to access sensitive data and escalate privileges by obtaining the service account's token.</description><pubDate>Fri, 21 Jun 2024 22:21:40 +0000</pubDate></item><item><title>CVE-2012-6664 | Multiple directory traversal vulnerabilities in the TFTP Server in Distinct Intranet Servers 3.10 and earlier allow remote attackers to read...</title><link>https://www.cve.org/CVERecord?id=CVE-2012-6664</link><description>Multiple directory traversal vulnerabilities in the TFTP Server in Distinct Intranet Servers 3.10 and earlier allow remote attackers to read or write arbitrary files via a .. (dot dot) in the (1) get or (2) put commands.</description><pubDate>Fri, 21 Jun 2024 21:51:10 +0000</pubDate></item><item><title>CVE-2024-34452 | CMSimple_XH 1.7.6 allows XSS by uploading a crafted SVG document.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34452</link><description>CMSimple_XH 1.7.6 allows XSS by uploading a crafted SVG document.</description><pubDate>Fri, 21 Jun 2024 21:31:08 +0000</pubDate></item><item><title>CVE-2024-37654 | An issue in BAS-IP AV-01D, AV-01MD, AV-01MFD, AV-01ED, AV-01KD, AV-01BD, AV-01KBD, AV-02D, AV-02IDE, AV-02IDR, AV-02IPD, AV-02FDE, AV-02FDR,...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37654</link><description>An issue in BAS-IP AV-01D, AV-01MD, AV-01MFD, AV-01ED, AV-01KD, AV-01BD, AV-01KBD, AV-02D, AV-02IDE, AV-02IDR, AV-02IPD, AV-02FDE, AV-02FDR, AV-03D, AV-03BD, AV-04AFD, AV-04ASD, AV-04FD, AV-04SD, AV-05FD, AV-05SD, AA-07BD, AA-07BDI, BA-04BD, BA-04MD, BA-08BD, BA-08MD, BA-12BD, BA-12MD, CR-02BD before 3.9.2 allows a remote attacker to obtain sensitive information via a crafted HTTP GET request.</description><pubDate>Fri, 21 Jun 2024 21:31:09 +0000</pubDate></item><item><title>CVE-2024-37694 | ArcGIS Enterprise Server 10.8.0 allows a remote attacker to obtain sensitive information because /arcgis/rest/services does not require auth...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37694</link><description>ArcGIS Enterprise Server 10.8.0 allows a remote attacker to obtain sensitive information because /arcgis/rest/services does not require authentication.</description><pubDate>Fri, 21 Jun 2024 21:31:09 +0000</pubDate></item><item><title>CVE-2020-27352 | When generating the systemd service units for the docker snap (and other similar snaps), snapd does not specify Delegate=yes - as a result s...</title><link>https://www.cve.org/CVERecord?id=CVE-2020-27352</link><description>When generating the systemd service units for the docker snap (and other similar snaps), snapd does not specify Delegate=yes - as a result systemd will move processes from the containers created and managed by these snaps into the cgroup of the main daemon within the snap itself when reloading system units. This may grant additional privileges to a container within the snap that were not originally intended.</description><pubDate>Fri, 21 Jun 2024 20:19:05 +0000</pubDate></item><item><title>CVE-2023-37898 | Safe mode Cross-site Scripting (XSS) vulnerability in Joplin</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37898</link><description>Joplin is a free, open source note taking and to-do application. A Cross-site Scripting (XSS) vulnerability allows an untrusted note opened in safe mode to execute arbitrary code. `packages/renderer/MarkupToHtml.ts` renders note content in safe mode by surrounding it with &lt;pre&gt; and &lt;/pre&gt;, without escaping any interior HTML tags. Thus, an attacker can create a note that closes the opening &lt;pre&gt; tag, then includes HTML that runs JavaScript. Because the rendered markdown iframe has the same origin as the toplevel document and is not sandboxed, any scripts running in the preview iframe can access the top variable and, thus, access the toplevel NodeJS `require` function. `require` can then be used to import modules like fs or child_process and run arbitrary commands. This issue has been addressed in version 2.12.9 and all users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Fri, 21 Jun 2024 19:57:35 +0000</pubDate></item><item><title>CVE-2023-38506 | Cross-site Scripting (XSS) when pasting HTML into the rich text editor in Joplin</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38506</link><description>Joplin is a free, open source note taking and to-do application. A Cross-site Scripting (XSS) vulnerability allows pasting untrusted data into the rich text editor to execute arbitrary code. HTML pasted into the rich text editor is not sanitized (or not sanitized properly). As such, the `onload` attribute of pasted images can execute arbitrary code. Because the TinyMCE editor frame does not use the `sandbox` attribute, such scripts can access NodeJS's `require` through the `top` variable. From this, an attacker can run arbitrary commands. This issue has been addressed in version 2.12.10 and users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Fri, 21 Jun 2024 19:47:19 +0000</pubDate></item><item><title>CVE-2023-39517 | Cross site scripting (XSS) when clicking on an untrusted `&amp;lt;map&amp;gt;` link in Joplin</title><link>https://www.cve.org/CVERecord?id=CVE-2023-39517</link><description>Joplin is a free, open source note taking and to-do application. A Cross site scripting (XSS) vulnerability in affected versions allows clicking on an untrusted image link to execute arbitrary shell commands. The HTML sanitizer (`packages/renderer/htmlUtils.ts::sanitizeHtml`) preserves `&lt;map&gt;` `&lt;area /&gt;` links. However, unlike `&lt;a&gt;` links, the `target` and `href` attributes are not removed. Additionally, because the note preview pane isn't sandboxed to prevent top navigation, links with `target` set to `_top` can replace the toplevel electron page. Because any toplevel electron page, with Joplin's setup, has access to `require` and can require node libraries, a malicious replacement toplevel page can import `child_process` and execute arbitrary shell commands. This issue has been fixed in commit 7c52c3e9a81a52ef1b42a951f9deb9d378d59b0f which is included in release version 2.12.8. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Fri, 21 Jun 2024 19:47:20 +0000</pubDate></item><item><title>CVE-2023-45673 | Arbitrary code execution on click of PDF links in Joplin</title><link>https://www.cve.org/CVERecord?id=CVE-2023-45673</link><description>Joplin is a free, open source note taking and to-do application. A remote code execution (RCE) vulnerability in affected versions allows clicking on a link in a PDF in an untrusted note to execute arbitrary shell commands. Clicking links in PDFs allows for arbitrary code execution because Joplin desktop: 1. has not disabled top redirection for note viewer iframes, and 2. and has node integration enabled. This is a remote code execution vulnerability that impacts anyone who attaches untrusted PDFs to notes and has the icon enabled. This issue has been addressed in version 2.13.3. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Fri, 21 Jun 2024 19:47:20 +0000</pubDate></item><item><title>CVE-2024-6241 | Pear Admin Boot getDictItems sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6241</link><description>A vulnerability was found in Pear Admin Boot up to 2.0.2 and classified as critical. This issue affects the function getDictItems of the file /system/dictData/getDictItems/. The manipulation with the input ,user(),1,1 leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-269375.</description><pubDate>Fri, 21 Jun 2024 17:14:50 +0000</pubDate></item><item><title>CVE-2024-37673 | Cross Site Scripting vulnerability in Tessi Docubase Document Management product 5.x allows a remote attacker to execute arbitrary code via ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37673</link><description>Cross Site Scripting vulnerability in Tessi Docubase Document Management product 5.x allows a remote attacker to execute arbitrary code via the filename parameter.</description><pubDate>Fri, 21 Jun 2024 16:45:47 +0000</pubDate></item><item><title>CVE-2024-37675 | Cross Site Scripting vulnerability in Tessi Docubase Document Management product 5.x allows a remote attacker to execute arbitrary code via ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37675</link><description>Cross Site Scripting vulnerability in Tessi Docubase Document Management product 5.x allows a remote attacker to execute arbitrary code via the parameter "sectionContent" related to the functionality of adding notes to an uploaded file.</description><pubDate>Fri, 21 Jun 2024 16:45:47 +0000</pubDate></item><item><title>CVE-2024-35537 | TVS Motor Company Limited TVS Connect Android v4.6.0 and IOS v5.0.0 was discovered to insecurely handle the RSA key pair, allowing attackers...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35537</link><description>TVS Motor Company Limited TVS Connect Android v4.6.0 and IOS v5.0.0 was discovered to insecurely handle the RSA key pair, allowing attackers to possibly access sensitive information via decryption.</description><pubDate>Fri, 21 Jun 2024 16:35:53 +0000</pubDate></item><item><title>CVE-2024-37672 | Cross Site Scripting vulnerability in Tessi Docubase Document Management product 5.x allows a remote attacker to execute arbitrary code via ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37672</link><description>Cross Site Scripting vulnerability in Tessi Docubase Document Management product 5.x allows a remote attacker to execute arbitrary code via the idactivity parameter.</description><pubDate>Fri, 21 Jun 2024 16:35:53 +0000</pubDate></item><item><title>CVE-2024-37671 | Cross Site Scripting vulnerability in Tessi Docubase Document Management product 5.x allows a remote attacker to execute arbitrary code via ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37671</link><description>Cross Site Scripting vulnerability in Tessi Docubase Document Management product 5.x allows a remote attacker to execute arbitrary code via the page parameter.</description><pubDate>Fri, 21 Jun 2024 16:20:06 +0000</pubDate></item><item><title>CVE-2023-38389 | WordPress Jupiter X Core plugin &amp;lt;= 3.3.8 - Unauthenticated Account Takeover vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38389</link><description>Incorrect Authorization vulnerability in Artbees JupiterX Core allows Accessing Functionality Not Properly Constrained by ACLs.This issue affects JupiterX Core: from n/a through 3.3.8.</description><pubDate>Fri, 21 Jun 2024 16:20:07 +0000</pubDate></item><item><title>CVE-2024-35767 | WordPress Squeeze plugin &amp;lt;= 1.4 - Arbitrary File Upload vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35767</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in Bogdan Bendziukov Squeeze allows Code Injection.This issue affects Squeeze: from n/a through 1.4.</description><pubDate>Fri, 21 Jun 2024 16:20:07 +0000</pubDate></item><item><title>CVE-2024-35778 | WordPress Slideshow SE plugin &amp;lt;= 2.5.17 - Auth. Limited Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35778</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in John West Slideshow SE allows PHP Local File Inclusion.This issue affects Slideshow SE: from n/a through 2.5.17.</description><pubDate>Fri, 21 Jun 2024 16:20:07 +0000</pubDate></item><item><title>CVE-2024-35781 | WordPress Word Balloon plugin &amp;lt;= 4.21.1 - Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35781</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in YAHMAN Word Balloon allows PHP Local File Inclusion.This issue affects Word Balloon: from n/a through 4.21.1.</description><pubDate>Fri, 21 Jun 2024 16:20:08 +0000</pubDate></item><item><title>CVE-2022-38055 | WordPress wpForo Forum plugin &amp;lt;= 2.0.9 - Auth. HTML Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2022-38055</link><description>Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS) vulnerability in gVectors Team wpForo Forum allows Content Spoofing.This issue affects wpForo Forum: from n/a through 2.0.9.</description><pubDate>Fri, 21 Jun 2024 16:20:08 +0000</pubDate></item><item><title>CVE-2022-44587 | WordPress WP 2FA plugin &amp;lt;= 2.6.3 - Sensitive Data Exposure via Log File  vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2022-44587</link><description>Insertion of Sensitive Information into Log File vulnerability in WP 2FA allows Accessing Functionality Not Properly Constrained by ACLs.This issue affects WP 2FA: from n/a through 2.6.3.</description><pubDate>Fri, 21 Jun 2024 16:20:09 +0000</pubDate></item><item><title>CVE-2022-44593 | WordPress Solid Security plugin &amp;lt;= 9.3.1 - IP Spoofing Leading to Denial of Service vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2022-44593</link><description>Use of Less Trusted Source vulnerability in SolidWP Solid Security allows HTTP DoS.This issue affects Solid Security: from n/a through 9.3.1.</description><pubDate>Fri, 21 Jun 2024 16:20:09 +0000</pubDate></item><item><title>CVE-2023-45197 | The file upload plugin in Adminer and AdminerEvo allows an attacker to upload a file with a table name of â..â to the root of the Adminer di...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-45197</link><description>The file upload plugin in Adminer and AdminerEvo allows an attacker to upload a file with a table name of â..â to the root of the Adminer directory. The attacker can effectively guess the name of the uploaded file and execute it. Adminer is no longer supported, but this issue was fixed in AdminerEvo version 4.8.3.</description><pubDate>Fri, 21 Jun 2024 14:38:15 +0000</pubDate></item><item><title>CVE-2024-37118 | WordPress Uncanny Automator Pro plugin &amp;lt;= 5.3 - Cross Site Request Forgery (CSRF) Leading to License Settings Reset vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37118</link><description>Cross Site Request Forgery (CSRF) vulnerability in Uncanny Owl Uncanny Automator Pro.This issue affects Uncanny Automator Pro: from n/a through 5.3.</description><pubDate>Fri, 21 Jun 2024 13:54:15 +0000</pubDate></item><item><title>CVE-2024-37198 | WordPress Digital Newspaper theme &amp;lt;= 1.1.5 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37198</link><description>Cross-Site Request Forgery (CSRF) vulnerability in blazethemes Digital Newspaper.This issue affects Digital Newspaper: from n/a through 1.1.5.</description><pubDate>Fri, 21 Jun 2024 13:54:15 +0000</pubDate></item><item><title>CVE-2024-37212 | WordPress AliExpress Dropshipping with AliNext Lite plugin &amp;lt;= 3.3.5 - CSRF to PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37212</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Ali2Woo Ali2Woo Lite.This issue affects Ali2Woo Lite: from n/a through 3.3.5.</description><pubDate>Fri, 21 Jun 2024 13:54:15 +0000</pubDate></item><item><title>CVE-2022-43453 | WordPress WP Tools plugin &amp;lt;= 3.41 - Auth. Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2022-43453</link><description>Missing Authorization vulnerability in Bill Minozzi WP Tools.This issue affects WP Tools: from n/a through 3.41.</description><pubDate>Fri, 21 Jun 2024 13:44:18 +0000</pubDate></item><item><title>CVE-2022-45803 | WordPress Gutenberg Forms plugin &amp;lt;= 2.2.8.3 - Auth. Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2022-45803</link><description>Missing Authorization vulnerability in Nikolay Strikhar WordPress Form Builder Plugin â Gutenberg Forms.This issue affects WordPress Form Builder Plugin â Gutenberg Forms: from n/a through 2.2.8.3.</description><pubDate>Fri, 21 Jun 2024 13:44:18 +0000</pubDate></item><item><title>CVE-2023-51375 | WordPress EmbedPress plugin &amp;lt;= 3.8.3 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51375</link><description>Missing Authorization vulnerability in WPDeveloper EmbedPress.This issue affects EmbedPress: from n/a through 3.8.3.</description><pubDate>Fri, 21 Jun 2024 13:44:18 +0000</pubDate></item><item><title>CVE-2024-37227 | WordPress Newsletters plugin &amp;lt;= 4.9.7 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37227</link><description>Cross Site Request Forgery (CSRF) vulnerability in Tribulant Newsletters.This issue affects Newsletters: from n/a through 4.9.7.</description><pubDate>Fri, 21 Jun 2024 13:44:19 +0000</pubDate></item><item><title>CVE-2024-37230 | WordPress Book Landing Page theme &amp;lt;= 1.2.3 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37230</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Rara Theme Book Landing Page.This issue affects Book Landing Page: from n/a through 1.2.3.</description><pubDate>Fri, 21 Jun 2024 13:44:19 +0000</pubDate></item><item><title>CVE-2024-6240 | Improper privilege management vulnerability in Parallels Desktop</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6240</link><description>Improper privilege management vulnerability in Parallels Desktop Software, which affects versions earlier than 19.3.0. An attacker could add malicious code in a script and populate the BASH_ENV environment variable with the path to the malicious script, executing on application startup. An attacker could exploit this vulnerability to escalate privileges on the system.</description><pubDate>Fri, 21 Jun 2024 13:44:19 +0000</pubDate></item><item><title>CVE-2024-6239 | Poppler: pdfinfo: crash in broken documents when using -dests parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6239</link><description>A flaw was found in the Poppler's Pdfinfo utility. This issue occurs when using -dests parameter with pdfinfo utility. By using certain malformed input files, an attacker could cause the utility to crash, leading to a denial of service.</description><pubDate>Fri, 21 Jun 2024 13:34:34 +0000</pubDate></item><item><title>CVE-2024-35770 | WordPress Vimeography plugin &amp;lt;= 2.4.1 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35770</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Dave Kiss Vimeography: Vimeo Video Gallery WordPress Plugin.This issue affects Vimeography: Vimeo Video Gallery WordPress Plugin: from n/a through 2.4.1.</description><pubDate>Fri, 21 Jun 2024 13:24:20 +0000</pubDate></item><item><title>CVE-2024-35771 | WordPress Customizr theme &amp;lt;= 4.4.21 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35771</link><description>Cross-Site Request Forgery (CSRF) vulnerability in presscustomizr Customizr.This issue affects Customizr: from n/a through 4.4.21.</description><pubDate>Fri, 21 Jun 2024 13:24:20 +0000</pubDate></item><item><title>CVE-2024-35772 | WordPress Hueman theme &amp;lt;= 3.7.24 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35772</link><description>Cross-Site Request Forgery (CSRF) vulnerability in presscustomizr Hueman.This issue affects Hueman: from n/a through 3.7.24.</description><pubDate>Fri, 21 Jun 2024 13:24:21 +0000</pubDate></item><item><title>CVE-2024-35776 | WordPress phpinfo() WP plugin &amp;lt;= 5.0 - Unauthenticated Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35776</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Exeebit phpinfo() WP.This issue affects phpinfo() WP: from n/a through 5.0.</description><pubDate>Fri, 21 Jun 2024 13:24:21 +0000</pubDate></item><item><title>CVE-2024-5059 | WordPress Event Monster Plugin &amp;lt;= 1.4.0 - Sensitive Data Exposure vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5059</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in A WP Life Event Management Tickets Booking.This issue affects Event Management Tickets Booking: from n/a through 1.4.0.</description><pubDate>Fri, 21 Jun 2024 13:24:22 +0000</pubDate></item><item><title>CVE-2024-35757 | WordPress Easy Age Verify plugin &amp;lt;= 1.8.2 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35757</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in 5 Star Plugins Easy Age Verify allows Stored XSS.This issue affects Easy Age Verify: from n/a through 1.8.2.</description><pubDate>Fri, 21 Jun 2024 13:01:38 +0000</pubDate></item><item><title>CVE-2024-35758 | WordPress Interface theme &amp;lt;= 3.1.0 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35758</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Theme Horse Interface allows Stored XSS.This issue affects Interface: from n/a through 3.1.0.</description><pubDate>Fri, 21 Jun 2024 13:01:38 +0000</pubDate></item><item><title>CVE-2024-35759 | WordPress WP Job Portal plugin &amp;lt;= 2.1.3 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35759</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in WP Job Portal allows Stored XSS.This issue affects WP Job Portal: from n/a through 2.1.3.</description><pubDate>Fri, 21 Jun 2024 13:01:39 +0000</pubDate></item><item><title>CVE-2024-35760 | WordPress WP Job Portal â A Complete Job Board plugin &amp;lt;= 2.1.3 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35760</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in WP Job Portal allows Stored XSS.This issue affects WP Job Portal: from n/a through 2.1.3.</description><pubDate>Fri, 21 Jun 2024 12:45:59 +0000</pubDate></item><item><title>CVE-2024-35761 | WordPress Online Booking &amp;amp; Scheduling Calendar for WordPress by vcita plugin &amp;lt;= 4.4.0 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35761</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in vCita Online Booking &amp; Scheduling Calendar for WordPress by vcita allows Stored XSS.This issue affects Online Booking &amp; Scheduling Calendar for WordPress by vcita: from n/a through 4.4.0.</description><pubDate>Fri, 21 Jun 2024 12:45:59 +0000</pubDate></item><item><title>CVE-2024-35762 | WordPress Serious Slider plugin &amp;lt;= 1.2.4 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35762</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Cryout Creations Serious Slider allows Stored XSS.This issue affects Serious Slider: from n/a through 1.2.4.</description><pubDate>Fri, 21 Jun 2024 12:46:00 +0000</pubDate></item><item><title>CVE-2024-35763 | WordPress Excellent theme &amp;lt;= 1.2.9 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35763</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Theme Freesia Excellent allows Stored XSS.This issue affects Excellent: from n/a through 1.2.9.</description><pubDate>Fri, 21 Jun 2024 12:46:00 +0000</pubDate></item><item><title>CVE-2024-35764 | WordPress Church Admin plugin &amp;lt;= 4.4.4 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35764</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Andy Moyle Church Admin allows Stored XSS.This issue affects Church Admin: from n/a through 4.4.4.</description><pubDate>Fri, 21 Jun 2024 12:46:00 +0000</pubDate></item><item><title>CVE-2024-35766 | WordPress WPPizza â A Restaurant Plugin plugin &amp;lt;= 3.18.13 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35766</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in ollybach WPPizza allows Reflected XSS.This issue affects WPPizza: from n/a through 3.18.13.</description><pubDate>Fri, 21 Jun 2024 12:46:01 +0000</pubDate></item><item><title>CVE-2024-35768 | WordPress Page Builder: Live Composer plugin &amp;lt;= 1.5.42 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35768</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Live Composer Team Page Builder: Live Composer allows Stored XSS.This issue affects Page Builder: Live Composer: from n/a through 1.5.42.</description><pubDate>Fri, 21 Jun 2024 12:46:01 +0000</pubDate></item><item><title>CVE-2024-35769 | WordPress Slideshow SE plugin &amp;lt;= 2.5.17 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35769</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in John West Slideshow SE allows Stored XSS.This issue affects Slideshow SE: from n/a through 2.5.17.</description><pubDate>Fri, 21 Jun 2024 12:14:31 +0000</pubDate></item><item><title>CVE-2024-35774 | WordPress DImage 360 plugin &amp;lt;= 2.0  - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35774</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Dâarteweb DImage 360 allows Stored XSS.This issue affects DImage 360: from n/a through 2.0.</description><pubDate>Fri, 21 Jun 2024 12:14:31 +0000</pubDate></item><item><title>CVE-2024-35779 | WordPress Page Builder: Live Composer plugin &amp;lt;= 1.5.42 - Contributor+ Shortcode Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35779</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Live Composer Team Page Builder: Live Composer allows Stored XSS.This issue affects Page Builder: Live Composer: from n/a through 1.5.42.</description><pubDate>Fri, 21 Jun 2024 11:52:32 +0000</pubDate></item><item><title>CVE-2024-5058 | WordPress Typing Text plugin &amp;lt;= 1.2.5 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5058</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in WPDeveloper Typing Text allows Stored XSS.This issue affects Typing Text: from n/a through 1.2.5.</description><pubDate>Fri, 21 Jun 2024 11:52:32 +0000</pubDate></item><item><title>CVE-2024-34777 | dma-mapping: benchmark: fix node id validation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34777</link><description>In the Linux kernel, the following vulnerability has been resolved:

dma-mapping: benchmark: fix node id validation

While validating node ids in map_benchmark_ioctl(), node_possible() may
be provided with invalid argument outside of [0,MAX_NUMNODES-1] range
leading to:

BUG: KASAN: wild-memory-access in map_benchmark_ioctl (kernel/dma/map_benchmark.c:214)
Read of size 8 at addr 1fffffff8ccb6398 by task dma_map_benchma/971
CPU: 7 PID: 971 Comm: dma_map_benchma Not tainted 6.9.0-rc6 #37
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
Call Trace:
 
dump_stack_lvl (lib/dump_stack.c:117)
kasan_report (mm/kasan/report.c:603)
kasan_check_range (mm/kasan/generic.c:189)
variable_test_bit (arch/x86/include/asm/bitops.h:227) [inline]
arch_test_bit (arch/x86/include/asm/bitops.h:239) [inline]
_test_bit at (include/asm-generic/bitops/instrumented-non-atomic.h:142) [inline]
node_state (include/linux/nodemask.h:423) [inline]
map_benchmark_ioctl (kernel/dma/map_benchmark.c:214)
full_proxy_unlocked_ioctl (fs/debugfs/file.c:333)
__x64_sys_ioctl (fs/ioctl.c:890)
do_syscall_64 (arch/x86/entry/common.c:83)
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Compare node ids with sane bounds first. NUMA_NO_NODE is considered a
special valid case meaning that benchmarking kthreads won't be bound to a
cpuset of a given node.

Found by Linux Verification Center (linuxtesting.org).</description><pubDate>Fri, 21 Jun 2024 11:22:30 +0000</pubDate></item><item><title>CVE-2024-36288 | SUNRPC: Fix loop termination condition in gss_free_in_token_pages()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36288</link><description>In the Linux kernel, the following vulnerability has been resolved:

SUNRPC: Fix loop termination condition in gss_free_in_token_pages()

The in_token-&gt;pages[] array is not NULL terminated. This results in
the following KASAN splat:

  KASAN: maybe wild-memory-access in range [0x04a2013400000008-0x04a201340000000f]</description><pubDate>Fri, 21 Jun 2024 11:22:31 +0000</pubDate></item><item><title>CVE-2024-36477 | tpm_tis_spi: Account for SPI header when allocating TPM SPI xfer buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36477</link><description>In the Linux kernel, the following vulnerability has been resolved:

tpm_tis_spi: Account for SPI header when allocating TPM SPI xfer buffer

The TPM SPI transfer mechanism uses MAX_SPI_FRAMESIZE for computing the
maximum transfer length and the size of the transfer buffer. As such, it
does not account for the 4 bytes of header that prepends the SPI data
frame. This can result in out-of-bounds accesses and was confirmed with
KASAN.

Introduce SPI_HDRSIZE to account for the header and use to allocate the
transfer buffer.</description><pubDate>Fri, 21 Jun 2024 11:22:31 +0000</pubDate></item><item><title>CVE-2024-36481 | tracing/probes: fix error check in parse_btf_field()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36481</link><description>In the Linux kernel, the following vulnerability has been resolved:

tracing/probes: fix error check in parse_btf_field()

btf_find_struct_member() might return NULL or an error via the
ERR_PTR() macro. However, its caller in parse_btf_field() only checks
for the NULL condition. Fix this by using IS_ERR() and returning the
error up the stack.</description><pubDate>Fri, 21 Jun 2024 11:22:31 +0000</pubDate></item><item><title>CVE-2024-38662 | bpf: Allow delete from sockmap/sockhash only if update is allowed</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38662</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Allow delete from sockmap/sockhash only if update is allowed

We have seen an influx of syzkaller reports where a BPF program attached to
a tracepoint triggers a locking rule violation by performing a map_delete
on a sockmap/sockhash.

We don't intend to support this artificial use scenario. Extend the
existing verifier allowed-program-type check for updating sockmap/sockhash
to also cover deleting from a map.

From now on only BPF programs which were previously allowed to update
sockmap/sockhash can delete from these map types.</description><pubDate>Fri, 21 Jun 2024 11:22:32 +0000</pubDate></item><item><title>CVE-2024-38780 | dma-buf/sw-sync: don&amp;#x27;t enable IRQ from sync_print_obj()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38780</link><description>In the Linux kernel, the following vulnerability has been resolved:

dma-buf/sw-sync: don't enable IRQ from sync_print_obj()

Since commit a6aa8fca4d79 ("dma-buf/sw-sync: Reduce irqsave/irqrestore from
known context") by error replaced spin_unlock_irqrestore() with
spin_unlock_irq() for both sync_debugfs_show() and sync_print_obj() despite
sync_print_obj() is called from sync_debugfs_show(), lockdep complains
inconsistent lock state warning.

Use plain spin_{lock,unlock}() for sync_print_obj(), for
sync_debugfs_show() is already using spin_{lock,unlock}_irq().</description><pubDate>Fri, 21 Jun 2024 11:22:32 +0000</pubDate></item><item><title>CVE-2024-39277 | dma-mapping: benchmark: handle NUMA_NO_NODE correctly</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39277</link><description>In the Linux kernel, the following vulnerability has been resolved:

dma-mapping: benchmark: handle NUMA_NO_NODE correctly

cpumask_of_node() can be called for NUMA_NO_NODE inside do_map_benchmark()
resulting in the following sanitizer report:

UBSAN: array-index-out-of-bounds in ./arch/x86/include/asm/topology.h:72:28
index -1 is out of range for type 'cpumask [64][1]'
CPU: 1 PID: 990 Comm: dma_map_benchma Not tainted 6.9.0-rc6 #29
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
Call Trace:
 
dump_stack_lvl (lib/dump_stack.c:117)
ubsan_epilogue (lib/ubsan.c:232)
__ubsan_handle_out_of_bounds (lib/ubsan.c:429)
cpumask_of_node (arch/x86/include/asm/topology.h:72) [inline]
do_map_benchmark (kernel/dma/map_benchmark.c:104)
map_benchmark_ioctl (kernel/dma/map_benchmark.c:246)
full_proxy_unlocked_ioctl (fs/debugfs/file.c:333)
__x64_sys_ioctl (fs/ioctl.c:890)
do_syscall_64 (arch/x86/entry/common.c:83)
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Use cpumask_of_node() in place when binding a kernel thread to a cpuset
of a particular node.

Note that the provided node id is checked inside map_benchmark_ioctl().
It's just a NUMA_NO_NODE case which is not handled properly later.

Found by Linux Verification Center (linuxtesting.org).</description><pubDate>Fri, 21 Jun 2024 11:22:33 +0000</pubDate></item><item><title>CVE-2023-52884 | Input: cyapa - add missing input core locking to suspend/resume functions</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52884</link><description>In the Linux kernel, the following vulnerability has been resolved:

Input: cyapa - add missing input core locking to suspend/resume functions

Grab input-&gt;mutex during suspend/resume functions like it is done in
other input drivers. This fixes the following warning during system
suspend/resume cycle on Samsung Exynos5250-based Snow Chromebook:

------------[ cut here ]------------
WARNING: CPU: 1 PID: 1680 at drivers/input/input.c:2291 input_device_enabled+0x68/0x6c
Modules linked in: ...
CPU: 1 PID: 1680 Comm: kworker/u4:12 Tainted: G        W          6.6.0-rc5-next-20231009 #14109
Hardware name: Samsung Exynos (Flattened Device Tree)
Workqueue: events_unbound async_run_entry_fn
 unwind_backtrace from show_stack+0x10/0x14
 show_stack from dump_stack_lvl+0x58/0x70
 dump_stack_lvl from __warn+0x1a8/0x1cc
 __warn from warn_slowpath_fmt+0x18c/0x1b4
 warn_slowpath_fmt from input_device_enabled+0x68/0x6c
 input_device_enabled from cyapa_gen3_set_power_mode+0x13c/0x1dc
 cyapa_gen3_set_power_mode from cyapa_reinitialize+0x10c/0x15c
 cyapa_reinitialize from cyapa_resume+0x48/0x98
 cyapa_resume from dpm_run_callback+0x90/0x298
 dpm_run_callback from device_resume+0xb4/0x258
 device_resume from async_resume+0x20/0x64
 async_resume from async_run_entry_fn+0x40/0x15c
 async_run_entry_fn from process_scheduled_works+0xbc/0x6a8
 process_scheduled_works from worker_thread+0x188/0x454
 worker_thread from kthread+0x108/0x140
 kthread from ret_from_fork+0x14/0x28
Exception stack(0xf1625fb0 to 0xf1625ff8)
...
---[ end trace 0000000000000000 ]---
...
------------[ cut here ]------------
WARNING: CPU: 1 PID: 1680 at drivers/input/input.c:2291 input_device_enabled+0x68/0x6c
Modules linked in: ...
CPU: 1 PID: 1680 Comm: kworker/u4:12 Tainted: G        W          6.6.0-rc5-next-20231009 #14109
Hardware name: Samsung Exynos (Flattened Device Tree)
Workqueue: events_unbound async_run_entry_fn
 unwind_backtrace from show_stack+0x10/0x14
 show_stack from dump_stack_lvl+0x58/0x70
 dump_stack_lvl from __warn+0x1a8/0x1cc
 __warn from warn_slowpath_fmt+0x18c/0x1b4
 warn_slowpath_fmt from input_device_enabled+0x68/0x6c
 input_device_enabled from cyapa_gen3_set_power_mode+0x13c/0x1dc
 cyapa_gen3_set_power_mode from cyapa_reinitialize+0x10c/0x15c
 cyapa_reinitialize from cyapa_resume+0x48/0x98
 cyapa_resume from dpm_run_callback+0x90/0x298
 dpm_run_callback from device_resume+0xb4/0x258
 device_resume from async_resume+0x20/0x64
 async_resume from async_run_entry_fn+0x40/0x15c
 async_run_entry_fn from process_scheduled_works+0xbc/0x6a8
 process_scheduled_works from worker_thread+0x188/0x454
 worker_thread from kthread+0x108/0x140
 kthread from ret_from_fork+0x14/0x28
Exception stack(0xf1625fb0 to 0xf1625ff8)
...
---[ end trace 0000000000000000 ]---</description><pubDate>Fri, 21 Jun 2024 10:34:50 +0000</pubDate></item><item><title>CVE-2024-31076 | genirq/cpuhotplug, x86/vector: Prevent vector leak during CPU offline</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31076</link><description>In the Linux kernel, the following vulnerability has been resolved:

genirq/cpuhotplug, x86/vector: Prevent vector leak during CPU offline

The absence of IRQD_MOVE_PCNTXT prevents immediate effectiveness of
interrupt affinity reconfiguration via procfs. Instead, the change is
deferred until the next instance of the interrupt being triggered on the
original CPU.

When the interrupt next triggers on the original CPU, the new affinity is
enforced within __irq_move_irq(). A vector is allocated from the new CPU,
but the old vector on the original CPU remains and is not immediately
reclaimed. Instead, apicd-&gt;move_in_progress is flagged, and the reclaiming
process is delayed until the next trigger of the interrupt on the new CPU.

Upon the subsequent triggering of the interrupt on the new CPU,
irq_complete_move() adds a task to the old CPU's vector_cleanup list if it
remains online. Subsequently, the timer on the old CPU iterates over its
vector_cleanup list, reclaiming old vectors.

However, a rare scenario arises if the old CPU is outgoing before the
interrupt triggers again on the new CPU.

In that case irq_force_complete_move() is not invoked on the outgoing CPU
to reclaim the old apicd-&gt;prev_vector because the interrupt isn't currently
affine to the outgoing CPU, and irq_needs_fixup() returns false. Even
though __vector_schedule_cleanup() is later called on the new CPU, it
doesn't reclaim apicd-&gt;prev_vector; instead, it simply resets both
apicd-&gt;move_in_progress and apicd-&gt;prev_vector to 0.

As a result, the vector remains unreclaimed in vector_matrix, leading to a
CPU vector leak.

To address this issue, move the invocation of irq_force_complete_move()
before the irq_needs_fixup() call to reclaim apicd-&gt;prev_vector, if the
interrupt is currently or used to be affine to the outgoing CPU.

Additionally, reclaim the vector in __vector_schedule_cleanup() as well,
following a warning message, although theoretically it should never see
apicd-&gt;move_in_progress with apicd-&gt;prev_cpu pointing to an offline CPU.</description><pubDate>Fri, 21 Jun 2024 10:34:50 +0000</pubDate></item><item><title>CVE-2024-33619 | efi: libstub: only free priv.runtime_map when allocated</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33619</link><description>In the Linux kernel, the following vulnerability has been resolved:

efi: libstub: only free priv.runtime_map when allocated

priv.runtime_map is only allocated when efi_novamap is not set.
Otherwise, it is an uninitialized value.  In the error path, it is freed
unconditionally.  Avoid passing an uninitialized value to free_pool.
Free priv.runtime_map only when it was allocated.

This bug was discovered and resolved using Coverity Static Analysis
Security Testing (SAST) by Synopsys, Inc.</description><pubDate>Fri, 21 Jun 2024 10:34:51 +0000</pubDate></item><item><title>CVE-2024-33621 | ipvlan: Dont Use skb-&amp;gt;sk in ipvlan_process_v{4,6}_outbound</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33621</link><description>In the Linux kernel, the following vulnerability has been resolved:

ipvlan: Dont Use skb-&gt;sk in ipvlan_process_v{4,6}_outbound

Raw packet from PF_PACKET socket ontop of an IPv6-backed ipvlan device will
hit WARN_ON_ONCE() in sk_mc_loop() through sch_direct_xmit() path.

WARNING: CPU: 2 PID: 0 at net/core/sock.c:775 sk_mc_loop+0x2d/0x70
Modules linked in: sch_netem ipvlan rfkill cirrus drm_shmem_helper sg drm_kms_helper
CPU: 2 PID: 0 Comm: swapper/2 Kdump: loaded Not tainted 6.9.0+ #279
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:sk_mc_loop+0x2d/0x70
Code: fa 0f 1f 44 00 00 65 0f b7 15 f7 96 a3 4f 31 c0 66 85 d2 75 26 48 85 ff 74 1c
RSP: 0018:ffffa9584015cd78 EFLAGS: 00010212
RAX: 0000000000000011 RBX: ffff91e585793e00 RCX: 0000000002c6a001
RDX: 0000000000000000 RSI: 0000000000000040 RDI: ffff91e589c0f000
RBP: ffff91e5855bd100 R08: 0000000000000000 R09: 3d00545216f43d00
R10: ffff91e584fdcc50 R11: 00000060dd8616f4 R12: ffff91e58132d000
R13: ffff91e584fdcc68 R14: ffff91e5869ce800 R15: ffff91e589c0f000
FS:  0000000000000000(0000) GS:ffff91e898100000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f788f7c44c0 CR3: 0000000008e1a000 CR4: 00000000000006f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:

 ? __warn (kernel/panic.c:693)
 ? sk_mc_loop (net/core/sock.c:760)
 ? report_bug (lib/bug.c:201 lib/bug.c:219)
 ? handle_bug (arch/x86/kernel/traps.c:239)
 ? exc_invalid_op (arch/x86/kernel/traps.c:260 (discriminator 1))
 ? asm_exc_invalid_op (./arch/x86/include/asm/idtentry.h:621)
 ? sk_mc_loop (net/core/sock.c:760)
 ip6_finish_output2 (net/ipv6/ip6_output.c:83 (discriminator 1))
 ? nf_hook_slow (net/netfilter/core.c:626)
 ip6_finish_output (net/ipv6/ip6_output.c:222)
 ? __pfx_ip6_finish_output (net/ipv6/ip6_output.c:215)
 ipvlan_xmit_mode_l3 (drivers/net/ipvlan/ipvlan_core.c:602) ipvlan
 ipvlan_start_xmit (drivers/net/ipvlan/ipvlan_main.c:226) ipvlan
 dev_hard_start_xmit (net/core/dev.c:3594)
 sch_direct_xmit (net/sched/sch_generic.c:343)
 __qdisc_run (net/sched/sch_generic.c:416)
 net_tx_action (net/core/dev.c:5286)
 handle_softirqs (kernel/softirq.c:555)
 __irq_exit_rcu (kernel/softirq.c:589)
 sysvec_apic_timer_interrupt (arch/x86/kernel/apic/apic.c:1043)

The warning triggers as this:
packet_sendmsg
   packet_snd //skb-&gt;sk is packet sk
      __dev_queue_xmit
         __dev_xmit_skb //q-&gt;enqueue is not NULL
             __qdisc_run
               sch_direct_xmit
                 dev_hard_start_xmit
                   ipvlan_start_xmit
                      ipvlan_xmit_mode_l3 //l3 mode
                        ipvlan_process_outbound //vepa flag
                          ipvlan_process_v6_outbound
                            ip6_local_out
                                __ip6_finish_output
                                  ip6_finish_output2 //multicast packet
                                    sk_mc_loop //sk-&gt;sk_family is AF_PACKET

Call ip{6}_local_out() with NULL sk in ipvlan as other tunnels to fix this.</description><pubDate>Fri, 21 Jun 2024 10:34:51 +0000</pubDate></item><item><title>CVE-2024-36244 | net/sched: taprio: extend minimum interval restriction to entire cycle too</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36244</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/sched: taprio: extend minimum interval restriction to entire cycle too

It is possible for syzbot to side-step the restriction imposed by the
blamed commit in the Fixes: tag, because the taprio UAPI permits a
cycle-time different from (and potentially shorter than) the sum of
entry intervals.

We need one more restriction, which is that the cycle time itself must
be larger than N * ETH_ZLEN bit times, where N is the number of schedule
entries. This restriction needs to apply regardless of whether the cycle
time came from the user or was the implicit, auto-calculated value, so
we move the existing "cycle == 0" check outside the "if "(!new-&gt;cycle_time)"
branch. This way covers both conditions and scenarios.

Add a selftest which illustrates the issue triggered by syzbot.</description><pubDate>Fri, 21 Jun 2024 10:34:51 +0000</pubDate></item><item><title>CVE-2024-36270 | netfilter: tproxy: bail out if IP has been disabled on the device</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36270</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: tproxy: bail out if IP has been disabled on the device

syzbot reports:
general protection fault, probably for non-canonical address 0xdffffc0000000003: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000018-0x000000000000001f]
[..]
RIP: 0010:nf_tproxy_laddr4+0xb7/0x340 net/ipv4/netfilter/nf_tproxy_ipv4.c:62
Call Trace:
 nft_tproxy_eval_v4 net/netfilter/nft_tproxy.c:56 [inline]
 nft_tproxy_eval+0xa9a/0x1a00 net/netfilter/nft_tproxy.c:168

__in_dev_get_rcu() can return NULL, so check for this.</description><pubDate>Fri, 21 Jun 2024 10:34:52 +0000</pubDate></item><item><title>CVE-2024-36281 | net/mlx5: Use mlx5_ipsec_rx_status_destroy to correctly delete status rules</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36281</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Use mlx5_ipsec_rx_status_destroy to correctly delete status rules

rx_create no longer allocates a modify_hdr instance that needs to be
cleaned up. The mlx5_modify_header_dealloc call will lead to a NULL pointer
dereference. A leak in the rules also previously occurred since there are
now two rules populated related to status.

  BUG: kernel NULL pointer dereference, address: 0000000000000000
  #PF: supervisor read access in kernel mode
  #PF: error_code(0x0000) - not-present page
  PGD 109907067 P4D 109907067 PUD 116890067 PMD 0
  Oops: 0000 [#1] SMP
  CPU: 1 PID: 484 Comm: ip Not tainted 6.9.0-rc2-rrameshbabu+ #254
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS Arch Linux 1.16.3-1-1 04/01/2014
  RIP: 0010:mlx5_modify_header_dealloc+0xd/0x70
  
  Call Trace:
   
   ? show_regs+0x60/0x70
   ? __die+0x24/0x70
   ? page_fault_oops+0x15f/0x430
   ? free_to_partial_list.constprop.0+0x79/0x150
   ? do_user_addr_fault+0x2c9/0x5c0
   ? exc_page_fault+0x63/0x110
   ? asm_exc_page_fault+0x27/0x30
   ? mlx5_modify_header_dealloc+0xd/0x70
   rx_create+0x374/0x590
   rx_add_rule+0x3ad/0x500
   ? rx_add_rule+0x3ad/0x500
   ? mlx5_cmd_exec+0x2c/0x40
   ? mlx5_create_ipsec_obj+0xd6/0x200
   mlx5e_accel_ipsec_fs_add_rule+0x31/0xf0
   mlx5e_xfrm_add_state+0x426/0xc00</description><pubDate>Fri, 21 Jun 2024 10:34:52 +0000</pubDate></item><item><title>CVE-2024-36286 | netfilter: nfnetlink_queue: acquire rcu_read_lock() in instance_destroy_rcu()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36286</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nfnetlink_queue: acquire rcu_read_lock() in instance_destroy_rcu()

syzbot reported that nf_reinject() could be called without rcu_read_lock() :

WARNING: suspicious RCU usage
6.9.0-rc7-syzkaller-02060-g5c1672705a1a #0 Not tainted

net/netfilter/nfnetlink_queue.c:263 suspicious rcu_dereference_check() usage!

other info that might help us debug this:

rcu_scheduler_active = 2, debug_locks = 1
2 locks held by syz-executor.4/13427:
  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_lock_acquire include/linux/rcupdate.h:329 [inline]
  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_do_batch kernel/rcu/tree.c:2190 [inline]
  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_core+0xa86/0x1830 kernel/rcu/tree.c:2471
  #1: ffff88801ca92958 (&amp;amp;inst-&gt;lock){+.-.}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]
  #1: ffff88801ca92958 (&amp;amp;inst-&gt;lock){+.-.}-{2:2}, at: nfqnl_flush net/netfilter/nfnetlink_queue.c:405 [inline]
  #1: ffff88801ca92958 (&amp;amp;inst-&gt;lock){+.-.}-{2:2}, at: instance_destroy_rcu+0x30/0x220 net/netfilter/nfnetlink_queue.c:172

stack backtrace:
CPU: 0 PID: 13427 Comm: syz-executor.4 Not tainted 6.9.0-rc7-syzkaller-02060-g5c1672705a1a #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024
Call Trace:
 
  __dump_stack lib/dump_stack.c:88 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114
  lockdep_rcu_suspicious+0x221/0x340 kernel/locking/lockdep.c:6712
  nf_reinject net/netfilter/nfnetlink_queue.c:323 [inline]
  nfqnl_reinject+0x6ec/0x1120 net/netfilter/nfnetlink_queue.c:397
  nfqnl_flush net/netfilter/nfnetlink_queue.c:410 [inline]
  instance_destroy_rcu+0x1ae/0x220 net/netfilter/nfnetlink_queue.c:172
  rcu_do_batch kernel/rcu/tree.c:2196 [inline]
  rcu_core+0xafd/0x1830 kernel/rcu/tree.c:2471
  handle_softirqs+0x2d6/0x990 kernel/softirq.c:554
  __do_softirq kernel/softirq.c:588 [inline]
  invoke_softirq kernel/softirq.c:428 [inline]
  __irq_exit_rcu+0xf4/0x1c0 kernel/softirq.c:637
  irq_exit_rcu+0x9/0x30 kernel/softirq.c:649
  instr_sysvec_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1043 [inline]
  sysvec_apic_timer_interrupt+0xa6/0xc0 arch/x86/kernel/apic/apic.c:1043</description><pubDate>Fri, 21 Jun 2024 10:34:52 +0000</pubDate></item><item><title>CVE-2024-36478 | null_blk: fix null-ptr-dereference while configuring &amp;#x27;power&amp;#x27; and &amp;#x27;submit_queues&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36478</link><description>In the Linux kernel, the following vulnerability has been resolved:

null_blk: fix null-ptr-dereference while configuring 'power' and 'submit_queues'

Writing 'power' and 'submit_queues' concurrently will trigger kernel
panic:

Test script:

modprobe null_blk nr_devices=0
mkdir -p /sys/kernel/config/nullb/nullb0
while true; do echo 1 &gt; submit_queues; echo 4 &gt; submit_queues; done &amp;
while true; do echo 1 &gt; power; echo 0 &gt; power; done

Test result:

BUG: kernel NULL pointer dereference, address: 0000000000000148
Oops: 0000 [#1] PREEMPT SMP
RIP: 0010:__lock_acquire+0x41d/0x28f0
Call Trace:
 
 lock_acquire+0x121/0x450
 down_write+0x5f/0x1d0
 simple_recursive_removal+0x12f/0x5c0
 blk_mq_debugfs_unregister_hctxs+0x7c/0x100
 blk_mq_update_nr_hw_queues+0x4a3/0x720
 nullb_update_nr_hw_queues+0x71/0xf0 [null_blk]
 nullb_device_submit_queues_store+0x79/0xf0 [null_blk]
 configfs_write_iter+0x119/0x1e0
 vfs_write+0x326/0x730
 ksys_write+0x74/0x150

This is because del_gendisk() can concurrent with
blk_mq_update_nr_hw_queues():

nullb_device_power_store	nullb_apply_submit_queues
 null_del_dev
 del_gendisk
				 nullb_update_nr_hw_queues
				  if (!dev-&gt;nullb)
				  // still set while gendisk is deleted
				   return 0
				  blk_mq_update_nr_hw_queues
 dev-&gt;nullb = NULL

Fix this problem by resuing the global mutex to protect
nullb_device_power_store() and nullb_update_nr_hw_queues() from configfs.</description><pubDate>Fri, 21 Jun 2024 10:34:53 +0000</pubDate></item><item><title>CVE-2024-36484 | net: relax socket state check at accept time.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36484</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: relax socket state check at accept time.

Christoph reported the following splat:

WARNING: CPU: 1 PID: 772 at net/ipv4/af_inet.c:761 __inet_accept+0x1f4/0x4a0
Modules linked in:
CPU: 1 PID: 772 Comm: syz-executor510 Not tainted 6.9.0-rc7-g7da7119fe22b #56
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
RIP: 0010:__inet_accept+0x1f4/0x4a0 net/ipv4/af_inet.c:759
Code: 04 38 84 c0 0f 85 87 00 00 00 41 c7 04 24 03 00 00 00 48 83 c4 10 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc e8 ec b7 da fd &lt;0f&gt; 0b e9 7f fe ff ff e8 e0 b7 da fd 0f 0b e9 fe fe ff ff 89 d9 80
RSP: 0018:ffffc90000c2fc58 EFLAGS: 00010293
RAX: ffffffff836bdd14 RBX: 0000000000000000 RCX: ffff888104668000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: dffffc0000000000 R08: ffffffff836bdb89 R09: fffff52000185f64
R10: dffffc0000000000 R11: fffff52000185f64 R12: dffffc0000000000
R13: 1ffff92000185f98 R14: ffff88810754d880 R15: ffff8881007b7800
FS:  000000001c772880(0000) GS:ffff88811b280000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fb9fcf2e178 CR3: 00000001045d2002 CR4: 0000000000770ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 
 inet_accept+0x138/0x1d0 net/ipv4/af_inet.c:786
 do_accept+0x435/0x620 net/socket.c:1929
 __sys_accept4_file net/socket.c:1969 [inline]
 __sys_accept4+0x9b/0x110 net/socket.c:1999
 __do_sys_accept net/socket.c:2016 [inline]
 __se_sys_accept net/socket.c:2013 [inline]
 __x64_sys_accept+0x7d/0x90 net/socket.c:2013
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0x58/0x100 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x76/0x7e
RIP: 0033:0x4315f9
Code: fd ff 48 81 c4 80 00 00 00 e9 f1 fe ff ff 0f 1f 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 0f 83 ab b4 fd ff c3 66 2e 0f 1f 84 00 00 00 00
RSP: 002b:00007ffdb26d9c78 EFLAGS: 00000246 ORIG_RAX: 000000000000002b
RAX: ffffffffffffffda RBX: 0000000000400300 RCX: 00000000004315f9
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000004
RBP: 00000000006e1018 R08: 0000000000400300 R09: 0000000000400300
R10: 0000000000400300 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000040cdf0 R14: 000000000040ce80 R15: 0000000000000055
 

The reproducer invokes shutdown() before entering the listener status.
After commit 94062790aedb ("tcp: defer shutdown(SEND_SHUTDOWN) for
TCP_SYN_RECV sockets"), the above causes the child to reach the accept
syscall in FIN_WAIT1 status.

Eric noted we can relax the existing assertion in __inet_accept()</description><pubDate>Fri, 21 Jun 2024 10:34:53 +0000</pubDate></item><item><title>CVE-2024-36489 | tls: fix missing memory barrier in tls_init</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36489</link><description>In the Linux kernel, the following vulnerability has been resolved:

tls: fix missing memory barrier in tls_init

In tls_init(), a write memory barrier is missing, and store-store
reordering may cause NULL dereference in tls_{setsockopt,getsockopt}.

CPU0                               CPU1
-----                              -----
// In tls_init()
// In tls_ctx_create()
ctx = kzalloc()
ctx-&gt;sk_proto = READ_ONCE(sk-&gt;sk_prot) -(1)

// In update_sk_prot()
WRITE_ONCE(sk-&gt;sk_prot, tls_prots)     -(2)

                                   // In sock_common_setsockopt()
                                   READ_ONCE(sk-&gt;sk_prot)-&gt;setsockopt()

                                   // In tls_{setsockopt,getsockopt}()
                                   ctx-&gt;sk_proto-&gt;setsockopt()    -(3)

In the above scenario, when (1) and (2) are reordered, (3) can observe
the NULL value of ctx-&gt;sk_proto, causing NULL dereference.

To fix it, we rely on rcu_assign_pointer() which implies the release
barrier semantic. By moving rcu_assign_pointer() after ctx-&gt;sk_proto is
initialized, we can ensure that ctx-&gt;sk_proto are visible when
changing sk-&gt;sk_prot.</description><pubDate>Fri, 21 Jun 2024 10:34:53 +0000</pubDate></item><item><title>CVE-2024-37353 | virtio: delete vq in vp_find_vqs_msix() when request_irq() fails</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37353</link><description>In the Linux kernel, the following vulnerability has been resolved:

virtio: delete vq in vp_find_vqs_msix() when request_irq() fails

When request_irq() fails, error path calls vp_del_vqs(). There, as vq is
present in the list, free_irq() is called for the same vector. That
causes following splat:

[    0.414355] Trying to free already-free IRQ 27
[    0.414403] WARNING: CPU: 1 PID: 1 at kernel/irq/manage.c:1899 free_irq+0x1a1/0x2d0
[    0.414510] Modules linked in:
[    0.414540] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 6.9.0-rc4+ #27
[    0.414540] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-1.fc39 04/01/2014
[    0.414540] RIP: 0010:free_irq+0x1a1/0x2d0
[    0.414540] Code: 1e 00 48 83 c4 08 48 89 e8 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc 90 8b 74 24 04 48 c7 c7 98 80 6c b1 e8 00 c9 f7 ff 90 &lt;0f&gt; 0b 90 90 48 89 ee 4c 89 ef e8 e0 20 b8 00 49 8b 47 40 48 8b 40
[    0.414540] RSP: 0000:ffffb71480013ae0 EFLAGS: 00010086
[    0.414540] RAX: 0000000000000000 RBX: ffffa099c2722000 RCX: 0000000000000000
[    0.414540] RDX: 0000000000000000 RSI: ffffb71480013998 RDI: 0000000000000001
[    0.414540] RBP: 0000000000000246 R08: 00000000ffffdfff R09: 0000000000000001
[    0.414540] R10: 00000000ffffdfff R11: ffffffffb18729c0 R12: ffffa099c1c91760
[    0.414540] R13: ffffa099c1c916a4 R14: ffffa099c1d2f200 R15: ffffa099c1c91600
[    0.414540] FS:  0000000000000000(0000) GS:ffffa099fec40000(0000) knlGS:0000000000000000
[    0.414540] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[    0.414540] CR2: 0000000000000000 CR3: 0000000008e3e001 CR4: 0000000000370ef0
[    0.414540] Call Trace:
[    0.414540]  
[    0.414540]  ? __warn+0x80/0x120
[    0.414540]  ? free_irq+0x1a1/0x2d0
[    0.414540]  ? report_bug+0x164/0x190
[    0.414540]  ? handle_bug+0x3b/0x70
[    0.414540]  ? exc_invalid_op+0x17/0x70
[    0.414540]  ? asm_exc_invalid_op+0x1a/0x20
[    0.414540]  ? free_irq+0x1a1/0x2d0
[    0.414540]  vp_del_vqs+0xc1/0x220
[    0.414540]  vp_find_vqs_msix+0x305/0x470
[    0.414540]  vp_find_vqs+0x3e/0x1a0
[    0.414540]  vp_modern_find_vqs+0x1b/0x70
[    0.414540]  init_vqs+0x387/0x600
[    0.414540]  virtnet_probe+0x50a/0xc80
[    0.414540]  virtio_dev_probe+0x1e0/0x2b0
[    0.414540]  really_probe+0xc0/0x2c0
[    0.414540]  ? __pfx___driver_attach+0x10/0x10
[    0.414540]  __driver_probe_device+0x73/0x120
[    0.414540]  driver_probe_device+0x1f/0xe0
[    0.414540]  __driver_attach+0x88/0x180
[    0.414540]  bus_for_each_dev+0x85/0xd0
[    0.414540]  bus_add_driver+0xec/0x1f0
[    0.414540]  driver_register+0x59/0x100
[    0.414540]  ? __pfx_virtio_net_driver_init+0x10/0x10
[    0.414540]  virtio_net_driver_init+0x90/0xb0
[    0.414540]  do_one_initcall+0x58/0x230
[    0.414540]  kernel_init_freeable+0x1a3/0x2d0
[    0.414540]  ? __pfx_kernel_init+0x10/0x10
[    0.414540]  kernel_init+0x1a/0x1c0
[    0.414540]  ret_from_fork+0x31/0x50
[    0.414540]  ? __pfx_kernel_init+0x10/0x10
[    0.414540]  ret_from_fork_asm+0x1a/0x30
[    0.414540]  

Fix this by calling deleting the current vq when request_irq() fails.</description><pubDate>Fri, 21 Jun 2024 10:34:54 +0000</pubDate></item><item><title>CVE-2024-37356 | tcp: Fix shift-out-of-bounds in dctcp_update_alpha().</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37356</link><description>In the Linux kernel, the following vulnerability has been resolved:

tcp: Fix shift-out-of-bounds in dctcp_update_alpha().

In dctcp_update_alpha(), we use a module parameter dctcp_shift_g
as follows:

  alpha -= min_not_zero(alpha, alpha &gt;&gt; dctcp_shift_g);
  ...
  delivered_ce &lt;&lt;= (10 - dctcp_shift_g);

It seems syzkaller started fuzzing module parameters and triggered
shift-out-of-bounds [0] by setting 100 to dctcp_shift_g:

  memcpy((void*)0x20000080,
         "/sys/module/tcp_dctcp/parameters/dctcp_shift_g\000", 47);
  res = syscall(__NR_openat, /*fd=*/0xffffffffffffff9cul, /*file=*/0x20000080ul,
                /*flags=*/2ul, /*mode=*/0ul);
  memcpy((void*)0x20000000, "100\000", 4);
  syscall(__NR_write, /*fd=*/r[0], /*val=*/0x20000000ul, /*len=*/4ul);

Let's limit the max value of dctcp_shift_g by param_set_uint_minmax().

With this patch:

  # echo 10 &gt; /sys/module/tcp_dctcp/parameters/dctcp_shift_g
  # cat /sys/module/tcp_dctcp/parameters/dctcp_shift_g
  10
  # echo 11 &gt; /sys/module/tcp_dctcp/parameters/dctcp_shift_g
  -bash: echo: write error: Invalid argument

[0]:
UBSAN: shift-out-of-bounds in net/ipv4/tcp_dctcp.c:143:12
shift exponent 100 is too large for 32-bit type 'u32' (aka 'unsigned int')
CPU: 0 PID: 8083 Comm: syz-executor345 Not tainted 6.9.0-05151-g1b294a1f3561 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
1.13.0-1ubuntu1.1 04/01/2014
Call Trace:
 
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x201/0x300 lib/dump_stack.c:114
 ubsan_epilogue lib/ubsan.c:231 [inline]
 __ubsan_handle_shift_out_of_bounds+0x346/0x3a0 lib/ubsan.c:468
 dctcp_update_alpha+0x540/0x570 net/ipv4/tcp_dctcp.c:143
 tcp_in_ack_event net/ipv4/tcp_input.c:3802 [inline]
 tcp_ack+0x17b1/0x3bc0 net/ipv4/tcp_input.c:3948
 tcp_rcv_state_process+0x57a/0x2290 net/ipv4/tcp_input.c:6711
 tcp_v4_do_rcv+0x764/0xc40 net/ipv4/tcp_ipv4.c:1937
 sk_backlog_rcv include/net/sock.h:1106 [inline]
 __release_sock+0x20f/0x350 net/core/sock.c:2983
 release_sock+0x61/0x1f0 net/core/sock.c:3549
 mptcp_subflow_shutdown+0x3d0/0x620 net/mptcp/protocol.c:2907
 mptcp_check_send_data_fin+0x225/0x410 net/mptcp/protocol.c:2976
 __mptcp_close+0x238/0xad0 net/mptcp/protocol.c:3072
 mptcp_close+0x2a/0x1a0 net/mptcp/protocol.c:3127
 inet_release+0x190/0x1f0 net/ipv4/af_inet.c:437
 __sock_release net/socket.c:659 [inline]
 sock_close+0xc0/0x240 net/socket.c:1421
 __fput+0x41b/0x890 fs/file_table.c:422
 task_work_run+0x23b/0x300 kernel/task_work.c:180
 exit_task_work include/linux/task_work.h:38 [inline]
 do_exit+0x9c8/0x2540 kernel/exit.c:878
 do_group_exit+0x201/0x2b0 kernel/exit.c:1027
 __do_sys_exit_group kernel/exit.c:1038 [inline]
 __se_sys_exit_group kernel/exit.c:1036 [inline]
 __x64_sys_exit_group+0x3f/0x40 kernel/exit.c:1036
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xe4/0x240 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x67/0x6f
RIP: 0033:0x7f6c2b5005b6
Code: Unable to access opcode bytes at 0x7f6c2b50058c.
RSP: 002b:00007ffe883eb948 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
RAX: ffffffffffffffda RBX: 00007f6c2b5862f0 RCX: 00007f6c2b5005b6
RDX: 0000000000000001 RSI: 000000000000003c RDI: 0000000000000001
RBP: 0000000000000001 R08: 00000000000000e7 R09: ffffffffffffffc0
R10: 0000000000000006 R11: 0000000000000246 R12: 00007f6c2b5862f0
R13: 0000000000000001 R14: 0000000000000000 R15: 0000000000000001</description><pubDate>Fri, 21 Jun 2024 10:34:54 +0000</pubDate></item><item><title>CVE-2024-38381 | nfc: nci: Fix uninit-value in nci_rx_work</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38381</link><description>In the Linux kernel, the following vulnerability has been resolved:

nfc: nci: Fix uninit-value in nci_rx_work

syzbot reported the following uninit-value access issue [1]

nci_rx_work() parses received packet from ndev-&gt;rx_q. It should be
validated header size, payload size and total packet size before
processing the packet. If an invalid packet is detected, it should be
silently discarded.</description><pubDate>Fri, 21 Jun 2024 10:34:54 +0000</pubDate></item><item><title>CVE-2024-38388 | ALSA: hda/cs_dsp_ctl: Use private_free for control cleanup</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38388</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: hda/cs_dsp_ctl: Use private_free for control cleanup

Use the control private_free callback to free the associated data
block. This ensures that the memory won't leak, whatever way the
control gets destroyed.

The original implementation didn't actually remove the ALSA
controls in hda_cs_dsp_control_remove(). It only freed the internal
tracking structure. This meant it was possible to remove/unload the
amp driver while leaving its ALSA controls still present in the
soundcard. Obviously attempting to access them could cause segfaults
or at least dereferencing stale pointers.</description><pubDate>Fri, 21 Jun 2024 10:34:55 +0000</pubDate></item><item><title>CVE-2024-38390 | drm/msm/a6xx: Avoid a nullptr dereference when speedbin setting fails</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38390</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm/a6xx: Avoid a nullptr dereference when speedbin setting fails

Calling a6xx_destroy() before adreno_gpu_init() leads to a null pointer
dereference on:

msm_gpu_cleanup() : platform_set_drvdata(gpu-&gt;pdev, NULL);

as gpu-&gt;pdev is only assigned in:

a6xx_gpu_init()
|_ adreno_gpu_init
    |_ msm_gpu_init()

Instead of relying on handwavy null checks down the cleanup chain,
explicitly de-allocate the LLC data and free a6xx_gpu instead.

Patchwork: https://patchwork.freedesktop.org/patch/588919/</description><pubDate>Fri, 21 Jun 2024 10:34:55 +0000</pubDate></item><item><title>CVE-2024-38391 | cxl/region: Fix cxlr_pmem leaks</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38391</link><description>In the Linux kernel, the following vulnerability has been resolved:

cxl/region: Fix cxlr_pmem leaks

Before this error path, cxlr_pmem pointed to a kzalloc() memory, free
it to avoid this memory leaking.</description><pubDate>Fri, 21 Jun 2024 10:34:55 +0000</pubDate></item><item><title>CVE-2024-38621 | media: stk1160: fix bounds checking in stk1160_copy_video()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38621</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: stk1160: fix bounds checking in stk1160_copy_video()

The subtract in this condition is reversed.  The -&gt;length is the length
of the buffer.  The -&gt;bytesused is how many bytes we have copied thus
far.  When the condition is reversed that means the result of the
subtraction is always negative but since it's unsigned then the result
is a very high positive value.  That means the overflow check is never
true.

Additionally, the -&gt;bytesused doesn't actually work for this purpose
because we're not writing to "buf-&gt;mem + buf-&gt;bytesused".  Instead, the
math to calculate the destination where we are writing is a bit
involved.  You calculate the number of full lines already written,
multiply by two, skip a line if necessary so that we start on an odd
numbered line, and add the offset into the line.

To fix this buffer overflow, just take the actual destination where we
are writing, if the offset is already out of bounds print an error and
return.  Otherwise, write up to buf-&gt;length bytes.</description><pubDate>Fri, 21 Jun 2024 10:34:56 +0000</pubDate></item><item><title>CVE-2024-38622 | drm/msm/dpu: Add callback function pointer check before its call</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38622</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm/dpu: Add callback function pointer check before its call

In dpu_core_irq_callback_handler() callback function pointer is compared to NULL,
but then callback function is unconditionally called by this pointer.
Fix this bug by adding conditional return.

Found by Linux Verification Center (linuxtesting.org) with SVACE.

Patchwork: https://patchwork.freedesktop.org/patch/588237/</description><pubDate>Fri, 21 Jun 2024 10:34:56 +0000</pubDate></item><item><title>CVE-2024-38623 | fs/ntfs3: Use variable length array instead of fixed size</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38623</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs/ntfs3: Use variable length array instead of fixed size

Should fix smatch warning:
	ntfs_set_label() error: __builtin_memcpy() 'uni-&gt;name' too small (20 vs 256)</description><pubDate>Fri, 21 Jun 2024 10:34:57 +0000</pubDate></item><item><title>CVE-2024-38624 | fs/ntfs3: Use 64 bit variable to avoid 32 bit overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38624</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs/ntfs3: Use 64 bit variable to avoid 32 bit overflow

For example, in the expression:
	vbo = 2 * vbo + skip</description><pubDate>Fri, 21 Jun 2024 10:34:57 +0000</pubDate></item><item><title>CVE-2024-38625 | fs/ntfs3: Check &amp;#x27;folio&amp;#x27; pointer for NULL</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38625</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs/ntfs3: Check 'folio' pointer for NULL

It can be NULL if bmap is called.</description><pubDate>Fri, 21 Jun 2024 10:34:57 +0000</pubDate></item><item><title>CVE-2024-38626 | fuse: clear FR_SENT when re-adding requests into pending list</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38626</link><description>In the Linux kernel, the following vulnerability has been resolved:

fuse: clear FR_SENT when re-adding requests into pending list

The following warning was reported by lee bruce:

  ------------[ cut here ]------------
  WARNING: CPU: 0 PID: 8264 at fs/fuse/dev.c:300
  fuse_request_end+0x685/0x7e0 fs/fuse/dev.c:300
  Modules linked in:
  CPU: 0 PID: 8264 Comm: ab2 Not tainted 6.9.0-rc7
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
  RIP: 0010:fuse_request_end+0x685/0x7e0 fs/fuse/dev.c:300
  ......
  Call Trace:
  
  fuse_dev_do_read.constprop.0+0xd36/0x1dd0 fs/fuse/dev.c:1334
  fuse_dev_read+0x166/0x200 fs/fuse/dev.c:1367
  call_read_iter include/linux/fs.h:2104 [inline]
  new_sync_read fs/read_write.c:395 [inline]
  vfs_read+0x85b/0xba0 fs/read_write.c:476
  ksys_read+0x12f/0x260 fs/read_write.c:619
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xce/0x260 arch/x86/entry/common.c:83
  entry_SYSCALL_64_after_hwframe+0x77/0x7f
  ......
  

The warning is due to the FUSE_NOTIFY_RESEND notify sent by the write()
syscall in the reproducer program and it happens as follows:

(1) calls fuse_dev_read() to read the INIT request
The read succeeds. During the read, bit FR_SENT will be set on the
request.
(2) calls fuse_dev_write() to send an USE_NOTIFY_RESEND notify
The resend notify will resend all processing requests, so the INIT
request is moved from processing list to pending list again.
(3) calls fuse_dev_read() with an invalid output address
fuse_dev_read() will try to copy the same INIT request to the output
address, but it will fail due to the invalid address, so the INIT
request is ended and triggers the warning in fuse_request_end().

Fix it by clearing FR_SENT when re-adding requests into pending list.</description><pubDate>Fri, 21 Jun 2024 10:34:58 +0000</pubDate></item><item><title>CVE-2024-38627 | stm class: Fix a double free in stm_register_device()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38627</link><description>In the Linux kernel, the following vulnerability has been resolved:

stm class: Fix a double free in stm_register_device()

The put_device(&amp;amp;stm-&gt;dev) call will trigger stm_device_release() which
frees "stm" so the vfree(stm) on the next line is a double free.</description><pubDate>Fri, 21 Jun 2024 10:34:58 +0000</pubDate></item><item><title>CVE-2024-38628 | usb: gadget: u_audio: Fix race condition use of controls after free during gadget unbind.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38628</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: u_audio: Fix race condition use of controls after free during gadget unbind.

Hang on to the control IDs instead of pointers since those are correctly
handled with locks.</description><pubDate>Fri, 21 Jun 2024 10:34:58 +0000</pubDate></item><item><title>CVE-2024-38629 | dmaengine: idxd: Avoid unnecessary destruction of file_ida</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38629</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: idxd: Avoid unnecessary destruction of file_ida

file_ida is allocated during cdev open and is freed accordingly
during cdev release. This sequence is guaranteed by driver file
operations. Therefore, there is no need to destroy an already empty
file_ida when the WQ cdev is removed.

Worse, ida_free() in cdev release may happen after destruction of
file_ida per WQ cdev. This can lead to accessing an id in file_ida
after it has been destroyed, resulting in a kernel panic.

Remove ida_destroy(&amp;amp;file_ida) to address these issues.</description><pubDate>Fri, 21 Jun 2024 10:34:59 +0000</pubDate></item><item><title>CVE-2024-38630 | watchdog: cpu5wdt.c: Fix use-after-free bug caused by cpu5wdt_trigger</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38630</link><description>In the Linux kernel, the following vulnerability has been resolved:

watchdog: cpu5wdt.c: Fix use-after-free bug caused by cpu5wdt_trigger

When the cpu5wdt module is removing, the origin code uses del_timer() to
de-activate the timer. If the timer handler is running, del_timer() could
not stop it and will return directly. If the port region is released by
release_region() and then the timer handler cpu5wdt_trigger() calls outb()
to write into the region that is released, the use-after-free bug will
happen.

Change del_timer() to timer_shutdown_sync() in order that the timer handler
could be finished before the port region is released.</description><pubDate>Fri, 21 Jun 2024 10:34:59 +0000</pubDate></item><item><title>CVE-2024-38631 | iio: adc: PAC1934: fix accessing out of bounds array index</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38631</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: PAC1934: fix accessing out of bounds array index

Fix accessing out of bounds array index for average
current and voltage measurements. The device itself has
only 4 channels, but in sysfs there are "fake"
channels for the average voltages and currents too.</description><pubDate>Fri, 21 Jun 2024 10:34:59 +0000</pubDate></item><item><title>CVE-2024-38632 | vfio/pci: fix potential memory leak in vfio_intx_enable()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38632</link><description>In the Linux kernel, the following vulnerability has been resolved:

vfio/pci: fix potential memory leak in vfio_intx_enable()

If vfio_irq_ctx_alloc() failed will lead to 'name' memory leak.</description><pubDate>Fri, 21 Jun 2024 10:35:00 +0000</pubDate></item><item><title>CVE-2024-38633 | serial: max3100: Update uart_driver_registered on driver removal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38633</link><description>In the Linux kernel, the following vulnerability has been resolved:

serial: max3100: Update uart_driver_registered on driver removal

The removal of the last MAX3100 device triggers the removal of
the driver. However, code doesn't update the respective global
variable and after insmod â rmmod â insmod cycle the kernel
oopses:

  max3100 spi-PRP0001:01: max3100_probe: adding port 0
  BUG: kernel NULL pointer dereference, address: 0000000000000408
  ...
  RIP: 0010:serial_core_register_port+0xa0/0x840
  ...
   max3100_probe+0x1b6/0x280 [max3100]
   spi_probe+0x8d/0xb0

Update the actual state so next time UART driver will be registered
again.

Hugo also noticed, that the error path in the probe also affected
by having the variable set, and not cleared. Instead of clearing it
move the assignment after the successfull uart_register_driver() call.</description><pubDate>Fri, 21 Jun 2024 10:35:00 +0000</pubDate></item><item><title>CVE-2024-38634 | serial: max3100: Lock port-&amp;gt;lock when calling uart_handle_cts_change()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38634</link><description>In the Linux kernel, the following vulnerability has been resolved:

serial: max3100: Lock port-&gt;lock when calling uart_handle_cts_change()

uart_handle_cts_change() has to be called with port lock taken,
Since we run it in a separate work, the lock may not be taken at
the time of running. Make sure that it's taken by explicitly doing
that. Without it we got a splat:

  WARNING: CPU: 0 PID: 10 at drivers/tty/serial/serial_core.c:3491 uart_handle_cts_change+0xa6/0xb0
  ...
  Workqueue: max3100-0 max3100_work [max3100]
  RIP: 0010:uart_handle_cts_change+0xa6/0xb0
  ...
   max3100_handlerx+0xc5/0x110 [max3100]
   max3100_work+0x12a/0x340 [max3100]</description><pubDate>Fri, 21 Jun 2024 10:35:01 +0000</pubDate></item><item><title>CVE-2024-38635 | soundwire: cadence: fix invalid PDI offset</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38635</link><description>In the Linux kernel, the following vulnerability has been resolved:

soundwire: cadence: fix invalid PDI offset

For some reason, we add an offset to the PDI, presumably to skip the
PDI0 and PDI1 which are reserved for BPT.

This code is however completely wrong and leads to an out-of-bounds
access. We were just lucky so far since we used only a couple of PDIs
and remained within the PDI array bounds.

A Fixes: tag is not provided since there are no known platforms where
the out-of-bounds would be accessed, and the initial code had problems
as well.

A follow-up patch completely removes this useless offset.</description><pubDate>Fri, 21 Jun 2024 10:35:01 +0000</pubDate></item><item><title>CVE-2024-38636 | f2fs: multidev: fix to recognize valid zero block address</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38636</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: multidev: fix to recognize valid zero block address

As reported by Yi Zhang in mailing list [1], kernel warning was catched
during zbd/010 test as below:

./check zbd/010
zbd/010 (test gap zone support with F2FS)                    [failed]
    runtime    ...  3.752s
    something found in dmesg:
    [ 4378.146781] run blktests zbd/010 at 2024-02-18 11:31:13
    [ 4378.192349] null_blk: module loaded
    [ 4378.209860] null_blk: disk nullb0 created
    [ 4378.413285] scsi_debug:sdebug_driver_probe: scsi_debug: trim
poll_queues to 0. poll_q/nr_hw = (0/1)
    [ 4378.422334] scsi host15: scsi_debug: version 0191 [20210520]
                     dev_size_mb=1024, opts=0x0, submit_queues=1, statistics=0
    [ 4378.434922] scsi 15:0:0:0: Direct-Access-ZBC Linux
scsi_debug       0191 PQ: 0 ANSI: 7
    [ 4378.443343] scsi 15:0:0:0: Power-on or device reset occurred
    [ 4378.449371] sd 15:0:0:0: Attached scsi generic sg5 type 20
    [ 4378.449418] sd 15:0:0:0: [sdf] Host-managed zoned block device
    ...
    (See '/mnt/tests/gitlab.com/api/v4/projects/19168116/repository/archive.zip/storage/blktests/blk/blktests/results/nodev/zbd/010.dmesg'

WARNING: CPU: 22 PID: 44011 at fs/iomap/iter.c:51
CPU: 22 PID: 44011 Comm: fio Not tainted 6.8.0-rc3+ #1
RIP: 0010:iomap_iter+0x32b/0x350
Call Trace:
 
 __iomap_dio_rw+0x1df/0x830
 f2fs_file_read_iter+0x156/0x3d0 [f2fs]
 aio_read+0x138/0x210
 io_submit_one+0x188/0x8c0
 __x64_sys_io_submit+0x8c/0x1a0
 do_syscall_64+0x86/0x170
 entry_SYSCALL_64_after_hwframe+0x6e/0x76

Shinichiro Kawasaki helps to analyse this issue and proposes a potential
fixing patch in [2].

Quoted from reply of Shinichiro Kawasaki:

"I confirmed that the trigger commit is dbf8e63f48af as Yi reported. I took a
look in the commit, but it looks fine to me. So I thought the cause is not
in the commit diff.

I found the WARN is printed when the f2fs is set up with multiple devices,
and read requests are mapped to the very first block of the second device in the
direct read path. In this case, f2fs_map_blocks() and f2fs_map_blocks_cached()
modify map-&gt;m_pblk as the physical block address from each block device. It
becomes zero when it is mapped to the first block of the device. However,
f2fs_iomap_begin() assumes that map-&gt;m_pblk is the physical block address of the
whole f2fs, across the all block devices. It compares map-&gt;m_pblk against
NULL_ADDR == 0, then go into the unexpected branch and sets the invalid
iomap-&gt;length. The WARN catches the invalid iomap-&gt;length.

This WARN is printed even for non-zoned block devices, by following steps.

 - Create two (non-zoned) null_blk devices memory backed with 128MB size each:
   nullb0 and nullb1.
 # mkfs.f2fs /dev/nullb0 -c /dev/nullb1
 # mount -t f2fs /dev/nullb0 "${mount_dir}"
 # dd if=/dev/zero of="${mount_dir}/test.dat" bs=1M count=192
 # dd if="${mount_dir}/test.dat" of=/dev/null bs=1M count=192 iflag=direct

..."

So, the root cause of this issue is: when multi-devices feature is on,
f2fs_map_blocks() may return zero blkaddr in non-primary device, which is
a verified valid block address, however, f2fs_iomap_begin() treats it as
an invalid block address, and then it triggers the warning in iomap
framework code.

Finally, as discussed, we decide to use a more simple and direct way that
checking (map.m_flags &amp; F2FS_MAP_MAPPED) condition instead of
(map.m_pblk != NULL_ADDR) to fix this issue.

Thanks a lot for the effort of Yi Zhang and Shinichiro Kawasaki on this
issue.

[1] https://lore.kernel.org/linux-f2fs-devel/CAHj4cs-kfojYC9i0G73PRkYzcxCTex=-vugRFeP40g_URGvnfQ@mail.gmail.com/
[2] https://lore.kernel.org/linux-f2fs-devel/gngdj77k4picagsfdtiaa7gpgnup6fsgwzsltx6milmhegmjff@iax2n4wvrqye/</description><pubDate>Fri, 21 Jun 2024 10:35:01 +0000</pubDate></item><item><title>CVE-2024-38637 | greybus: lights: check return of get_channel_from_mode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38637</link><description>In the Linux kernel, the following vulnerability has been resolved:

greybus: lights: check return of get_channel_from_mode

If channel for the given node is not found we return null from
get_channel_from_mode. Make sure we validate the return pointer
before using it in two of the missing places.

This was originally reported in [0]:
Found by Linux Verification Center (linuxtesting.org) with SVACE.

[0] https://lore.kernel.org/all/20240301190425.120605-1-m.lobanov@rosalinux.ru</description><pubDate>Fri, 21 Jun 2024 10:35:02 +0000</pubDate></item><item><title>CVE-2024-38659 | enic: Validate length of nl attributes in enic_set_vf_port</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38659</link><description>In the Linux kernel, the following vulnerability has been resolved:

enic: Validate length of nl attributes in enic_set_vf_port

enic_set_vf_port assumes that the nl attribute IFLA_PORT_PROFILE
is of length PORT_PROFILE_MAX and that the nl attributes
IFLA_PORT_INSTANCE_UUID, IFLA_PORT_HOST_UUID are of length PORT_UUID_MAX.
These attributes are validated (in the function do_setlink in rtnetlink.c)
using the nla_policy ifla_port_policy. The policy defines IFLA_PORT_PROFILE
as NLA_STRING, IFLA_PORT_INSTANCE_UUID as NLA_BINARY and
IFLA_PORT_HOST_UUID as NLA_STRING. That means that the length validation
using the policy is for the max size of the attributes and not on exact
size so the length of these attributes might be less than the sizes that
enic_set_vf_port expects. This might cause an out of bands
read access in the memcpys of the data of these
attributes in enic_set_vf_port.</description><pubDate>Fri, 21 Jun 2024 10:35:02 +0000</pubDate></item><item><title>CVE-2024-3036 | Communication DoS vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3036</link><description>Improper Input Validation vulnerability in ABB 800xA Base.
An attacker who successfully exploited this 
vulnerability could cause services to crash by sending specifically crafted messages.
This issue affects 800xA Base: from 6.0.0 through 6.1.1-2.</description><pubDate>Fri, 21 Jun 2024 10:35:02 +0000</pubDate></item><item><title>CVE-2024-31890 | IBM i privilege escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31890</link><description>IBM i 7.3, 7.4, and 7.5 product IBM TCP/IP Connectivity Utilities for i contains a local privilege escalation vulnerability. A malicious actor with command line access to the host operating system can elevate privileges to gain root access to the host operating system.  IBM X-Force ID:  288171.</description><pubDate>Fri, 21 Jun 2024 09:48:31 +0000</pubDate></item><item><title>CVE-2024-6027 | Themify - WooCommerce Product Filter &amp;lt;= 1.4.9 - Unauthenticated SQL Injection via conditions Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6027</link><description>The Themify â WooCommerce Product Filter plugin for WordPress is vulnerable to time-based SQL Injection via the âconditionsâ parameter in all versions up to, and including, 1.4.9 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Fri, 21 Jun 2024 09:48:31 +0000</pubDate></item><item><title>CVE-2024-5859 | Appointment Booking and Online Scheduling &amp;lt;= 4.4.2 - Reflected Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5859</link><description>The Online Booking &amp; Scheduling Calendar for WordPress by vcita plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the âdâ parameter in all versions up to, and including, 4.4.2 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Fri, 21 Jun 2024 08:48:02 +0000</pubDate></item><item><title>CVE-2024-5945 | WP SVG Images &amp;lt;= 4.2 - Authenticated (Author+) Stored Cross-Site Scripting via SVG</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5945</link><description>The WP SVG Images plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the âtypeâ parameter in all versions up to, and including, 4.2 due to insufficient input sanitization. This makes it possible for authenticated attackers, with Author-level access and above, who have permissions to upload sanitized files, to bypass SVG sanitization and inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 21 Jun 2024 07:49:41 +0000</pubDate></item><item><title>CVE-2024-6225 | Amelia &amp;lt;= 1.1.5 &amp;amp; Amelia (Pro) &amp;lt;= 7.5.1  - Authenticated (Admin+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6225</link><description>The Booking for Appointments and Events Calendar â Amelia plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to, and including, 1.1.5 (and 7.5.1 for the Pro version) due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Fri, 21 Jun 2024 07:49:41 +0000</pubDate></item><item><title>CVE-2024-2003 | Local Privilege Escalation in Quarantine of ESET products for Windows</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2003</link><description>Local privilege escalation vulnerability allowed an attacker to misuse ESET's file operations during a restore operation from quarantine.</description><pubDate>Fri, 21 Jun 2024 07:30:03 +0000</pubDate></item><item><title>CVE-2024-5191 | Branda â White Label WordPress, Custom Login Page Customizer &amp;lt;= 3.4.17 - Authenticated (Author+) Stored Cross-Site Scripting via SVG Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5191</link><description>The Branda â White Label WordPress, Custom Login Page Customizer plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the âmime_typesâ parameter in all versions up to, and including, 3.4.17 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 21 Jun 2024 07:01:07 +0000</pubDate></item><item><title>CVE-2024-5639 | User Profile Picture &amp;lt;= 2.6.1 - Authenticated (Author+) Insecure Direct Object Reference to Profile Picture Update</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5639</link><description>The User Profile Picture plugin for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 2.6.1 via the 'rest_api_change_profile_image' function due to missing validation on a user controlled key. This makes it possible for authenticated attackers, with Author-level access and above, to update the profile picture of any user.</description><pubDate>Fri, 21 Jun 2024 07:01:07 +0000</pubDate></item><item><title>CVE-2024-38873 | An issue was discovered in the friendlycaptcha_official (aka Integration of Friendly Captcha) extension before 0.1.4 for TYPO3. The extensio...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38873</link><description>An issue was discovered in the friendlycaptcha_official (aka Integration of Friendly Captcha) extension before 0.1.4 for TYPO3. The extension fails to check the requirement of the captcha field in submitted form data, allowing a remote user to bypass the captcha check. This only affects the captcha integration for the ext:form extension.</description><pubDate>Fri, 21 Jun 2024 06:27:17 +0000</pubDate></item><item><title>CVE-2024-38874 | An issue was discovered in the events2 (aka Events 2) extension before 8.3.8 and 9.x before 9.0.6 for TYPO3. Missing access checks in the ma...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38874</link><description>An issue was discovered in the events2 (aka Events 2) extension before 8.3.8 and 9.x before 9.0.6 for TYPO3. Missing access checks in the management plugin lead to an insecure direct object reference (IDOR) vulnerability with the potential to activate or delete various events for unauthenticated users.</description><pubDate>Fri, 21 Jun 2024 06:27:17 +0000</pubDate></item><item><title>CVE-2021-47621 | ClassGraph before 4.8.112 was not resistant to XML eXternal Entity (XXE) attacks.</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47621</link><description>ClassGraph before 4.8.112 was not resistant to XML eXternal Entity (XXE) attacks.</description><pubDate>Fri, 21 Jun 2024 06:27:18 +0000</pubDate></item><item><title>CVE-2024-4377 | DOP Shortcodes &amp;lt;= 1.2 - Contributor+ Stored XSS via Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link><description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description><pubDate>Fri, 21 Jun 2024 06:27:18 +0000</pubDate></item><item><title>CVE-2024-4381 | CB (legacy) &amp;lt;= 0.9.4.18 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link><description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Fri, 21 Jun 2024 06:27:19 +0000</pubDate></item><item><title>CVE-2024-4382 | CB (legacy) &amp;lt;= 0.9.4.18 - Code/Timeframe/Booking Deletion via CSRF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link><description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description><pubDate>Fri, 21 Jun 2024 06:27:19 +0000</pubDate></item><item><title>CVE-2024-4384 | CSSable Countdown &amp;lt;= 1.5 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link><description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Fri, 21 Jun 2024 06:27:19 +0000</pubDate></item><item><title>CVE-2024-4474 | WP Logs Book &amp;lt;= 1.0.1 - Disable Logging via CSRF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link><description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description><pubDate>Fri, 21 Jun 2024 06:27:20 +0000</pubDate></item><item><title>CVE-2024-4475 | WP Logs Book &amp;lt;= 1.0.1 - Log Clearing via CSRF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link><description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description><pubDate>Fri, 21 Jun 2024 06:27:20 +0000</pubDate></item><item><title>CVE-2024-4477 | WP Logs Book &amp;lt;= 1.0.1 - Unauthenticated Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link><description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description><pubDate>Fri, 21 Jun 2024 06:27:20 +0000</pubDate></item><item><title>CVE-2024-4616 | Widget Bundle &amp;lt;= 2.0.0 - Unauthencated Reflected XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4616</link><description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users</description><pubDate>Fri, 21 Jun 2024 06:27:21 +0000</pubDate></item><item><title>CVE-2024-4755 | Google CSE &amp;lt;= 1.0.7 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link><description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Fri, 21 Jun 2024 06:27:21 +0000</pubDate></item><item><title>CVE-2024-4969 | Widget Bundle &amp;lt;= 2.0.0 - Widget Disable/Enable via CSRF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link><description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description><pubDate>Fri, 21 Jun 2024 06:27:21 +0000</pubDate></item><item><title>CVE-2024-4970 | Widget Bundle &amp;lt;= 2.0.0 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link><description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Fri, 21 Jun 2024 06:27:21 +0000</pubDate></item><item><title>CVE-2024-5447 | PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode &amp;lt;= 1.7 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link><description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Fri, 21 Jun 2024 06:27:22 +0000</pubDate></item><item><title>CVE-2024-5448 | PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode &amp;lt;= 1.7 - Contributor+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link><description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description><pubDate>Fri, 21 Jun 2024 06:27:22 +0000</pubDate></item><item><title>CVE-2024-5756 | Icegram Express - Email Subscribers, Newsletters and Marketing Automation Plugin &amp;lt;= 5.7.23 - Unauthenticated SQL Injection via optin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5756</link><description>The Email Subscribers by Icegram Express â Email Marketing, Newsletters, Automation for WordPress &amp; WooCommerce plugin for WordPress is vulnerable to time-based SQL Injection via the db parameter in all versions up to, and including, 5.7.23 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Fri, 21 Jun 2024 04:42:10 +0000</pubDate></item><item><title>CVE-2024-3961 | ConvertKit &amp;lt;= 2.4.9 - Missing Authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3961</link><description>The ConvertKit â Email Newsletter, Email Marketing, Subscribers and Landing Pages plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the tag_subscriber function in all versions up to, and including, 2.4.9. This makes it possible for unauthenticated attackers to subscribe users to tags. Financial damages may occur to site owners if their API quota is exceeded.</description><pubDate>Fri, 21 Jun 2024 03:52:56 +0000</pubDate></item><item><title>CVE-2024-5455 | The Plus Addons for Elementor â Elementor Addons, Page Templates, Widgets, Mega Menu, WooCommerce &amp;lt;= 5.5.6 - Authenticated (Contributor+) Local File Inclusion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link><description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other âsafeâ file types can be uploaded and included.</description><pubDate>Fri, 21 Jun 2024 03:30:56 +0000</pubDate></item><item><title>CVE-2023-3352 | Smush â Lazy Load Images, Optimize &amp;amp; Compress Images &amp;lt;= 3.16.4 - Missing Authorization to Resmush List Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2023-3352</link><description>The Smush plugin for WordPress is vulnerable to unauthorized deletion of the resmush list due to a missing capability check on the delete_resmush_list() function. This makes it possible for authenticated attackers, with minimal permissions such as a subscriber, to delete the resmush list for Nextgen or the Media Library.</description><pubDate>Fri, 21 Jun 2024 02:23:33 +0000</pubDate></item><item><title>CVE-2024-1639 | License Manager for WooCommerce &amp;lt;= 3.0.7 - Improper Authorization to Authenticated(Contributor+) Sensitive Information Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1639</link><description>The License Manager for WooCommerce plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the showLicenseKey() and showAllLicenseKeys() functions in all versions up to, and including, 3.0.7. This makes it possible for authenticated attackers, with admin dashboard access (contributors by default due to WooCommerce) to view arbitrary decrypted license keys. The functions contain a referrer nonce check. However, these can be retrieved via the dashboard through the "license" JS variable.</description><pubDate>Fri, 21 Jun 2024 02:23:33 +0000</pubDate></item><item><title>CVE-2024-1955 | Hide Dashboard Notifications &amp;lt;= 1.3 - Missing Authorization to Authenticated(Contributor+) Plugin Settings Modification</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1955</link><description>The Hide Dashboard Notifications plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'warning_notices_settings' function in all versions up to, and including, 1.3. This makes it possible for authenticated attackers, with contributor access and above, to modify the plugin's settings.</description><pubDate>Fri, 21 Jun 2024 02:23:34 +0000</pubDate></item><item><title>CVE-2024-3610 | WP Child Theme Generator &amp;lt;= 1.1.1 - Missing Authorization to Unauthenticated Child Theme Creation/Activation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3610</link><description>The WP Child Theme Generator plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the wctg_easy_child_theme() function in all versions up to, and including, 1.1.1. This makes it possible for unauthenticated attackers to create a blank child theme and activate it cause the site to whitescreen.</description><pubDate>Fri, 21 Jun 2024 02:23:34 +0000</pubDate></item><item><title>CVE-2024-5344 | The Plus Addons for Elementor Page Builder &amp;lt;= 5.5.6 - Reflected Cross-Site Scripting via WP Login and Register Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link><description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the âforgoturlâ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Fri, 21 Jun 2024 02:23:34 +0000</pubDate></item><item><title>CVE-2024-5503 | WP Blog Post Layouts &amp;lt;= 1.1.3 - Authenticated (Contributor+) Local File Inlcusion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5503</link><description>The WP Blog Post Layouts plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.1.3. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary PHP files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other âsafeâ file types can be uploaded and included.</description><pubDate>Fri, 21 Jun 2024 02:23:35 +0000</pubDate></item><item><title>CVE-2024-6217 | SourceCodester Food Ordering Management System user-router.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6217</link><description>A vulnerability classified as critical was found in SourceCodester Food Ordering Management System 1.0. Affected by this vulnerability is an unknown functionality of the file user-router.php. The manipulation of the argument 1_verified leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-269281 was assigned to this vulnerability.</description><pubDate>Fri, 21 Jun 2024 02:23:35 +0000</pubDate></item><item><title>CVE-2024-6218 | itsourcecode Vehicle Management System busprofile.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6218</link><description>A vulnerability, which was classified as critical, has been found in itsourcecode Vehicle Management System 1.0. Affected by this issue is some unknown functionality of the file busprofile.php. The manipulation of the argument busid leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-269282 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 21 Jun 2024 02:23:36 +0000</pubDate></item><item><title>CVE-2024-6216 | SourceCodester Food Ordering Management System add-users.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6216</link><description>A vulnerability classified as critical has been found in SourceCodester Food Ordering Management System 1.0. Affected is an unknown function of the file add-users.php. The manipulation of the argument contact leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269280.</description><pubDate>Fri, 21 Jun 2024 02:23:36 +0000</pubDate></item><item><title>CVE-2024-6215 | SourceCodester Food Ordering Management System view-ticket-admin.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6215</link><description>A vulnerability was found in SourceCodester Food Ordering Management System up to 1.0. It has been rated as critical. This issue affects some unknown processing of the file view-ticket-admin.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-269279.</description><pubDate>Fri, 21 Jun 2024 01:44:38 +0000</pubDate></item><item><title>CVE-2024-6213 | SourceCodester Food Ordering Management System Login Panel login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6213</link><description>A vulnerability was found in SourceCodester Food Ordering Management System up to 1.0. It has been classified as critical. This affects an unknown part of the file login.php of the component Login Panel. The manipulation of the argument username leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-269277 was assigned to this vulnerability.</description><pubDate>Fri, 21 Jun 2024 01:44:39 +0000</pubDate></item><item><title>CVE-2024-6214 | SourceCodester Food Ordering Management System add-item.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6214</link><description>A vulnerability was found in SourceCodester Food Ordering Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file add-item.php. The manipulation of the argument price leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-269278 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 21 Jun 2024 01:44:39 +0000</pubDate></item><item><title>CVE-2024-6212 | SourceCodester Simple Student Attendance System student_form.php get_student cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6212</link><description>A vulnerability was found in SourceCodester Simple Student Attendance System 1.0 and classified as problematic. Affected by this issue is the function get_student of the file student_form.php. The manipulation of the argument id leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269276.</description><pubDate>Fri, 21 Jun 2024 00:35:39 +0000</pubDate></item></channel></rss>