<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Fri, 01 Mar 2024 13:36:11 +0000</lastBuildDate><item><title>CVE-2024-24903 | Dell Secure Connect Gateway (SCG) Policy Manager, version 5.10+, contain a weak password recovery mechanism for forgotten passwords. An adja...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24903</link><description>Dell Secure Connect Gateway (SCG) Policy Manager, version 5.10+, contain a weak password recovery mechanism for forgotten passwords. An adjacent network low privileged attacker could potentially exploit this vulnerability, leading to unauthorized access to the application with privileges of the compromised account. The attacker could retrieve the reset password token without authorization and then perform the password change.</description><pubDate>Fri, 01 Mar 2024 13:36:13 +0000</pubDate></item><item><title>CVE-2024-24904 | Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain(s) a Stored Cross-Site Scripting Vulnerability. An adjacent network ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24904</link><description>Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain(s) a Stored Cross-Site Scripting Vulnerability. An adjacent network high privileged attacker could potentially exploit this vulnerability, leading to the storage of malicious HTML or JavaScript codes in a trusted application data store. When a victim user accesses the data store through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable web application. Exploitation may lead to information disclosure, session theft, or client-side request forgery.</description><pubDate>Fri, 01 Mar 2024 13:28:25 +0000</pubDate></item><item><title>CVE-2024-24905 | Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain(s) a Stored Cross-Site Scripting Vulnerability. An adjacent network ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24905</link><description>Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain(s) a Stored Cross-Site Scripting Vulnerability. An adjacent network high privileged attacker could potentially exploit this vulnerability, leading to the storage of malicious HTML or JavaScript codes in a trusted application data store. When a victim user accesses the data store through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable web application. Exploitation may lead to information disclosure, session theft, or client-side request forgery.</description><pubDate>Fri, 01 Mar 2024 13:28:26 +0000</pubDate></item><item><title>CVE-2024-24907 | Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain(s) a Stored Cross-Site Scripting Vulnerability in the Filters page. ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24907</link><description>Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain(s) a Stored Cross-Site Scripting Vulnerability in the Filters page. An adjacent network high privileged attacker could potentially exploit this vulnerability, leading to the storage of malicious HTML or JavaScript codes in a trusted application data store. When a victim user accesses the data store through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable web application. Exploitation may lead to information disclosure, session theft, or client-side request forgery.</description><pubDate>Fri, 01 Mar 2024 13:28:26 +0000</pubDate></item><item><title>CVE-2024-24906 | Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain(s) a Stored Cross-Site Scripting Vulnerability in Policy page. An ad...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24906</link><description>Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain(s) a Stored Cross-Site Scripting Vulnerability in Policy page. An adjacent network high privileged attacker could potentially exploit this vulnerability, leading to the storage of malicious HTML or JavaScript codes in a trusted application data store. When a victim user accesses the data store through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable web application. Exploitation may lead to information disclosure, session theft, or client-side request forgery.</description><pubDate>Fri, 01 Mar 2024 13:21:29 +0000</pubDate></item><item><title>CVE-2024-24900 | Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain an improper authorization vulnerability. An adjacent network low pri...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24900</link><description>Dell Secure Connect Gateway (SCG) Policy Manager, all versions, contain an improper authorization vulnerability. An adjacent network low privileged attacker could potentially exploit this vulnerability, leading to unauthorized devices added to policies. Exploitation may lead to information disclosure and unauthorized access to the system.</description><pubDate>Fri, 01 Mar 2024 13:08:16 +0000</pubDate></item><item><title>CVE-2024-2062 | SourceCodester Petrol Pump Management Software edit_categories.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2062</link><description>A vulnerability, which was classified as critical, has been found in SourceCodester Petrol Pump Management Software 1.0. This issue affects some unknown processing of the file /admin/edit_categories.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-255377 was assigned to this vulnerability.</description><pubDate>Fri, 01 Mar 2024 13:08:16 +0000</pubDate></item><item><title>CVE-2024-2063 | SourceCodester Petrol Pump Management Software profile_crud.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2063</link><description>A vulnerability, which was classified as problematic, was found in SourceCodester Petrol Pump Management Software 1.0. Affected is an unknown function of the file /admin/app/profile_crud.php. The manipulation of the argument username leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-255378 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 01 Mar 2024 13:08:17 +0000</pubDate></item><item><title>CVE-2023-39254 | Dell Update Package (DUP), Versions prior to 4.9.10 contain an Uncontrolled Search Path vulnerability. A malicious user with local access to...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-39254</link><description>Dell Update Package (DUP), Versions prior to 4.9.10 contain an Uncontrolled Search Path vulnerability. A malicious user with local access to the system could potentially exploit this vulnerability to run arbitrary code as admin.</description><pubDate>Fri, 01 Mar 2024 12:45:08 +0000</pubDate></item><item><title>CVE-2023-48674 | Dell Platform BIOS contains an Improper Null Termination vulnerability. A high privilege user with network access to the system could potent...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-48674</link><description>Dell Platform BIOS contains an Improper Null Termination vulnerability. A high privilege user with network access to the system could potentially send malicious data to the device in order to cause some services to cease to function.</description><pubDate>Fri, 01 Mar 2024 12:45:08 +0000</pubDate></item><item><title>CVE-2024-2060 | SourceCodester Petrol Pump Management Software login_crud.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2060</link><description>A vulnerability classified as critical has been found in SourceCodester Petrol Pump Management Software 1.0. This affects an unknown part of the file /admin/app/login_crud.php. The manipulation of the argument email leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-255375.</description><pubDate>Fri, 01 Mar 2024 12:45:09 +0000</pubDate></item><item><title>CVE-2024-2061 | SourceCodester Petrol Pump Management Software edit_supplier.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2061</link><description>A vulnerability classified as critical was found in SourceCodester Petrol Pump Management Software 1.0. This vulnerability affects unknown code of the file /admin/edit_supplier.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-255376.</description><pubDate>Fri, 01 Mar 2024 12:45:09 +0000</pubDate></item><item><title>CVE-2024-2057 | Harrison Chase LangChain tfidf.py load_local server-side request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2057</link><description>A vulnerability was found in Harrison Chase LangChain 0.1.9. It has been classified as critical. Affected is the function load_local in the library libs/community/langchain_community/retrievers/tfidf.py. The manipulation leads to server-side request forgery. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-255372.</description><pubDate>Fri, 01 Mar 2024 11:39:12 +0000</pubDate></item><item><title>CVE-2024-2059 | SourceCodester Petrol Pump Management Software service_crud.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2059</link><description>A vulnerability was found in SourceCodester Petrol Pump Management Software 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file /admin/app/service_crud.php. The manipulation of the argument photo leads to unrestricted upload. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-255374 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 01 Mar 2024 11:39:12 +0000</pubDate></item><item><title>CVE-2024-2078 | Cross-Site Scripting vulnerability in HelpDeskZ</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2078</link><description>A Cross-Site Scripting (XSS) vulnerability has been found in HelpDeskZ affecting version 2.0.2 and earlier. This vulnerability could allow an attacker to send a specially crafted JavaScript payload within the email field and partially take control of an authenticated user's browser session.</description><pubDate>Fri, 01 Mar 2024 11:32:15 +0000</pubDate></item><item><title>CVE-2024-22457 | Dell Secure Connect Gateway 5.20 contains an improper authentication vulnerability during the SRS to SCG update path. A remote low privilege...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22457</link><description>Dell Secure Connect Gateway 5.20 contains an improper authentication vulnerability during the SRS to SCG update path. A remote low privileged attacker could potentially exploit this vulnerability, leading to impersonation of the server through presenting a fake self-signed certificate and communicating with the remote server.</description><pubDate>Fri, 01 Mar 2024 11:09:28 +0000</pubDate></item><item><title>CVE-2024-26280 | Apache Airflow: Overly broad default permissions for Viewer/Ops (audit logs)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26280</link><description>Apache Airflow, versions before 2.8.2, has a vulnerability that allows authenticated Ops and Viewers users to view all information on audit logs, including dag names and usernames they were not permitted to view. With 2.8.2 and newer, Ops and Viewer users do not have audit log permission by default, they need to be explicitly granted permissions to see the logs. Only admin users have audit log permission by default.

Users of Apache Airflow are recommended to upgrade to version 2.8.2 or newer to mitigate the risk associated with this vulnerability</description><pubDate>Fri, 01 Mar 2024 11:09:28 +0000</pubDate></item><item><title>CVE-2024-22458 | Dell Secure Connect Gateway, 5.18, contains an Inadequate Encryption Strength Vulnerability. An unauthenticated network attacker could poten...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22458</link><description>Dell Secure Connect Gateway, 5.18, contains an Inadequate Encryption Strength Vulnerability. An unauthenticated network attacker could potentially exploit this vulnerability, allowing an attacker to recover plaintext from a block of ciphertext.</description><pubDate>Fri, 01 Mar 2024 11:09:29 +0000</pubDate></item><item><title>CVE-2024-2058 | SourceCodester Petrol Pump Management Software product.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2058</link><description>A vulnerability was found in SourceCodester Petrol Pump Management Software 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /admin/app/product.php. The manipulation of the argument photo leads to unrestricted upload. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-255373 was assigned to this vulnerability.</description><pubDate>Fri, 01 Mar 2024 10:17:22 +0000</pubDate></item><item><title>CVE-2024-1120 | The NextMove Lite – Thank You Page for WooCommerce and Finale Lite – Sales Countdown Timer &amp; Discount for WooCommerce plugins for WordPress ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1120</link><description>The NextMove Lite – Thank You Page for WooCommerce and Finale Lite – Sales Countdown Timer &amp; Discount for WooCommerce plugins for WordPress are vulnerable to unauthorized access of data due to a missing capability check on the download_tools_settings() function in all versions up to, and including, 2.17.0. This makes it possible for unauthenticated attackers to export system information that can aid attackers in an attack.</description><pubDate>Fri, 01 Mar 2024 09:33:08 +0000</pubDate></item><item><title>CVE-2024-25972 | Initialization of a resource with an insecure default vulnerability in OET-213H-BTS1 sold in Japan by Atsumi Electric Co., Ltd. allows a net...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25972</link><description>Initialization of a resource with an insecure default vulnerability in OET-213H-BTS1 sold in Japan by Atsumi Electric Co., Ltd. allows a network-adjacent unauthenticated attacker to configure and control the affected product.</description><pubDate>Fri, 01 Mar 2024 09:33:09 +0000</pubDate></item><item><title>CVE-2024-0692 | SolarWinds Security Event Manager Deserialization of Untrusted Data Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0692</link><description>The SolarWinds Security Event Manager was susceptible to Remote Code Execution Vulnerability. This vulnerability allows an unauthenticated user to abuse SolarWinds’ service, resulting in remote code execution.</description><pubDate>Fri, 01 Mar 2024 09:14:35 +0000</pubDate></item><item><title>CVE-2024-25091 | Protection mechanism failure issue exists in RevoWorks SCVX prior to scvimage4.10.21_1013 (when using 'VirusChecker' or 'ThreatChecker' feat...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25091</link><description>Protection mechanism failure issue exists in RevoWorks SCVX prior to scvimage4.10.21_1013 (when using 'VirusChecker' or 'ThreatChecker' feature) and RevoWorks Browser prior to 2.2.95 (when using 'VirusChecker' or 'ThreatChecker' feature).  If data containing malware is saved in a specific file format (eml, dmg, vhd, iso, msi), malware may be taken outside the sandboxed environment.</description><pubDate>Fri, 01 Mar 2024 09:14:36 +0000</pubDate></item><item><title>CVE-2023-52555 | In mongo-express 1.0.2, /admin allows CSRF, as demonstrated by deletion of a Collection.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52555</link><description>In mongo-express 1.0.2, /admin allows CSRF, as demonstrated by deletion of a Collection.</description><pubDate>Fri, 01 Mar 2024 08:20:13 +0000</pubDate></item><item><title>CVE-2024-25552 | Wiesemann &amp;amp; Theis: Multiple products prone to unquoted search path</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25552</link><description>A local attacker can gain administrative privileges by inserting an executable file in the path of the affected product.</description><pubDate>Fri, 01 Mar 2024 08:00:52 +0000</pubDate></item><item><title>CVE-2024-27950 | WordPress Sirv Plugin &amp;lt;= 7.2.0 is vulnerable to Broken Access Control</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27950</link><description>Missing Authorization vulnerability in sirv.Com Image Optimizer, Resizer and CDN – Sirv.This issue affects Image Optimizer, Resizer and CDN – Sirv: from n/a through 7.2.0.</description><pubDate>Fri, 01 Mar 2024 07:54:36 +0000</pubDate></item><item><title>CVE-2024-27949 | WordPress Sirv Plugin &amp;lt;= 7.2.0 is vulnerable to Server Side Request Forgery (SSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27949</link><description>Server-Side Request Forgery (SSRF) vulnerability in sirv.Com Image Optimizer, Resizer and CDN – Sirv.This issue affects Image Optimizer, Resizer and CDN – Sirv: from n/a through 7.2.0.</description><pubDate>Fri, 01 Mar 2024 07:33:52 +0000</pubDate></item><item><title>CVE-2024-1859 | The Slider Responsive Slideshow – Image slider, Gallery slideshow plugin for WordPress is vulnerable to PHP Object Injection in all versions...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1859</link><description>The Slider Responsive Slideshow – Image slider, Gallery slideshow plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.3.8 via deserialization of untrusted input to the awl_slider_responsive_shortcode function. This makes it possible for authenticated attackers, with contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable plugin. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.</description><pubDate>Fri, 01 Mar 2024 06:55:16 +0000</pubDate></item><item><title>CVE-2024-25386 | Directory Traversal vulnerability in DICOM® Connectivity Framework by laurelbridge before v.2.7.6b allows a remote attacker to execute arbit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25386</link><description>Directory Traversal vulnerability in DICOM® Connectivity Framework by laurelbridge before v.2.7.6b allows a remote attacker to execute arbitrary code via the format_logfile.pl file.</description><pubDate>Fri, 01 Mar 2024 06:08:52 +0000</pubDate></item><item><title>CVE-2024-22891 | Nteract v.0.28.0 was discovered to contain a remote code execution (RCE) vulnerability via the Markdown link.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22891</link><description>Nteract v.0.28.0 was discovered to contain a remote code execution (RCE) vulnerability via the Markdown link.</description><pubDate>Fri, 01 Mar 2024 05:47:21 +0000</pubDate></item><item><title>CVE-2024-25293 | mjml-app versions 3.0.4 and 3.1.0-beta were discovered to contain a remote code execution (RCE) via the href attribute.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25293</link><description>mjml-app versions 3.0.4 and 3.1.0-beta were discovered to contain a remote code execution (RCE) via the href attribute.</description><pubDate>Fri, 01 Mar 2024 05:47:21 +0000</pubDate></item><item><title>CVE-2023-50312 | IBM WebSphere Application Server Liberty information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50312</link><description>IBM WebSphere Application Server Liberty 17.0.0.3 through 24.0.0.2 could provide weaker than expected security for outbound TLS connections caused by a failure to honor user configuration.  IBM X-Force ID:  274711.</description><pubDate>Fri, 01 Mar 2024 02:39:17 +0000</pubDate></item><item><title>CVE-2023-38366 | IBM FileNet Content Manager directory traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38366</link><description>IBM Filenet Content Manager Component 5.5.8.0, 5.5.10.0, and 5.5.11.0 could allow a remote attacker to traverse directories on the system. An attacker could send a specially crafted URL request containing "dot dot" sequences (/../) to view arbitrary files on the system.  IBM X-Force ID:  261115.</description><pubDate>Fri, 01 Mar 2024 02:31:40 +0000</pubDate></item><item><title>CVE-2023-47716 | IBM FileNet Content Manager privilege escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2023-47716</link><description>IBM CP4BA - Filenet Content Manager Component 5.5.8.0, 5.5.10.0, and 5.5.11.0 could allow a user to gain the privileges of another user under unusual circumstances.  IBM X-Force ID:  271656.</description><pubDate>Fri, 01 Mar 2024 02:31:41 +0000</pubDate></item><item><title>CVE-2023-28525 | IBM Engineering Requirements Management cross-site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-28525</link><description>IBM Engineering Requirements Management 9.7.2.7 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  251052.</description><pubDate>Fri, 01 Mar 2024 02:15:18 +0000</pubDate></item><item><title>CVE-2023-28949 | IBM Engineering Requirements Management cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2023-28949</link><description>IBM Engineering Requirements Management DOORS 9.7.2.7 is vulnerable to cross-site request forgery which could allow an attacker to execute malicious and unauthorized actions transmitted from a user that the website trusts.  IBM X-Force ID:  251216.</description><pubDate>Fri, 01 Mar 2024 02:15:18 +0000</pubDate></item><item><title>CVE-2023-50305 | IBM Engineering Requirements Management information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50305</link><description>IBM Engineering Requirements Management DOORS 9.7.2.7 does not require that users should have strong passwords by default, which makes it easier for attackers to compromise user accounts.  IBM X-Force ID:  273336.</description><pubDate>Fri, 01 Mar 2024 02:15:19 +0000</pubDate></item><item><title>CVE-2023-50324 | IBM Cognos Command Center information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50324</link><description>IBM Cognos Command Center 10.2.4.1 and 10.2.5 exposes details the X-AspNet-Version Response Header that could allow an attacker to obtain information of the application environment to conduct further attacks.  IBM X-Force ID:  275038.</description><pubDate>Fri, 01 Mar 2024 02:15:19 +0000</pubDate></item><item><title>CVE-2024-22100 | MicroDicom DICOM Heap-based Buffer Overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22100</link><description>MicroDicom DICOM Viewer versions 2023.3 (Build 9342) and prior are affected by a heap-based buffer overflow vulnerability, which could allow an attacker to execute arbitrary code on affected installations of DICOM Viewer. A user must open a malicious DCM file in order to exploit the vulnerability.</description><pubDate>Fri, 01 Mar 2024 01:39:19 +0000</pubDate></item><item><title>CVE-2024-25578 | MicroDicom DICOM Viewer Out-of-Bounds Write</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25578</link><description>MicroDicom DICOM Viewer versions 2023.3 (Build 9342) and prior contain a lack of proper validation of user-supplied data, which could result in memory corruption within the application.</description><pubDate>Fri, 01 Mar 2024 01:39:19 +0000</pubDate></item><item><title>CVE-2024-1941 | Delta Electronics CNCSoft-B Stack-based Buffer Overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1941</link><description>Delta Electronics CNCSoft-B versions 1.0.0.4 and prior are vulnerable to a stack-based buffer overflow, which may allow an attacker to execute arbitrary code.</description><pubDate>Fri, 01 Mar 2024 00:35:37 +0000</pubDate></item><item><title>CVE-2024-2022 | Netentsec NS-ASG Application Security Gateway list_ipAddressPolicy.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2022</link><description>A vulnerability was found in Netentsec NS-ASG Application Security Gateway 6.3. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /admin/list_ipAddressPolicy.php. The manipulation of the argument GroupId leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-255301 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Fri, 01 Mar 2024 00:35:38 +0000</pubDate></item><item><title>CVE-2024-2045 | Session 1.17.5 - LFR via chat attachment</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2045</link><description>Session version 1.17.5 allows obtaining internal application files and public

files from the user's device without the user's consent. This is possible

because the application is vulnerable to Local File Read via chat attachments.</description><pubDate>Thu, 29 Feb 2024 23:41:03 +0000</pubDate></item><item><title>CVE-2024-0403 | Recipes 1.5.10 - Blind SSRF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0403</link><description>Recipes version 1.5.10 allows arbitrary HTTP requests to be made

through the server. This is possible because the application is

vulnerable to SSRF.</description><pubDate>Thu, 29 Feb 2024 23:34:20 +0000</pubDate></item><item><title>CVE-2024-2021 | Netentsec NS-ASG Application Security Gateway list_localuser.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2021</link><description>A vulnerability was found in Netentsec NS-ASG Application Security Gateway 6.3. It has been classified as critical. Affected is an unknown function of the file /admin/list_localuser.php. The manipulation of the argument ResId leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-255300. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 29 Feb 2024 23:34:20 +0000</pubDate></item><item><title>CVE-2024-27294 | dp-golang Go installation could be owned by wrong user</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27294</link><description>dp-golang is a Puppet module for Go installations.  Prior to 1.2.7, dp-golang could install files — including the compiler binary — with the wrong ownership when Puppet was run as root and the installed package was On macOS: Go version 1.4.3 through 1.21rc3, inclusive, go1.4-bootstrap-20170518.tar.gz, or go1.4-bootstrap-20170531.tar.gz. The user and group specified in Puppet code were ignored for files within the archive. dp-puppet version 1.2.7 will recreate installations if the owner or group of any file or directory within that installation does not match the requested owner or group</description><pubDate>Thu, 29 Feb 2024 22:47:44 +0000</pubDate></item><item><title>CVE-2021-47054 | bus: qcom: Put child node before return</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47054</link><description>In the Linux kernel, the following vulnerability has been resolved:

bus: qcom: Put child node before return

Put child node before return to fix potential reference count leak.
Generally, the reference count of child is incremented and decremented
automatically in the macro for_each_available_child_of_node() and should
be decremented manually if the loop is broken in loop body.</description><pubDate>Thu, 29 Feb 2024 22:47:45 +0000</pubDate></item><item><title>CVE-2021-47055 | mtd: require write permissions for locking and badblock ioctls</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47055</link><description>In the Linux kernel, the following vulnerability has been resolved:

mtd: require write permissions for locking and badblock ioctls

MEMLOCK, MEMUNLOCK and OTPLOCK modify protection bits. Thus require
write permission. Depending on the hardware MEMLOCK might even be
write-once, e.g. for SPI-NOR flashes with their WP# tied to GND. OTPLOCK
is always write-once.

MEMSETBADBLOCK modifies the bad block table.</description><pubDate>Thu, 29 Feb 2024 22:47:45 +0000</pubDate></item><item><title>CVE-2021-47056 | crypto: qat - ADF_STATUS_PF_RUNNING should be set after adf_dev_init</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47056</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: qat - ADF_STATUS_PF_RUNNING should be set after adf_dev_init

ADF_STATUS_PF_RUNNING is (only) used and checked by adf_vf2pf_shutdown()
before calling adf_iov_putmsg()-&gt;mutex_lock(vf2pf_lock), however the
vf2pf_lock is initialized in adf_dev_init(), which can fail and when it
fail, the vf2pf_lock is either not initialized or destroyed, a subsequent
use of vf2pf_lock will cause issue.
To fix this issue, only set this flag if adf_dev_init() returns 0.

[    7.178404] BUG: KASAN: user-memory-access in __mutex_lock.isra.0+0x1ac/0x7c0
[    7.180345] Call Trace:
[    7.182576]  mutex_lock+0xc9/0xd0
[    7.183257]  adf_iov_putmsg+0x118/0x1a0 [intel_qat]
[    7.183541]  adf_vf2pf_shutdown+0x4d/0x7b [intel_qat]
[    7.183834]  adf_dev_shutdown+0x172/0x2b0 [intel_qat]
[    7.184127]  adf_probe+0x5e9/0x600 [qat_dh895xccvf]</description><pubDate>Thu, 29 Feb 2024 22:47:46 +0000</pubDate></item><item><title>CVE-2021-47057 | crypto: sun8i-ss - Fix memory leak of object d when dma_iv fails to map</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47057</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: sun8i-ss - Fix memory leak of object d when dma_iv fails to map

In the case where the dma_iv mapping fails, the return error path leaks
the memory allocated to object d.  Fix this by adding a new error return
label and jumping to this to ensure d is free'd before the return.

Addresses-Coverity: ("Resource leak")</description><pubDate>Thu, 29 Feb 2024 22:47:46 +0000</pubDate></item><item><title>CVE-2021-47058 | regmap: set debugfs_name to NULL after it is freed</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47058</link><description>In the Linux kernel, the following vulnerability has been resolved:

regmap: set debugfs_name to NULL after it is freed

There is a upstream commit cffa4b2122f5("regmap:debugfs:
Fix a memory leak when calling regmap_attach_dev") that
adds a if condition when create name for debugfs_name.
With below function invoking logical, debugfs_name is
freed in regmap_debugfs_exit(), but it is not created again
because of the if condition introduced by above commit.
regmap_reinit_cache()
	regmap_debugfs_exit()
	...
	regmap_debugfs_init()
So, set debugfs_name to NULL after it is freed.</description><pubDate>Thu, 29 Feb 2024 22:47:47 +0000</pubDate></item><item><title>CVE-2021-47059 | crypto: sun8i-ss - fix result memory leak on error path</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47059</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: sun8i-ss - fix result memory leak on error path

This patch fixes a memory leak on an error path.</description><pubDate>Thu, 29 Feb 2024 22:47:47 +0000</pubDate></item><item><title>CVE-2021-47060 | KVM: Stop looking for coalesced MMIO zones if the bus is destroyed</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47060</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: Stop looking for coalesced MMIO zones if the bus is destroyed

Abort the walk of coalesced MMIO zones if kvm_io_bus_unregister_dev()
fails to allocate memory for the new instance of the bus.  If it can't
instantiate a new bus, unregister_dev() destroys all devices _except_ the
target device.   But, it doesn't tell the caller that it obliterated the
bus and invoked the destructor for all devices that were on the bus.  In
the coalesced MMIO case, this can result in a deleted list entry
dereference due to attempting to continue iterating on coalesced_zones
after future entries (in the walk) have been deleted.

Opportunistically add curly braces to the for-loop, which encompasses
many lines but sneaks by without braces due to the guts being a single
if statement.</description><pubDate>Thu, 29 Feb 2024 22:47:47 +0000</pubDate></item><item><title>CVE-2021-47061 | KVM: Destroy I/O bus devices on unregister failure _after_ sync&amp;#x27;ing SRCU</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47061</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: Destroy I/O bus devices on unregister failure _after_ sync'ing SRCU

If allocating a new instance of an I/O bus fails when unregistering a
device, wait to destroy the device until after all readers are guaranteed
to see the new null bus.  Destroying devices before the bus is nullified
could lead to use-after-free since readers expect the devices on their
reference of the bus to remain valid.</description><pubDate>Thu, 29 Feb 2024 22:47:48 +0000</pubDate></item><item><title>CVE-2021-47062 | KVM: SVM: Use online_vcpus, not created_vcpus, to iterate over vCPUs</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47062</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: SVM: Use online_vcpus, not created_vcpus, to iterate over vCPUs

Use the kvm_for_each_vcpu() helper to iterate over vCPUs when encrypting
VMSAs for SEV, which effectively switches to use online_vcpus instead of
created_vcpus.  This fixes a possible null-pointer dereference as
created_vcpus does not guarantee a vCPU exists, since it is updated at
the very beginning of KVM_CREATE_VCPU.  created_vcpus exists to allow the
bulk of vCPU creation to run in parallel, while still correctly
restricting the max number of max vCPUs.</description><pubDate>Thu, 29 Feb 2024 22:47:48 +0000</pubDate></item><item><title>CVE-2021-47063 | drm: bridge/panel: Cleanup connector on bridge detach</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47063</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm: bridge/panel: Cleanup connector on bridge detach

If we don't call drm_connector_cleanup() manually in
panel_bridge_detach(), the connector will be cleaned up with the other
DRM objects in the call to drm_mode_config_cleanup(). However, since our
drm_connector is devm-allocated, by the time drm_mode_config_cleanup()
will be called, our connector will be long gone. Therefore, the
connector must be cleaned up when the bridge is detached to avoid
use-after-free conditions.

v2: Cleanup connector only if it was created

v3: Add FIXME

v4: (Use connector-&gt;dev) directly in if() block</description><pubDate>Thu, 29 Feb 2024 22:47:49 +0000</pubDate></item><item><title>CVE-2021-47064 | mt76: fix potential DMA mapping leak</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47064</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: fix potential DMA mapping leak

With buf uninitialized in mt76_dma_tx_queue_skb_raw, its field skip_unmap
could potentially inherit a non-zero value from stack garbage.
If this happens, it will cause DMA mappings for MCU command frames to not be
unmapped after completion</description><pubDate>Thu, 29 Feb 2024 22:47:49 +0000</pubDate></item><item><title>CVE-2021-47065 | rtw88: Fix array overrun in rtw_get_tx_power_params()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47065</link><description>In the Linux kernel, the following vulnerability has been resolved:

rtw88: Fix array overrun in rtw_get_tx_power_params()

Using a kernel with the Undefined Behaviour Sanity Checker (UBSAN) enabled, the
following array overrun is logged:

================================================================================
UBSAN: array-index-out-of-bounds in /home/finger/wireless-drivers-next/drivers/net/wireless/realtek/rtw88/phy.c:1789:34
index 5 is out of range for type 'u8 [5]'
CPU: 2 PID: 84 Comm: kworker/u16:3 Tainted: G           O      5.12.0-rc5-00086-gd88bba47038e-dirty #651
Hardware name: TOSHIBA TECRA A50-A/TECRA A50-A, BIOS Version 4.50   09/29/2014
Workqueue: phy0 ieee80211_scan_work [mac80211]
Call Trace:
 dump_stack+0x64/0x7c
 ubsan_epilogue+0x5/0x40
 __ubsan_handle_out_of_bounds.cold+0x43/0x48
 rtw_get_tx_power_params+0x83a/drivers/net/wireless/realtek/rtw88/0xad0 [rtw_core]
 ? rtw_pci_read16+0x20/0x20 [rtw_pci]
 ? check_hw_ready+0x50/0x90 [rtw_core]
 rtw_phy_get_tx_power_index+0x4d/0xd0 [rtw_core]
 rtw_phy_set_tx_power_level+0xee/0x1b0 [rtw_core]
 rtw_set_channel+0xab/0x110 [rtw_core]
 rtw_ops_config+0x87/0xc0 [rtw_core]
 ieee80211_hw_config+0x9d/0x130 [mac80211]
 ieee80211_scan_state_set_channel+0x81/0x170 [mac80211]
 ieee80211_scan_work+0x19f/0x2a0 [mac80211]
 process_one_work+0x1dd/0x3a0
 worker_thread+0x49/0x330
 ? rescuer_thread+0x3a0/0x3a0
 kthread+0x134/0x150
 ? kthread_create_worker_on_cpu+0x70/0x70
 ret_from_fork+0x22/0x30
================================================================================

The statement where an array is being overrun is shown in the following snippet:

	if (rate &lt;= DESC_RATE11M)
		tx_power = pwr_idx_2g-&gt;cck_base[group];
	else
====&gt;		tx_power = pwr_idx_2g-&gt;bw40_base[group];

The associated arrays are defined in main.h as follows:

struct rtw_2g_txpwr_idx {
	u8 cck_base[6];
	u8 bw40_base[5];
	struct rtw_2g_1s_pwr_idx_diff ht_1s_diff;
	struct rtw_2g_ns_pwr_idx_diff ht_2s_diff;
	struct rtw_2g_ns_pwr_idx_diff ht_3s_diff;
	struct rtw_2g_ns_pwr_idx_diff ht_4s_diff;
};

The problem arises because the value of group is 5 for channel 14. The trivial
increase in the dimension of bw40_base fails as this struct must match the layout of
efuse. The fix is to add the rate as an argument to rtw_get_channel_group() and set
the group for channel 14 to 4 if rate &lt;= DESC_RATE11M.

This patch fixes commit fa6dfe6bff24 ("rtw88: resolve order of tx power setting routines")</description><pubDate>Thu, 29 Feb 2024 22:47:49 +0000</pubDate></item><item><title>CVE-2021-47066 | async_xor: increase src_offs when dropping destination page</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47066</link><description>In the Linux kernel, the following vulnerability has been resolved:

async_xor: increase src_offs when dropping destination page

Now we support sharing one page if PAGE_SIZE is not equal stripe size. To
support this, it needs to support calculating xor value with different
offsets for each r5dev. One offset array is used to record those offsets.

In RMW mode, parity page is used as a source page. It sets
ASYNC_TX_XOR_DROP_DST before calculating xor value in ops_run_prexor5.
So it needs to add src_list and src_offs at the same time. Now it only
needs src_list. So the xor value which is calculated is wrong. It can
cause data corruption problem.

I can reproduce this problem 100% on a POWER8 machine. The steps are:

  mdadm -CR /dev/md0 -l5 -n3 /dev/sdb1 /dev/sdc1 /dev/sdd1 --size=3G
  mkfs.xfs /dev/md0
  mount /dev/md0 /mnt/test
  mount: /mnt/test: mount(2) system call failed: Structure needs cleaning.</description><pubDate>Thu, 29 Feb 2024 22:47:50 +0000</pubDate></item><item><title>CVE-2021-47067 | soc/tegra: regulators: Fix locking up when voltage-spread is out of range</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47067</link><description>In the Linux kernel, the following vulnerability has been resolved:

soc/tegra: regulators: Fix locking up when voltage-spread is out of range

Fix voltage coupler lockup which happens when voltage-spread is out
of range due to a bug in the code. The max-spread requirement shall be
accounted when CPU regulator doesn't have consumers. This problem is
observed on Tegra30 Ouya game console once system-wide DVFS is enabled
in a device-tree.</description><pubDate>Thu, 29 Feb 2024 22:47:50 +0000</pubDate></item><item><title>CVE-2021-47068 | net/nfc: fix use-after-free llcp_sock_bind/connect</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47068</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/nfc: fix use-after-free llcp_sock_bind/connect

Commits 8a4cd82d ("nfc: fix refcount leak in llcp_sock_connect()")
and c33b1cc62 ("nfc: fix refcount leak in llcp_sock_bind()")
fixed a refcount leak bug in bind/connect but introduced a
use-after-free if the same local is assigned to 2 different sockets.

This can be triggered by the following simple program:
    int sock1 = socket( AF_NFC, SOCK_STREAM, NFC_SOCKPROTO_LLCP );
    int sock2 = socket( AF_NFC, SOCK_STREAM, NFC_SOCKPROTO_LLCP );
    memset( &amp;addr, 0, sizeof(struct sockaddr_nfc_llcp) );
    addr.sa_family = AF_NFC;
    addr.nfc_protocol = NFC_PROTO_NFC_DEP;
    bind( sock1, (struct sockaddr*) &amp;addr, sizeof(struct sockaddr_nfc_llcp) )
    bind( sock2, (struct sockaddr*) &amp;addr, sizeof(struct sockaddr_nfc_llcp) )
    close(sock1);
    close(sock2);

Fix this by assigning NULL to llcp_sock-&gt;local after calling
nfc_llcp_local_put.

This addresses CVE-2021-23134.</description><pubDate>Thu, 29 Feb 2024 22:47:51 +0000</pubDate></item><item><title>CVE-2021-46959 | spi: Fix use-after-free with devm_spi_alloc_*</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46959</link><description>In the Linux kernel, the following vulnerability has been resolved:

spi: Fix use-after-free with devm_spi_alloc_*

We can't rely on the contents of the devres list during
spi_unregister_controller(), as the list is already torn down at the
time we perform devres_find() for devm_spi_release_controller. This
causes devices registered with devm_spi_alloc_{master,slave}() to be
mistakenly identified as legacy, non-devm managed devices and have their
reference counters decremented below 0.

------------[ cut here ]------------
WARNING: CPU: 1 PID: 660 at lib/refcount.c:28 refcount_warn_saturate+0x108/0x174
[&lt;b0396f04&gt;] (refcount_warn_saturate) from [&lt;b03c56a4&gt;] (kobject_put+0x90/0x98)
[&lt;b03c5614&gt;] (kobject_put) from [&lt;b0447b4c&gt;] (put_device+0x20/0x24)
 r4:b6700140
[&lt;b0447b2c&gt;] (put_device) from [&lt;b07515e8&gt;] (devm_spi_release_controller+0x3c/0x40)
[&lt;b07515ac&gt;] (devm_spi_release_controller) from [&lt;b045343c&gt;] (release_nodes+0x84/0xc4)
 r5:b6700180 r4:b6700100
[&lt;b04533b8&gt;] (release_nodes) from [&lt;b0454160&gt;] (devres_release_all+0x5c/0x60)
 r8:b1638c54 r7:b117ad94 r6:b1638c10 r5:b117ad94 r4:b163dc10
[&lt;b0454104&gt;] (devres_release_all) from [&lt;b044e41c&gt;] (__device_release_driver+0x144/0x1ec)
 r5:b117ad94 r4:b163dc10
[&lt;b044e2d8&gt;] (__device_release_driver) from [&lt;b044f70c&gt;] (device_driver_detach+0x84/0xa0)
 r9:00000000 r8:00000000 r7:b117ad94 r6:b163dc54 r5:b1638c10 r4:b163dc10
[&lt;b044f688&gt;] (device_driver_detach) from [&lt;b044d274&gt;] (unbind_store+0xe4/0xf8)

Instead, determine the devm allocation state as a flag on the
controller which is guaranteed to be stable during cleanup.</description><pubDate>Thu, 29 Feb 2024 22:40:43 +0000</pubDate></item><item><title>CVE-2021-47016 | m68k: mvme147,mvme16x: Don&amp;#x27;t wipe PCC timer config bits</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47016</link><description>In the Linux kernel, the following vulnerability has been resolved:

m68k: mvme147,mvme16x: Don't wipe PCC timer config bits

Don't clear the timer 1 configuration bits when clearing the interrupt flag
and counter overflow. As Michael reported, "This results in no timer
interrupts being delivered after the first. Initialization then hangs
in calibrate_delay as the jiffies counter is not updated."

On mvme16x, enable the timer after requesting the irq, consistent with
mvme147.</description><pubDate>Thu, 29 Feb 2024 22:40:44 +0000</pubDate></item><item><title>CVE-2021-47020 | soundwire: stream: fix memory leak in stream config error path</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47020</link><description>In the Linux kernel, the following vulnerability has been resolved:

soundwire: stream: fix memory leak in stream config error path

When stream config is failed, master runtime will release all
slave runtime in the slave_rt_list, but slave runtime is not
added to the list at this time. This patch frees slave runtime
in the config error path to fix the memory leak.</description><pubDate>Thu, 29 Feb 2024 22:40:44 +0000</pubDate></item><item><title>CVE-2024-27292 | Docassemble unauthorized access through URL manipulation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27292</link><description>Docassemble is an expert system for guided interviews and document assembly. The vulnerability allows attackers to gain unauthorized access to information on the system through URL manipulation. It affects versions 1.4.53 to 1.4.96. The vulnerability has been patched in version 1.4.97 of the master branch.</description><pubDate>Thu, 29 Feb 2024 21:59:14 +0000</pubDate></item><item><title>CVE-2024-27291 | Docassemble open redirect</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27291</link><description>Docassemble is an expert system for guided interviews and document assembly. Prior to 1.4.97, it is possible to create a URL that acts as an open redirect. The vulnerability has been patched in version 1.4.97 of the master branch.</description><pubDate>Thu, 29 Feb 2024 21:52:24 +0000</pubDate></item><item><title>CVE-2024-27290 | Docassemble HTML and javascript injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27290</link><description>Docassemble is an expert system for guided interviews and document assembly. Prior to 1.4.97, a user could type HTML into a field, including the field for the user's name, and then that HTML could be displayed on the screen as HTML. The vulnerability has been patched in version 1.4.97 of the master branch.</description><pubDate>Thu, 29 Feb 2024 21:52:25 +0000</pubDate></item><item><title>CVE-2024-2016 | ZhiCms setcontroller.php index code injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2016</link><description>A vulnerability, which was classified as critical, was found in ZhiCms 4.0. Affected is the function index of the file app/manage/controller/setcontroller.php. The manipulation of the argument sitename leads to code injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-255270 is the identifier assigned to this vulnerability.</description><pubDate>Thu, 29 Feb 2024 21:38:30 +0000</pubDate></item><item><title>CVE-2024-2014 | Panabit Panalog sprog_upstatus.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2014</link><description>A vulnerability classified as critical was found in Panabit Panalog 202103080942. This vulnerability affects unknown code of the file /Maintain/sprog_upstatus.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-255268. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 29 Feb 2024 21:15:57 +0000</pubDate></item><item><title>CVE-2024-2015 | ZhiCms mcontroller.php getindexdata sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2015</link><description>A vulnerability, which was classified as critical, has been found in ZhiCms 4.0. This issue affects the function getindexdata of the file app/index/controller/mcontroller.php. The manipulation of the argument key leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-255269 was assigned to this vulnerability.</description><pubDate>Thu, 29 Feb 2024 21:15:57 +0000</pubDate></item><item><title>CVE-2024-24028 | Server Side Request Forgery (SSRF) vulnerability in Likeshop before 2.5.7 allows attackers to view sensitive information via the avatar para...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24028</link><description>Server Side Request Forgery (SSRF) vulnerability in Likeshop before 2.5.7 allows attackers to view sensitive information via the avatar parameter in function UserLogic::updateWechatInfo.</description><pubDate>Thu, 29 Feb 2024 21:00:03 +0000</pubDate></item><item><title>CVE-2024-24520 | An issue in Lepton CMS v.7.0.0 allows a local attacker to execute arbitrary code via the upgrade.php file in the languages place.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24520</link><description>An issue in Lepton CMS v.7.0.0 allows a local attacker to execute arbitrary code via the upgrade.php file in the languages place.</description><pubDate>Thu, 29 Feb 2024 20:46:14 +0000</pubDate></item><item><title>CVE-2024-25167 | Cross Site Scripting vulnerability in eblog v1.0 allows a remote attacker to execute arbitrary code via a crafted script to the argument des...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25167</link><description>Cross Site Scripting vulnerability in eblog v1.0 allows a remote attacker to execute arbitrary code via a crafted script to the argument description parameter when submitting a comment on a post.</description><pubDate>Thu, 29 Feb 2024 20:39:28 +0000</pubDate></item><item><title>CVE-2024-25239 | SQL Injection vulnerability in Sourcecodester Employee Management System v1.0 allows attackers to run arbitrary SQL commands via crafted POS...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25239</link><description>SQL Injection vulnerability in Sourcecodester Employee Management System v1.0 allows attackers to run arbitrary SQL commands via crafted POST request to /emloyee_akpoly/Account/login.php.</description><pubDate>Thu, 29 Feb 2024 20:32:40 +0000</pubDate></item><item><title>CVE-2024-26196 | Microsoft Edge for Android (Chromium-based) Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26196</link><description>No english description</description><pubDate>Thu, 29 Feb 2024 20:32:41 +0000</pubDate></item><item><title>CVE-2024-0068 | Improper Link Resolution Before File Access ('Link Following') vulnerability in HYPR Workforce Access on MacOS allows File Manipulation.This...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0068</link><description>Improper Link Resolution Before File Access ('Link Following') vulnerability in HYPR Workforce Access on MacOS allows File Manipulation.This issue affects Workforce Access: before 8.7.1.</description><pubDate>Thu, 29 Feb 2024 19:58:08 +0000</pubDate></item><item><title>CVE-2024-24246 | Heap Buffer Overflow vulnerability in qpdf 11.9.0 allows attackers to crash the application via the std::__shared_count() function at /bits/...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24246</link><description>Heap Buffer Overflow vulnerability in qpdf 11.9.0 allows attackers to crash the application via the std::__shared_count() function at /bits/shared_ptr_base.h.</description><pubDate>Thu, 29 Feb 2024 19:51:19 +0000</pubDate></item><item><title>CVE-2024-26548 | An issue in vivotek Network Camera v.FD8166A-VVTK-0204j allows a remote attacker to execute arbitrary code via a crafted payload to the uplo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26548</link><description>An issue in vivotek Network Camera v.FD8166A-VVTK-0204j allows a remote attacker to execute arbitrary code via a crafted payload to the upload_file.cgi component.</description><pubDate>Thu, 29 Feb 2024 19:51:19 +0000</pubDate></item><item><title>CVE-2024-27655 | D-Link DIR-823G A1V1.0.2B05 was discovered to contain a buffer overflow via the SOAPACTION parameter. This vulnerability allows attackers to...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27655</link><description>D-Link DIR-823G A1V1.0.2B05 was discovered to contain a buffer overflow via the SOAPACTION parameter. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input, and possibly remote code execution.</description><pubDate>Thu, 29 Feb 2024 19:37:22 +0000</pubDate></item><item><title>CVE-2024-27656 | D-Link DIR-823G A1V1.0.2B05 was discovered to contain a buffer overflow via the Cookie parameter. This vulnerability allows attackers to cau...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27656</link><description>D-Link DIR-823G A1V1.0.2B05 was discovered to contain a buffer overflow via the Cookie parameter. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input, and possibly remote code execution.</description><pubDate>Thu, 29 Feb 2024 19:37:23 +0000</pubDate></item><item><title>CVE-2024-27657 | D-Link DIR-823G A1V1.0.2B05 was discovered to contain a buffer overflow via the User-Agent parameter. This vulnerability allows attackers to...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27657</link><description>D-Link DIR-823G A1V1.0.2B05 was discovered to contain a buffer overflow via the User-Agent parameter. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input, and possibly remote code execution.</description><pubDate>Thu, 29 Feb 2024 19:37:23 +0000</pubDate></item><item><title>CVE-2024-27658 | D-Link DIR-823G A1V1.0.2B05 was discovered to contain Null-pointer dereferences in sub_4484A8(). This vulnerability allows attackers to caus...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27658</link><description>D-Link DIR-823G A1V1.0.2B05 was discovered to contain Null-pointer dereferences in sub_4484A8(). This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input.</description><pubDate>Thu, 29 Feb 2024 19:37:23 +0000</pubDate></item><item><title>CVE-2024-27659 | D-Link DIR-823G A1V1.0.2B05 was discovered to contain Null-pointer dereferences in sub_42AF30(). This vulnerability allows attackers to caus...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27659</link><description>D-Link DIR-823G A1V1.0.2B05 was discovered to contain Null-pointer dereferences in sub_42AF30(). This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input.</description><pubDate>Thu, 29 Feb 2024 19:37:24 +0000</pubDate></item><item><title>CVE-2024-27660 | D-Link DIR-823G A1V1.0.2B05 was discovered to contain a Null-pointer dereferences in sub_41C488(). This vulnerability allows attackers to ca...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27660</link><description>D-Link DIR-823G A1V1.0.2B05 was discovered to contain a Null-pointer dereferences in sub_41C488(). This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input.</description><pubDate>Thu, 29 Feb 2024 19:29:48 +0000</pubDate></item><item><title>CVE-2024-27661 | D-Link DIR-823G A1V1.0.2B05 was discovered to contain Null-pointer dereferences in sub_4484A8(). This vulnerability allows attackers to caus...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27661</link><description>D-Link DIR-823G A1V1.0.2B05 was discovered to contain Null-pointer dereferences in sub_4484A8(). This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input.</description><pubDate>Thu, 29 Feb 2024 19:29:48 +0000</pubDate></item><item><title>CVE-2024-27662 | D-Link DIR-823G A1V1.0.2B05 was discovered to contain a Null-pointer dereferences in sub_4110f4(). This vulnerability allows attackers to ca...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27662</link><description>D-Link DIR-823G A1V1.0.2B05 was discovered to contain a Null-pointer dereferences in sub_4110f4(). This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input.</description><pubDate>Thu, 29 Feb 2024 19:29:48 +0000</pubDate></item><item><title>CVE-2024-1595 | Delta Electronics CNCSoft-B DOPSoft Uncontrolled Search Path Element</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1595</link><description>Delta Electronics CNCSoft-B DOPSoft prior to v4.0.0.82

 insecurely loads libraries, which may allow an attacker to use DLL hijacking and take over the system where the software is installed.</description><pubDate>Thu, 29 Feb 2024 19:22:48 +0000</pubDate></item><item><title>CVE-2024-25811 | An access control issue in Dreamer CMS v4.0.1 allows attackers to download backup files and leak sensitive information.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25811</link><description>An access control issue in Dreamer CMS v4.0.1 allows attackers to download backup files and leak sensitive information.</description><pubDate>Thu, 29 Feb 2024 18:56:10 +0000</pubDate></item><item><title>CVE-2024-2007 | OpenBMB XAgent Privileged Mode sandbox</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2007</link><description>A vulnerability was found in OpenBMB XAgent 1.0.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the component Privileged Mode. The manipulation leads to sandbox issue. The attack needs to be approached locally. The exploit has been disclosed to the public and may be used. The identifier VDB-255265 was assigned to this vulnerability.</description><pubDate>Thu, 29 Feb 2024 18:34:58 +0000</pubDate></item><item><title>CVE-2024-2009 | Nway Pro Argument index.php ajax_login_submit_form information exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2009</link><description>A vulnerability was found in Nway Pro 9. It has been rated as problematic. Affected by this issue is the function ajax_login_submit_form of the file login\index.php of the component Argument Handler. The manipulation of the argument rsargs[] leads to information exposure through error message. The attack may be launched remotely. VDB-255266 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 29 Feb 2024 18:34:58 +0000</pubDate></item><item><title>CVE-2024-1908 | Improper Privilege Management vulnerability was identified in GitHub Enterprise Server that allowed Privilege Escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1908</link><description>An Improper Privilege Management vulnerability was identified in GitHub Enterprise Server that allowed an attacker to use the Enterprise Actions GitHub Connect download token to fetch private repository data. An attacker would require an account on the server instance with non-default settings for GitHub Connect. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.12 and was fixed in versions 3.8.16, 3.9.11, 3.10.8, and 3.11.6. This vulnerability was reported via the GitHub Bug Bounty program.</description><pubDate>Thu, 29 Feb 2024 18:28:01 +0000</pubDate></item><item><title>CVE-2024-27094 | OpenZeppelin Contracts base64 encoding may read from potentially dirty memory</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27094</link><description>OpenZeppelin Contracts is a library for secure smart contract development. The `Base64.encode` function encodes a `bytes` input by iterating over it in chunks of 3 bytes. When this input is not a multiple of 3, the last iteration may read parts of the memory that are beyond the input buffer. The vulnerability is fixed in 5.0.2 and 4.9.6.</description><pubDate>Thu, 29 Feb 2024 18:28:01 +0000</pubDate></item><item><title>CVE-2024-25180 | An issue discovered in pdfmake 0.2.9 allows remote attackers to run arbitrary code via crafted POST request to the path '/pdf'.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25180</link><description>An issue discovered in pdfmake 0.2.9 allows remote attackers to run arbitrary code via crafted POST request to the path '/pdf'.</description><pubDate>Thu, 29 Feb 2024 18:14:03 +0000</pubDate></item><item><title>CVE-2023-6132 | AVEVA Edge products  Uncontrolled Search Path Element</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6132</link><description>The vulnerability, if exploited, could allow a malicious entity with access to the file system to achieve arbitrary code execution and privilege escalation by tricking AVEVA Edge to load an unsafe DLL.</description><pubDate>Thu, 29 Feb 2024 17:43:23 +0000</pubDate></item><item><title>CVE-2024-20765 | ZDI-CAN-22674: Adobe Acrobat Reader DC PDF File Parsing Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20765</link><description>Acrobat Reader versions 20.005.30539, 23.008.20470 and earlier are affected by a Use After Free vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.</description><pubDate>Thu, 29 Feb 2024 16:42:32 +0000</pubDate></item><item><title>CVE-2024-24110 | SQL Injection vulnerability in crmeb_java before v1.3.4 allows attackers to run arbitrary SQL commands via crafted GET request to the compon...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24110</link><description>SQL Injection vulnerability in crmeb_java before v1.3.4 allows attackers to run arbitrary SQL commands via crafted GET request to the component /api/front/spread/people.</description><pubDate>Thu, 29 Feb 2024 16:12:04 +0000</pubDate></item><item><title>CVE-2023-52486 | drm: Don&amp;#x27;t unref the same fb many times by mistake due to deadlock handling</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52486</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm: Don't unref the same fb many times by mistake due to deadlock handling

If we get a deadlock after the fb lookup in drm_mode_page_flip_ioctl()
we proceed to unref the fb and then retry the whole thing from the top.
But we forget to reset the fb pointer back to NULL, and so if we then
get another error during the retry, before the fb lookup, we proceed
the unref the same fb again without having gotten another reference.
The end result is that the fb will (eventually) end up being freed
while it's still in use.

Reset fb to NULL once we've unreffed it to avoid doing it again
until we've done another fb lookup.

This turned out to be pretty easy to hit on a DG2 when doing async
flips (and CONFIG_DEBUG_WW_MUTEX_SLOWPATH=y). The first symptom I
saw that drm_closefb() simply got stuck in a busy loop while walking
the framebuffer list. Fortunately I was able to convince it to oops
instead, and from there it was easier to track down the culprit.</description><pubDate>Thu, 29 Feb 2024 15:57:01 +0000</pubDate></item><item><title>CVE-2023-52487 | net/mlx5e: Fix peer flow lists handling</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52487</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Fix peer flow lists handling

The cited change refactored mlx5e_tc_del_fdb_peer_flow() to only clear DUP
flag when list of peer flows has become empty. However, if any concurrent
user holds a reference to a peer flow (for example, the neighbor update
workqueue task is updating peer flow's parent encap entry concurrently),
then the flow will not be removed from the peer list and, consecutively,
DUP flag will remain set. Since mlx5e_tc_del_fdb_peers_flow() calls
mlx5e_tc_del_fdb_peer_flow() for every possible peer index the algorithm
will try to remove the flow from eswitch instances that it has never peered
with causing either NULL pointer dereference when trying to remove the flow
peer list head of peer_index that was never initialized or a warning if the
list debug config is enabled[0].

Fix the issue by always removing the peer flow from the list even when not
releasing the last reference to it.

[0]:

[ 3102.985806] ------------[ cut here ]------------
[ 3102.986223] list_del corruption, ffff888139110698-&gt;next is NULL
[ 3102.986757] WARNING: CPU: 2 PID: 22109 at lib/list_debug.c:53 __list_del_entry_valid_or_report+0x4f/0xc0
[ 3102.987561] Modules linked in: act_ct nf_flow_table bonding act_tunnel_key act_mirred act_skbedit vxlan cls_matchall nfnetlink_cttimeout act_gact cls_flower sch_ingress mlx5_vdpa vringh vhost_iotlb vdpa openvswitch nsh xt_MASQUERADE nf_conntrack_netlink nfnetlink iptable_nat xt_addrtype xt_conntrack nf_nat br_netfilter rpcsec_gss_krb5 auth_rpcg
ss oid_registry overlay rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm ib_ipoib iw_cm ib_cm mlx5_ib ib_uverbs ib_core mlx5_core [last unloaded: bonding]
[ 3102.991113] CPU: 2 PID: 22109 Comm: revalidator28 Not tainted 6.6.0-rc6+ #3
[ 3102.991695] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
[ 3102.992605] RIP: 0010:__list_del_entry_valid_or_report+0x4f/0xc0
[ 3102.993122] Code: 39 c2 74 56 48 8b 32 48 39 fe 75 62 48 8b 51 08 48 39 f2 75 73 b8 01 00 00 00 c3 48 89 fe 48 c7 c7 48 fd 0a 82 e8 41 0b ad ff &lt;0f&gt; 0b 31 c0 c3 48 89 fe 48 c7 c7 70 fd 0a 82 e8 2d 0b ad ff 0f 0b
[ 3102.994615] RSP: 0018:ffff8881383e7710 EFLAGS: 00010286
[ 3102.995078] RAX: 0000000000000000 RBX: 0000000000000002 RCX: 0000000000000000
[ 3102.995670] RDX: 0000000000000001 RSI: ffff88885f89b640 RDI: ffff88885f89b640
[ 3102.997188] DEL flow 00000000be367878 on port 0
[ 3102.998594] RBP: dead000000000122 R08: 0000000000000000 R09: c0000000ffffdfff
[ 3102.999604] R10: 0000000000000008 R11: ffff8881383e7598 R12: dead000000000100
[ 3103.000198] R13: 0000000000000002 R14: ffff888139110000 R15: ffff888101901240
[ 3103.000790] FS:  00007f424cde4700(0000) GS:ffff88885f880000(0000) knlGS:0000000000000000
[ 3103.001486] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 3103.001986] CR2: 00007fd42e8dcb70 CR3: 000000011e68a003 CR4: 0000000000370ea0
[ 3103.002596] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[ 3103.003190] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[ 3103.003787] Call Trace:
[ 3103.004055]  &lt;TASK&gt;
[ 3103.004297]  ? __warn+0x7d/0x130
[ 3103.004623]  ? __list_del_entry_valid_or_report+0x4f/0xc0
[ 3103.005094]  ? report_bug+0xf1/0x1c0
[ 3103.005439]  ? console_unlock+0x4a/0xd0
[ 3103.005806]  ? handle_bug+0x3f/0x70
[ 3103.006149]  ? exc_invalid_op+0x13/0x60
[ 3103.006531]  ? asm_exc_invalid_op+0x16/0x20
[ 3103.007430]  ? __list_del_entry_valid_or_report+0x4f/0xc0
[ 3103.007910]  mlx5e_tc_del_fdb_peers_flow+0xcf/0x240 [mlx5_core]
[ 3103.008463]  mlx5e_tc_del_flow+0x46/0x270 [mlx5_core]
[ 3103.008944]  mlx5e_flow_put+0x26/0x50 [mlx5_core]
[ 3103.009401]  mlx5e_delete_flower+0x25f/0x380 [mlx5_core]
[ 3103.009901]  tc_setup_cb_destroy+0xab/0x180
[ 3103.010292]  fl_hw_destroy_filter+0x99/0xc0 [cls_flower]
[ 3103.010779]  __fl_delete+0x2d4/0x2f0 [cls_flower]
[ 3103.0
---truncated---</description><pubDate>Thu, 29 Feb 2024 15:57:02 +0000</pubDate></item><item><title>CVE-2023-52488 | serial: sc16is7xx: convert from _raw_ to _noinc_ regmap functions for FIFO</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52488</link><description>In the Linux kernel, the following vulnerability has been resolved:

serial: sc16is7xx: convert from _raw_ to _noinc_ regmap functions for FIFO

The SC16IS7XX IC supports a burst mode to access the FIFOs where the
initial register address is sent ($00), followed by all the FIFO data
without having to resend the register address each time. In this mode, the
IC doesn't increment the register address for each R/W byte.

The regmap_raw_read() and regmap_raw_write() are functions which can
perform IO over multiple registers. They are currently used to read/write
from/to the FIFO, and although they operate correctly in this burst mode on
the SPI bus, they would corrupt the regmap cache if it was not disabled
manually. The reason is that when the R/W size is more than 1 byte, these
functions assume that the register address is incremented and handle the
cache accordingly.

Convert FIFO R/W functions to use the regmap _noinc_ versions in order to
remove the manual cache control which was a workaround when using the
_raw_ versions. FIFO registers are properly declared as volatile so
cache will not be used/updated for FIFO accesses.</description><pubDate>Thu, 29 Feb 2024 15:57:02 +0000</pubDate></item><item><title>CVE-2023-52489 | mm/sparsemem: fix race in accessing memory_section-&amp;gt;usage</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52489</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm/sparsemem: fix race in accessing memory_section-&gt;usage

The below race is observed on a PFN which falls into the device memory
region with the system memory configuration where PFN's are such that
[ZONE_NORMAL ZONE_DEVICE ZONE_NORMAL].  Since normal zone start and end
pfn contains the device memory PFN's as well, the compaction triggered
will try on the device memory PFN's too though they end up in NOP(because
pfn_to_online_page() returns NULL for ZONE_DEVICE memory sections).  When
from other core, the section mappings are being removed for the
ZONE_DEVICE region, that the PFN in question belongs to, on which
compaction is currently being operated is resulting into the kernel crash
with CONFIG_SPASEMEM_VMEMAP enabled.  The crash logs can be seen at [1].

compact_zone()			memunmap_pages
-------------			---------------
__pageblock_pfn_to_page
   ......
 (a)pfn_valid():
     valid_section()//return true
			      (b)__remove_pages()-&gt;
				  sparse_remove_section()-&gt;
				    section_deactivate():
				    [Free the array ms-&gt;usage and set
				     ms-&gt;usage = NULL]
     pfn_section_valid()
     [Access ms-&gt;usage which
     is NULL]

NOTE: From the above it can be said that the race is reduced to between
the pfn_valid()/pfn_section_valid() and the section deactivate with
SPASEMEM_VMEMAP enabled.

The commit b943f045a9af("mm/sparse: fix kernel crash with
pfn_section_valid check") tried to address the same problem by clearing
the SECTION_HAS_MEM_MAP with the expectation of valid_section() returns
false thus ms-&gt;usage is not accessed.

Fix this issue by the below steps:

a) Clear SECTION_HAS_MEM_MAP before freeing the -&gt;usage.

b) RCU protected read side critical section will either return NULL
   when SECTION_HAS_MEM_MAP is cleared or can successfully access -&gt;usage.

c) Free the -&gt;usage with kfree_rcu() and set ms-&gt;usage = NULL.  No
   attempt will be made to access -&gt;usage after this as the
   SECTION_HAS_MEM_MAP is cleared thus valid_section() return false.

Thanks to David/Pavan for their inputs on this patch.

[1] https://lore.kernel.org/linux-mm/994410bb-89aa-d987-1f50-f514903c55aa@quicinc.com/

On Snapdragon SoC, with the mentioned memory configuration of PFN's as
[ZONE_NORMAL ZONE_DEVICE ZONE_NORMAL], we are able to see bunch of
issues daily while testing on a device farm.

For this particular issue below is the log.  Though the below log is
not directly pointing to the pfn_section_valid(){ ms-&gt;usage;}, when we
loaded this dump on T32 lauterbach tool, it is pointing.

[  540.578056] Unable to handle kernel NULL pointer dereference at
virtual address 0000000000000000
[  540.578068] Mem abort info:
[  540.578070]   ESR = 0x0000000096000005
[  540.578073]   EC = 0x25: DABT (current EL), IL = 32 bits
[  540.578077]   SET = 0, FnV = 0
[  540.578080]   EA = 0, S1PTW = 0
[  540.578082]   FSC = 0x05: level 1 translation fault
[  540.578085] Data abort info:
[  540.578086]   ISV = 0, ISS = 0x00000005
[  540.578088]   CM = 0, WnR = 0
[  540.579431] pstate: 82400005 (Nzcv daif +PAN -UAO +TCO -DIT -SSBSBTYPE=--)
[  540.579436] pc : __pageblock_pfn_to_page+0x6c/0x14c
[  540.579454] lr : compact_zone+0x994/0x1058
[  540.579460] sp : ffffffc03579b510
[  540.579463] x29: ffffffc03579b510 x28: 0000000000235800 x27:000000000000000c
[  540.579470] x26: 0000000000235c00 x25: 0000000000000068 x24:ffffffc03579b640
[  540.579477] x23: 0000000000000001 x22: ffffffc03579b660 x21:0000000000000000
[  540.579483] x20: 0000000000235bff x19: ffffffdebf7e3940 x18:ffffffdebf66d140
[  540.579489] x17: 00000000739ba063 x16: 00000000739ba063 x15:00000000009f4bff
[  540.579495] x14: 0000008000000000 x13: 0000000000000000 x12:0000000000000001
[  540.579501] x11: 0000000000000000 x10: 0000000000000000 x9 :ffffff897d2cd440
[  540.579507] x8 : 0000000000000000 x7 : 0000000000000000 x6 :ffffffc03579b5b4
[  540.579512] x5 : 0000000000027f25 x4 : ffffffc03579b5b8 x3 :0000000000000
---truncated---</description><pubDate>Thu, 29 Feb 2024 15:57:02 +0000</pubDate></item><item><title>CVE-2023-52490 | mm: migrate: fix getting incorrect page mapping during page migration</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52490</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm: migrate: fix getting incorrect page mapping during page migration

When running stress-ng testing, we found below kernel crash after a few hours:

Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
pc : dentry_name+0xd8/0x224
lr : pointer+0x22c/0x370
sp : ffff800025f134c0
......
Call trace:
  dentry_name+0xd8/0x224
  pointer+0x22c/0x370
  vsnprintf+0x1ec/0x730
  vscnprintf+0x2c/0x60
  vprintk_store+0x70/0x234
  vprintk_emit+0xe0/0x24c
  vprintk_default+0x3c/0x44
  vprintk_func+0x84/0x2d0
  printk+0x64/0x88
  __dump_page+0x52c/0x530
  dump_page+0x14/0x20
  set_migratetype_isolate+0x110/0x224
  start_isolate_page_range+0xc4/0x20c
  offline_pages+0x124/0x474
  memory_block_offline+0x44/0xf4
  memory_subsys_offline+0x3c/0x70
  device_offline+0xf0/0x120
  ......

After analyzing the vmcore, I found this issue is caused by page migration.
The scenario is that, one thread is doing page migration, and we will use the
target page's -&gt;mapping field to save 'anon_vma' pointer between page unmap and
page move, and now the target page is locked and refcount is 1.

Currently, there is another stress-ng thread performing memory hotplug,
attempting to offline the target page that is being migrated. It discovers that
the refcount of this target page is 1, preventing the offline operation, thus
proceeding to dump the page. However, page_mapping() of the target page may
return an incorrect file mapping to crash the system in dump_mapping(), since
the target page-&gt;mapping only saves 'anon_vma' pointer without setting
PAGE_MAPPING_ANON flag.

There are seveval ways to fix this issue:
(1) Setting the PAGE_MAPPING_ANON flag for target page's -&gt;mapping when saving
'anon_vma', but this can confuse PageAnon() for PFN walkers, since the target
page has not built mappings yet.
(2) Getting the page lock to call page_mapping() in __dump_page() to avoid crashing
the system, however, there are still some PFN walkers that call page_mapping()
without holding the page lock, such as compaction.
(3) Using target page-&gt;private field to save the 'anon_vma' pointer and 2 bits
page state, just as page-&gt;mapping records an anonymous page, which can remove
the page_mapping() impact for PFN walkers and also seems a simple way.

So I choose option 3 to fix this issue, and this can also fix other potential
issues for PFN walkers, such as compaction.</description><pubDate>Thu, 29 Feb 2024 15:57:03 +0000</pubDate></item><item><title>CVE-2023-52491 | media: mtk-jpeg: Fix use after free bug due to error path handling in mtk_jpeg_dec_device_run</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52491</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: mtk-jpeg: Fix use after free bug due to error path handling in mtk_jpeg_dec_device_run

In mtk_jpeg_probe, &amp;jpeg-&gt;job_timeout_work is bound with
mtk_jpeg_job_timeout_work.

In mtk_jpeg_dec_device_run, if error happens in
mtk_jpeg_set_dec_dst, it will finally start the worker while
mark the job as finished by invoking v4l2_m2m_job_finish.

There are two methods to trigger the bug. If we remove the
module, it which will call mtk_jpeg_remove to make cleanup.
The possible sequence is as follows, which will cause a
use-after-free bug.

CPU0                  CPU1
mtk_jpeg_dec_...    |
  start worker	    |
                    |mtk_jpeg_job_timeout_work
mtk_jpeg_remove     |
  v4l2_m2m_release  |
    kfree(m2m_dev); |
                    |
                    | v4l2_m2m_get_curr_priv
                    |   m2m_dev-&gt;curr_ctx //use

If we close the file descriptor, which will call mtk_jpeg_release,
it will have a similar sequence.

Fix this bug by starting timeout worker only if started jpegdec worker
successfully. Then v4l2_m2m_job_finish will only be called in
either mtk_jpeg_job_timeout_work or mtk_jpeg_dec_device_run.</description><pubDate>Thu, 29 Feb 2024 15:57:03 +0000</pubDate></item><item><title>CVE-2023-52492 | dmaengine: fix NULL pointer in channel unregistration function</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52492</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: fix NULL pointer in channel unregistration function

__dma_async_device_channel_register() can fail. In case of failure,
chan-&gt;local is freed (with free_percpu()), and chan-&gt;local is nullified.
When dma_async_device_unregister() is called (because of managed API or
intentionally by DMA controller driver), channels are unconditionally
unregistered, leading to this NULL pointer:
[    1.318693] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000d0
[...]
[    1.484499] Call trace:
[    1.486930]  device_del+0x40/0x394
[    1.490314]  device_unregister+0x20/0x7c
[    1.494220]  __dma_async_device_channel_unregister+0x68/0xc0

Look at dma_async_device_register() function error path, channel device
unregistration is done only if chan-&gt;local is not NULL.

Then add the same condition at the beginning of
__dma_async_device_channel_unregister() function, to avoid NULL pointer
issue whatever the API used to reach this function.</description><pubDate>Thu, 29 Feb 2024 15:57:03 +0000</pubDate></item><item><title>CVE-2023-52493 | bus: mhi: host: Drop chan lock before queuing buffers</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52493</link><description>In the Linux kernel, the following vulnerability has been resolved:

bus: mhi: host: Drop chan lock before queuing buffers

Ensure read and write locks for the channel are not taken in succession by
dropping the read lock from parse_xfer_event() such that a callback given
to client can potentially queue buffers and acquire the write lock in that
process. Any queueing of buffers should be done without channel read lock
acquired as it can result in multiple locks and a soft lockup.

[mani: added fixes tag and cc'ed stable]</description><pubDate>Thu, 29 Feb 2024 15:57:04 +0000</pubDate></item><item><title>CVE-2023-52494 | bus: mhi: host: Add alignment check for event ring read pointer</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52494</link><description>In the Linux kernel, the following vulnerability has been resolved:

bus: mhi: host: Add alignment check for event ring read pointer

Though we do check the event ring read pointer by "is_valid_ring_ptr"
to make sure it is in the buffer range, but there is another risk the
pointer may be not aligned.  Since we are expecting event ring elements
are 128 bits(struct mhi_ring_element) aligned, an unaligned read pointer
could lead to multiple issues like DoS or ring buffer memory corruption.

So add a alignment check for event ring read pointer.</description><pubDate>Thu, 29 Feb 2024 15:57:04 +0000</pubDate></item><item><title>CVE-2023-52495 | soc: qcom: pmic_glink_altmode: fix port sanity check</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52495</link><description>In the Linux kernel, the following vulnerability has been resolved:

soc: qcom: pmic_glink_altmode: fix port sanity check

The PMIC GLINK altmode driver currently supports at most two ports.

Fix the incomplete port sanity check on notifications to avoid
accessing and corrupting memory beyond the port array if we ever get a
notification for an unsupported port.</description><pubDate>Thu, 29 Feb 2024 15:57:05 +0000</pubDate></item><item><title>CVE-2023-52496 | mtd: maps: vmu-flash: Fix the (mtd core) switch to ref counters</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52496</link><description>In the Linux kernel, the following vulnerability has been resolved:

mtd: maps: vmu-flash: Fix the (mtd core) switch to ref counters

While switching to ref counters for track mtd devices use, the vmu-flash
driver was forgotten. The reason for reading the ref counter seems
debatable, but let's just fix the build for now.</description><pubDate>Thu, 29 Feb 2024 15:57:05 +0000</pubDate></item><item><title>CVE-2023-52497 | erofs: fix lz4 inplace decompression</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52497</link><description>In the Linux kernel, the following vulnerability has been resolved:

erofs: fix lz4 inplace decompression

Currently EROFS can map another compressed buffer for inplace
decompression, that was used to handle the cases that some pages of
compressed data are actually not in-place I/O.

However, like most simple LZ77 algorithms, LZ4 expects the compressed
data is arranged at the end of the decompressed buffer and it
explicitly uses memmove() to handle overlapping:
  __________________________________________________________
 |_ direction of decompression --&gt; ____ |_ compressed data _|

Although EROFS arranges compressed data like this, it typically maps two
individual virtual buffers so the relative order is uncertain.
Previously, it was hardly observed since LZ4 only uses memmove() for
short overlapped literals and x86/arm64 memmove implementations seem to
completely cover it up and they don't have this issue.  Juhyung reported
that EROFS data corruption can be found on a new Intel x86 processor.
After some analysis, it seems that recent x86 processors with the new
FSRM feature expose this issue with "rep movsb".

Let's strictly use the decompressed buffer for lz4 inplace
decompression for now.  Later, as an useful improvement, we could try
to tie up these two buffers together in the correct order.</description><pubDate>Thu, 29 Feb 2024 15:57:05 +0000</pubDate></item><item><title>CVE-2023-52498 | PM: sleep: Fix possible deadlocks in core system-wide PM code</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52498</link><description>In the Linux kernel, the following vulnerability has been resolved:

PM: sleep: Fix possible deadlocks in core system-wide PM code

It is reported that in low-memory situations the system-wide resume core
code deadlocks, because async_schedule_dev() executes its argument
function synchronously if it cannot allocate memory (and not only in
that case) and that function attempts to acquire a mutex that is already
held.  Executing the argument function synchronously from within
dpm_async_fn() may also be problematic for ordering reasons (it may
cause a consumer device's resume callback to be invoked before a
requisite supplier device's one, for example).

Address this by changing the code in question to use
async_schedule_dev_nocall() for scheduling the asynchronous
execution of device suspend and resume functions and to directly
run them synchronously if async_schedule_dev_nocall() returns false.</description><pubDate>Thu, 29 Feb 2024 15:57:06 +0000</pubDate></item><item><title>CVE-2024-26608 | ksmbd: fix global oob in ksmbd_nl_policy</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26608</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: fix global oob in ksmbd_nl_policy

Similar to a reported issue (check the commit b33fb5b801c6 ("net:
qualcomm: rmnet: fix global oob in rmnet_policy"), my local fuzzer finds
another global out-of-bounds read for policy ksmbd_nl_policy. See bug
trace below:

==================================================================
BUG: KASAN: global-out-of-bounds in validate_nla lib/nlattr.c:386 [inline]
BUG: KASAN: global-out-of-bounds in __nla_validate_parse+0x24af/0x2750 lib/nlattr.c:600
Read of size 1 at addr ffffffff8f24b100 by task syz-executor.1/62810

CPU: 0 PID: 62810 Comm: syz-executor.1 Tainted: G                 N 6.1.0 #3
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
Call Trace:
 &lt;TASK&gt;
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x8b/0xb3 lib/dump_stack.c:106
 print_address_description mm/kasan/report.c:284 [inline]
 print_report+0x172/0x475 mm/kasan/report.c:395
 kasan_report+0xbb/0x1c0 mm/kasan/report.c:495
 validate_nla lib/nlattr.c:386 [inline]
 __nla_validate_parse+0x24af/0x2750 lib/nlattr.c:600
 __nla_parse+0x3e/0x50 lib/nlattr.c:697
 __nlmsg_parse include/net/netlink.h:748 [inline]
 genl_family_rcv_msg_attrs_parse.constprop.0+0x1b0/0x290 net/netlink/genetlink.c:565
 genl_family_rcv_msg_doit+0xda/0x330 net/netlink/genetlink.c:734
 genl_family_rcv_msg net/netlink/genetlink.c:833 [inline]
 genl_rcv_msg+0x441/0x780 net/netlink/genetlink.c:850
 netlink_rcv_skb+0x14f/0x410 net/netlink/af_netlink.c:2540
 genl_rcv+0x24/0x40 net/netlink/genetlink.c:861
 netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]
 netlink_unicast+0x54e/0x800 net/netlink/af_netlink.c:1345
 netlink_sendmsg+0x930/0xe50 net/netlink/af_netlink.c:1921
 sock_sendmsg_nosec net/socket.c:714 [inline]
 sock_sendmsg+0x154/0x190 net/socket.c:734
 ____sys_sendmsg+0x6df/0x840 net/socket.c:2482
 ___sys_sendmsg+0x110/0x1b0 net/socket.c:2536
 __sys_sendmsg+0xf3/0x1c0 net/socket.c:2565
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3b/0x90 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fdd66a8f359
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fdd65e00168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: ffffffffffffffda RBX: 00007fdd66bbcf80 RCX: 00007fdd66a8f359
RDX: 0000000000000000 RSI: 0000000020000500 RDI: 0000000000000003
RBP: 00007fdd66ada493 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007ffc84b81aff R14: 00007fdd65e00300 R15: 0000000000022000
 &lt;/TASK&gt;

The buggy address belongs to the variable:
 ksmbd_nl_policy+0x100/0xa80

The buggy address belongs to the physical page:
page:0000000034f47940 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1ccc4b
flags: 0x200000000001000(reserved|node=0|zone=2)
raw: 0200000000001000 ffffea00073312c8 ffffea00073312c8 0000000000000000
raw: 0000000000000000 0000000000000000 00000001ffffffff 0000000000000000
page dumped because: kasan: bad access detected

Memory state around the buggy address:
 ffffffff8f24b000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 ffffffff8f24b080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
&gt;ffffffff8f24b100: f9 f9 f9 f9 00 00 f9 f9 f9 f9 f9 f9 00 00 07 f9
                   ^
 ffffffff8f24b180: f9 f9 f9 f9 00 05 f9 f9 f9 f9 f9 f9 00 00 00 05
 ffffffff8f24b200: f9 f9 f9 f9 00 00 03 f9 f9 f9 f9 f9 00 00 04 f9
==================================================================

To fix it, add a placeholder named __KSMBD_EVENT_MAX and let
KSMBD_EVENT_MAX to be its original value - 1 according to what other
netlink families do. Also change two sites that refer the
KSMBD_EVENT_MAX to correct value.</description><pubDate>Thu, 29 Feb 2024 15:57:06 +0000</pubDate></item><item><title>CVE-2024-26609 | netfilter: nf_tables: reject QUEUE/DROP verdict parameters</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26609</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: reject QUEUE/DROP verdict parameters

This reverts commit e0abdadcc6e1.

core.c:nf_hook_slow assumes that the upper 16 bits of NF_DROP
verdicts contain a valid errno, i.e. -EPERM, -EHOSTUNREACH or similar,
or 0.

Due to the reverted commit, its possible to provide a positive
value, e.g. NF_ACCEPT (1), which results in use-after-free.

Its not clear to me why this commit was made.

NF_QUEUE is not used by nftables; "queue" rules in nftables
will result in use of "nft_queue" expression.

If we later need to allow specifiying errno values from userspace
(do not know why), this has to call NF_DROP_GETERR and check that
"err &lt;= 0" holds true.</description><pubDate>Thu, 29 Feb 2024 15:57:06 +0000</pubDate></item><item><title>CVE-2024-26610 | wifi: iwlwifi: fix a memory corruption</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26610</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: fix a memory corruption

iwl_fw_ini_trigger_tlv::data is a pointer to a __le32, which means that
if we copy to iwl_fw_ini_trigger_tlv::data + offset while offset is in
bytes, we'll write past the buffer.</description><pubDate>Thu, 29 Feb 2024 15:57:07 +0000</pubDate></item><item><title>CVE-2024-26611 | xsk: fix usage of multi-buffer BPF helpers for ZC XDP</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26611</link><description>In the Linux kernel, the following vulnerability has been resolved:

xsk: fix usage of multi-buffer BPF helpers for ZC XDP

Currently when packet is shrunk via bpf_xdp_adjust_tail() and memory
type is set to MEM_TYPE_XSK_BUFF_POOL, null ptr dereference happens:

[1136314.192256] BUG: kernel NULL pointer dereference, address:
0000000000000034
[1136314.203943] #PF: supervisor read access in kernel mode
[1136314.213768] #PF: error_code(0x0000) - not-present page
[1136314.223550] PGD 0 P4D 0
[1136314.230684] Oops: 0000 [#1] PREEMPT SMP NOPTI
[1136314.239621] CPU: 8 PID: 54203 Comm: xdpsock Not tainted 6.6.0+ #257
[1136314.250469] Hardware name: Intel Corporation S2600WFT/S2600WFT,
BIOS SE5C620.86B.02.01.0008.031920191559 03/19/2019
[1136314.265615] RIP: 0010:__xdp_return+0x6c/0x210
[1136314.274653] Code: ad 00 48 8b 47 08 49 89 f8 a8 01 0f 85 9b 01 00 00 0f 1f 44 00 00 f0 41 ff 48 34 75 32 4c 89 c7 e9 79 cd 80 ff 83 fe 03 75 17 &lt;f6&gt; 41 34 01 0f 85 02 01 00 00 48 89 cf e9 22 cc 1e 00 e9 3d d2 86
[1136314.302907] RSP: 0018:ffffc900089f8db0 EFLAGS: 00010246
[1136314.312967] RAX: ffffc9003168aed0 RBX: ffff8881c3300000 RCX:
0000000000000000
[1136314.324953] RDX: 0000000000000000 RSI: 0000000000000003 RDI:
ffffc9003168c000
[1136314.336929] RBP: 0000000000000ae0 R08: 0000000000000002 R09:
0000000000010000
[1136314.348844] R10: ffffc9000e495000 R11: 0000000000000040 R12:
0000000000000001
[1136314.360706] R13: 0000000000000524 R14: ffffc9003168aec0 R15:
0000000000000001
[1136314.373298] FS:  00007f8df8bbcb80(0000) GS:ffff8897e0e00000(0000)
knlGS:0000000000000000
[1136314.386105] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[1136314.396532] CR2: 0000000000000034 CR3: 00000001aa912002 CR4:
00000000007706f0
[1136314.408377] DR0: 0000000000000000 DR1: 0000000000000000 DR2:
0000000000000000
[1136314.420173] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:
0000000000000400
[1136314.431890] PKRU: 55555554
[1136314.439143] Call Trace:
[1136314.446058]  &lt;IRQ&gt;
[1136314.452465]  ? __die+0x20/0x70
[1136314.459881]  ? page_fault_oops+0x15b/0x440
[1136314.468305]  ? exc_page_fault+0x6a/0x150
[1136314.476491]  ? asm_exc_page_fault+0x22/0x30
[1136314.484927]  ? __xdp_return+0x6c/0x210
[1136314.492863]  bpf_xdp_adjust_tail+0x155/0x1d0
[1136314.501269]  bpf_prog_ccc47ae29d3b6570_xdp_sock_prog+0x15/0x60
[1136314.511263]  ice_clean_rx_irq_zc+0x206/0xc60 [ice]
[1136314.520222]  ? ice_xmit_zc+0x6e/0x150 [ice]
[1136314.528506]  ice_napi_poll+0x467/0x670 [ice]
[1136314.536858]  ? ttwu_do_activate.constprop.0+0x8f/0x1a0
[1136314.546010]  __napi_poll+0x29/0x1b0
[1136314.553462]  net_rx_action+0x133/0x270
[1136314.561619]  __do_softirq+0xbe/0x28e
[1136314.569303]  do_softirq+0x3f/0x60

This comes from __xdp_return() call with xdp_buff argument passed as
NULL which is supposed to be consumed by xsk_buff_free() call.

To address this properly, in ZC case, a node that represents the frag
being removed has to be pulled out of xskb_list. Introduce
appropriate xsk helpers to do such node operation and use them
accordingly within bpf_xdp_adjust_tail().</description><pubDate>Thu, 29 Feb 2024 15:57:07 +0000</pubDate></item><item><title>CVE-2024-26612 | netfs, fscache: Prevent Oops in fscache_put_cache()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26612</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfs, fscache: Prevent Oops in fscache_put_cache()

This function dereferences "cache" and then checks if it's
IS_ERR_OR_NULL().  Check first, then dereference.</description><pubDate>Thu, 29 Feb 2024 15:57:07 +0000</pubDate></item><item><title>CVE-2024-26613 | net/rds: Fix UBSAN: array-index-out-of-bounds in rds_cmsg_recv</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26613</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/rds: Fix UBSAN: array-index-out-of-bounds in rds_cmsg_recv

Syzcaller UBSAN crash occurs in rds_cmsg_recv(),
which reads inc-&gt;i_rx_lat_trace[j + 1] with index 4 (3 + 1),
but with array size of 4 (RDS_RX_MAX_TRACES).
Here 'j' is assigned from rs-&gt;rs_rx_trace[i] and in-turn from
trace.rx_trace_pos[i] in rds_recv_track_latency(),
with both arrays sized 3 (RDS_MSG_RX_DGRAM_TRACE_MAX). So fix the
off-by-one bounds check in rds_recv_track_latency() to prevent
a potential crash in rds_cmsg_recv().

Found by syzcaller:
=================================================================
UBSAN: array-index-out-of-bounds in net/rds/recv.c:585:39
index 4 is out of range for type 'u64 [4]'
CPU: 1 PID: 8058 Comm: syz-executor228 Not tainted 6.6.0-gd2f51b3516da #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
BIOS 1.15.0-1 04/01/2014
Call Trace:
 &lt;TASK&gt;
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x136/0x150 lib/dump_stack.c:106
 ubsan_epilogue lib/ubsan.c:217 [inline]
 __ubsan_handle_out_of_bounds+0xd5/0x130 lib/ubsan.c:348
 rds_cmsg_recv+0x60d/0x700 net/rds/recv.c:585
 rds_recvmsg+0x3fb/0x1610 net/rds/recv.c:716
 sock_recvmsg_nosec net/socket.c:1044 [inline]
 sock_recvmsg+0xe2/0x160 net/socket.c:1066
 __sys_recvfrom+0x1b6/0x2f0 net/socket.c:2246
 __do_sys_recvfrom net/socket.c:2264 [inline]
 __se_sys_recvfrom net/socket.c:2260 [inline]
 __x64_sys_recvfrom+0xe0/0x1b0 net/socket.c:2260
 do_syscall_x64 arch/x86/entry/common.c:51 [inline]
 do_syscall_64+0x40/0x110 arch/x86/entry/common.c:82
 entry_SYSCALL_64_after_hwframe+0x63/0x6b
==================================================================</description><pubDate>Thu, 29 Feb 2024 15:57:08 +0000</pubDate></item><item><title>CVE-2024-26614 | tcp: make sure init the accept_queue&amp;#x27;s spinlocks once</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26614</link><description>In the Linux kernel, the following vulnerability has been resolved:

tcp: make sure init the accept_queue's spinlocks once

When I run syz's reproduction C program locally, it causes the following
issue:
pvqspinlock: lock 0xffff9d181cd5c660 has corrupted value 0x0!
WARNING: CPU: 19 PID: 21160 at __pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)
Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011
RIP: 0010:__pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)
Code: 73 56 3a ff 90 c3 cc cc cc cc 8b 05 bb 1f 48 01 85 c0 74 05 c3 cc cc cc cc 8b 17 48 89 fe 48 c7 c7
30 20 ce 8f e8 ad 56 42 ff &lt;0f&gt; 0b c3 cc cc cc cc 0f 0b 0f 1f 40 00 90 90 90 90 90 90 90 90 90
RSP: 0018:ffffa8d200604cb8 EFLAGS: 00010282
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff9d1ef60e0908
RDX: 00000000ffffffd8 RSI: 0000000000000027 RDI: ffff9d1ef60e0900
RBP: ffff9d181cd5c280 R08: 0000000000000000 R09: 00000000ffff7fff
R10: ffffa8d200604b68 R11: ffffffff907dcdc8 R12: 0000000000000000
R13: ffff9d181cd5c660 R14: ffff9d1813a3f330 R15: 0000000000001000
FS:  00007fa110184640(0000) GS:ffff9d1ef60c0000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020000000 CR3: 000000011f65e000 CR4: 00000000000006f0
Call Trace:
&lt;IRQ&gt;
  _raw_spin_unlock (kernel/locking/spinlock.c:186)
  inet_csk_reqsk_queue_add (net/ipv4/inet_connection_sock.c:1321)
  inet_csk_complete_hashdance (net/ipv4/inet_connection_sock.c:1358)
  tcp_check_req (net/ipv4/tcp_minisocks.c:868)
  tcp_v4_rcv (net/ipv4/tcp_ipv4.c:2260)
  ip_protocol_deliver_rcu (net/ipv4/ip_input.c:205)
  ip_local_deliver_finish (net/ipv4/ip_input.c:234)
  __netif_receive_skb_one_core (net/core/dev.c:5529)
  process_backlog (./include/linux/rcupdate.h:779)
  __napi_poll (net/core/dev.c:6533)
  net_rx_action (net/core/dev.c:6604)
  __do_softirq (./arch/x86/include/asm/jump_label.h:27)
  do_softirq (kernel/softirq.c:454 kernel/softirq.c:441)
&lt;/IRQ&gt;
&lt;TASK&gt;
  __local_bh_enable_ip (kernel/softirq.c:381)
  __dev_queue_xmit (net/core/dev.c:4374)
  ip_finish_output2 (./include/net/neighbour.h:540 net/ipv4/ip_output.c:235)
  __ip_queue_xmit (net/ipv4/ip_output.c:535)
  __tcp_transmit_skb (net/ipv4/tcp_output.c:1462)
  tcp_rcv_synsent_state_process (net/ipv4/tcp_input.c:6469)
  tcp_rcv_state_process (net/ipv4/tcp_input.c:6657)
  tcp_v4_do_rcv (net/ipv4/tcp_ipv4.c:1929)
  __release_sock (./include/net/sock.h:1121 net/core/sock.c:2968)
  release_sock (net/core/sock.c:3536)
  inet_wait_for_connect (net/ipv4/af_inet.c:609)
  __inet_stream_connect (net/ipv4/af_inet.c:702)
  inet_stream_connect (net/ipv4/af_inet.c:748)
  __sys_connect (./include/linux/file.h:45 net/socket.c:2064)
  __x64_sys_connect (net/socket.c:2073 net/socket.c:2070 net/socket.c:2070)
  do_syscall_64 (arch/x86/entry/common.c:51 arch/x86/entry/common.c:82)
  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:129)
  RIP: 0033:0x7fa10ff05a3d
  Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89
  c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d ab a3 0e 00 f7 d8 64 89 01 48
  RSP: 002b:00007fa110183de8 EFLAGS: 00000202 ORIG_RAX: 000000000000002a
  RAX: ffffffffffffffda RBX: 0000000020000054 RCX: 00007fa10ff05a3d
  RDX: 000000000000001c RSI: 0000000020000040 RDI: 0000000000000003
  RBP: 00007fa110183e20 R08: 0000000000000000 R09: 0000000000000000
  R10: 0000000000000000 R11: 0000000000000202 R12: 00007fa110184640
  R13: 0000000000000000 R14: 00007fa10fe8b060 R15: 00007fff73e23b20
&lt;/TASK&gt;

The issue triggering process is analyzed as follows:
Thread A                                       Thread B
tcp_v4_rcv	//receive ack TCP packet       inet_shutdown
  tcp_check_req                                  tcp_disconnect //disconnect sock
  ...                                              tcp_set_state(sk, TCP_CLOSE)
    inet_csk_complete_hashdance                ...
      inet_csk_reqsk_queue_add         
---truncated---</description><pubDate>Thu, 29 Feb 2024 15:57:08 +0000</pubDate></item><item><title>CVE-2024-26615 | net/smc: fix illegal rmb_desc access in SMC-D connection dump</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26615</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/smc: fix illegal rmb_desc access in SMC-D connection dump

A crash was found when dumping SMC-D connections. It can be reproduced
by following steps:

- run nginx/wrk test:
  smc_run nginx
  smc_run wrk -t 16 -c 1000 -d &lt;duration&gt; -H 'Connection: Close' &lt;URL&gt;

- continuously dump SMC-D connections in parallel:
  watch -n 1 'smcss -D'

 BUG: kernel NULL pointer dereference, address: 0000000000000030
 CPU: 2 PID: 7204 Comm: smcss Kdump: loaded Tainted: G	E      6.7.0+ #55
 RIP: 0010:__smc_diag_dump.constprop.0+0x5e5/0x620 [smc_diag]
 Call Trace:
  &lt;TASK&gt;
  ? __die+0x24/0x70
  ? page_fault_oops+0x66/0x150
  ? exc_page_fault+0x69/0x140
  ? asm_exc_page_fault+0x26/0x30
  ? __smc_diag_dump.constprop.0+0x5e5/0x620 [smc_diag]
  ? __kmalloc_node_track_caller+0x35d/0x430
  ? __alloc_skb+0x77/0x170
  smc_diag_dump_proto+0xd0/0xf0 [smc_diag]
  smc_diag_dump+0x26/0x60 [smc_diag]
  netlink_dump+0x19f/0x320
  __netlink_dump_start+0x1dc/0x300
  smc_diag_handler_dump+0x6a/0x80 [smc_diag]
  ? __pfx_smc_diag_dump+0x10/0x10 [smc_diag]
  sock_diag_rcv_msg+0x121/0x140
  ? __pfx_sock_diag_rcv_msg+0x10/0x10
  netlink_rcv_skb+0x5a/0x110
  sock_diag_rcv+0x28/0x40
  netlink_unicast+0x22a/0x330
  netlink_sendmsg+0x1f8/0x420
  __sock_sendmsg+0xb0/0xc0
  ____sys_sendmsg+0x24e/0x300
  ? copy_msghdr_from_user+0x62/0x80
  ___sys_sendmsg+0x7c/0xd0
  ? __do_fault+0x34/0x160
  ? do_read_fault+0x5f/0x100
  ? do_fault+0xb0/0x110
  ? __handle_mm_fault+0x2b0/0x6c0
  __sys_sendmsg+0x4d/0x80
  do_syscall_64+0x69/0x180
  entry_SYSCALL_64_after_hwframe+0x6e/0x76

It is possible that the connection is in process of being established
when we dump it. Assumed that the connection has been registered in a
link group by smc_conn_create() but the rmb_desc has not yet been
initialized by smc_buf_create(), thus causing the illegal access to
conn-&gt;rmb_desc. So fix it by checking before dump.</description><pubDate>Thu, 29 Feb 2024 15:57:08 +0000</pubDate></item><item><title>CVE-2024-26616 | btrfs: scrub: avoid use-after-free when chunk length is not 64K aligned</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26616</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: scrub: avoid use-after-free when chunk length is not 64K aligned

[BUG]
There is a bug report that, on a ext4-converted btrfs, scrub leads to
various problems, including:

- "unable to find chunk map" errors
  BTRFS info (device vdb): scrub: started on devid 1
  BTRFS critical (device vdb): unable to find chunk map for logical 2214744064 length 4096
  BTRFS critical (device vdb): unable to find chunk map for logical 2214744064 length 45056

  This would lead to unrepariable errors.

- Use-after-free KASAN reports:
  ==================================================================
  BUG: KASAN: slab-use-after-free in __blk_rq_map_sg+0x18f/0x7c0
  Read of size 8 at addr ffff8881013c9040 by task btrfs/909
  CPU: 0 PID: 909 Comm: btrfs Not tainted 6.7.0-x64v3-dbg #11 c50636e9419a8354555555245df535e380563b2b
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 2023.11-2 12/24/2023
  Call Trace:
   &lt;TASK&gt;
   dump_stack_lvl+0x43/0x60
   print_report+0xcf/0x640
   kasan_report+0xa6/0xd0
   __blk_rq_map_sg+0x18f/0x7c0
   virtblk_prep_rq.isra.0+0x215/0x6a0 [virtio_blk 19a65eeee9ae6fcf02edfad39bb9ddee07dcdaff]
   virtio_queue_rqs+0xc4/0x310 [virtio_blk 19a65eeee9ae6fcf02edfad39bb9ddee07dcdaff]
   blk_mq_flush_plug_list.part.0+0x780/0x860
   __blk_flush_plug+0x1ba/0x220
   blk_finish_plug+0x3b/0x60
   submit_initial_group_read+0x10a/0x290 [btrfs e57987a360bed82fe8756dcd3e0de5406ccfe965]
   flush_scrub_stripes+0x38e/0x430 [btrfs e57987a360bed82fe8756dcd3e0de5406ccfe965]
   scrub_stripe+0x82a/0xae0 [btrfs e57987a360bed82fe8756dcd3e0de5406ccfe965]
   scrub_chunk+0x178/0x200 [btrfs e57987a360bed82fe8756dcd3e0de5406ccfe965]
   scrub_enumerate_chunks+0x4bc/0xa30 [btrfs e57987a360bed82fe8756dcd3e0de5406ccfe965]
   btrfs_scrub_dev+0x398/0x810 [btrfs e57987a360bed82fe8756dcd3e0de5406ccfe965]
   btrfs_ioctl+0x4b9/0x3020 [btrfs e57987a360bed82fe8756dcd3e0de5406ccfe965]
   __x64_sys_ioctl+0xbd/0x100
   do_syscall_64+0x5d/0xe0
   entry_SYSCALL_64_after_hwframe+0x63/0x6b
  RIP: 0033:0x7f47e5e0952b

- Crash, mostly due to above use-after-free

[CAUSE]
The converted fs has the following data chunk layout:

    item 2 key (FIRST_CHUNK_TREE CHUNK_ITEM 2214658048) itemoff 16025 itemsize 80
        length 86016 owner 2 stripe_len 65536 type DATA|single

For above logical bytenr 2214744064, it's at the chunk end
(2214658048 + 86016 = 2214744064).

This means btrfs_submit_bio() would split the bio, and trigger endio
function for both of the two halves.

However scrub_submit_initial_read() would only expect the endio function
to be called once, not any more.
This means the first endio function would already free the bbio::bio,
leaving the bvec freed, thus the 2nd endio call would lead to
use-after-free.

[FIX]
- Make sure scrub_read_endio() only updates bits in its range
  Since we may read less than 64K at the end of the chunk, we should not
  touch the bits beyond chunk boundary.

- Make sure scrub_submit_initial_read() only to read the chunk range
  This is done by calculating the real number of sectors we need to
  read, and add sector-by-sector to the bio.

Thankfully the scrub read repair path won't need extra fixes:

- scrub_stripe_submit_repair_read()
  With above fixes, we won't update error bit for range beyond chunk,
  thus scrub_stripe_submit_repair_read() should never submit any read
  beyond the chunk.</description><pubDate>Thu, 29 Feb 2024 15:57:09 +0000</pubDate></item><item><title>CVE-2024-26617 | fs/proc/task_mmu: move mmu notification mechanism inside mm lock</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26617</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs/proc/task_mmu: move mmu notification mechanism inside mm lock

Move mmu notification mechanism inside mm lock to prevent race condition
in other components which depend on it.  The notifier will invalidate
memory range.  Depending upon the number of iterations, different memory
ranges would be invalidated.

The following warning would be removed by this patch:
WARNING: CPU: 0 PID: 5067 at arch/x86/kvm/../../../virt/kvm/kvm_main.c:734 kvm_mmu_notifier_change_pte+0x860/0x960 arch/x86/kvm/../../../virt/kvm/kvm_main.c:734

There is no behavioural and performance change with this patch when
there is no component registered with the mmu notifier.

[akpm@linux-foundation.org: narrow the scope of `range', per Sean]</description><pubDate>Thu, 29 Feb 2024 15:57:09 +0000</pubDate></item><item><title>CVE-2024-26618 | arm64/sme: Always exit sme_alloc() early with existing storage</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26618</link><description>In the Linux kernel, the following vulnerability has been resolved:

arm64/sme: Always exit sme_alloc() early with existing storage

When sme_alloc() is called with existing storage and we are not flushing we
will always allocate new storage, both leaking the existing storage and
corrupting the state. Fix this by separating the checks for flushing and
for existing storage as we do for SVE.

Callers that reallocate (eg, due to changing the vector length) should
call sme_free() themselves.</description><pubDate>Thu, 29 Feb 2024 15:57:10 +0000</pubDate></item><item><title>CVE-2024-26619 | riscv: Fix module loading free order</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26619</link><description>In the Linux kernel, the following vulnerability has been resolved:

riscv: Fix module loading free order

Reverse order of kfree calls to resolve use-after-free error.</description><pubDate>Thu, 29 Feb 2024 15:57:10 +0000</pubDate></item><item><title>CVE-2024-26620 | s390/vfio-ap: always filter entire AP matrix</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26620</link><description>In the Linux kernel, the following vulnerability has been resolved:

s390/vfio-ap: always filter entire AP matrix

The vfio_ap_mdev_filter_matrix function is called whenever a new adapter or
domain is assigned to the mdev. The purpose of the function is to update
the guest's AP configuration by filtering the matrix of adapters and
domains assigned to the mdev. When an adapter or domain is assigned, only
the APQNs associated with the APID of the new adapter or APQI of the new
domain are inspected. If an APQN does not reference a queue device bound to
the vfio_ap device driver, then it's APID will be filtered from the mdev's
matrix when updating the guest's AP configuration.

Inspecting only the APID of the new adapter or APQI of the new domain will
result in passing AP queues through to a guest that are not bound to the
vfio_ap device driver under certain circumstances. Consider the following:

guest's AP configuration (all also assigned to the mdev's matrix):
14.0004
14.0005
14.0006
16.0004
16.0005
16.0006

unassign domain 4
unbind queue 16.0005
assign domain 4

When domain 4 is re-assigned, since only domain 4 will be inspected, the
APQNs that will be examined will be:
14.0004
16.0004

Since both of those APQNs reference queue devices that are bound to the
vfio_ap device driver, nothing will get filtered from the mdev's matrix
when updating the guest's AP configuration. Consequently, queue 16.0005
will get passed through despite not being bound to the driver. This
violates the linux device model requirement that a guest shall only be
given access to devices bound to the device driver facilitating their
pass-through.

To resolve this problem, every adapter and domain assigned to the mdev will
be inspected when filtering the mdev's matrix.</description><pubDate>Thu, 29 Feb 2024 15:57:10 +0000</pubDate></item><item><title>CVE-2024-24818 | EspoCRM weakness in &amp;quot;Forgot password&amp;quot;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24818</link><description>EspoCRM is an Open Source Customer Relationship Management software. An attacker can inject arbitrary IP or domain in "Password Change" page and redirect victim to malicious page that could lead to  credential stealing or another attack. This vulnerability is fixed in 8.1.2.</description><pubDate>Thu, 29 Feb 2024 15:22:14 +0000</pubDate></item><item><title>CVE-2023-52485 | drm/amd/display: Wake DMCUB before sending a command</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52485</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Wake DMCUB before sending a command

[Why]
We can hang in place trying to send commands when the DMCUB isn't
powered on.

[How]
For functions that execute within a DC context or DC lock we can
wrap the direct calls to dm_execute_dmub_cmd/list with code that
exits idle power optimizations and reallows once we're done with
the command submission on success.

For DM direct submissions the DM will need to manage the enter/exit
sequencing manually.

We cannot invoke a DMCUB command directly within the DM execution
helper or we can deadlock.</description><pubDate>Thu, 29 Feb 2024 15:10:34 +0000</pubDate></item><item><title>CVE-2024-2001 | Cross-Site Scripting vulnerability in Cockpit CMS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2001</link><description>A Cross-Site Scripting vulnerability in Cockpit CMS affecting version 2.7.0. This vulnerability could allow an authenticated user to upload an infected PDF file and store a malicious JavaScript payload to be executed when the file is uploaded.</description><pubDate>Thu, 29 Feb 2024 13:37:21 +0000</pubDate></item><item><title>CVE-2024-0864 | RCE in Laragon</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0864</link><description>Enabling Simple Ajax Uploader plugin included in Laragon open-source software allows for a remote code execution (RCE) attack via an improper input validation in a file_upload.php file which serves as an example.
By default, Laragon is not vulnerable until a user decides to use the aforementioned plugin.</description><pubDate>Thu, 29 Feb 2024 13:12:23 +0000</pubDate></item><item><title>CVE-2024-26607 | drm/bridge: sii902x: Fix probing race issue</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26607</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/bridge: sii902x: Fix probing race issue

A null pointer dereference crash has been observed rarely on TI
platforms using sii9022 bridge:

[   53.271356]  sii902x_get_edid+0x34/0x70 [sii902x]
[   53.276066]  sii902x_bridge_get_edid+0x14/0x20 [sii902x]
[   53.281381]  drm_bridge_get_edid+0x20/0x34 [drm]
[   53.286305]  drm_bridge_connector_get_modes+0x8c/0xcc [drm_kms_helper]
[   53.292955]  drm_helper_probe_single_connector_modes+0x190/0x538 [drm_kms_helper]
[   53.300510]  drm_client_modeset_probe+0x1f0/0xbd4 [drm]
[   53.305958]  __drm_fb_helper_initial_config_and_unlock+0x50/0x510 [drm_kms_helper]
[   53.313611]  drm_fb_helper_initial_config+0x48/0x58 [drm_kms_helper]
[   53.320039]  drm_fbdev_dma_client_hotplug+0x84/0xd4 [drm_dma_helper]
[   53.326401]  drm_client_register+0x5c/0xa0 [drm]
[   53.331216]  drm_fbdev_dma_setup+0xc8/0x13c [drm_dma_helper]
[   53.336881]  tidss_probe+0x128/0x264 [tidss]
[   53.341174]  platform_probe+0x68/0xc4
[   53.344841]  really_probe+0x188/0x3c4
[   53.348501]  __driver_probe_device+0x7c/0x16c
[   53.352854]  driver_probe_device+0x3c/0x10c
[   53.357033]  __device_attach_driver+0xbc/0x158
[   53.361472]  bus_for_each_drv+0x88/0xe8
[   53.365303]  __device_attach+0xa0/0x1b4
[   53.369135]  device_initial_probe+0x14/0x20
[   53.373314]  bus_probe_device+0xb0/0xb4
[   53.377145]  deferred_probe_work_func+0xcc/0x124
[   53.381757]  process_one_work+0x1f0/0x518
[   53.385770]  worker_thread+0x1e8/0x3dc
[   53.389519]  kthread+0x11c/0x120
[   53.392750]  ret_from_fork+0x10/0x20

The issue here is as follows:

- tidss probes, but is deferred as sii902x is still missing.
- sii902x starts probing and enters sii902x_init().
- sii902x calls drm_bridge_add(). Now the sii902x bridge is ready from
  DRM's perspective.
- sii902x calls sii902x_audio_codec_init() and
  platform_device_register_data()
- The registration of the audio platform device causes probing of the
  deferred devices.
- tidss probes, which eventually causes sii902x_bridge_get_edid() to be
  called.
- sii902x_bridge_get_edid() tries to use the i2c to read the edid.
  However, the sii902x driver has not set up the i2c part yet, leading
  to the crash.

Fix this by moving the drm_bridge_add() to the end of the
sii902x_init(), which is also at the very end of sii902x_probe().</description><pubDate>Thu, 29 Feb 2024 11:54:41 +0000</pubDate></item><item><title>CVE-2024-27906 | Apache Airflow: Dag Code and Import Error Permissions Ignored</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27906</link><description>Apache Airflow, versions before 2.8.2, has a vulnerability that allows authenticated users to view DAG code and import errors of DAGs they do not have permission to view through the API and the UI.

Users of Apache Airflow are recommended to upgrade to version 2.8.2 or newer to mitigate the risk associated with this vulnerability</description><pubDate>Thu, 29 Feb 2024 11:11:47 +0000</pubDate></item><item><title>CVE-2024-1942 | Mattermost versions 8.1.x before 8.1.9, 9.2.x before 9.2.5, and 9.3.0 fail to sanitize the metadata on posts containing permalinks under spe...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1942</link><description>Mattermost versions 8.1.x before 8.1.9, 9.2.x before 9.2.5, and 9.3.0 fail to sanitize the metadata on posts containing permalinks under specific conditions, which allows an authenticated attacker to access the contents of individual posts in channels they are not a member of.</description><pubDate>Thu, 29 Feb 2024 10:44:50 +0000</pubDate></item><item><title>CVE-2024-1949 | A race condition in Mattermost versions 8.1.x before 8.1.9, and 9.4.x before 9.4.2 allows an authenticated attacker to gain unauthorized acc...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1949</link><description>A race condition in Mattermost versions 8.1.x before 8.1.9, and 9.4.x before 9.4.2 allows an authenticated attacker to gain unauthorized access to individual posts' contents via carefully timed post creation while another user deletes posts.</description><pubDate>Thu, 29 Feb 2024 10:44:51 +0000</pubDate></item><item><title>CVE-2024-1952 | Mattermost version 8.1.x before 8.1.9 fails to sanitize data associated with permalinks when a plugin updates an ephemeral post, allowing an...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1952</link><description>Mattermost version 8.1.x before 8.1.9 fails to sanitize data associated with permalinks when a plugin updates an ephemeral post, allowing an authenticated attacker who can control the ephemeral post update to access individual posts' contents in channels they are not a member of.</description><pubDate>Thu, 29 Feb 2024 10:44:51 +0000</pubDate></item><item><title>CVE-2024-1953 | Mattermost versions 8.1.x before 8.1.9, 9.2.x before 9.2.5, 9.3.0, and 9.4.x before 9.4.2 fail to limit the number of role names requested f...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1953</link><description>Mattermost versions 8.1.x before 8.1.9, 9.2.x before 9.2.5, 9.3.0, and 9.4.x before 9.4.2 fail to limit the number of role names requested from the API, allowing an authenticated attacker to cause the server to run out of memory and crash by issuing an unusually large HTTP request.</description><pubDate>Thu, 29 Feb 2024 10:44:51 +0000</pubDate></item><item><title>CVE-2024-1619 | Kaspersky has fixed a security issue in the Kaspersky Security 8.0 for Linux Mail Server. The issue was that an attacker could potentially f...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1619</link><description>Kaspersky has fixed a security issue in the Kaspersky Security 8.0 for Linux Mail Server. The issue was that an attacker could potentially force an administrator to click on a malicious link to perform unauthorized actions.</description><pubDate>Thu, 29 Feb 2024 09:28:55 +0000</pubDate></item><item><title>CVE-2024-1888 | Existing server guests invited to the team by members without &amp;quot;invite_guest&amp;quot; permission</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1888</link><description>Mattermost fails to check the "invite_guest" permission when inviting guests of other teams to a team, allowing a member with permissions to add other members but not to add guests to add a guest to a team as long as the guest was already a guest in another team of the server</description><pubDate>Thu, 29 Feb 2024 08:17:33 +0000</pubDate></item><item><title>CVE-2024-1887 | Public channel post content accessible without membership when compliance export is enabled</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1887</link><description>Mattermost fails to check if compliance export is enabled when fetching posts of public channels allowing a user that is not a member of the public channel to fetch the posts, which will not be audited in the compliance export.</description><pubDate>Thu, 29 Feb 2024 08:17:34 +0000</pubDate></item><item><title>CVE-2024-23488 | Files of archived channels accessible with the “Allow users to view archived channels” option disabled</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23488</link><description>Mattermost fails to properly restrict the access of files attached to posts in an archived channel, resulting in members being able to access files of archived channels even if the “Allow users to view archived channels” option is disabled.</description><pubDate>Thu, 29 Feb 2024 08:17:34 +0000</pubDate></item><item><title>CVE-2024-23493 |  Team associated AD/LDAP Groups Leaked due to missing authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23493</link><description>Mattermost fails to properly authorize the requests fetching team associated AD/LDAP groups, allowing a user to fetch details of AD/LDAP groups of a team that they are not a member of.</description><pubDate>Thu, 29 Feb 2024 08:17:35 +0000</pubDate></item><item><title>CVE-2024-24988 | Excessive resource consumption when sending long emoji names in user custom status</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24988</link><description>Mattermost fails to properly validate the length of the emoji value in the custom user status, allowing an attacker to send multiple times a very long string as an emoji value causing high resource consumption and possibly crashing the server.</description><pubDate>Thu, 29 Feb 2024 08:17:35 +0000</pubDate></item><item><title>CVE-2024-1978 | The Friends plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 2.8.5 via the discover_a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1978</link><description>The Friends plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 2.8.5 via the discover_available_feeds function. This makes it possible for authenticated attackers, with administrator-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.</description><pubDate>Thu, 29 Feb 2024 06:54:16 +0000</pubDate></item><item><title>CVE-2024-1981 | The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to SQL Injection via the 'table_prefix' parameter in version 0.9...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1981</link><description>The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to SQL Injection via the 'table_prefix' parameter in version 0.9.68 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Thu, 29 Feb 2024 06:54:16 +0000</pubDate></item><item><title>CVE-2024-1982 | The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on the ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1982</link><description>The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on the get_restore_progress() and restore() functions in all versions up to, and including, 0.9.68. This makes it possible for unauthenticated attackers to exploit a SQL injection vulnerability or trigger a DoS.</description><pubDate>Thu, 29 Feb 2024 06:54:16 +0000</pubDate></item><item><title>CVE-2024-25292 | Cross-site scripting (XSS) vulnerability in RenderTune v1.1.4 allows attackers to execute arbitrary web scripts or HTML via a crafted payloa...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25292</link><description>Cross-site scripting (XSS) vulnerability in RenderTune v1.1.4 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Upload Title parameter.</description><pubDate>Thu, 29 Feb 2024 06:47:25 +0000</pubDate></item><item><title>CVE-2024-25291 | Deskfiler v1.2.3 allows attackers to execute arbitrary code via uploading a crafted plugin.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25291</link><description>Deskfiler v1.2.3 allows attackers to execute arbitrary code via uploading a crafted plugin.</description><pubDate>Thu, 29 Feb 2024 06:33:34 +0000</pubDate></item><item><title>CVE-2024-25594 | WordPress MyWaze Plugin &amp;lt;= 1.6 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25594</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Savvy Wordpress Development MyWaze allows Stored XSS.This issue affects MyWaze: from n/a through 1.6.</description><pubDate>Thu, 29 Feb 2024 06:26:12 +0000</pubDate></item><item><title>CVE-2024-25094 | WordPress PJ News Ticker Plugin &amp;lt;= 1.9.5 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25094</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Paul Jura &amp; Nicolas Montigny PJ News Ticker allows Stored XSS.This issue affects PJ News Ticker: from n/a through 1.9.5.</description><pubDate>Thu, 29 Feb 2024 06:08:24 +0000</pubDate></item><item><title>CVE-2024-25098 | WordPress PB oEmbed HTML5 Audio Plugin &amp;lt;= 2.6 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25098</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Pascal Bajorat PB oEmbed HTML5 Audio – with Cache Support allows Stored XSS.This issue affects PB oEmbed HTML5 Audio – with Cache Support: from n/a through 2.6.</description><pubDate>Thu, 29 Feb 2024 06:08:24 +0000</pubDate></item><item><title>CVE-2024-24525 | An issue in EpointWebBuilder 5.1.0-sp1, 5.2.1-sp1, 5.4.1 and 5.4.2 allows a remote attacker to execute arbitrary code via the infoid paramet...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24525</link><description>An issue in EpointWebBuilder 5.1.0-sp1, 5.2.1-sp1, 5.4.1 and 5.4.2 allows a remote attacker to execute arbitrary code via the infoid parameter of the URL.</description><pubDate>Thu, 29 Feb 2024 06:08:25 +0000</pubDate></item><item><title>CVE-2023-52475 | Input: powermate - fix use-after-free in powermate_config_complete</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52475</link><description>In the Linux kernel, the following vulnerability has been resolved:

Input: powermate - fix use-after-free in powermate_config_complete

syzbot has found a use-after-free bug [1] in the powermate driver. This
happens when the device is disconnected, which leads to a memory free from
the powermate_device struct.  When an asynchronous control message
completes after the kfree and its callback is invoked, the lock does not
exist anymore and hence the bug.

Use usb_kill_urb() on pm-&gt;config to cancel any in-progress requests upon
device disconnection.

[1] https://syzkaller.appspot.com/bug?extid=0434ac83f907a1dbdd1e</description><pubDate>Thu, 29 Feb 2024 05:54:25 +0000</pubDate></item><item><title>CVE-2023-52476 | perf/x86/lbr: Filter vsyscall addresses</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52476</link><description>In the Linux kernel, the following vulnerability has been resolved:

perf/x86/lbr: Filter vsyscall addresses

We found that a panic can occur when a vsyscall is made while LBR sampling
is active. If the vsyscall is interrupted (NMI) for perf sampling, this
call sequence can occur (most recent at top):

    __insn_get_emulate_prefix()
    insn_get_emulate_prefix()
    insn_get_prefixes()
    insn_get_opcode()
    decode_branch_type()
    get_branch_type()
    intel_pmu_lbr_filter()
    intel_pmu_handle_irq()
    perf_event_nmi_handler()

Within __insn_get_emulate_prefix() at frame 0, a macro is called:

    peek_nbyte_next(insn_byte_t, insn, i)

Within this macro, this dereference occurs:

    (insn)-&gt;next_byte

Inspecting registers at this point, the value of the next_byte field is the
address of the vsyscall made, for example the location of the vsyscall
version of gettimeofday() at 0xffffffffff600000. The access to an address
in the vsyscall region will trigger an oops due to an unhandled page fault.

To fix the bug, filtering for vsyscalls can be done when
determining the branch type. This patch will return
a "none" branch if a kernel address if found to lie in the
vsyscall region.</description><pubDate>Thu, 29 Feb 2024 05:54:25 +0000</pubDate></item><item><title>CVE-2023-52477 | usb: hub: Guard against accesses to uninitialized BOS descriptors</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52477</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: hub: Guard against accesses to uninitialized BOS descriptors

Many functions in drivers/usb/core/hub.c and drivers/usb/core/hub.h
access fields inside udev-&gt;bos without checking if it was allocated and
initialized. If usb_get_bos_descriptor() fails for whatever
reason, udev-&gt;bos will be NULL and those accesses will result in a
crash:

BUG: kernel NULL pointer dereference, address: 0000000000000018
PGD 0 P4D 0
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 5 PID: 17818 Comm: kworker/5:1 Tainted: G W 5.15.108-18910-gab0e1cb584e1 #1 &lt;HASH:1f9e 1&gt;
Hardware name: Google Kindred/Kindred, BIOS Google_Kindred.12672.413.0 02/03/2021
Workqueue: usb_hub_wq hub_event
RIP: 0010:hub_port_reset+0x193/0x788
Code: 89 f7 e8 20 f7 15 00 48 8b 43 08 80 b8 96 03 00 00 03 75 36 0f b7 88 92 03 00 00 81 f9 10 03 00 00 72 27 48 8b 80 a8 03 00 00 &lt;48&gt; 83 78 18 00 74 19 48 89 df 48 8b 75 b0 ba 02 00 00 00 4c 89 e9
RSP: 0018:ffffab740c53fcf8 EFLAGS: 00010246
RAX: 0000000000000000 RBX: ffffa1bc5f678000 RCX: 0000000000000310
RDX: fffffffffffffdff RSI: 0000000000000286 RDI: ffffa1be9655b840
RBP: ffffab740c53fd70 R08: 00001b7d5edaa20c R09: ffffffffb005e060
R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000
R13: ffffab740c53fd3e R14: 0000000000000032 R15: 0000000000000000
FS: 0000000000000000(0000) GS:ffffa1be96540000(0000) knlGS:0000000000000000
CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000018 CR3: 000000022e80c005 CR4: 00000000003706e0
Call Trace:
hub_event+0x73f/0x156e
? hub_activate+0x5b7/0x68f
process_one_work+0x1a2/0x487
worker_thread+0x11a/0x288
kthread+0x13a/0x152
? process_one_work+0x487/0x487
? kthread_associate_blkcg+0x70/0x70
ret_from_fork+0x1f/0x30

Fall back to a default behavior if the BOS descriptor isn't accessible
and skip all the functionalities that depend on it: LPM support checks,
Super Speed capabilitiy checks, U1/U2 states setup.</description><pubDate>Thu, 29 Feb 2024 05:54:26 +0000</pubDate></item><item><title>CVE-2023-52478 | HID: logitech-hidpp: Fix kernel crash on receiver USB disconnect</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52478</link><description>In the Linux kernel, the following vulnerability has been resolved:

HID: logitech-hidpp: Fix kernel crash on receiver USB disconnect

hidpp_connect_event() has *four* time-of-check vs time-of-use (TOCTOU)
races when it races with itself.

hidpp_connect_event() primarily runs from a workqueue but it also runs
on probe() and if a "device-connected" packet is received by the hw
when the thread running hidpp_connect_event() from probe() is waiting on
the hw, then a second thread running hidpp_connect_event() will be
started from the workqueue.

This opens the following races (note the below code is simplified):

1. Retrieving + printing the protocol (harmless race):

	if (!hidpp-&gt;protocol_major) {
		hidpp_root_get_protocol_version()
		hidpp-&gt;protocol_major = response.rap.params[0];
	}

We can actually see this race hit in the dmesg in the abrt output
attached to rhbz#2227968:

[ 3064.624215] logitech-hidpp-device 0003:046D:4071.0049: HID++ 4.5 device connected.
[ 3064.658184] logitech-hidpp-device 0003:046D:4071.0049: HID++ 4.5 device connected.

Testing with extra logging added has shown that after this the 2 threads
take turn grabbing the hw access mutex (send_mutex) so they ping-pong
through all the other TOCTOU cases managing to hit all of them:

2. Updating the name to the HIDPP name (harmless race):

	if (hidpp-&gt;name == hdev-&gt;name) {
		...
		hidpp-&gt;name = new_name;
	}

3. Initializing the power_supply class for the battery (problematic!):

hidpp_initialize_battery()
{
        if (hidpp-&gt;battery.ps)
                return 0;

	probe_battery(); /* Blocks, threads take turns executing this */

	hidpp-&gt;battery.desc.properties =
		devm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);

	hidpp-&gt;battery.ps =
		devm_power_supply_register(&amp;hidpp-&gt;hid_dev-&gt;dev,
					   &amp;hidpp-&gt;battery.desc, cfg);
}

4. Creating delayed input_device (potentially problematic):

	if (hidpp-&gt;delayed_input)
		return;

	hidpp-&gt;delayed_input = hidpp_allocate_input(hdev);

The really big problem here is 3. Hitting the race leads to the following
sequence:

	hidpp-&gt;battery.desc.properties =
		devm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);

	hidpp-&gt;battery.ps =
		devm_power_supply_register(&amp;hidpp-&gt;hid_dev-&gt;dev,
					   &amp;hidpp-&gt;battery.desc, cfg);

	...

	hidpp-&gt;battery.desc.properties =
		devm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);

	hidpp-&gt;battery.ps =
		devm_power_supply_register(&amp;hidpp-&gt;hid_dev-&gt;dev,
					   &amp;hidpp-&gt;battery.desc, cfg);

So now we have registered 2 power supplies for the same battery,
which looks a bit weird from userspace's pov but this is not even
the really big problem.

Notice how:

1. This is all devm-maganaged
2. The hidpp-&gt;battery.desc struct is shared between the 2 power supplies
3. hidpp-&gt;battery.desc.properties points to the result from the second
   devm_kmemdup()

This causes a use after free scenario on USB disconnect of the receiver:
1. The last registered power supply class device gets unregistered
2. The memory from the last devm_kmemdup() call gets freed,
   hidpp-&gt;battery.desc.properties now points to freed memory
3. The first registered power supply class device gets unregistered,
   this involves sending a remove uevent to userspace which invokes
   power_supply_uevent() to fill the uevent data
4. power_supply_uevent() uses hidpp-&gt;battery.desc.properties which
   now points to freed memory leading to backtraces like this one:

Sep 22 20:01:35 eric kernel: BUG: unable to handle page fault for address: ffffb2140e017f08
...
Sep 22 20:01:35 eric kernel: Workqueue: usb_hub_wq hub_event
Sep 22 20:01:35 eric kernel: RIP: 0010:power_supply_uevent+0xee/0x1d0
...
Sep 22 20:01:35 eric kernel:  ? asm_exc_page_fault+0x26/0x30
Sep 22 20:01:35 eric kernel:  ? power_supply_uevent+0xee/0x1d0
Sep 22 20:01:35 eric kernel:  ? power_supply_uevent+0x10d/0x1d0
Sep 22 20:01:35 eric kernel:  dev_uevent+0x10f/0x2d0
Sep 22 20:01:35 eric kernel:  kobject_uevent_env+0x291/0x680
Sep 22 20:01:35 eric kernel:  
---truncated---</description><pubDate>Thu, 29 Feb 2024 05:54:26 +0000</pubDate></item><item><title>CVE-2023-52479 | ksmbd: fix uaf in smb20_oplock_break_ack</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52479</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: fix uaf in smb20_oplock_break_ack

drop reference after use opinfo.</description><pubDate>Thu, 29 Feb 2024 05:54:27 +0000</pubDate></item><item><title>CVE-2023-52480 | ksmbd: fix race condition between session lookup and expire</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52480</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: fix race condition between session lookup and expire

 Thread A                        +  Thread B
 ksmbd_session_lookup            |  smb2_sess_setup
   sess = xa_load                |
                                 |
                                 |    xa_erase(&amp;conn-&gt;sessions, sess-&gt;id);
                                 |
                                 |    ksmbd_session_destroy(sess) --&gt; kfree(sess)
                                 |
   // UAF!                       |
   sess-&gt;last_active = jiffies   |
                                 +

This patch add rwsem to fix race condition between ksmbd_session_lookup
and ksmbd_expire_session.</description><pubDate>Thu, 29 Feb 2024 05:54:27 +0000</pubDate></item><item><title>CVE-2023-52481 | arm64: errata: Add Cortex-A520 speculative unprivileged load workaround</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52481</link><description>In the Linux kernel, the following vulnerability has been resolved:

arm64: errata: Add Cortex-A520 speculative unprivileged load workaround

Implement the workaround for ARM Cortex-A520 erratum 2966298. On an
affected Cortex-A520 core, a speculatively executed unprivileged load
might leak data from a privileged load via a cache side channel. The
issue only exists for loads within a translation regime with the same
translation (e.g. same ASID and VMID). Therefore, the issue only affects
the return to EL0.

The workaround is to execute a TLBI before returning to EL0 after all
loads of privileged data. A non-shareable TLBI to any address is
sufficient.

The workaround isn't necessary if page table isolation (KPTI) is
enabled, but for simplicity it will be. Page table isolation should
normally be disabled for Cortex-A520 as it supports the CSV3 feature
and the E0PD feature (used when KASLR is enabled).</description><pubDate>Thu, 29 Feb 2024 05:54:27 +0000</pubDate></item><item><title>CVE-2023-52482 | x86/srso: Add SRSO mitigation for Hygon processors</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52482</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/srso: Add SRSO mitigation for Hygon processors

Add mitigation for the speculative return stack overflow vulnerability
which exists on Hygon processors too.</description><pubDate>Thu, 29 Feb 2024 05:54:28 +0000</pubDate></item><item><title>CVE-2023-52483 | mctp: perform route lookups under a RCU read-side lock</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52483</link><description>In the Linux kernel, the following vulnerability has been resolved:

mctp: perform route lookups under a RCU read-side lock

Our current route lookups (mctp_route_lookup and mctp_route_lookup_null)
traverse the net's route list without the RCU read lock held. This means
the route lookup is subject to preemption, resulting in an potential
grace period expiry, and so an eventual kfree() while we still have the
route pointer.

Add the proper read-side critical section locks around the route
lookups, preventing premption and a possible parallel kfree.

The remaining net-&gt;mctp.routes accesses are already under a
rcu_read_lock, or protected by the RTNL for updates.

Based on an analysis from Sili Luo &lt;rootlab@huawei.com&gt;, where
introducing a delay in the route lookup could cause a UAF on
simultaneous sendmsg() and route deletion.</description><pubDate>Thu, 29 Feb 2024 05:54:28 +0000</pubDate></item><item><title>CVE-2023-52484 | iommu/arm-smmu-v3: Fix soft lockup triggered by arm_smmu_mm_invalidate_range</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52484</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/arm-smmu-v3: Fix soft lockup triggered by arm_smmu_mm_invalidate_range

When running an SVA case, the following soft lockup is triggered:
--------------------------------------------------------------------
watchdog: BUG: soft lockup - CPU#244 stuck for 26s!
pstate: 83400009 (Nzcv daif +PAN -UAO +TCO +DIT -SSBS BTYPE=--)
pc : arm_smmu_cmdq_issue_cmdlist+0x178/0xa50
lr : arm_smmu_cmdq_issue_cmdlist+0x150/0xa50
sp : ffff8000d83ef290
x29: ffff8000d83ef290 x28: 000000003b9aca00 x27: 0000000000000000
x26: ffff8000d83ef3c0 x25: da86c0812194a0e8 x24: 0000000000000000
x23: 0000000000000040 x22: ffff8000d83ef340 x21: ffff0000c63980c0
x20: 0000000000000001 x19: ffff0000c6398080 x18: 0000000000000000
x17: 0000000000000000 x16: 0000000000000000 x15: ffff3000b4a3bbb0
x14: ffff3000b4a30888 x13: ffff3000b4a3cf60 x12: 0000000000000000
x11: 0000000000000000 x10: 0000000000000000 x9 : ffffc08120e4d6bc
x8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000048cfa
x5 : 0000000000000000 x4 : 0000000000000001 x3 : 000000000000000a
x2 : 0000000080000000 x1 : 0000000000000000 x0 : 0000000000000001
Call trace:
 arm_smmu_cmdq_issue_cmdlist+0x178/0xa50
 __arm_smmu_tlb_inv_range+0x118/0x254
 arm_smmu_tlb_inv_range_asid+0x6c/0x130
 arm_smmu_mm_invalidate_range+0xa0/0xa4
 __mmu_notifier_invalidate_range_end+0x88/0x120
 unmap_vmas+0x194/0x1e0
 unmap_region+0xb4/0x144
 do_mas_align_munmap+0x290/0x490
 do_mas_munmap+0xbc/0x124
 __vm_munmap+0xa8/0x19c
 __arm64_sys_munmap+0x28/0x50
 invoke_syscall+0x78/0x11c
 el0_svc_common.constprop.0+0x58/0x1c0
 do_el0_svc+0x34/0x60
 el0_svc+0x2c/0xd4
 el0t_64_sync_handler+0x114/0x140
 el0t_64_sync+0x1a4/0x1a8
--------------------------------------------------------------------

Note that since 6.6-rc1 the arm_smmu_mm_invalidate_range above is renamed
to "arm_smmu_mm_arch_invalidate_secondary_tlbs", yet the problem remains.

The commit 06ff87bae8d3 ("arm64: mm: remove unused functions and variable
protoypes") fixed a similar lockup on the CPU MMU side. Yet, it can occur
to SMMU too, since arm_smmu_mm_arch_invalidate_secondary_tlbs() is called
typically next to MMU tlb flush function, e.g.
	tlb_flush_mmu_tlbonly {
		tlb_flush {
			__flush_tlb_range {
				// check MAX_TLBI_OPS
			}
		}
		mmu_notifier_arch_invalidate_secondary_tlbs {
			arm_smmu_mm_arch_invalidate_secondary_tlbs {
				// does not check MAX_TLBI_OPS
			}
		}
	}

Clone a CMDQ_MAX_TLBI_OPS from the MAX_TLBI_OPS in tlbflush.h, since in an
SVA case SMMU uses the CPU page table, so it makes sense to align with the
tlbflush code. Then, replace per-page TLBI commands with a single per-asid
TLBI command, if the request size hits this threshold.</description><pubDate>Thu, 29 Feb 2024 05:54:28 +0000</pubDate></item><item><title>CVE-2024-25093 | WordPress GD Rating System Plugin &amp;lt;= 3.5 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25093</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Milan Petrovic GD Rating System allows Stored XSS.This issue affects GD Rating System: from n/a through 3.5.</description><pubDate>Thu, 29 Feb 2024 05:54:29 +0000</pubDate></item><item><title>CVE-2024-23501 | WordPress Ebook Store Plugin &amp;lt;= 5.788 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23501</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Shopfiles Ltd Ebook Store allows Stored XSS.This issue affects Ebook Store: from n/a through 5.788.</description><pubDate>Thu, 29 Feb 2024 05:47:10 +0000</pubDate></item><item><title>CVE-2023-50905 | WordPress WP Activity Log Plugin &amp;lt;= 4.6.1 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50905</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Melapress WP Activity Log allows Stored XSS.This issue affects WP Activity Log: from n/a through 4.6.1.</description><pubDate>Thu, 29 Feb 2024 05:40:26 +0000</pubDate></item><item><title>CVE-2024-1976 | The Marketing Optimizer plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 20200925. Thi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1976</link><description>The Marketing Optimizer plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 20200925. This is due to missing or incorrect nonce validation via the admin/main-settings-page.php file. This makes it possible for unauthenticated attackers to update the plugin's settings and inject malicious JavaScript via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Thu, 29 Feb 2024 05:40:26 +0000</pubDate></item><item><title>CVE-2024-1977 | The Restaurant Solutions – Checklist plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Checklist points in version 1...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1977</link><description>The Restaurant Solutions – Checklist plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Checklist points in version 1.0.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Thu, 29 Feb 2024 05:40:27 +0000</pubDate></item><item><title>CVE-2023-47874 | WordPress Perfmatters Plugin &amp;lt;= 2.1.6 is vulnerable to Broken Access Control</title><link>https://www.cve.org/CVERecord?id=CVE-2023-47874</link><description>Missing Authorization vulnerability in Perfmatters.This issue affects Perfmatters: from n/a through 2.1.6.</description><pubDate>Thu, 29 Feb 2024 05:33:27 +0000</pubDate></item><item><title>CVE-2023-6090 | WordPress Mollie Payments for WooCommerce Plugin &amp;lt;= 7.3.11 is vulnerable to Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6090</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in Mollie Mollie Payments for WooCommerce.This issue affects Mollie Payments for WooCommerce: from n/a through 7.3.11.</description><pubDate>Thu, 29 Feb 2024 05:26:18 +0000</pubDate></item><item><title>CVE-2024-21752 | WordPress Ajax Search Lite Plugin &amp;lt;= 4.11.4 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21752</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Ernest Marcinko Ajax Search Lite allows Reflected XSS.This issue affects Ajax Search Lite: from n/a through 4.11.4.</description><pubDate>Thu, 29 Feb 2024 05:26:19 +0000</pubDate></item><item><title>CVE-2023-1841 | Honeywell MPA2 Web Application XSS vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-1841</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Honeywell MPA2 Access Panel (Web server modules) allows XSS Using Invalid Characters.This issue affects MPA2 Access Panel all version prior to R1.00.08.05. 

Honeywell released firmware update package MPA2 firmware R1.00.08.05 which addresses this vulnerability.  This version and all later versions
correct the reported vulnerability.</description><pubDate>Thu, 29 Feb 2024 05:26:20 +0000</pubDate></item><item><title>CVE-2024-1434 | WordPress Media Alt Renamer Plugin 0.0.1 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1434</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Jordy Meow Media Alt Renamer allows Stored XSS.This issue affects Media Alt Renamer: from n/a through 0.0.1.</description><pubDate>Thu, 29 Feb 2024 05:26:20 +0000</pubDate></item><item><title>CVE-2024-1437 | WordPress Adsmonetizer Plugin &amp;lt;= 3.1.2 is vulnerable to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1437</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in José Fernandez Adsmonetizer allows Reflected XSS.This issue affects Adsmonetizer: from n/a through 3.1.2.</description><pubDate>Thu, 29 Feb 2024 05:26:20 +0000</pubDate></item><item><title>CVE-2024-1435 | WordPress Tainacan Plugin &amp;lt;= 0.20.6 is vulnerable to Sensitive Data Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1435</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Tainacan.Org Tainacan.This issue affects Tainacan: from n/a through 0.20.6.</description><pubDate>Thu, 29 Feb 2024 05:10:54 +0000</pubDate></item><item><title>CVE-2023-51531 | WordPress Thrive Automator Plugin &amp;lt;= 1.17 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51531</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Thrive Themes Thrive Automator.This issue affects Thrive Automator: from n/a through 1.17.</description><pubDate>Thu, 29 Feb 2024 05:10:54 +0000</pubDate></item><item><title>CVE-2023-51530 | WordPress GS Logo Slider Plugin &amp;lt;= 3.5.1 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51530</link><description>Cross-Site Request Forgery (CSRF) vulnerability in GS Plugins Logo Slider – Logo Showcase, Logo Carousel, Logo Gallery and Client Logo Presentation.This issue affects Logo Slider – Logo Showcase, Logo Carousel, Logo Gallery and Client Logo Presentation: from n/a through 3.5.1.</description><pubDate>Thu, 29 Feb 2024 04:56:25 +0000</pubDate></item><item><title>CVE-2023-51529 | WordPress HT Mega Plugin &amp;lt;= 2.3.3 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51529</link><description>Cross-Site Request Forgery (CSRF) vulnerability in HasThemes HT Mega – Absolute Addons For Elementor.This issue affects HT Mega – Absolute Addons For Elementor: from n/a through 2.3.3.</description><pubDate>Thu, 29 Feb 2024 04:49:23 +0000</pubDate></item><item><title>CVE-2023-51528 | WordPress GPT3 AI Content Writer Plugin &amp;lt;= 1.8.12 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51528</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Senol Sahin AI Power: Complete AI Pack – Powered by GPT-4.This issue affects AI Power: Complete AI Pack – Powered by GPT-4: from n/a through 1.8.12.</description><pubDate>Thu, 29 Feb 2024 04:49:24 +0000</pubDate></item><item><title>CVE-2023-51696 | WordPress Spam protection, AntiSpam, FireWall by CleanTalk Plugin &amp;lt;= 6.20 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51696</link><description>Cross-Site Request Forgery (CSRF) vulnerability in СleanTalk - Anti-Spam Protection Spam protection, Anti-Spam, FireWall by CleanTalk.This issue affects Spam protection, Anti-Spam, FireWall by CleanTalk: from n/a through 6.20.</description><pubDate>Thu, 29 Feb 2024 04:49:24 +0000</pubDate></item><item><title>CVE-2024-1341 | The Advanced iFrame plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's advanced_iframe shortcode in all vers...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1341</link><description>The Advanced iFrame plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's advanced_iframe shortcode in all versions up to, and including, 2024.1 due to the plugin allowing users to include JS files from external sources through the additional_js attribute. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 29 Feb 2024 04:35:53 +0000</pubDate></item><item><title>CVE-2024-1468 | The Avada | Website Builder For WordPress &amp; WooCommerce theme for WordPress is vulnerable to arbitrary file uploads due to missing file type...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1468</link><description>The Avada | Website Builder For WordPress &amp; WooCommerce theme for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the ajax_import_options() function in all versions up to, and including, 7.11.4. This makes it possible for authenticated attackers, with contributor-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Thu, 29 Feb 2024 03:37:30 +0000</pubDate></item><item><title>CVE-2021-39090 | IBM Cloud Pak for Security information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2021-39090</link><description>IBM Cloud Pak for Security (CP4S) 1.10.0.0 through 1.10.6.0 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques.  IBM X-Force ID:  216388.</description><pubDate>Thu, 29 Feb 2024 02:40:44 +0000</pubDate></item><item><title>CVE-2024-0689 | The Custom Field Suite plugin for WordPress is vulnerable to Stored Cross-Site Scripting via a meta import in all versions up to, and includ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0689</link><description>The Custom Field Suite plugin for WordPress is vulnerable to Stored Cross-Site Scripting via a meta import in all versions up to, and including, 2.6.4 due to insufficient input sanitization and output escaping on the meta values. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Thu, 29 Feb 2024 02:40:45 +0000</pubDate></item><item><title>CVE-2023-38367 | IBM Cloud Pak for Automation authentication bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38367</link><description>IBM Cloud Pak Foundational Services Identity Provider (idP) API (IBM Cloud Pak for Automation 18.0.0, 18.0.1, 18.0.2, 19.0.1, 19.0.2, 19.0.3, 20.0.1, 20.0.2, 20.0.3, 21.0.1, 21.0.2, 21.0.3, 22.0.1, and 22.0.2) allows CRUD Operations with an invalid token. This could allow an unauthenticated attacker to view, update, delete or create an IdP configuration.  IBM X-Force ID:  261130.</description><pubDate>Thu, 29 Feb 2024 02:26:21 +0000</pubDate></item><item><title>CVE-2023-51800 | Cross Site Scripting (XSS) vulnerability in School Fees Management System v.1.0 allows a remote attacker to execute arbitrary code via a cra...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51800</link><description>Cross Site Scripting (XSS) vulnerability in School Fees Management System v.1.0 allows a remote attacker to execute arbitrary code via a crafted payload to the main_settings component in the phone, address, bank, acc_name, acc_number parameters, new_class and cname parameter, add_new_parent function in the name email parameters, new_term function in the tname parameter, and the edit_student function in the name parameter.</description><pubDate>Thu, 29 Feb 2024 01:53:27 +0000</pubDate></item><item><title>CVE-2023-51801 | SQL Injection vulnerability in the Simple Student Attendance System v.1.0 allows a remote attacker to execute arbitrary code via a crafted p...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51801</link><description>SQL Injection vulnerability in the Simple Student Attendance System v.1.0 allows a remote attacker to execute arbitrary code via a crafted payload to the id parameter in the student_form.php and the class_form.php pages.</description><pubDate>Thu, 29 Feb 2024 01:53:28 +0000</pubDate></item><item><title>CVE-2023-51802 | Cross Site Scripting (XSS) vulnerability in the Simple Student Attendance System v.1.0 allows a remote attacker to execute arbitrary code vi...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51802</link><description>Cross Site Scripting (XSS) vulnerability in the Simple Student Attendance System v.1.0 allows a remote attacker to execute arbitrary code via a crafted payload to the page or class_month parameter in the /php-attendance/attendance_report component.</description><pubDate>Thu, 29 Feb 2024 01:53:28 +0000</pubDate></item><item><title>CVE-2024-22871 | An issue in Clojure versions 1.20 to 1.12.0-alpha5 allows an attacker to cause a denial of service (DoS) via the clojure.core$partial$fn__59...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22871</link><description>An issue in Clojure versions 1.20 to 1.12.0-alpha5 allows an attacker to cause a denial of service (DoS) via the clojure.core$partial$fn__5920 function.</description><pubDate>Thu, 29 Feb 2024 01:53:29 +0000</pubDate></item><item><title>CVE-2023-27545 | IBM Watson CloudPak for Data Data Stores information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-27545</link><description>IBM Watson CloudPak for Data Data Stores information disclosure 4.6.0 allows web pages to be stored locally which can be read by another user on the system.  IBM X-Force ID:  248947.</description><pubDate>Thu, 29 Feb 2024 01:53:30 +0000</pubDate></item><item><title>CVE-2023-25921 | IBM Security Guardium Key Lifecycle Manager file upload</title><link>https://www.cve.org/CVERecord?id=CVE-2023-25921</link><description>IBM Security Guardium Key Lifecycle Manager 3.0, 3.0.1, 4.0, 4.1, and 4.1.1 allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment. IBM X-Force ID: 247620.</description><pubDate>Thu, 29 Feb 2024 01:03:27 +0000</pubDate></item><item><title>CVE-2023-25926 | IBM Security Guardium Key Lifecycle Manager XML external entity injection</title><link>https://www.cve.org/CVERecord?id=CVE-2023-25926</link><description>IBM Security Guardium Key Lifecycle Manager 3.0, 3.0.1, 4.0, 4.1, and 4.1.1 is vulnerable to an XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources.  IBM X-Force ID:  247599.</description><pubDate>Thu, 29 Feb 2024 01:03:27 +0000</pubDate></item><item><title>CVE-2023-38372 | IBM Watson IoT Platform information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38372</link><description>An unauthorized attacker who has obtained an IBM Watson IoT Platform 1.0 security authentication token can use it to impersonate an authorized platform user.  IBM X-Force ID:  261201.</description><pubDate>Thu, 29 Feb 2024 01:03:28 +0000</pubDate></item><item><title>CVE-2024-1938 | Type Confusion in V8 in Google Chrome prior to 122.0.6261.94 allowed a remote attacker to potentially exploit object corruption via a crafte...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1938</link><description>Type Confusion in V8 in Google Chrome prior to 122.0.6261.94 allowed a remote attacker to potentially exploit object corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Thu, 29 Feb 2024 01:03:29 +0000</pubDate></item><item><title>CVE-2024-1939 | Type Confusion in V8 in Google Chrome prior to 122.0.6261.94 allowed a remote attacker to potentially exploit heap corruption via a crafted ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1939</link><description>Type Confusion in V8 in Google Chrome prior to 122.0.6261.94 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Thu, 29 Feb 2024 01:03:29 +0000</pubDate></item><item><title>CVE-2024-25126 | Rack ReDos in content type parsing (2nd degree polynomial)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25126</link><description>Rack is a modular Ruby web server interface. Carefully crafted content type headers can cause Rack’s media type parser to take much longer than expected, leading to a possible denial of service vulnerability (ReDos 2nd degree polynomial). This vulnerability is patched in 3.0.9.1 and 2.2.8.1.</description><pubDate>Wed, 28 Feb 2024 23:33:17 +0000</pubDate></item><item><title>CVE-2024-26141 | Possible DoS Vulnerability with Range Header in Rack</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26141</link><description>Rack is a modular Ruby web server interface. Carefully crafted Range headers can cause a server to respond with an unexpectedly large response. Responding with such large responses could lead to a denial of service issue. Vulnerable applications will use the `Rack::File` middleware or the `Rack::Utils.byte_ranges` methods (this includes Rails applications). The vulnerability is fixed in 3.0.9.1 and 2.2.8.1.</description><pubDate>Wed, 28 Feb 2024 23:33:17 +0000</pubDate></item><item><title>CVE-2024-26146 | Possible Denial of Service Vulnerability in Rack Header Parsing</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26146</link><description>Rack is a modular Ruby web server interface. Carefully crafted headers can cause header parsing in Rack to take longer than expected resulting in a possible denial of service issue. Accept and Forwarded headers are impacted. Ruby 3.2 has mitigations for this problem, so Rack applications using Ruby 3.2 or newer are unaffected. This vulnerability is fixed in 2.0.9.4, 2.1.4.4, 2.2.8.1, and 3.0.9.1.</description><pubDate>Wed, 28 Feb 2024 23:33:18 +0000</pubDate></item><item><title>CVE-2024-23910 | Cross-site request forgery (CSRF) vulnerability in ELECOM wireless LAN routers allows a remote unauthenticated attacker to hijack the authen...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23910</link><description>Cross-site request forgery (CSRF) vulnerability in ELECOM wireless LAN routers allows a remote unauthenticated attacker to hijack the authentication of administrators and to perform unintended operations to the affected product. Affected products and versions are as follows: WRC-1167GS2-B v1.67 and earlier, WRC-1167GS2H-B v1.67 and earlier, WRC-2533GS2-B v1.62 and earlier, WRC-2533GS2-W v1.62 and earlier, and WRC-2533GS2V-B v1.62 and earlier.</description><pubDate>Wed, 28 Feb 2024 23:25:42 +0000</pubDate></item><item><title>CVE-2024-25579 | OS command injection vulnerability in ELECOM wireless LAN routers allows a network-adjacent attacker with an administrative privilege to exe...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25579</link><description>OS command injection vulnerability in ELECOM wireless LAN routers allows a network-adjacent attacker with an administrative privilege to execute arbitrary OS commands by sending a specially crafted request to the product. Affected products and versions are as follows: WRC-1167GS2-B v1.67 and earlier, WRC-1167GS2H-B v1.67 and earlier, WRC-2533GS2-B v1.62 and earlier, WRC-2533GS2-W v1.62 and earlier, and WRC-2533GS2V-B v1.62 and earlier.</description><pubDate>Wed, 28 Feb 2024 23:25:42 +0000</pubDate></item><item><title>CVE-2024-21798 | ELECOM wireless LAN routers contain a cross-site scripting vulnerability. Assume that a malicious administrative user configures the affecte...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21798</link><description>ELECOM wireless LAN routers contain a cross-site scripting vulnerability. Assume that a malicious administrative user configures the affected product with specially crafted content. When another administrative user logs in and operates the product, an arbitrary script may be executed on the web browser. Affected products and versions are as follows: WRC-1167GS2-B v1.67 and earlier, WRC-1167GS2H-B v1.67 and earlier, WRC-2533GS2-B v1.62 and earlier, WRC-2533GS2-W v1.62 and earlier, and WRC-2533GS2V-B v1.62 and earlier.</description><pubDate>Wed, 28 Feb 2024 23:13:23 +0000</pubDate></item><item><title>CVE-2024-25422 | SQL Injection vulnerability in SEMCMS v.4.8 allows a remote attacker to execute arbitrary code and obtain sensitive information via the SEMC...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25422</link><description>SQL Injection vulnerability in SEMCMS v.4.8 allows a remote attacker to execute arbitrary code and obtain sensitive information via the SEMCMS_Menu.php component.</description><pubDate>Wed, 28 Feb 2024 23:13:23 +0000</pubDate></item><item><title>CVE-2024-26559 | An issue in uverif v.2.0 allows a remote attacker to obtain sensitive information.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26559</link><description>An issue in uverif v.2.0 allows a remote attacker to obtain sensitive information.</description><pubDate>Wed, 28 Feb 2024 23:13:24 +0000</pubDate></item><item><title>CVE-2023-5617 | Hitachi Vantara Pentaho Data Integration &amp;amp; Analytics - Server-generated Error Message Containing  Sensitive Information</title><link>https://www.cve.org/CVERecord?id=CVE-2023-5617</link><description>Hitachi Vantara Pentaho Data Integration &amp; Analytics versions before 10.1.0.0 and 9.3.0.6, including 9.5.x and 8.3.x, display the version of Tomcat when a server error is encountered.</description><pubDate>Wed, 28 Feb 2024 22:37:32 +0000</pubDate></item><item><title>CVE-2024-22532 | Buffer Overflow vulnerability in XNSoft NConvert 7.163 (for Windows x86) allows attackers to cause a denial of service via crafted xwd file.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22532</link><description>Buffer Overflow vulnerability in XNSoft NConvert 7.163 (for Windows x86) allows attackers to cause a denial of service via crafted xwd file.</description><pubDate>Wed, 28 Feb 2024 22:23:46 +0000</pubDate></item><item><title>CVE-2023-45859 | In Hazelcast through 4.1.10, 4.2 through 4.2.8, 5.0 through 5.0.5, 5.1 through 5.1.7, 5.2 through 5.2.4, and 5.3 through 5.3.2, some client ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-45859</link><description>In Hazelcast through 4.1.10, 4.2 through 4.2.8, 5.0 through 5.0.5, 5.1 through 5.1.7, 5.2 through 5.2.4, and 5.3 through 5.3.2, some client operations don't check permissions properly, allowing authenticated users to access data stored in the cluster.</description><pubDate>Wed, 28 Feb 2024 22:09:20 +0000</pubDate></item><item><title>CVE-2024-22983 | SQL injection vulnerability in Projectworlds Visitor Management System in PHP v.1.0 allows a remote attacker to escalate privileges via the ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22983</link><description>SQL injection vulnerability in Projectworlds Visitor Management System in PHP v.1.0 allows a remote attacker to escalate privileges via the name parameter in the myform.php endpoint.</description><pubDate>Wed, 28 Feb 2024 22:09:20 +0000</pubDate></item><item><title>CVE-2024-25868 | A Cross Site Scripting (XSS) vulnerability in CodeAstro Membership Management System in PHP v.1.0 allows a remote attacker to execute arbitr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25868</link><description>A Cross Site Scripting (XSS) vulnerability in CodeAstro Membership Management System in PHP v.1.0 allows a remote attacker to execute arbitrary code via the membershipType parameter in the add_type.php component.</description><pubDate>Wed, 28 Feb 2024 22:09:21 +0000</pubDate></item><item><title>CVE-2024-25869 | An Unrestricted File Upload vulnerability in CodeAstro Membership Management System in PHP v.1.0 allows a remote attacker to execute arbitra...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25869</link><description>An Unrestricted File Upload vulnerability in CodeAstro Membership Management System in PHP v.1.0 allows a remote attacker to execute arbitrary code via upload of a crafted php file in the settings.php component.</description><pubDate>Wed, 28 Feb 2024 22:09:21 +0000</pubDate></item><item><title>CVE-2024-26476 | An issue in open-emr before v.7.0.2 allows a remote attacker to escalate privileges via a crafted script to the formid parameter in the ereq...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26476</link><description>An issue in open-emr before v.7.0.2 allows a remote attacker to escalate privileges via a crafted script to the formid parameter in the ereq_form.php component.</description><pubDate>Wed, 28 Feb 2024 22:09:22 +0000</pubDate></item><item><title>CVE-2023-25925 | IBM Security Guardium Key Lifecycle Manager command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2023-25925</link><description>IBM Security Guardium Key Lifecycle Manager 3.0, 3.0.1, 4.0, 4.1, and 4.1.1 could allow a remote authenticated attacker to execute arbitrary commands on the system by sending a specially crafted request.  IBM X-Force ID:  247632.</description><pubDate>Wed, 28 Feb 2024 21:56:51 +0000</pubDate></item><item><title>CVE-2023-25922 | IBM Security Guardium Key Lifecycle Manager file upload</title><link>https://www.cve.org/CVERecord?id=CVE-2023-25922</link><description>IBM Security Guardium Key Lifecycle Manager 3.0, 3.0.1, 4.0, 4.1, and 4.1.1 allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.  IBM X-Force ID:  247621.</description><pubDate>Wed, 28 Feb 2024 21:56:52 +0000</pubDate></item><item><title>CVE-2023-45873 | An issue was discovered in Couchbase Server through 7.2.2. A data reader may cause a denial of service (application exist) because of the OO...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-45873</link><description>An issue was discovered in Couchbase Server through 7.2.2. A data reader may cause a denial of service (application exist) because of the OOM killer.</description><pubDate>Wed, 28 Feb 2024 21:56:52 +0000</pubDate></item><item><title>CVE-2023-49338 | Couchbase Server 7.1.x and 7.2.x before 7.2.4 does not require authentication for the /admin/stats and /admin/vitals endpoints on TCP port 8...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49338</link><description>Couchbase Server 7.1.x and 7.2.x before 7.2.4 does not require authentication for the /admin/stats and /admin/vitals endpoints on TCP port 8093 of localhost.</description><pubDate>Wed, 28 Feb 2024 21:56:52 +0000</pubDate></item><item><title>CVE-2024-25867 | A SQL Injection vulnerability in CodeAstro Membership Management System in PHP v.1.0 allows a remote attacker to execute arbitrary SQL comma...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25867</link><description>A SQL Injection vulnerability in CodeAstro Membership Management System in PHP v.1.0 allows a remote attacker to execute arbitrary SQL commands via the membershipType and membershipAmount parameters in the add_type.php component.</description><pubDate>Wed, 28 Feb 2024 21:56:53 +0000</pubDate></item><item><title>CVE-2024-25351 | SQL Injection vulnerability in /zms/admin/changeimage.php in PHPGurukul Zoo Management System 1.0 allows attackers to run arbitrary SQL comm...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25351</link><description>SQL Injection vulnerability in /zms/admin/changeimage.php in PHPGurukul Zoo Management System 1.0 allows attackers to run arbitrary SQL commands via the editid parameter.</description><pubDate>Wed, 28 Feb 2024 21:46:20 +0000</pubDate></item><item><title>CVE-2024-25866 | A SQL Injection vulnerability in CodeAstro Membership Management System in PHP v.1.0 allows a remote attacker to execute arbitrary SQL comma...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25866</link><description>A SQL Injection vulnerability in CodeAstro Membership Management System in PHP v.1.0 allows a remote attacker to execute arbitrary SQL commands via the email parameter in the index.php component.</description><pubDate>Wed, 28 Feb 2024 21:46:20 +0000</pubDate></item><item><title>CVE-2024-26450 | Cross Site Scripting vulnerability in Piwigo before v.14.2.0 allows a remote attacker to escalate privileges via the batch function on the a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26450</link><description>Cross Site Scripting vulnerability in Piwigo before v.14.2.0 allows a remote attacker to escalate privileges via the batch function on the admin page.</description><pubDate>Wed, 28 Feb 2024 21:46:21 +0000</pubDate></item><item><title>CVE-2024-25350 | SQL Injection vulnerability in /zms/admin/edit-ticket.php in PHPGurukul Zoo Management System 1.0 via tickettype and tprice parameters.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25350</link><description>SQL Injection vulnerability in /zms/admin/edit-ticket.php in PHPGurukul Zoo Management System 1.0 via tickettype and tprice parameters.</description><pubDate>Wed, 28 Feb 2024 21:46:21 +0000</pubDate></item><item><title>CVE-2024-1972 | SourceCodester Online Job Portal EditProfile.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1972</link><description>A vulnerability was found in SourceCodester Online Job Portal 1.0 and classified as problematic. Affected by this issue is some unknown functionality of the file /Employer/EditProfile.php. The manipulation of the argument Address leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-255128.</description><pubDate>Wed, 28 Feb 2024 21:36:18 +0000</pubDate></item><item><title>CVE-2024-24150 | A memory leak issue discovered in parseSWF_TEXTRECORD in libming v0.4.8 allows attackers to cause a denial of service via a crafted SWF file...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24150</link><description>A memory leak issue discovered in parseSWF_TEXTRECORD in libming v0.4.8 allows attackers to cause a denial of service via a crafted SWF file.</description><pubDate>Wed, 28 Feb 2024 21:01:01 +0000</pubDate></item><item><title>CVE-2024-1970 | SourceCodester Online Learning System V2 index.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1970</link><description>A vulnerability, which was classified as problematic, was found in SourceCodester Online Learning System V2 1.0. Affected is an unknown function of the file /index.php. The manipulation of the argument page leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-255126 is the identifier assigned to this vulnerability.</description><pubDate>Wed, 28 Feb 2024 20:38:37 +0000</pubDate></item><item><title>CVE-2024-1971 | Surya2Developer Online Shopping System POST Parameter login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1971</link><description>A vulnerability has been found in Surya2Developer Online Shopping System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file login.php of the component POST Parameter Handler. The manipulation of the argument password with the input nochizplz'+or+1%3d1+limit+1%23 leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-255127.</description><pubDate>Wed, 28 Feb 2024 20:38:37 +0000</pubDate></item><item><title>CVE-2023-43769 | An issue was discovered in Couchbase Server through 7.1.4 before 7.1.5 and before 7.2.1. There are Unauthenticated RMI Service Ports Exposed...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-43769</link><description>An issue was discovered in Couchbase Server through 7.1.4 before 7.1.5 and before 7.2.1. There are Unauthenticated RMI Service Ports Exposed in Analytics.</description><pubDate>Wed, 28 Feb 2024 20:31:20 +0000</pubDate></item><item><title>CVE-2023-45874 | An issue was discovered in Couchbase Server through 7.2.2. A data reader may cause a denial of service (outage of reader threads).</title><link>https://www.cve.org/CVERecord?id=CVE-2023-45874</link><description>An issue was discovered in Couchbase Server through 7.2.2. A data reader may cause a denial of service (outage of reader threads).</description><pubDate>Wed, 28 Feb 2024 20:31:21 +0000</pubDate></item><item><title>CVE-2023-49930 | An issue was discovered in Couchbase Server before 7.2.4. cURL calls to /diag/eval are not sufficiently restricted.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49930</link><description>An issue was discovered in Couchbase Server before 7.2.4. cURL calls to /diag/eval are not sufficiently restricted.</description><pubDate>Wed, 28 Feb 2024 20:31:21 +0000</pubDate></item><item><title>CVE-2023-49931 | An issue was discovered in Couchbase Server before 7.2.4. SQL++ cURL calls to /diag/eval are not sufficiently restricted.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49931</link><description>An issue was discovered in Couchbase Server before 7.2.4. SQL++ cURL calls to /diag/eval are not sufficiently restricted.</description><pubDate>Wed, 28 Feb 2024 20:31:21 +0000</pubDate></item><item><title>CVE-2023-49932 | An issue was discovered in Couchbase Server before 7.2.4. An attacker can bypass SQL++ N1QL cURL host restrictions.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49932</link><description>An issue was discovered in Couchbase Server before 7.2.4. An attacker can bypass SQL++ N1QL cURL host restrictions.</description><pubDate>Wed, 28 Feb 2024 20:31:22 +0000</pubDate></item><item><title>CVE-2023-50436 | An issue was discovered in Couchbase Server before 7.2.4. ns_server admin credentials are leaked in encoded form in the diag.log file. The e...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50436</link><description>An issue was discovered in Couchbase Server before 7.2.4. ns_server admin credentials are leaked in encoded form in the diag.log file. The earliest affected version is 7.1.5.</description><pubDate>Wed, 28 Feb 2024 20:31:22 +0000</pubDate></item><item><title>CVE-2023-50437 | An issue was discovered in Couchbase Server before 7.2.x before 7.2.4. otpCookie is shown with full admin on pools/default/serverGroups and ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50437</link><description>An issue was discovered in Couchbase Server before 7.2.x before 7.2.4. otpCookie is shown with full admin on pools/default/serverGroups and engageCluster2.</description><pubDate>Wed, 28 Feb 2024 20:31:23 +0000</pubDate></item><item><title>CVE-2024-23302 | Couchbase Server before 7.2.4 has a private key leak in goxdcr.log.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23302</link><description>Couchbase Server before 7.2.4 has a private key leak in goxdcr.log.</description><pubDate>Wed, 28 Feb 2024 20:31:23 +0000</pubDate></item><item><title>CVE-2024-24155 | Bento4 v1.5.1-628 contains a Memory leak on AP4_Movie::AP4_Movie, parsing tracks and added into m_Tracks list, but mp42aac cannot correctly ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24155</link><description>Bento4 v1.5.1-628 contains a Memory leak on AP4_Movie::AP4_Movie, parsing tracks and added into m_Tracks list, but mp42aac cannot correctly delete when we got an no audio track found error. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted mp4 file.</description><pubDate>Wed, 28 Feb 2024 20:31:23 +0000</pubDate></item><item><title>CVE-2024-24149 | A memory leak issue discovered in parseSWF_GLYPHENTRY in libming v0.4.8 allows attackers to cause a denial of service via a crafted SWF file...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24149</link><description>A memory leak issue discovered in parseSWF_GLYPHENTRY in libming v0.4.8 allows attackers to cause a denial of service via a crafted SWF file.</description><pubDate>Wed, 28 Feb 2024 20:25:19 +0000</pubDate></item><item><title>CVE-2024-24146 | A memory leak issue discovered in parseSWF_DEFINEBUTTON in libming v0.4.8 allows attackers to cause s denial of service via a crafted SWF fi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24146</link><description>A memory leak issue discovered in parseSWF_DEFINEBUTTON in libming v0.4.8 allows attackers to cause s denial of service via a crafted SWF file.</description><pubDate>Wed, 28 Feb 2024 20:25:20 +0000</pubDate></item><item><title>CVE-2024-24147 | A memory leak issue discovered in parseSWF_FILLSTYLEARRAY in libming v0.4.8 allows attackers to cause s denial of service via a crafted SWF ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24147</link><description>A memory leak issue discovered in parseSWF_FILLSTYLEARRAY in libming v0.4.8 allows attackers to cause s denial of service via a crafted SWF file.</description><pubDate>Wed, 28 Feb 2024 20:25:20 +0000</pubDate></item><item><title>CVE-2024-24148 | A memory leak issue discovered in parseSWF_FREECHARACTER in libming v0.4.8 allows attackers to cause a denial of service via a crafted SWF f...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24148</link><description>A memory leak issue discovered in parseSWF_FREECHARACTER in libming v0.4.8 allows attackers to cause a denial of service via a crafted SWF file.</description><pubDate>Wed, 28 Feb 2024 20:13:44 +0000</pubDate></item><item><title>CVE-2024-25859 | A path traversal vulnerability in the /path/to/uploads/ directory of Blesta before v5.9.2 allows attackers to takeover user accounts and exe...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25859</link><description>A path traversal vulnerability in the /path/to/uploads/ directory of Blesta before v5.9.2 allows attackers to takeover user accounts and execute arbitrary code.</description><pubDate>Wed, 28 Feb 2024 20:13:44 +0000</pubDate></item><item><title>CVE-2024-25169 | An issue in Mezzanine v6.0.0 allows attackers to bypass access control mechanisms in the admin panel via a crafted request.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25169</link><description>An issue in Mezzanine v6.0.0 allows attackers to bypass access control mechanisms in the admin panel via a crafted request.</description><pubDate>Wed, 28 Feb 2024 19:58:44 +0000</pubDate></item><item><title>CVE-2024-25170 | An issue in Mezzanine v6.0.0 allows attackers to bypass access controls via manipulating the Host header.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25170</link><description>An issue in Mezzanine v6.0.0 allows attackers to bypass access controls via manipulating the Host header.</description><pubDate>Wed, 28 Feb 2024 19:58:44 +0000</pubDate></item><item><title>CVE-2024-25202 | Cross Site Scripting vulnerability in Phpgurukul User Registration &amp; Login and User Management System 1.0 allows attackers to run arbitrary ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25202</link><description>Cross Site Scripting vulnerability in Phpgurukul User Registration &amp; Login and User Management System 1.0 allows attackers to run arbitrary code via the search bar.</description><pubDate>Wed, 28 Feb 2024 19:51:48 +0000</pubDate></item><item><title>CVE-2024-25435 | A cross-site scripting (XSS) vulnerability in Md1health Md1patient v2.0.0 allows attackers to execute arbitrary web scripts or HTML via a cr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25435</link><description>A cross-site scripting (XSS) vulnerability in Md1health Md1patient v2.0.0 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Msg parameter.</description><pubDate>Wed, 28 Feb 2024 19:51:49 +0000</pubDate></item><item><title>CVE-2023-52047 | Dedecms v5.7.112 was discovered to contain a Cross-Site Request Forgery (CSRF) in the file manager.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52047</link><description>Dedecms v5.7.112 was discovered to contain a Cross-Site Request Forgery (CSRF) in the file manager.</description><pubDate>Wed, 28 Feb 2024 19:39:09 +0000</pubDate></item><item><title>CVE-2023-52048 | RuoYi v4.7.8 was discovered to contain a cross-site scripting (XSS) vulnerability via the component /system/notice/.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52048</link><description>RuoYi v4.7.8 was discovered to contain a cross-site scripting (XSS) vulnerability via the component /system/notice/.</description><pubDate>Wed, 28 Feb 2024 19:39:09 +0000</pubDate></item><item><title>CVE-2024-27285 | [v0.9.34] XSS in generated frames.html of default YARD template</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27285</link><description>YARD is a Ruby Documentation tool. The "frames.html" file within the Yard Doc's generated documentation is vulnerable to Cross-Site Scripting (XSS) attacks due to inadequate sanitization of user input within the JavaScript segment of the "frames.erb" template file.  This vulnerability is fixed in 0.9.35.</description><pubDate>Wed, 28 Feb 2024 19:30:32 +0000</pubDate></item><item><title>CVE-2023-51692 | WordPress Customer Reviews for WooCommerce Plugin &amp;lt;= 5.38.1 is vulnerable to Broken Access Control</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51692</link><description>Missing Authorization vulnerability in CusRev Customer Reviews for WooCommerce.This issue affects Customer Reviews for WooCommerce: from n/a through 5.38.1.</description><pubDate>Wed, 28 Feb 2024 18:55:04 +0000</pubDate></item><item><title>CVE-2023-51533 | WordPress Ecwid Shopping Cart Plugin &amp;lt;= 6.12.4 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51533</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Ecwid Ecommerce Ecwid Ecommerce Shopping Cart.This issue affects Ecwid Ecommerce Shopping Cart: from n/a through 6.12.4.</description><pubDate>Wed, 28 Feb 2024 18:47:55 +0000</pubDate></item><item><title>CVE-2024-27948 | WordPress Atahualpa Theme &amp;lt;= 3.7.24 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27948</link><description>Cross-Site Request Forgery (CSRF) vulnerability in bytesforall Atahualpa.This issue affects Atahualpa: from n/a through 3.7.24.</description><pubDate>Wed, 28 Feb 2024 18:26:38 +0000</pubDate></item><item><title>CVE-2024-27103 | Querybook Stored Cross-Site Scripting allows Privilege Elevation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27103</link><description>Querybook is a Big Data Querying UI. When a user searches for their queries, datadocs, tables and lists, the search result is marked and highlighted, and this feature uses dangerouslySetInnerHTML which means that if the highlighted result has an XSS payload it will trigger. While the input to dangerouslySetInnerHTML is not sanitized for the data inside of queries which leads to an XSS vulnerability. During the "query auto-suggestion" the name of the suggested tables are set with innerHTML which leads to the XSS vulnerability. A patch to rectify this issue has been introduced in Querybook version 3.31.2.</description><pubDate>Wed, 28 Feb 2024 17:49:32 +0000</pubDate></item><item><title>CVE-2024-1847 | Multiple vulnerabilities exist in file reading procedure in eDrawings from Release SOLIDWORKS 2023 through Release SOLIDWORKS 2024</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1847</link><description>Heap-based Buffer Overflow, Memory Corruption, Out-Of-Bounds Read, Out-Of-Bounds Write, Stack-based Buffer Overflow, Type Confusion, Uninitialized Variable, Use-After-Free vulnerabilities exist in the file reading procedure in eDrawings from Release SOLIDWORKS 2023 through Release SOLIDWORKS 2024. These vulnerabilities could allow an attacker to execute arbitrary code while opening a specially crafted CATPART, DWG, DXF, IPT, JT, SAT, SLDDRW, SLDPRT, STL, STP, X_B or X_T file.</description><pubDate>Wed, 28 Feb 2024 17:35:59 +0000</pubDate></item><item><title>CVE-2024-26342 | A Null pointer dereference in usr/sbin/httpd in ASUS AC68U 3.0.0.4.384.82230 allows remote attackers to trigger DoS via network packet.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26342</link><description>A Null pointer dereference in usr/sbin/httpd in ASUS AC68U 3.0.0.4.384.82230 allows remote attackers to trigger DoS via network packet.</description><pubDate>Wed, 28 Feb 2024 17:36:00 +0000</pubDate></item><item><title>CVE-2023-51681 | WordPress Duplicator Plugin &amp;lt;= 1.5.7 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51681</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Duplicator Duplicator – WordPress Migration &amp; Backup Plugin.This issue affects Duplicator – WordPress Migration &amp; Backup Plugin: from n/a through 1.5.7.</description><pubDate>Wed, 28 Feb 2024 16:53:56 +0000</pubDate></item><item><title>CVE-2023-51683 | WordPress Easy PayPal Buy Now Button Plugin &amp;lt;= 1.8.1 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51683</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Scott Paterson Easy PayPal &amp; Stripe Buy Now Button.This issue affects Easy PayPal &amp; Stripe Buy Now Button: from n/a through 1.8.1.</description><pubDate>Wed, 28 Feb 2024 16:53:56 +0000</pubDate></item><item><title>CVE-2023-52223 | WordPress MailerLite – WooCommerce integration Plugin &amp;lt;= 2.0.8 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52223</link><description>Cross-Site Request Forgery (CSRF) vulnerability in MailerLite MailerLite – WooCommerce integration.This issue affects MailerLite – WooCommerce integration: from n/a through 2.0.8.</description><pubDate>Wed, 28 Feb 2024 16:47:10 +0000</pubDate></item><item><title>CVE-2024-0560 | Apicast: use_3scale_oidc_issuer_endpoint of token introspection policy isn&amp;#x27;t compatible with rh-sso 7.5 or later versions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0560</link><description>A vulnerability was found in 3Scale, when used with Keycloak 15 (or RHSSO 7.5.0) and superiors. When the auth_type is use_3scale_oidc_issuer_endpoint, the Token Introspection policy discovers the Token Introspection endpoint from the token_introspection_endpoint field, but the field was removed on RH-SSO 7.5. As a result, the policy doesn't inspect tokens, it determines that all tokens are valid.</description><pubDate>Wed, 28 Feb 2024 16:47:11 +0000</pubDate></item><item><title>CVE-2023-52226 | WordPress Advanced Flamingo plugin &amp;lt;= 1.0 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52226</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Advanced Flamingo.This issue affects Advanced Flamingo: from n/a through 1.0.</description><pubDate>Wed, 28 Feb 2024 16:40:03 +0000</pubDate></item><item><title>CVE-2024-21749 | WordPress 1 click disable all Plugin &amp;lt;= 1.0.1 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21749</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Atakan Au 1 click disable all.This issue affects 1 click disable all: from n/a through 1.0.1.</description><pubDate>Wed, 28 Feb 2024 16:40:03 +0000</pubDate></item><item><title>CVE-2024-23519 | WordPress Email Before Download Plugin &amp;lt;= 6.9.7 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23519</link><description>Cross-Site Request Forgery (CSRF) vulnerability in M&amp;S Consulting Email Before Download.This issue affects Email Before Download: from n/a through 6.9.7.</description><pubDate>Wed, 28 Feb 2024 16:32:04 +0000</pubDate></item><item><title>CVE-2024-20267 | A vulnerability with the handling of MPLS traffic for Cisco NX-OS Software could allow an unauthenticated, remote attacker to cause the nets...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20267</link><description>A vulnerability with the handling of MPLS traffic for Cisco NX-OS Software could allow an unauthenticated, remote attacker to cause the netstack process to unexpectedly restart, which could cause the device to stop processing network traffic or to reload. &#13;
&#13; This vulnerability is due to lack of proper error checking when processing an ingress MPLS frame. An attacker could exploit this vulnerability by sending a crafted IPv6 packet that is encapsulated within an MPLS frame to an MPLS-enabled interface of the targeted device. A successful exploit could allow the attacker to cause a denial of service (DoS) condition.&#13;
&#13; Note: The IPv6 packet can be generated multiple hops away from the targeted device and then encapsulated within MPLS. The DoS condition may occur when the NX-OS device processes the packet.</description><pubDate>Wed, 28 Feb 2024 16:32:05 +0000</pubDate></item><item><title>CVE-2024-20291 | A vulnerability in the access control list (ACL) programming for port channel subinterfaces of Cisco Nexus 3000 and 9000 Series Switches in ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20291</link><description>A vulnerability in the access control list (ACL) programming for port channel subinterfaces of Cisco Nexus 3000 and 9000 Series Switches in standalone NX-OS mode could allow an unauthenticated, remote attacker to send traffic that should be blocked through an affected device.&#13;
&#13; This vulnerability is due to incorrect hardware programming that occurs when configuration changes are made to port channel member ports. An attacker could exploit this vulnerability by attempting to send traffic through an affected device. A successful exploit could allow the attacker to access network resources that should be protected by an ACL that was applied on port channel subinterfaces.</description><pubDate>Wed, 28 Feb 2024 16:32:06 +0000</pubDate></item><item><title>CVE-2024-20294 | A vulnerability in the Link Layer Discovery Protocol (LLDP) feature of Cisco FXOS Software and Cisco NX-OS Software could allow an unauthent...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20294</link><description>A vulnerability in the Link Layer Discovery Protocol (LLDP) feature of Cisco FXOS Software and Cisco NX-OS Software could allow an unauthenticated, adjacent attacker to cause a denial of service (DoS) condition on an affected device.&#13;
&#13; This vulnerability is due to improper handling of specific fields in an LLDP frame. An attacker could exploit this vulnerability by sending a crafted LLDP packet to an interface of an affected device and having an authenticated user retrieve LLDP statistics from the affected device through CLI show commands or Simple Network Management Protocol (SNMP) requests. A successful exploit could allow the attacker to cause the LLDP service to crash and stop running on the affected device. In certain situations, the LLDP crash may result in a reload of the affected device.&#13;
&#13; Note: LLDP is a Layer 2 link protocol. To exploit this vulnerability, an attacker would need to be directly connected to an interface of an affected device, either physically or logically (for example, through a Layer 2 Tunnel configured to transport the LLDP protocol).</description><pubDate>Wed, 28 Feb 2024 16:32:06 +0000</pubDate></item><item><title>CVE-2024-20321 | A vulnerability in the External Border Gateway Protocol (eBGP) implementation of Cisco NX-OS Software could allow an unauthenticated, remote...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20321</link><description>A vulnerability in the External Border Gateway Protocol (eBGP) implementation of Cisco NX-OS Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device.&#13;
&#13; This vulnerability exists because eBGP traffic is mapped to a shared hardware rate-limiter queue. An attacker could exploit this vulnerability by sending large amounts of network traffic with certain characteristics through an affected device. A successful exploit could allow the attacker to cause eBGP neighbor sessions to be dropped, leading to a DoS condition in the network.</description><pubDate>Wed, 28 Feb 2024 16:32:07 +0000</pubDate></item><item><title>CVE-2024-20344 | A vulnerability in system resource management in Cisco UCS 6400 and 6500 Series Fabric Interconnects that are in Intersight Managed Mode (IM...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20344</link><description>A vulnerability in system resource management in Cisco UCS 6400 and 6500 Series Fabric Interconnects that are in Intersight Managed Mode (IMM) could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on the Device Console UI of an affected device.&#13;
&#13; This vulnerability is due to insufficient rate-limiting of TCP connections to an affected device. An attacker could exploit this vulnerability by sending a high number of TCP packets to the Device Console UI. A successful exploit could allow an attacker to cause the Device Console UI process to crash, resulting in a DoS condition. A manual reload of the fabric interconnect is needed to restore complete functionality.</description><pubDate>Wed, 28 Feb 2024 16:32:07 +0000</pubDate></item><item><title>CVE-2024-24701 | WordPress Setka Editor Plugin &amp;lt;= 2.1.20 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24701</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Native Grid LLC A no-code page builder for beautiful performance-based content.This issue affects A no-code page builder for beautiful performance-based content: from n/a through 2.1.20.</description><pubDate>Wed, 28 Feb 2024 16:32:07 +0000</pubDate></item><item><title>CVE-2024-23946 | Apache OFBiz: Path traversal or file inclusion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23946</link><description>Possible path traversal in Apache OFBiz allowing file inclusion.
Users are recommended to upgrade to version 18.12.12, that fixes the issue.</description><pubDate>Wed, 28 Feb 2024 15:52:16 +0000</pubDate></item><item><title>CVE-2024-27284 | cassandra-rs non-idiomatic use of iterators leads to use after free</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27284</link><description>cassandra-rs is a Cassandra (CQL) driver for Rust. Code that attempts to use an item (e.g., a row) returned by an iterator after the iterator has advanced to the next item will be accessing freed memory and experience undefined behaviour.  The problem has been fixed in version 3.0.0.</description><pubDate>Wed, 28 Feb 2024 15:52:17 +0000</pubDate></item><item><title>CVE-2024-25065 | Apache OFBiz: Path traversal allowing authentication bypass.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25065</link><description>Possible path traversal in Apache OFBiz allowing authentication bypass.
Users are recommended to upgrade to version 18.12.12, that fixes the issue.</description><pubDate>Wed, 28 Feb 2024 15:46:42 +0000</pubDate></item><item><title>CVE-2024-27083 | Flask-AppBuilder&amp;#x27;s OAuth login page subject to Cross Site Scripting (XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27083</link><description>Flask-AppBuilder is an application development framework, built on top of Flask. A Cross-Site Scripting (XSS) vulnerability has been discovered on the OAuth login page. An attacker could trick a user to follow a specially crafted URL to the OAuth login page. This URL could inject and execute malicious javascript code that would get executed on the user's browser. This issue was introduced on 4.1.4 and patched on 4.2.1.</description><pubDate>Wed, 28 Feb 2024 15:46:43 +0000</pubDate></item><item><title>CVE-2024-25128 | Flask-AppBuilder incorrect authentication when using auth type OpenID </title><link>https://www.cve.org/CVERecord?id=CVE-2024-25128</link><description>Flask-AppBuilder is an application development framework, built on top of Flask. When Flask-AppBuilder is set to AUTH_TYPE AUTH_OID, it allows an attacker to forge an HTTP request, that could deceive the backend into using any requested OpenID service. This vulnerability could grant an attacker unauthorised privilege access if a custom OpenID service is deployed by the attacker and accessible by the backend. This vulnerability is only exploitable when the application is using the OpenID 2.0 authorization protocol. Upgrade to Flask-AppBuilder 4.3.11 to fix the vulnerability.</description><pubDate>Wed, 28 Feb 2024 15:38:30 +0000</pubDate></item><item><title>CVE-2023-6917 | Pcp: unsafe use of directories allows pcp to root privilege escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6917</link><description>A vulnerability has been identified in the Performance Co-Pilot (PCP) package, stemming from the mixed privilege levels utilized by systemd services associated with PCP. While certain services operate within the confines of limited PCP user/group privileges, others are granted full root privileges. This disparity in privilege levels poses a risk when privileged root processes interact with directories or directory trees owned by unprivileged PCP users. Specifically, this vulnerability may lead to the compromise of PCP user isolation and facilitate local PCP-to-root exploits, particularly through symlink attacks. These vulnerabilities underscore the importance of maintaining robust privilege separation mechanisms within PCP to mitigate the potential for unauthorized privilege escalation.</description><pubDate>Wed, 28 Feb 2024 14:46:22 +0000</pubDate></item><item><title>CVE-2024-24702 | WordPress Page Restrict Plugin &amp;lt;= 2.5.5 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24702</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Matt Martz &amp; Andy Stratton Page Restrict.This issue affects Page Restrict: from n/a through 2.5.5.</description><pubDate>Wed, 28 Feb 2024 14:39:36 +0000</pubDate></item><item><title>CVE-2024-24705 | WordPress Accessibility Plugin &amp;lt;= 1.0.6 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24705</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Octa Code Accessibility.This issue affects Accessibility: from n/a through 1.0.6.</description><pubDate>Wed, 28 Feb 2024 14:32:29 +0000</pubDate></item><item><title>CVE-2024-23807 | Apache Xerces C++: Use-after-free on external DTD scan</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23807</link><description>The Apache Xerces C++ XML parser on versions 3.0.0 before 3.2.5 contains a use-after-free error triggered during the scanning of external DTDs.

Users are recommended to upgrade to version 3.2.5 which fixes the issue, or mitigate the issue by disabling DTD processing. This can be accomplished via the DOM using a standard parser feature, or via SAX using the XERCES_DISABLE_DTD environment variable.

This issue has been disclosed before as CVE-2018-1311, but unfortunately that advisory incorrectly stated the issue would be fixed in version 3.2.3 or 3.2.4.</description><pubDate>Wed, 28 Feb 2024 13:58:49 +0000</pubDate></item><item><title>CVE-2024-25830 | F-logic DataCube3 v1.0 is vulnerable to Incorrect Access Control due to an improper directory access restriction. An unauthenticated, remote...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25830</link><description>F-logic DataCube3 v1.0 is vulnerable to Incorrect Access Control due to an improper directory access restriction. An unauthenticated, remote attacker can exploit this, by sending a URI that contains the path of the configuration file. A successful exploit could allow the attacker to extract the root and admin password.</description><pubDate>Wed, 28 Feb 2024 13:51:50 +0000</pubDate></item><item><title>CVE-2024-25831 | F-logic DataCube3 Version 1.0 is affected by a reflected cross-site scripting (XSS) vulnerability due to improper input sanitization. An aut...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25831</link><description>F-logic DataCube3 Version 1.0 is affected by a reflected cross-site scripting (XSS) vulnerability due to improper input sanitization. An authenticated, remote attacker can execute arbitrary JavaScript code in the web management interface.</description><pubDate>Wed, 28 Feb 2024 13:51:51 +0000</pubDate></item><item><title>CVE-2024-25832 | F-logic DataCube3 v1.0 is vulnerable to unrestricted file upload, which could allow an authenticated malicious actor to upload a file of dan...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25832</link><description>F-logic DataCube3 v1.0 is vulnerable to unrestricted file upload, which could allow an authenticated malicious actor to upload a file of dangerous type by manipulating the filename extension.</description><pubDate>Wed, 28 Feb 2024 13:51:51 +0000</pubDate></item><item><title>CVE-2024-25833 | F-logic DataCube3 v1.0 is vulnerable to unauthenticated SQL injection, which could allow an unauthenticated malicious actor to execute arbit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25833</link><description>F-logic DataCube3 v1.0 is vulnerable to unauthenticated SQL injection, which could allow an unauthenticated malicious actor to execute arbitrary SQL queries in database.</description><pubDate>Wed, 28 Feb 2024 13:44:33 +0000</pubDate></item><item><title>CVE-2024-24708 | WordPress W3SPEEDSTER Plugin &amp;lt;= 7.19 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24708</link><description>Cross-Site Request Forgery (CSRF) vulnerability in W3speedster W3SPEEDSTER.This issue affects W3SPEEDSTER: from n/a through 7.19.</description><pubDate>Wed, 28 Feb 2024 13:30:50 +0000</pubDate></item><item><title>CVE-2024-25930 | WordPress Custom Order Statuses for WooCommerce Plugin &amp;lt;= 1.5.2 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25930</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Nuggethon Custom Order Statuses for WooCommerce.This issue affects Custom Order Statuses for WooCommerce: from n/a through 1.5.2.</description><pubDate>Wed, 28 Feb 2024 13:23:54 +0000</pubDate></item><item><title>CVE-2024-25931 | WordPress Heureka Plugin &amp;lt;= 1.0.8 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25931</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Heureka Group Heureka.This issue affects Heureka: from n/a through 1.0.8.</description><pubDate>Wed, 28 Feb 2024 13:23:54 +0000</pubDate></item><item><title>CVE-2024-25932 | WordPress Change Table Prefix Plugin &amp;lt;= 2.0 is vulnerable to Cross Site Request Forgery (CSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25932</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Manish Kumar Agarwal Change Table Prefix.This issue affects Change Table Prefix: from n/a through 2.0.</description><pubDate>Wed, 28 Feb 2024 13:23:55 +0000</pubDate></item><item><title>CVE-2024-27516 | livehelperchat 4.28v is vulnerable to Server-Side Template Injection (SSTI).</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27516</link><description>livehelperchat 4.28v is vulnerable to Server-Side Template Injection (SSTI).</description><pubDate>Wed, 28 Feb 2024 13:23:55 +0000</pubDate></item><item><title>CVE-2024-27517 | Webasyst 2.9.9 has a Cross-Site Scripting (XSS) vulnerability, Attackers can create blogs containing malicious code after gaining blog permi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27517</link><description>Webasyst 2.9.9 has a Cross-Site Scripting (XSS) vulnerability, Attackers can create blogs containing malicious code after gaining blog permissions.</description><pubDate>Wed, 28 Feb 2024 13:23:55 +0000</pubDate></item><item><title>CVE-2024-24868 | WordPress SP Project &amp;amp; Document Manager Plugin &amp;lt;= 4.69 is vulnerable to SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24868</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Smartypants SP Project &amp; Document Manager.This issue affects SP Project &amp; Document Manager: from n/a through 4.69.</description><pubDate>Wed, 28 Feb 2024 13:16:34 +0000</pubDate></item><item><title>CVE-2024-27515 | Osclass 5.1.2 is vulnerable to SQL Injection.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27515</link><description>Osclass 5.1.2 is vulnerable to SQL Injection.</description><pubDate>Wed, 28 Feb 2024 13:16:34 +0000</pubDate></item><item><title>CVE-2024-25902 | WordPress Malware Scanner Plugin &amp;lt;= 4.7.2 is vulnerable to SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25902</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in miniorange Malware Scanner.This issue affects Malware Scanner: from n/a through 4.7.2.</description><pubDate>Wed, 28 Feb 2024 13:16:35 +0000</pubDate></item><item><title>CVE-2024-25910 | WordPress MoveTo Plugin &amp;lt;= 6.2 is vulnerable to SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25910</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Skymoonlabs MoveTo.This issue affects MoveTo: from n/a through 6.2.</description><pubDate>Wed, 28 Feb 2024 13:16:35 +0000</pubDate></item><item><title>CVE-2024-1808 | The WP Shortcodes Plugin — Shortcodes Ultimate plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'su_qrcode...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1808</link><description>The WP Shortcodes Plugin — Shortcodes Ultimate plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'su_qrcode' shortcode in all versions up to, and including, 7.0.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 28 Feb 2024 13:00:40 +0000</pubDate></item><item><title>CVE-2024-25927 | WordPress postMash – custom post order Plugin &amp;lt;= 1.2.0 is vulnerable to SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25927</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Joel Starnes postMash – custom post order.This issue affects postMash – custom post order: from n/a through 1.2.0.</description><pubDate>Wed, 28 Feb 2024 12:53:42 +0000</pubDate></item><item><title>CVE-2024-1965 | Server-Side Request Forgery Vulnerability in Haivision Products</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1965</link><description>Server-Side Request Forgery vulnerability in Haivision's Aviwest Manager and Aviwest Steamhub. This vulnerability could allow an attacker to enumerate internal network configuration without the need for credentials. An attacker could compromise an internal server and retrieve requests sent by other users.</description><pubDate>Wed, 28 Feb 2024 12:42:04 +0000</pubDate></item><item><title>CVE-2024-21885 | Xorg-x11-server: heap buffer overflow in xisenddevicehierarchyevent</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21885</link><description>A flaw was found in X.Org server. In the XISendDeviceHierarchyEvent function, it is possible to exceed the allocated array length when certain new device IDs are added to the xXIHierarchyInfo struct. This can trigger a heap buffer overflow condition, which may lead to an application crash or remote code execution in SSH X11 forwarding environments.</description><pubDate>Wed, 28 Feb 2024 12:20:16 +0000</pubDate></item><item><title>CVE-2024-21886 | Xorg-x11-server: heap buffer overflow in disabledevice</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21886</link><description>A heap buffer overflow flaw was found in the DisableDevice function in the X.Org server. This issue may lead to an application crash or, in some circumstances, remote code execution in SSH X11 forwarding environments.</description><pubDate>Wed, 28 Feb 2024 12:20:16 +0000</pubDate></item><item><title>CVE-2024-1632 | Incorrect access control in the Sitefinity backend</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1632</link><description>Low-privileged users with access to the Sitefinity backend may obtain sensitive information from the site's administrative area.</description><pubDate>Wed, 28 Feb 2024 12:20:17 +0000</pubDate></item><item><title>CVE-2024-1636 | Potential Cross-Site Scripting (XSS) in the page editing area</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1636</link><description>Potential Cross-Site Scripting (XSS) in the page editing area.</description><pubDate>Wed, 28 Feb 2024 12:20:17 +0000</pubDate></item><item><title>CVE-2024-24772 | Apache Superset: Improper Neutralisation of custom SQL on embedded context</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24772</link><description>A guest user could exploit a chart data REST API and send arbitrary SQL statements that on error could leak information from the underlying analytics database.This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.

Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</description><pubDate>Wed, 28 Feb 2024 11:37:08 +0000</pubDate></item><item><title>CVE-2024-24773 | Apache Superset: Improper validation of SQL statements allows for unauthorized access to data </title><link>https://www.cve.org/CVERecord?id=CVE-2024-24773</link><description>Improper parsing of nested SQL statements on SQLLab would allow authenticated users to surpass their data authorization scope.
This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.

Users are recommended to upgrade to version 3.1.1, which fixes the issue.</description><pubDate>Wed, 28 Feb 2024 11:37:09 +0000</pubDate></item><item><title>CVE-2024-24779 | Apache Superset: Improper data authorization when creating a new dataset</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24779</link><description>Apache Superset with custom roles that include `can write on dataset` and without all data access permissions, allows for users to create virtual datasets to data they don't have access to. These users could then use those virtual datasets to get access to unauthorized data.
This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.

Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</description><pubDate>Wed, 28 Feb 2024 11:37:09 +0000</pubDate></item><item><title>CVE-2024-26016 | Apache Superset: Improper authorization validation on dashboards and charts import</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26016</link><description>A low privilege authenticated user could import an existing dashboard or chart that they do not have access to and then modify its metadata, thereby gaining ownership of the object. However, it's important to note that access to the analytical data of these charts and dashboards would still be subject to validation based on data access privileges.

This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.Users are recommended to upgrade to version 3.1.1, which fixes the issue.</description><pubDate>Wed, 28 Feb 2024 11:37:09 +0000</pubDate></item><item><title>CVE-2024-27315 | Apache Superset: Improper error handling on alerts</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27315</link><description>An authenticated user with privileges to create Alerts on Alerts &amp; Reports has the capability to generate a specially crafted SQL statement that triggers an error on the database. This error is not properly handled by Apache Superset and may inadvertently surface in the error log of the Alert exposing possibly sensitive data.

This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.

Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</description><pubDate>Wed, 28 Feb 2024 10:19:40 +0000</pubDate></item><item><title>CVE-2024-1719 | The Easy PayPal &amp; Stripe Buy Now Button plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and includin...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1719</link><description>The Easy PayPal &amp; Stripe Buy Now Button plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.8.3 and in Contact Form 7 – PayPal &amp; Stripe Add-on all versions up to, and including 2.1. This is due to missing or incorrect nonce validation on the 'wpecpp_stripe_connect_completion' function. This makes it possible for unauthenticated attackers to modify the plugins settings and chance the stripe connection via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 28 Feb 2024 09:40:15 +0000</pubDate></item><item><title>CVE-2024-1860 | The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unautho...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1860</link><description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the antihacker_add_whitelist() function in all versions up to, and including, 4.51. This makes it possible for unauthenticated attackers to add their IP Address to the whitelist circumventing protection</description><pubDate>Wed, 28 Feb 2024 09:40:16 +0000</pubDate></item><item><title>CVE-2024-1861 | The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unautho...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1861</link><description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the antihacker_truncate_scan_table() function in all versions up to, and including, 4.52. This makes it possible for authenticated attackers, with subscriber-level access and above, to truncate the scan table.</description><pubDate>Wed, 28 Feb 2024 09:40:16 +0000</pubDate></item><item><title>CVE-2023-6922 | The Under Construction / Maintenance Mode from Acurax plugin for WordPress is vulnerable to Sensitive Information Exposure in versions up to...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6922</link><description>The Under Construction / Maintenance Mode from Acurax plugin for WordPress is vulnerable to Sensitive Information Exposure in versions up to, and including, 2.6 via the 'acx_csma_subscribe_ajax' function. This can allow authenticated attackers to extract sensitive data such as names and email addresses of subscribed visitors.</description><pubDate>Wed, 28 Feb 2024 08:40:39 +0000</pubDate></item><item><title>CVE-2024-0431 | The Gestpay for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 20221130....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0431</link><description>The Gestpay for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 20221130. This is due to missing or incorrect nonce validation on the 'ajax_set_default_card' function. This makes it possible for unauthenticated attackers to set the default card token for a user via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 28 Feb 2024 08:40:39 +0000</pubDate></item><item><title>CVE-2024-0432 | The Gestpay for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 20221130....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0432</link><description>The Gestpay for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 20221130. This is due to missing or incorrect nonce validation on the 'ajax_delete_card' function. This makes it possible for unauthenticated attackers to delete the default card token for a user via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 28 Feb 2024 08:40:40 +0000</pubDate></item><item><title>CVE-2024-0433 | The Gestpay for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 20221130....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0433</link><description>The Gestpay for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 20221130. This is due to missing or incorrect nonce validation on the 'ajax_unset_default_card' function. This makes it possible for unauthenticated attackers to remove the default status of a card token for a user via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 28 Feb 2024 08:40:40 +0000</pubDate></item><item><title>CVE-2024-0680 | The WP Private Content Plus plugin for WordPress is vulnerable to information disclosure in all versions up to, and including, 3.6. This is ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0680</link><description>The WP Private Content Plus plugin for WordPress is vulnerable to information disclosure in all versions up to, and including, 3.6. This is due to the plugin not properly restricting access to posts via the REST API when a page has been made private. This makes it possible for unauthenticated attackers to view protected posts.</description><pubDate>Wed, 28 Feb 2024 08:40:41 +0000</pubDate></item><item><title>CVE-2024-0682 | The Page Restrict plugin for WordPress is vulnerable to information disclosure in all versions up to, and including, 2.5.5. This is due to t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0682</link><description>The Page Restrict plugin for WordPress is vulnerable to information disclosure in all versions up to, and including, 2.5.5. This is due to the plugin not properly restricting access to posts via the REST API when a page has been made private. This makes it possible for unauthenticated attackers to view protected posts.</description><pubDate>Wed, 28 Feb 2024 08:40:41 +0000</pubDate></item><item><title>CVE-2024-0766 | The Envo's Elementor Templates &amp; Widgets for WooCommerce plugin for WordPress is vulnerable to unauthorized modification of data due to a mi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0766</link><description>The Envo's Elementor Templates &amp; Widgets for WooCommerce plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the templates_ajax_request function in all versions up to, and including, 1.4.4. This makes it possible for subscribers and higher to create templates.</description><pubDate>Wed, 28 Feb 2024 08:40:41 +0000</pubDate></item><item><title>CVE-2024-0767 | The Envo's Elementor Templates &amp; Widgets for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in versions up to,...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0767</link><description>The Envo's Elementor Templates &amp; Widgets for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in versions up to, and including, 1.4.4. This is due to missing or incorrect nonce validation on the ajax_plugin_activation function. This makes it possible for unauthenticated attackers to activate arbitrary installed plugins via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 28 Feb 2024 08:40:42 +0000</pubDate></item><item><title>CVE-2024-0768 | The Envo's Elementor Templates &amp; Widgets for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in versions up to ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0768</link><description>The Envo's Elementor Templates &amp; Widgets for WooCommerce plugin for WordPress is vulnerable to Cross-Site Request Forgery in versions up to and including 1.4.4. This is due to missing or incorrect nonce validation on the ajax_theme_activation function. This makes it possible for unauthenticated attackers to activate arbitrary installed themes via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 28 Feb 2024 08:40:42 +0000</pubDate></item><item><title>CVE-2024-0786 | The Conversios – Google Analytics 4 (GA4), Meta Pixel &amp; more Via Google Tag Manager For WooCommerce plugin for WordPress is vulnerable to ti...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0786</link><description>The Conversios – Google Analytics 4 (GA4), Meta Pixel &amp; more Via Google Tag Manager For WooCommerce plugin for WordPress is vulnerable to time-based SQL Injection via the ee_syncProductCategory function using the parameters conditionData, valueData, productArray, exclude and include in all versions up to, and including, 6.9.1 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with subscriber access or higher, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Wed, 28 Feb 2024 08:40:43 +0000</pubDate></item><item><title>CVE-2024-0975 | The WordPress Access Control plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 4.0....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0975</link><description>The WordPress Access Control plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 4.0.13  via the REST API. This makes it possible for unauthenticated attackers to bypass the plugin's "Make Website Members Only" feature (when unset) and view restricted page and post content.</description><pubDate>Wed, 28 Feb 2024 08:40:43 +0000</pubDate></item><item><title>CVE-2024-1136 | The Coming Soon Page &amp; Maintenance Mode plugin for WordPress is vulnerable to unauthorized access of data due to an improperly implemented U...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1136</link><description>The Coming Soon Page &amp; Maintenance Mode plugin for WordPress is vulnerable to unauthorized access of data due to an improperly implemented URL check in the wpsm_coming_soon_redirect function in all versions up to, and including, 2.2.1. This makes it possible for unauthenticated attackers to view a site with maintenance mode or coming-soon mode enabled to view the site's content.</description><pubDate>Wed, 28 Feb 2024 08:40:43 +0000</pubDate></item><item><title>CVE-2024-1368 | The Page Duplicator plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the duplica...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1368</link><description>The Page Duplicator plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the duplicate_dat_page() function in all versions up to, and including, 0.1.1. This makes it possible for unauthenticated attackers to duplicate arbitrary posts and pages.</description><pubDate>Wed, 28 Feb 2024 08:40:44 +0000</pubDate></item><item><title>CVE-2024-1476 | The Under Construction / Maintenance Mode from Acurax plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions u...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1476</link><description>The Under Construction / Maintenance Mode from Acurax plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 2.6 via the REST API. This makes it possible for unauthenticated attackers to obtain the contents of posts and pages when maintenance mode is active thus bypassing the protection provided by the plugin.</description><pubDate>Wed, 28 Feb 2024 08:40:44 +0000</pubDate></item><item><title>CVE-2024-1514 | The WP eCommerce plugin for WordPress is vulnerable to time-based blind SQL Injection via the 'cart_contents' parameter in all versions up t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1514</link><description>The WP eCommerce plugin for WordPress is vulnerable to time-based blind SQL Injection via the 'cart_contents' parameter in all versions up to, and including, 3.15.1 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Wed, 28 Feb 2024 08:40:45 +0000</pubDate></item><item><title>CVE-2024-1516 | The WP eCommerce plugin for WordPress is vulnerable to unauthorized arbitrary post creation due to a missing capability check on the check_f...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1516</link><description>The WP eCommerce plugin for WordPress is vulnerable to unauthorized arbitrary post creation due to a missing capability check on the check_for_saas_push() function in all versions up to, and including, 3.15.1. This makes it possible for unauthenticated attackers to create arbitrary posts with arbitrary content.</description><pubDate>Wed, 28 Feb 2024 08:40:45 +0000</pubDate></item><item><title>CVE-2024-1566 | The Redirects plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the save function...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1566</link><description>The Redirects plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the save function in all versions up to, and including, 1.2.1. This makes it possible for unauthenticated attackers to change redirects created with this plugin. This could lead to undesired redirection to phishing sites or malicious web pages.</description><pubDate>Wed, 28 Feb 2024 08:40:45 +0000</pubDate></item><item><title>CVE-2024-1791 | The CodeMirror Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Code Mirror block in all versions up to, and...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1791</link><description>The CodeMirror Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Code Mirror block in all versions up to, and including, 1.2.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 28 Feb 2024 08:40:46 +0000</pubDate></item><item><title>CVE-2024-1954 | The Oliver POS – A WooCommerce Point of Sale (POS) plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1954</link><description>The Oliver POS – A WooCommerce Point of Sale (POS) plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 2.4.1.8. This is due to missing or incorrect nonce validation in the includes/class-pos-bridge-install.php file. This makes it possible for unauthenticated attackers to perform several unauthorized actions like deactivating the plugin, disconnecting the subscription, syncing the status and more via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 28 Feb 2024 08:40:46 +0000</pubDate></item><item><title>CVE-2024-22459 | Dell ECS, versions 3.6 through 3.6.2.5, and 3.7 through 3.7.0.6, and 3.8 through 3.8.0.4 versions, contain an improper access control vulner...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22459</link><description>Dell ECS, versions 3.6 through 3.6.2.5, and 3.7 through 3.7.0.6, and 3.8 through 3.8.0.4 versions, contain an improper access control vulnerability. A remote high privileged attacker could potentially exploit this vulnerability, leading to unauthorized access to all buckets and their data within a namespace</description><pubDate>Wed, 28 Feb 2024 08:33:33 +0000</pubDate></item><item><title>CVE-2020-36778 | i2c: xiic: fix reference leak when pm_runtime_get_sync fails</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36778</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: xiic: fix reference leak when pm_runtime_get_sync fails

The PM reference count is not expected to be incremented on
return in xiic_xfer and xiic_i2c_remove.

However, pm_runtime_get_sync will increment the PM reference
count even failed. Forgetting to putting operation will result
in a reference leak here.

Replace it with pm_runtime_resume_and_get to keep usage
counter balanced.</description><pubDate>Wed, 28 Feb 2024 08:26:26 +0000</pubDate></item><item><title>CVE-2020-36779 | i2c: stm32f7: fix reference leak when pm_runtime_get_sync fails</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36779</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: stm32f7: fix reference leak when pm_runtime_get_sync fails

The PM reference count is not expected to be incremented on
return in these stm32f7_i2c_xx serious functions.

However, pm_runtime_get_sync will increment the PM reference
count even failed. Forgetting to putting operation will result
in a reference leak here.

Replace it with pm_runtime_resume_and_get to keep usage
counter balanced.</description><pubDate>Wed, 28 Feb 2024 08:26:26 +0000</pubDate></item><item><title>CVE-2020-36780 | i2c: sprd: fix reference leak when pm_runtime_get_sync fails</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36780</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: sprd: fix reference leak when pm_runtime_get_sync fails

The PM reference count is not expected to be incremented on
return in sprd_i2c_master_xfer() and sprd_i2c_remove().

However, pm_runtime_get_sync will increment the PM reference
count even failed. Forgetting to putting operation will result
in a reference leak here.

Replace it with pm_runtime_resume_and_get to keep usage
counter balanced.</description><pubDate>Wed, 28 Feb 2024 08:26:27 +0000</pubDate></item><item><title>CVE-2020-36781 | i2c: imx: fix reference leak when pm_runtime_get_sync fails</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36781</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: imx: fix reference leak when pm_runtime_get_sync fails

In i2c_imx_xfer() and i2c_imx_remove(), the pm reference count
is not expected to be incremented on return.

However, pm_runtime_get_sync will increment pm reference count
even failed. Forgetting to putting operation will result in a
reference leak here.

Replace it with pm_runtime_resume_and_get to keep usage
counter balanced.</description><pubDate>Wed, 28 Feb 2024 08:26:27 +0000</pubDate></item><item><title>CVE-2020-36782 | i2c: imx-lpi2c: fix reference leak when pm_runtime_get_sync fails</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36782</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: imx-lpi2c: fix reference leak when pm_runtime_get_sync fails

The PM reference count is not expected to be incremented on
return in lpi2c_imx_master_enable.

However, pm_runtime_get_sync will increment the PM reference
count even failed. Forgetting to putting operation will result
in a reference leak here.

Replace it with pm_runtime_resume_and_get to keep usage
counter balanced.</description><pubDate>Wed, 28 Feb 2024 08:26:28 +0000</pubDate></item><item><title>CVE-2020-36783 | i2c: img-scb: fix reference leak when pm_runtime_get_sync fails</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36783</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: img-scb: fix reference leak when pm_runtime_get_sync fails

The PM reference count is not expected to be incremented on
return in functions img_i2c_xfer and img_i2c_init.

However, pm_runtime_get_sync will increment the PM reference
count even failed. Forgetting to putting operation will result
in a reference leak here.

Replace it with pm_runtime_resume_and_get to keep usage
counter balanced.</description><pubDate>Wed, 28 Feb 2024 08:26:28 +0000</pubDate></item><item><title>CVE-2020-36784 | i2c: cadence: fix reference leak when pm_runtime_get_sync fails</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36784</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: cadence: fix reference leak when pm_runtime_get_sync fails

The PM reference count is not expected to be incremented on
return in functions cdns_i2c_master_xfer and cdns_reg_slave.

However, pm_runtime_get_sync will increment pm usage counter
even failed. Forgetting to putting operation will result in a
reference leak here.

Replace it with pm_runtime_resume_and_get to keep usage
counter balanced.</description><pubDate>Wed, 28 Feb 2024 08:26:28 +0000</pubDate></item><item><title>CVE-2020-36785 | media: atomisp: Fix use after free in atomisp_alloc_css_stat_bufs()</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36785</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: atomisp: Fix use after free in atomisp_alloc_css_stat_bufs()

The "s3a_buf" is freed along with all the other items on the
"asd-&gt;s3a_stats" list.  It leads to a double free and a use after free.</description><pubDate>Wed, 28 Feb 2024 08:26:29 +0000</pubDate></item><item><title>CVE-2020-36786 | media: [next] staging: media: atomisp: fix memory leak of object flash</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36786</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: [next] staging: media: atomisp: fix memory leak of object flash

In the case where the call to lm3554_platform_data_func returns an
error there is a memory leak on the error return path of object
flash.  Fix this by adding an error return path that will free
flash and rename labels fail2 to fail3 and fail1 to fail2.</description><pubDate>Wed, 28 Feb 2024 08:26:29 +0000</pubDate></item><item><title>CVE-2020-36787 | media: aspeed: fix clock handling logic</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36787</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: aspeed: fix clock handling logic

Video engine uses eclk and vclk for its clock sources and its reset
control is coupled with eclk so the current clock enabling sequence works
like below.

 Enable eclk
 De-assert Video Engine reset
 10ms delay
 Enable vclk

It introduces improper reset on the Video Engine hardware and eventually
the hardware generates unexpected DMA memory transfers that can corrupt
memory region in random and sporadic patterns. This issue is observed
very rarely on some specific AST2500 SoCs but it causes a critical
kernel panic with making a various shape of signature so it's extremely
hard to debug. Moreover, the issue is observed even when the video
engine is not actively used because udevd turns on the video engine
hardware for a short time to make a query in every boot.

To fix this issue, this commit changes the clock handling logic to make
the reset de-assertion triggered after enabling both eclk and vclk. Also,
it adds clk_unprepare call for a case when probe fails.

clk: ast2600: fix reset settings for eclk and vclk
Video engine reset setting should be coupled with eclk to match it
with the setting for previous Aspeed SoCs which is defined in
clk-aspeed.c since all Aspeed SoCs are sharing a single video engine
driver. Also, reset bit 6 is defined as 'Video Engine' reset in
datasheet so it should be de-asserted when eclk is enabled. This
commit fixes the setting.</description><pubDate>Wed, 28 Feb 2024 08:26:30 +0000</pubDate></item><item><title>CVE-2021-46976 | drm/i915: Fix crash in auto_retire</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46976</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/i915: Fix crash in auto_retire

The retire logic uses the 2 lower bits of the pointer to the retire
function to store flags. However, the auto_retire function is not
guaranteed to be aligned to a multiple of 4, which causes crashes as
we jump to the wrong address, for example like this:

2021-04-24T18:03:53.804300Z WARNING kernel: [  516.876901] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
2021-04-24T18:03:53.804310Z WARNING kernel: [  516.876906] CPU: 7 PID: 146 Comm: kworker/u16:6 Tainted: G     U            5.4.105-13595-g3cd84167b2df #1
2021-04-24T18:03:53.804311Z WARNING kernel: [  516.876907] Hardware name: Google Volteer2/Volteer2, BIOS Google_Volteer2.13672.76.0 02/22/2021
2021-04-24T18:03:53.804312Z WARNING kernel: [  516.876911] Workqueue: events_unbound active_work
2021-04-24T18:03:53.804313Z WARNING kernel: [  516.876914] RIP: 0010:auto_retire+0x1/0x20
2021-04-24T18:03:53.804314Z WARNING kernel: [  516.876916] Code: e8 01 f2 ff ff eb 02 31 db 48 89 d8 5b 5d c3 0f 1f 44 00 00 55 48 89 e5 f0 ff 87 c8 00 00 00 0f 88 ab 47 4a 00 31 c0 5d c3 0f &lt;1f&gt; 44 00 00 55 48 89 e5 f0 ff 8f c8 00 00 00 0f 88 9a 47 4a 00 74
2021-04-24T18:03:53.804319Z WARNING kernel: [  516.876918] RSP: 0018:ffff9b4d809fbe38 EFLAGS: 00010286
2021-04-24T18:03:53.804320Z WARNING kernel: [  516.876919] RAX: 0000000000000007 RBX: ffff927915079600 RCX: 0000000000000007
2021-04-24T18:03:53.804320Z WARNING kernel: [  516.876921] RDX: ffff9b4d809fbe40 RSI: 0000000000000286 RDI: ffff927915079600
2021-04-24T18:03:53.804321Z WARNING kernel: [  516.876922] RBP: ffff9b4d809fbe68 R08: 8080808080808080 R09: fefefefefefefeff
2021-04-24T18:03:53.804321Z WARNING kernel: [  516.876924] R10: 0000000000000010 R11: ffffffff92e44bd8 R12: ffff9279150796a0
2021-04-24T18:03:53.804322Z WARNING kernel: [  516.876925] R13: ffff92791c368180 R14: ffff927915079640 R15: 000000001c867605
2021-04-24T18:03:53.804323Z WARNING kernel: [  516.876926] FS:  0000000000000000(0000) GS:ffff92791ffc0000(0000) knlGS:0000000000000000
2021-04-24T18:03:53.804323Z WARNING kernel: [  516.876928] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
2021-04-24T18:03:53.804324Z WARNING kernel: [  516.876929] CR2: 0000239514955000 CR3: 00000007f82da001 CR4: 0000000000760ee0
2021-04-24T18:03:53.804325Z WARNING kernel: [  516.876930] PKRU: 55555554
2021-04-24T18:03:53.804325Z WARNING kernel: [  516.876931] Call Trace:
2021-04-24T18:03:53.804326Z WARNING kernel: [  516.876935]  __active_retire+0x77/0xcf
2021-04-24T18:03:53.804326Z WARNING kernel: [  516.876939]  process_one_work+0x1da/0x394
2021-04-24T18:03:53.804327Z WARNING kernel: [  516.876941]  worker_thread+0x216/0x375
2021-04-24T18:03:53.804327Z WARNING kernel: [  516.876944]  kthread+0x147/0x156
2021-04-24T18:03:53.804335Z WARNING kernel: [  516.876946]  ? pr_cont_work+0x58/0x58
2021-04-24T18:03:53.804335Z WARNING kernel: [  516.876948]  ? kthread_blkcg+0x2e/0x2e
2021-04-24T18:03:53.804336Z WARNING kernel: [  516.876950]  ret_from_fork+0x1f/0x40
2021-04-24T18:03:53.804336Z WARNING kernel: [  516.876952] Modules linked in: cdc_mbim cdc_ncm cdc_wdm xt_cgroup rfcomm cmac algif_hash algif_skcipher af_alg xt_MASQUERADE uinput snd_soc_rt5682_sdw snd_soc_rt5682 snd_soc_max98373_sdw snd_soc_max98373 snd_soc_rl6231 regmap_sdw snd_soc_sof_sdw snd_soc_hdac_hdmi snd_soc_dmic snd_hda_codec_hdmi snd_sof_pci snd_sof_intel_hda_common intel_ipu6_psys snd_sof_xtensa_dsp soundwire_intel soundwire_generic_allocation soundwire_cadence snd_sof_intel_hda snd_sof snd_soc_hdac_hda snd_soc_acpi_intel_match snd_soc_acpi snd_hda_ext_core soundwire_bus snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hwdep snd_hda_core intel_ipu6_isys videobuf2_dma_contig videobuf2_v4l2 videobuf2_common videobuf2_memops mei_hdcp intel_ipu6 ov2740 ov8856 at24 sx9310 dw9768 v4l2_fwnode cros_ec_typec intel_pmc_mux roles acpi_als typec fuse iio_trig_sysfs cros_ec_light_prox cros_ec_lid_angle cros_ec_sensors cros
---truncated---</description><pubDate>Wed, 28 Feb 2024 08:26:30 +0000</pubDate></item><item><title>CVE-2021-46977 | KVM: VMX: Disable preemption when probing user return MSRs</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46977</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: VMX: Disable preemption when probing user return MSRs

Disable preemption when probing a user return MSR via RDSMR/WRMSR.  If
the MSR holds a different value per logical CPU, the WRMSR could corrupt
the host's value if KVM is preempted between the RDMSR and WRMSR, and
then rescheduled on a different CPU.

Opportunistically land the helper in common x86, SVM will use the helper
in a future commit.</description><pubDate>Wed, 28 Feb 2024 08:26:31 +0000</pubDate></item><item><title>CVE-2021-46978 | KVM: nVMX: Always make an attempt to map eVMCS after migration</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46978</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: nVMX: Always make an attempt to map eVMCS after migration

When enlightened VMCS is in use and nested state is migrated with
vmx_get_nested_state()/vmx_set_nested_state() KVM can't map evmcs
page right away: evmcs gpa is not 'struct kvm_vmx_nested_state_hdr'
and we can't read it from VP assist page because userspace may decide
to restore HV_X64_MSR_VP_ASSIST_PAGE after restoring nested state
(and QEMU, for example, does exactly that). To make sure eVMCS is
mapped /vmx_set_nested_state() raises KVM_REQ_GET_NESTED_STATE_PAGES
request.

Commit f2c7ef3ba955 ("KVM: nSVM: cancel KVM_REQ_GET_NESTED_STATE_PAGES
on nested vmexit") added KVM_REQ_GET_NESTED_STATE_PAGES clearing to
nested_vmx_vmexit() to make sure MSR permission bitmap is not switched
when an immediate exit from L2 to L1 happens right after migration (caused
by a pending event, for example). Unfortunately, in the exact same
situation we still need to have eVMCS mapped so
nested_sync_vmcs12_to_shadow() reflects changes in VMCS12 to eVMCS.

As a band-aid, restore nested_get_evmcs_page() when clearing
KVM_REQ_GET_NESTED_STATE_PAGES in nested_vmx_vmexit(). The 'fix' is far
from being ideal as we can't easily propagate possible failures and even if
we could, this is most likely already too late to do so. The whole
'KVM_REQ_GET_NESTED_STATE_PAGES' idea for mapping eVMCS after migration
seems to be fragile as we diverge too much from the 'native' path when
vmptr loading happens on vmx_set_nested_state().</description><pubDate>Wed, 28 Feb 2024 08:26:31 +0000</pubDate></item><item><title>CVE-2021-46979 | iio: core: fix ioctl handlers removal</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46979</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: core: fix ioctl handlers removal

Currently ioctl handlers are removed twice. For the first time during
iio_device_unregister() then later on inside
iio_device_unregister_eventset() and iio_buffers_free_sysfs_and_mask().
Double free leads to kernel panic.

Fix this by not touching ioctl handlers list directly but rather
letting code responsible for registration call the matching cleanup
routine itself.</description><pubDate>Wed, 28 Feb 2024 08:26:31 +0000</pubDate></item><item><title>CVE-2021-46980 | usb: typec: ucsi: Retrieve all the PDOs instead of just the first 4</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46980</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: typec: ucsi: Retrieve all the PDOs instead of just the first 4

commit 4dbc6a4ef06d ("usb: typec: ucsi: save power data objects
in PD mode") introduced retrieval of the PDOs when connected to a
PD-capable source. But only the first 4 PDOs are received since
that is the maximum number that can be fetched at a time given the
MESSAGE_IN length limitation (16 bytes). However, as per the PD spec
a connected source may advertise up to a maximum of 7 PDOs.

If such a source is connected it's possible the PPM could have
negotiated a power contract with one of the PDOs at index greater
than 4, and would be reflected in the request data object's (RDO)
object position field. This would result in an out-of-bounds access
when the rdo_index() is used to index into the src_pdos array in
ucsi_psy_get_voltage_now().

With the help of the UBSAN -fsanitize=array-bounds checker enabled
this exact issue is revealed when connecting to a PD source adapter
that advertise 5 PDOs and the PPM enters a contract having selected
the 5th one.

[  151.545106][   T70] Unexpected kernel BRK exception at EL1
[  151.545112][   T70] Internal error: BRK handler: f2005512 [#1] PREEMPT SMP
...
[  151.545499][   T70] pc : ucsi_psy_get_prop+0x208/0x20c
[  151.545507][   T70] lr : power_supply_show_property+0xc0/0x328
...
[  151.545542][   T70] Call trace:
[  151.545544][   T70]  ucsi_psy_get_prop+0x208/0x20c
[  151.545546][   T70]  power_supply_uevent+0x1a4/0x2f0
[  151.545550][   T70]  dev_uevent+0x200/0x384
[  151.545555][   T70]  kobject_uevent_env+0x1d4/0x7e8
[  151.545557][   T70]  power_supply_changed_work+0x174/0x31c
[  151.545562][   T70]  process_one_work+0x244/0x6f0
[  151.545564][   T70]  worker_thread+0x3e0/0xa64

We can resolve this by instead retrieving and storing up to the
maximum of 7 PDOs in the con-&gt;src_pdos array. This would involve
two calls to the GET_PDOS command.</description><pubDate>Wed, 28 Feb 2024 08:26:32 +0000</pubDate></item><item><title>CVE-2021-46981 | nbd: Fix NULL pointer in flush_workqueue</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46981</link><description>In the Linux kernel, the following vulnerability has been resolved:

nbd: Fix NULL pointer in flush_workqueue

Open /dev/nbdX first, the config_refs will be 1 and
the pointers in nbd_device are still null. Disconnect
/dev/nbdX, then reference a null recv_workq. The
protection by config_refs in nbd_genl_disconnect is useless.

[  656.366194] BUG: kernel NULL pointer dereference, address: 0000000000000020
[  656.368943] #PF: supervisor write access in kernel mode
[  656.369844] #PF: error_code(0x0002) - not-present page
[  656.370717] PGD 10cc87067 P4D 10cc87067 PUD 1074b4067 PMD 0
[  656.371693] Oops: 0002 [#1] SMP
[  656.372242] CPU: 5 PID: 7977 Comm: nbd-client Not tainted 5.11.0-rc5-00040-g76c057c84d28 #1
[  656.373661] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04/01/2014
[  656.375904] RIP: 0010:mutex_lock+0x29/0x60
[  656.376627] Code: 00 0f 1f 44 00 00 55 48 89 fd 48 83 05 6f d7 fe 08 01 e8 7a c3 ff ff 48 83 05 6a d7 fe 08 01 31 c0 65 48 8b 14 25 00 6d 01 00 &lt;f0&gt; 48 0f b1 55 d
[  656.378934] RSP: 0018:ffffc900005eb9b0 EFLAGS: 00010246
[  656.379350] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
[  656.379915] RDX: ffff888104cf2600 RSI: ffffffffaae8f452 RDI: 0000000000000020
[  656.380473] RBP: 0000000000000020 R08: 0000000000000000 R09: ffff88813bd6b318
[  656.381039] R10: 00000000000000c7 R11: fefefefefefefeff R12: ffff888102710b40
[  656.381599] R13: ffffc900005eb9e0 R14: ffffffffb2930680 R15: ffff88810770ef00
[  656.382166] FS:  00007fdf117ebb40(0000) GS:ffff88813bd40000(0000) knlGS:0000000000000000
[  656.382806] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  656.383261] CR2: 0000000000000020 CR3: 0000000100c84000 CR4: 00000000000006e0
[  656.383819] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[  656.384370] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[  656.384927] Call Trace:
[  656.385111]  flush_workqueue+0x92/0x6c0
[  656.385395]  nbd_disconnect_and_put+0x81/0xd0
[  656.385716]  nbd_genl_disconnect+0x125/0x2a0
[  656.386034]  genl_family_rcv_msg_doit.isra.0+0x102/0x1b0
[  656.386422]  genl_rcv_msg+0xfc/0x2b0
[  656.386685]  ? nbd_ioctl+0x490/0x490
[  656.386954]  ? genl_family_rcv_msg_doit.isra.0+0x1b0/0x1b0
[  656.387354]  netlink_rcv_skb+0x62/0x180
[  656.387638]  genl_rcv+0x34/0x60
[  656.387874]  netlink_unicast+0x26d/0x590
[  656.388162]  netlink_sendmsg+0x398/0x6c0
[  656.388451]  ? netlink_rcv_skb+0x180/0x180
[  656.388750]  ____sys_sendmsg+0x1da/0x320
[  656.389038]  ? ____sys_recvmsg+0x130/0x220
[  656.389334]  ___sys_sendmsg+0x8e/0xf0
[  656.389605]  ? ___sys_recvmsg+0xa2/0xf0
[  656.389889]  ? handle_mm_fault+0x1671/0x21d0
[  656.390201]  __sys_sendmsg+0x6d/0xe0
[  656.390464]  __x64_sys_sendmsg+0x23/0x30
[  656.390751]  do_syscall_64+0x45/0x70
[  656.391017]  entry_SYSCALL_64_after_hwframe+0x44/0xa9

To fix it, just add if (nbd-&gt;recv_workq) to nbd_disconnect_and_put().</description><pubDate>Wed, 28 Feb 2024 08:26:32 +0000</pubDate></item><item><title>CVE-2021-46982 | f2fs: compress: fix race condition of overwrite vs truncate</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46982</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: compress: fix race condition of overwrite vs truncate

pos_fsstress testcase complains a panic as belew:

------------[ cut here ]------------
kernel BUG at fs/f2fs/compress.c:1082!
invalid opcode: 0000 [#1] SMP PTI
CPU: 4 PID: 2753477 Comm: kworker/u16:2 Tainted: G           OE     5.12.0-rc1-custom #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014
Workqueue: writeback wb_workfn (flush-252:16)
RIP: 0010:prepare_compress_overwrite+0x4c0/0x760 [f2fs]
Call Trace:
 f2fs_prepare_compress_overwrite+0x5f/0x80 [f2fs]
 f2fs_write_cache_pages+0x468/0x8a0 [f2fs]
 f2fs_write_data_pages+0x2a4/0x2f0 [f2fs]
 do_writepages+0x38/0xc0
 __writeback_single_inode+0x44/0x2a0
 writeback_sb_inodes+0x223/0x4d0
 __writeback_inodes_wb+0x56/0xf0
 wb_writeback+0x1dd/0x290
 wb_workfn+0x309/0x500
 process_one_work+0x220/0x3c0
 worker_thread+0x53/0x420
 kthread+0x12f/0x150
 ret_from_fork+0x22/0x30

The root cause is truncate() may race with overwrite as below,
so that one reference count left in page can not guarantee the
page attaching in mapping tree all the time, after truncation,
later find_lock_page() may return NULL pointer.

- prepare_compress_overwrite
 - f2fs_pagecache_get_page
 - unlock_page
					- f2fs_setattr
					 - truncate_setsize
					  - truncate_inode_page
					   - delete_from_page_cache
 - find_lock_page

Fix this by avoiding referencing updated page.</description><pubDate>Wed, 28 Feb 2024 08:26:33 +0000</pubDate></item><item><title>CVE-2021-46983 | nvmet-rdma: Fix NULL deref when SEND is completed with error</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46983</link><description>In the Linux kernel, the following vulnerability has been resolved:

nvmet-rdma: Fix NULL deref when SEND is completed with error

When running some traffic and taking down the link on peer, a
retry counter exceeded error is received. This leads to
nvmet_rdma_error_comp which tried accessing the cq_context to
obtain the queue. The cq_context is no longer valid after the
fix to use shared CQ mechanism and should be obtained similar
to how it is obtained in other functions from the wc-&gt;qp.

[ 905.786331] nvmet_rdma: SEND for CQE 0x00000000e3337f90 failed with status transport retry counter exceeded (12).
[ 905.832048] BUG: unable to handle kernel NULL pointer dereference at 0000000000000048
[ 905.839919] PGD 0 P4D 0
[ 905.842464] Oops: 0000 1 SMP NOPTI
[ 905.846144] CPU: 13 PID: 1557 Comm: kworker/13:1H Kdump: loaded Tainted: G OE --------- - - 4.18.0-304.el8.x86_64 #1
[ 905.872135] RIP: 0010:nvmet_rdma_error_comp+0x5/0x1b [nvmet_rdma]
[ 905.878259] Code: 19 4f c0 e8 89 b3 a5 f6 e9 5b e0 ff ff 0f b7 75 14 4c 89 ea 48 c7 c7 08 1a 4f c0 e8 71 b3 a5 f6 e9 4b e0 ff ff 0f 1f 44 00 00 &lt;48&gt; 8b 47 48 48 85 c0 74 08 48 89 c7 e9 98 bf 49 00 e9 c3 e3 ff ff
[ 905.897135] RSP: 0018:ffffab601c45fe28 EFLAGS: 00010246
[ 905.902387] RAX: 0000000000000065 RBX: ffff9e729ea2f800 RCX: 0000000000000000
[ 905.909558] RDX: 0000000000000000 RSI: ffff9e72df9567c8 RDI: 0000000000000000
[ 905.916731] RBP: ffff9e729ea2b400 R08: 000000000000074d R09: 0000000000000074
[ 905.923903] R10: 0000000000000000 R11: ffffab601c45fcc0 R12: 0000000000000010
[ 905.931074] R13: 0000000000000000 R14: 0000000000000010 R15: ffff9e729ea2f400
[ 905.938247] FS: 0000000000000000(0000) GS:ffff9e72df940000(0000) knlGS:0000000000000000
[ 905.938249] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 905.950067] nvmet_rdma: SEND for CQE 0x00000000c7356cca failed with status transport retry counter exceeded (12).
[ 905.961855] CR2: 0000000000000048 CR3: 000000678d010004 CR4: 00000000007706e0
[ 905.961855] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[ 905.961856] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[ 905.961857] PKRU: 55555554
[ 906.010315] Call Trace:
[ 906.012778] __ib_process_cq+0x89/0x170 [ib_core]
[ 906.017509] ib_cq_poll_work+0x26/0x80 [ib_core]
[ 906.022152] process_one_work+0x1a7/0x360
[ 906.026182] ? create_worker+0x1a0/0x1a0
[ 906.030123] worker_thread+0x30/0x390
[ 906.033802] ? create_worker+0x1a0/0x1a0
[ 906.037744] kthread+0x116/0x130
[ 906.040988] ? kthread_flush_work_fn+0x10/0x10
[ 906.045456] ret_from_fork+0x1f/0x40</description><pubDate>Wed, 28 Feb 2024 08:26:33 +0000</pubDate></item><item><title>CVE-2021-46984 | kyber: fix out of bounds access when preempted</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46984</link><description>In the Linux kernel, the following vulnerability has been resolved:

kyber: fix out of bounds access when preempted

__blk_mq_sched_bio_merge() gets the ctx and hctx for the current CPU and
passes the hctx to -&gt;bio_merge(). kyber_bio_merge() then gets the ctx
for the current CPU again and uses that to get the corresponding Kyber
context in the passed hctx. However, the thread may be preempted between
the two calls to blk_mq_get_ctx(), and the ctx returned the second time
may no longer correspond to the passed hctx. This "works" accidentally
most of the time, but it can cause us to read garbage if the second ctx
came from an hctx with more ctx's than the first one (i.e., if
ctx-&gt;index_hw[hctx-&gt;type] &gt; hctx-&gt;nr_ctx).

This manifested as this UBSAN array index out of bounds error reported
by Jakub:

UBSAN: array-index-out-of-bounds in ../kernel/locking/qspinlock.c:130:9
index 13106 is out of range for type 'long unsigned int [128]'
Call Trace:
 dump_stack+0xa4/0xe5
 ubsan_epilogue+0x5/0x40
 __ubsan_handle_out_of_bounds.cold.13+0x2a/0x34
 queued_spin_lock_slowpath+0x476/0x480
 do_raw_spin_lock+0x1c2/0x1d0
 kyber_bio_merge+0x112/0x180
 blk_mq_submit_bio+0x1f5/0x1100
 submit_bio_noacct+0x7b0/0x870
 submit_bio+0xc2/0x3a0
 btrfs_map_bio+0x4f0/0x9d0
 btrfs_submit_data_bio+0x24e/0x310
 submit_one_bio+0x7f/0xb0
 submit_extent_page+0xc4/0x440
 __extent_writepage_io+0x2b8/0x5e0
 __extent_writepage+0x28d/0x6e0
 extent_write_cache_pages+0x4d7/0x7a0
 extent_writepages+0xa2/0x110
 do_writepages+0x8f/0x180
 __writeback_single_inode+0x99/0x7f0
 writeback_sb_inodes+0x34e/0x790
 __writeback_inodes_wb+0x9e/0x120
 wb_writeback+0x4d2/0x660
 wb_workfn+0x64d/0xa10
 process_one_work+0x53a/0xa80
 worker_thread+0x69/0x5b0
 kthread+0x20b/0x240
 ret_from_fork+0x1f/0x30

Only Kyber uses the hctx, so fix it by passing the request_queue to
-&gt;bio_merge() instead. BFQ and mq-deadline just use that, and Kyber can
map the queues itself to avoid the mismatch.</description><pubDate>Wed, 28 Feb 2024 08:26:33 +0000</pubDate></item><item><title>CVE-2021-46985 | ACPI: scan: Fix a memory leak in an error handling path</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46985</link><description>In the Linux kernel, the following vulnerability has been resolved:

ACPI: scan: Fix a memory leak in an error handling path

If 'acpi_device_set_name()' fails, we must free
'acpi_device_bus_id-&gt;bus_id' or there is a (potential) memory leak.</description><pubDate>Wed, 28 Feb 2024 08:26:34 +0000</pubDate></item><item><title>CVE-2021-46986 | usb: dwc3: gadget: Free gadget structure only after freeing endpoints</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46986</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: dwc3: gadget: Free gadget structure only after freeing endpoints

As part of commit e81a7018d93a ("usb: dwc3: allocate gadget structure
dynamically") the dwc3_gadget_release() was added which will free
the dwc-&gt;gadget structure upon the device's removal when
usb_del_gadget_udc() is called in dwc3_gadget_exit().

However, simply freeing the gadget results a dangling pointer
situation: the endpoints created in dwc3_gadget_init_endpoints()
have their dep-&gt;endpoint.ep_list members chained off the list_head
anchored at dwc-&gt;gadget-&gt;ep_list.  Thus when dwc-&gt;gadget is freed,
the first dwc3_ep in the list now has a dangling prev pointer and
likewise for the next pointer of the dwc3_ep at the tail of the list.
The dwc3_gadget_free_endpoints() that follows will result in a
use-after-free when it calls list_del().

This was caught by enabling KASAN and performing a driver unbind.
The recent commit 568262bf5492 ("usb: dwc3: core: Add shutdown
callback for dwc3") also exposes this as a panic during shutdown.

There are a few possibilities to fix this.  One could be to perform
a list_del() of the gadget-&gt;ep_list itself which removes it from
the rest of the dwc3_ep chain.

Another approach is what this patch does, by splitting up the
usb_del_gadget_udc() call into its separate "del" and "put"
components.  This allows dwc3_gadget_free_endpoints() to be
called before the gadget is finally freed with usb_put_gadget().</description><pubDate>Wed, 28 Feb 2024 08:26:34 +0000</pubDate></item><item><title>CVE-2021-46987 | btrfs: fix deadlock when cloning inline extents and using qgroups</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46987</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix deadlock when cloning inline extents and using qgroups

There are a few exceptional cases where cloning an inline extent needs to
copy the inline extent data into a page of the destination inode.

When this happens, we end up starting a transaction while having a dirty
page for the destination inode and while having the range locked in the
destination's inode iotree too. Because when reserving metadata space
for a transaction we may need to flush existing delalloc in case there is
not enough free space, we have a mechanism in place to prevent a deadlock,
which was introduced in commit 3d45f221ce627d ("btrfs: fix deadlock when
cloning inline extent and low on free metadata space").

However when using qgroups, a transaction also reserves metadata qgroup
space, which can also result in flushing delalloc in case there is not
enough available space at the moment. When this happens we deadlock, since
flushing delalloc requires locking the file range in the inode's iotree
and the range was already locked at the very beginning of the clone
operation, before attempting to start the transaction.

When this issue happens, stack traces like the following are reported:

  [72747.556262] task:kworker/u81:9   state:D stack:    0 pid:  225 ppid:     2 flags:0x00004000
  [72747.556268] Workqueue: writeback wb_workfn (flush-btrfs-1142)
  [72747.556271] Call Trace:
  [72747.556273]  __schedule+0x296/0x760
  [72747.556277]  schedule+0x3c/0xa0
  [72747.556279]  io_schedule+0x12/0x40
  [72747.556284]  __lock_page+0x13c/0x280
  [72747.556287]  ? generic_file_readonly_mmap+0x70/0x70
  [72747.556325]  extent_write_cache_pages+0x22a/0x440 [btrfs]
  [72747.556331]  ? __set_page_dirty_nobuffers+0xe7/0x160
  [72747.556358]  ? set_extent_buffer_dirty+0x5e/0x80 [btrfs]
  [72747.556362]  ? update_group_capacity+0x25/0x210
  [72747.556366]  ? cpumask_next_and+0x1a/0x20
  [72747.556391]  extent_writepages+0x44/0xa0 [btrfs]
  [72747.556394]  do_writepages+0x41/0xd0
  [72747.556398]  __writeback_single_inode+0x39/0x2a0
  [72747.556403]  writeback_sb_inodes+0x1ea/0x440
  [72747.556407]  __writeback_inodes_wb+0x5f/0xc0
  [72747.556410]  wb_writeback+0x235/0x2b0
  [72747.556414]  ? get_nr_inodes+0x35/0x50
  [72747.556417]  wb_workfn+0x354/0x490
  [72747.556420]  ? newidle_balance+0x2c5/0x3e0
  [72747.556424]  process_one_work+0x1aa/0x340
  [72747.556426]  worker_thread+0x30/0x390
  [72747.556429]  ? create_worker+0x1a0/0x1a0
  [72747.556432]  kthread+0x116/0x130
  [72747.556435]  ? kthread_park+0x80/0x80
  [72747.556438]  ret_from_fork+0x1f/0x30

  [72747.566958] Workqueue: btrfs-flush_delalloc btrfs_work_helper [btrfs]
  [72747.566961] Call Trace:
  [72747.566964]  __schedule+0x296/0x760
  [72747.566968]  ? finish_wait+0x80/0x80
  [72747.566970]  schedule+0x3c/0xa0
  [72747.566995]  wait_extent_bit.constprop.68+0x13b/0x1c0 [btrfs]
  [72747.566999]  ? finish_wait+0x80/0x80
  [72747.567024]  lock_extent_bits+0x37/0x90 [btrfs]
  [72747.567047]  btrfs_invalidatepage+0x299/0x2c0 [btrfs]
  [72747.567051]  ? find_get_pages_range_tag+0x2cd/0x380
  [72747.567076]  __extent_writepage+0x203/0x320 [btrfs]
  [72747.567102]  extent_write_cache_pages+0x2bb/0x440 [btrfs]
  [72747.567106]  ? update_load_avg+0x7e/0x5f0
  [72747.567109]  ? enqueue_entity+0xf4/0x6f0
  [72747.567134]  extent_writepages+0x44/0xa0 [btrfs]
  [72747.567137]  ? enqueue_task_fair+0x93/0x6f0
  [72747.567140]  do_writepages+0x41/0xd0
  [72747.567144]  __filemap_fdatawrite_range+0xc7/0x100
  [72747.567167]  btrfs_run_delalloc_work+0x17/0x40 [btrfs]
  [72747.567195]  btrfs_work_helper+0xc2/0x300 [btrfs]
  [72747.567200]  process_one_work+0x1aa/0x340
  [72747.567202]  worker_thread+0x30/0x390
  [72747.567205]  ? create_worker+0x1a0/0x1a0
  [72747.567208]  kthread+0x116/0x130
  [72747.567211]  ? kthread_park+0x80/0x80
  [72747.567214]  ret_from_fork+0x1f/0x30

  [72747.569686] task:fsstress        state:D stack:    
---truncated---</description><pubDate>Wed, 28 Feb 2024 08:26:35 +0000</pubDate></item><item><title>CVE-2021-46988 | userfaultfd: release page in error path to avoid BUG_ON</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46988</link><description>In the Linux kernel, the following vulnerability has been resolved:

userfaultfd: release page in error path to avoid BUG_ON

Consider the following sequence of events:

1. Userspace issues a UFFD ioctl, which ends up calling into
   shmem_mfill_atomic_pte(). We successfully account the blocks, we
   shmem_alloc_page(), but then the copy_from_user() fails. We return
   -ENOENT. We don't release the page we allocated.
2. Our caller detects this error code, tries the copy_from_user() after
   dropping the mmap_lock, and retries, calling back into
   shmem_mfill_atomic_pte().
3. Meanwhile, let's say another process filled up the tmpfs being used.
4. So shmem_mfill_atomic_pte() fails to account blocks this time, and
   immediately returns - without releasing the page.

This triggers a BUG_ON in our caller, which asserts that the page
should always be consumed, unless -ENOENT is returned.

To fix this, detect if we have such a "dangling" page when accounting
fails, and if so, release it before returning.</description><pubDate>Wed, 28 Feb 2024 08:26:35 +0000</pubDate></item><item><title>CVE-2021-46989 | hfsplus: prevent corruption in shrinking truncate</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46989</link><description>In the Linux kernel, the following vulnerability has been resolved:

hfsplus: prevent corruption in shrinking truncate

I believe there are some issues introduced by commit 31651c607151
("hfsplus: avoid deadlock on file truncation")

HFS+ has extent records which always contains 8 extents.  In case the
first extent record in catalog file gets full, new ones are allocated from
extents overflow file.

In case shrinking truncate happens to middle of an extent record which
locates in extents overflow file, the logic in hfsplus_file_truncate() was
changed so that call to hfs_brec_remove() is not guarded any more.

Right action would be just freeing the extents that exceed the new size
inside extent record by calling hfsplus_free_extents(), and then check if
the whole extent record should be removed.  However since the guard
(blk_cnt &gt; start) is now after the call to hfs_brec_remove(), this has
unfortunate effect that the last matching extent record is removed
unconditionally.

To reproduce this issue, create a file which has at least 10 extents, and
then perform shrinking truncate into middle of the last extent record, so
that the number of remaining extents is not under or divisible by 8.  This
causes the last extent record (8 extents) to be removed totally instead of
truncating into middle of it.  Thus this causes corruption, and lost data.

Fix for this is simply checking if the new truncated end is below the
start of this extent record, making it safe to remove the full extent
record.  However call to hfs_brec_remove() can't be moved to it's previous
place since we're dropping -&gt;tree_lock and it can cause a race condition
and the cached info being invalidated possibly corrupting the node data.

Another issue is related to this one.  When entering into the block
(blk_cnt &gt; start) we are not holding the -&gt;tree_lock.  We break out from
the loop not holding the lock, but hfs_find_exit() does unlock it.  Not
sure if it's possible for someone else to take the lock under our feet,
but it can cause hard to debug errors and premature unlocking.  Even if
there's no real risk of it, the locking should still always be kept in
balance.  Thus taking the lock now just before the check.</description><pubDate>Wed, 28 Feb 2024 08:26:35 +0000</pubDate></item><item><title>CVE-2021-46990 | powerpc/64s: Fix crashes when toggling entry flush barrier</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46990</link><description>In the Linux kernel, the following vulnerability has been resolved:

powerpc/64s: Fix crashes when toggling entry flush barrier

The entry flush mitigation can be enabled/disabled at runtime via a
debugfs file (entry_flush), which causes the kernel to patch itself to
enable/disable the relevant mitigations.

However depending on which mitigation we're using, it may not be safe to
do that patching while other CPUs are active. For example the following
crash:

  sleeper[15639]: segfault (11) at c000000000004c20 nip c000000000004c20 lr c000000000004c20

Shows that we returned to userspace with a corrupted LR that points into
the kernel, due to executing the partially patched call to the fallback
entry flush (ie. we missed the LR restore).

Fix it by doing the patching under stop machine. The CPUs that aren't
doing the patching will be spinning in the core of the stop machine
logic. That is currently sufficient for our purposes, because none of
the patching we do is to that code or anywhere in the vicinity.</description><pubDate>Wed, 28 Feb 2024 08:26:36 +0000</pubDate></item><item><title>CVE-2021-46991 | i40e: Fix use-after-free in i40e_client_subtask()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46991</link><description>In the Linux kernel, the following vulnerability has been resolved:

i40e: Fix use-after-free in i40e_client_subtask()

Currently the call to i40e_client_del_instance frees the object
pf-&gt;cinst, however pf-&gt;cinst-&gt;lan_info is being accessed after
the free. Fix this by adding the missing return.

Addresses-Coverity: ("Read from pointer after free")</description><pubDate>Wed, 28 Feb 2024 08:26:36 +0000</pubDate></item><item><title>CVE-2021-46992 | netfilter: nftables: avoid overflows in nft_hash_buckets()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46992</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nftables: avoid overflows in nft_hash_buckets()

Number of buckets being stored in 32bit variables, we have to
ensure that no overflows occur in nft_hash_buckets()

syzbot injected a size == 0x40000000 and reported:

UBSAN: shift-out-of-bounds in ./include/linux/log2.h:57:13
shift exponent 64 is too large for 64-bit type 'long unsigned int'
CPU: 1 PID: 29539 Comm: syz-executor.4 Not tainted 5.12.0-rc7-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:79 [inline]
 dump_stack+0x141/0x1d7 lib/dump_stack.c:120
 ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
 __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327
 __roundup_pow_of_two include/linux/log2.h:57 [inline]
 nft_hash_buckets net/netfilter/nft_set_hash.c:411 [inline]
 nft_hash_estimate.cold+0x19/0x1e net/netfilter/nft_set_hash.c:652
 nft_select_set_ops net/netfilter/nf_tables_api.c:3586 [inline]
 nf_tables_newset+0xe62/0x3110 net/netfilter/nf_tables_api.c:4322
 nfnetlink_rcv_batch+0xa09/0x24b0 net/netfilter/nfnetlink.c:488
 nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:612 [inline]
 nfnetlink_rcv+0x3af/0x420 net/netfilter/nfnetlink.c:630
 netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
 netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
 netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
 sock_sendmsg_nosec net/socket.c:654 [inline]
 sock_sendmsg+0xcf/0x120 net/socket.c:674
 ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
 ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
 __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
 do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46</description><pubDate>Wed, 28 Feb 2024 08:26:37 +0000</pubDate></item><item><title>CVE-2021-46993 | sched: Fix out-of-bound access in uclamp</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46993</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched: Fix out-of-bound access in uclamp

Util-clamp places tasks in different buckets based on their clamp values
for performance reasons. However, the size of buckets is currently
computed using a rounding division, which can lead to an off-by-one
error in some configurations.

For instance, with 20 buckets, the bucket size will be 1024/20=51. A
task with a clamp of 1024 will be mapped to bucket id 1024/51=20. Sadly,
correct indexes are in range [0,19], hence leading to an out of bound
memory access.

Clamp the bucket id to fix the issue.</description><pubDate>Wed, 28 Feb 2024 08:26:37 +0000</pubDate></item><item><title>CVE-2021-46994 | can: mcp251x: fix resume from sleep before interface was brought up</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46994</link><description>In the Linux kernel, the following vulnerability has been resolved:

can: mcp251x: fix resume from sleep before interface was brought up

Since 8ce8c0abcba3 the driver queues work via priv-&gt;restart_work when
resuming after suspend, even when the interface was not previously
enabled. This causes a null dereference error as the workqueue is only
allocated and initialized in mcp251x_open().

To fix this we move the workqueue init to mcp251x_can_probe() as there
is no reason to do it later and repeat it whenever mcp251x_open() is
called.

[mkl: fix error handling in mcp251x_stop()]</description><pubDate>Wed, 28 Feb 2024 08:26:38 +0000</pubDate></item><item><title>CVE-2021-46995 | can: mcp251xfd: mcp251xfd_probe(): fix an error pointer dereference in probe</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46995</link><description>In the Linux kernel, the following vulnerability has been resolved:

can: mcp251xfd: mcp251xfd_probe(): fix an error pointer dereference in probe

When we converted this code to use dev_err_probe() we accidentally
removed a return. It means that if devm_clk_get() it will lead to an
Oops when we call clk_get_rate() on the next line.</description><pubDate>Wed, 28 Feb 2024 08:26:38 +0000</pubDate></item><item><title>CVE-2021-46996 | netfilter: nftables: Fix a memleak from userdata error path in new objects</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46996</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nftables: Fix a memleak from userdata error path in new objects

Release object name if userdata allocation fails.</description><pubDate>Wed, 28 Feb 2024 08:26:38 +0000</pubDate></item><item><title>CVE-2021-46997 | arm64: entry: always set GIC_PRIO_PSR_I_SET during entry</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46997</link><description>In the Linux kernel, the following vulnerability has been resolved:

arm64: entry: always set GIC_PRIO_PSR_I_SET during entry

Zenghui reports that booting a kernel with "irqchip.gicv3_pseudo_nmi=1"
on the command line hits a warning during kernel entry, due to the way
we manipulate the PMR.

Early in the entry sequence, we call lockdep_hardirqs_off() to inform
lockdep that interrupts have been masked (as the HW sets DAIF wqhen
entering an exception). Architecturally PMR_EL1 is not affected by
exception entry, and we don't set GIC_PRIO_PSR_I_SET in the PMR early in
the exception entry sequence, so early in exception entry the PMR can
indicate that interrupts are unmasked even though they are masked by
DAIF.

If DEBUG_LOCKDEP is selected, lockdep_hardirqs_off() will check that
interrupts are masked, before we set GIC_PRIO_PSR_I_SET in any of the
exception entry paths, and hence lockdep_hardirqs_off() will WARN() that
something is amiss.

We can avoid this by consistently setting GIC_PRIO_PSR_I_SET during
exception entry so that kernel code sees a consistent environment. We
must also update local_daif_inherit() to undo this, as currently only
touches DAIF. For other paths, local_daif_restore() will update both
DAIF and the PMR. With this done, we can remove the existing special
cases which set this later in the entry code.

We always use (GIC_PRIO_IRQON | GIC_PRIO_PSR_I_SET) for consistency with
local_daif_save(), as this will warn if it ever encounters
(GIC_PRIO_IRQOFF | GIC_PRIO_PSR_I_SET), and never sets this itself. This
matches the gic_prio_kentry_setup that we have to retain for
ret_to_user.

The original splat from Zenghui's report was:

| DEBUG_LOCKS_WARN_ON(!irqs_disabled())
| WARNING: CPU: 3 PID: 125 at kernel/locking/lockdep.c:4258 lockdep_hardirqs_off+0xd4/0xe8
| Modules linked in:
| CPU: 3 PID: 125 Comm: modprobe Tainted: G        W         5.12.0-rc8+ #463
| Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02/06/2015
| pstate: 604003c5 (nZCv DAIF +PAN -UAO -TCO BTYPE=--)
| pc : lockdep_hardirqs_off+0xd4/0xe8
| lr : lockdep_hardirqs_off+0xd4/0xe8
| sp : ffff80002a39bad0
| pmr_save: 000000e0
| x29: ffff80002a39bad0 x28: ffff0000de214bc0
| x27: ffff0000de1c0400 x26: 000000000049b328
| x25: 0000000000406f30 x24: ffff0000de1c00a0
| x23: 0000000020400005 x22: ffff8000105f747c
| x21: 0000000096000044 x20: 0000000000498ef9
| x19: ffff80002a39bc88 x18: ffffffffffffffff
| x17: 0000000000000000 x16: ffff800011c61eb0
| x15: ffff800011700a88 x14: 0720072007200720
| x13: 0720072007200720 x12: 0720072007200720
| x11: 0720072007200720 x10: 0720072007200720
| x9 : ffff80002a39bad0 x8 : ffff80002a39bad0
| x7 : ffff8000119f0800 x6 : c0000000ffff7fff
| x5 : ffff8000119f07a8 x4 : 0000000000000001
| x3 : 9bcdab23f2432800 x2 : ffff800011730538
| x1 : 9bcdab23f2432800 x0 : 0000000000000000
| Call trace:
|  lockdep_hardirqs_off+0xd4/0xe8
|  enter_from_kernel_mode.isra.5+0x7c/0xa8
|  el1_abort+0x24/0x100
|  el1_sync_handler+0x80/0xd0
|  el1_sync+0x6c/0x100
|  __arch_clear_user+0xc/0x90
|  load_elf_binary+0x9fc/0x1450
|  bprm_execve+0x404/0x880
|  kernel_execve+0x180/0x188
|  call_usermodehelper_exec_async+0xdc/0x158
|  ret_from_fork+0x10/0x18</description><pubDate>Wed, 28 Feb 2024 08:26:39 +0000</pubDate></item><item><title>CVE-2021-46998 | ethernet:enic: Fix a use after free bug in enic_hard_start_xmit</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46998</link><description>In the Linux kernel, the following vulnerability has been resolved:

ethernet:enic: Fix a use after free bug in enic_hard_start_xmit

In enic_hard_start_xmit, it calls enic_queue_wq_skb(). Inside
enic_queue_wq_skb, if some error happens, the skb will be freed
by dev_kfree_skb(skb). But the freed skb is still used in
skb_tx_timestamp(skb).

My patch makes enic_queue_wq_skb() return error and goto spin_unlock()
incase of error. The solution is provided by Govind.
See https://lkml.org/lkml/2021/4/30/961.</description><pubDate>Wed, 28 Feb 2024 08:26:39 +0000</pubDate></item><item><title>CVE-2021-46999 | sctp: do asoc update earlier in sctp_sf_do_dupcook_a</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46999</link><description>In the Linux kernel, the following vulnerability has been resolved:

sctp: do asoc update earlier in sctp_sf_do_dupcook_a

There's a panic that occurs in a few of envs, the call trace is as below:

  [] general protection fault, ... 0x29acd70f1000a: 0000 [#1] SMP PTI
  [] RIP: 0010:sctp_ulpevent_notify_peer_addr_change+0x4b/0x1fa [sctp]
  []  sctp_assoc_control_transport+0x1b9/0x210 [sctp]
  []  sctp_do_8_2_transport_strike.isra.16+0x15c/0x220 [sctp]
  []  sctp_cmd_interpreter.isra.21+0x1231/0x1a10 [sctp]
  []  sctp_do_sm+0xc3/0x2a0 [sctp]
  []  sctp_generate_timeout_event+0x81/0xf0 [sctp]

This is caused by a transport use-after-free issue. When processing a
duplicate COOKIE-ECHO chunk in sctp_sf_do_dupcook_a(), both COOKIE-ACK
and SHUTDOWN chunks are allocated with the transort from the new asoc.
However, later in the sideeffect machine, the old asoc is used to send
them out and old asoc's shutdown_last_sent_to is set to the transport
that SHUTDOWN chunk attached to in sctp_cmd_setup_t2(), which actually
belongs to the new asoc. After the new_asoc is freed and the old asoc
T2 timeout, the old asoc's shutdown_last_sent_to that is already freed
would be accessed in sctp_sf_t2_timer_expire().

Thanks Alexander and Jere for helping dig into this issue.

To fix it, this patch is to do the asoc update first, then allocate
the COOKIE-ACK and SHUTDOWN chunks with the 'updated' old asoc. This
would make more sense, as a chunk from an asoc shouldn't be sent out
with another asoc. We had fixed quite a few issues caused by this.</description><pubDate>Wed, 28 Feb 2024 08:26:40 +0000</pubDate></item><item><title>CVE-2021-47000 | ceph: fix inode leak on getattr error in __fh_to_dentry</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47000</link><description>In the Linux kernel, the following vulnerability has been resolved:

ceph: fix inode leak on getattr error in __fh_to_dentry</description><pubDate>Wed, 28 Feb 2024 08:26:40 +0000</pubDate></item><item><title>CVE-2021-47001 | xprtrdma: Fix cwnd update ordering</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47001</link><description>In the Linux kernel, the following vulnerability has been resolved:

xprtrdma: Fix cwnd update ordering

After a reconnect, the reply handler is opening the cwnd (and thus
enabling more RPC Calls to be sent) /before/ rpcrdma_post_recvs()
can post enough Receive WRs to receive their replies. This causes an
RNR and the new connection is lost immediately.

The race is most clearly exposed when KASAN and disconnect injection
are enabled. This slows down rpcrdma_rep_create() enough to allow
the send side to post a bunch of RPC Calls before the Receive
completion handler can invoke ib_post_recv().</description><pubDate>Wed, 28 Feb 2024 08:26:40 +0000</pubDate></item><item><title>CVE-2021-47002 | SUNRPC: Fix null pointer dereference in svc_rqst_free()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47002</link><description>In the Linux kernel, the following vulnerability has been resolved:

SUNRPC: Fix null pointer dereference in svc_rqst_free()

When alloc_pages_node() returns null in svc_rqst_alloc(), the
null rq_scratch_page pointer will be dereferenced when calling
put_page() in svc_rqst_free(). Fix it by adding a null check.

Addresses-Coverity: ("Dereference after null check")</description><pubDate>Wed, 28 Feb 2024 08:26:41 +0000</pubDate></item><item><title>CVE-2021-47003 | dmaengine: idxd: Fix potential null dereference on pointer status</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47003</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: idxd: Fix potential null dereference on pointer status

There are calls to idxd_cmd_exec that pass a null status pointer however
a recent commit has added an assignment to *status that can end up
with a null pointer dereference.  The function expects a null status
pointer sometimes as there is a later assignment to *status where
status is first null checked.  Fix the issue by null checking status
before making the assignment.

Addresses-Coverity: ("Explicit null dereferenced")</description><pubDate>Wed, 28 Feb 2024 08:26:41 +0000</pubDate></item><item><title>CVE-2021-47004 | f2fs: fix to avoid touching checkpointed data in get_victim()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47004</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to avoid touching checkpointed data in get_victim()

In CP disabling mode, there are two issues when using LFS or SSR | AT_SSR
mode to select victim:

1. LFS is set to find source section during GC, the victim should have
no checkpointed data, since after GC, section could not be set free for
reuse.

Previously, we only check valid chpt blocks in current segment rather
than section, fix it.

2. SSR | AT_SSR are set to find target segment for writes which can be
fully filled by checkpointed and newly written blocks, we should never
select such segment, otherwise it can cause panic or data corruption
during allocation, potential case is described as below:

 a) target segment has 'n' (n &lt; 512) ckpt valid blocks
 b) GC migrates 'n' valid blocks to other segment (segment is still
    in dirty list)
 c) GC migrates '512 - n' blocks to target segment (segment has 'n'
    cp_vblocks and '512 - n' vblocks)
 d) If GC selects target segment via {AT,}SSR allocator, however there
    is no free space in targe segment.</description><pubDate>Wed, 28 Feb 2024 08:26:42 +0000</pubDate></item><item><title>CVE-2021-47005 | PCI: endpoint: Fix NULL pointer dereference for -&amp;gt;get_features()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47005</link><description>In the Linux kernel, the following vulnerability has been resolved:

PCI: endpoint: Fix NULL pointer dereference for -&gt;get_features()

get_features ops of pci_epc_ops may return NULL, causing NULL pointer
dereference in pci_epf_test_alloc_space function. Let us add a check for
pci_epc_feature pointer in pci_epf_test_bind before we access it to avoid
any such NULL pointer dereference and return -ENOTSUPP in case
pci_epc_feature is not found.

When the patch is not applied and EPC features is not implemented in the
platform driver, we see the following dump due to kernel NULL pointer
dereference.

Call trace:
 pci_epf_test_bind+0xf4/0x388
 pci_epf_bind+0x3c/0x80
 pci_epc_epf_link+0xa8/0xcc
 configfs_symlink+0x1a4/0x48c
 vfs_symlink+0x104/0x184
 do_symlinkat+0x80/0xd4
 __arm64_sys_symlinkat+0x1c/0x24
 el0_svc_common.constprop.3+0xb8/0x170
 el0_svc_handler+0x70/0x88
 el0_svc+0x8/0x640
Code: d2800581 b9403ab9 f9404ebb 8b394f60 (f9400400)
---[ end trace a438e3c5a24f9df0 ]---</description><pubDate>Wed, 28 Feb 2024 08:26:42 +0000</pubDate></item><item><title>CVE-2021-47006 | ARM: 9064/1: hw_breakpoint: Do not directly check the event&amp;#x27;s overflow_handler hook</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47006</link><description>In the Linux kernel, the following vulnerability has been resolved:

ARM: 9064/1: hw_breakpoint: Do not directly check the event's overflow_handler hook

The commit 1879445dfa7b ("perf/core: Set event's default
::overflow_handler()") set a default event-&gt;overflow_handler in
perf_event_alloc(), and replace the check event-&gt;overflow_handler with
is_default_overflow_handler(), but one is missing.

Currently, the bp-&gt;overflow_handler can not be NULL. As a result,
enable_single_step() is always not invoked.

Comments from Zhen Lei:

 https://patchwork.kernel.org/project/linux-arm-kernel/patch/20210207105934.2001-1-thunder.leizhen@huawei.com/</description><pubDate>Wed, 28 Feb 2024 08:26:43 +0000</pubDate></item><item><title>CVE-2021-47007 | f2fs: fix panic during f2fs_resize_fs()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47007</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix panic during f2fs_resize_fs()

f2fs_resize_fs() hangs in below callstack with testcase:
- mkfs 16GB image &amp; mount image
- dd 8GB fileA
- dd 8GB fileB
- sync
- rm fileA
- sync
- resize filesystem to 8GB

kernel BUG at segment.c:2484!
Call Trace:
 allocate_segment_by_default+0x92/0xf0 [f2fs]
 f2fs_allocate_data_block+0x44b/0x7e0 [f2fs]
 do_write_page+0x5a/0x110 [f2fs]
 f2fs_outplace_write_data+0x55/0x100 [f2fs]
 f2fs_do_write_data_page+0x392/0x850 [f2fs]
 move_data_page+0x233/0x320 [f2fs]
 do_garbage_collect+0x14d9/0x1660 [f2fs]
 free_segment_range+0x1f7/0x310 [f2fs]
 f2fs_resize_fs+0x118/0x330 [f2fs]
 __f2fs_ioctl+0x487/0x3680 [f2fs]
 __x64_sys_ioctl+0x8e/0xd0
 do_syscall_64+0x33/0x80
 entry_SYSCALL_64_after_hwframe+0x44/0xa9

The root cause is we forgot to check that whether we have enough space
in resized filesystem to store all valid blocks in before-resizing
filesystem, then allocator will run out-of-space during block migration
in free_segment_range().</description><pubDate>Wed, 28 Feb 2024 08:26:43 +0000</pubDate></item><item><title>CVE-2021-47008 | KVM: SVM: Make sure GHCB is mapped before updating</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47008</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: SVM: Make sure GHCB is mapped before updating

Access to the GHCB is mainly in the VMGEXIT path and it is known that the
GHCB will be mapped. But there are two paths where it is possible the GHCB
might not be mapped.

The sev_vcpu_deliver_sipi_vector() routine will update the GHCB to inform
the caller of the AP Reset Hold NAE event that a SIPI has been delivered.
However, if a SIPI is performed without a corresponding AP Reset Hold,
then the GHCB might not be mapped (depending on the previous VMEXIT),
which will result in a NULL pointer dereference.

The svm_complete_emulated_msr() routine will update the GHCB to inform
the caller of a RDMSR/WRMSR operation about any errors. While it is likely
that the GHCB will be mapped in this situation, add a safe guard
in this path to be certain a NULL pointer dereference is not encountered.</description><pubDate>Wed, 28 Feb 2024 08:26:43 +0000</pubDate></item><item><title>CVE-2021-47009 | KEYS: trusted: Fix memory leak on object td</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47009</link><description>In the Linux kernel, the following vulnerability has been resolved:

KEYS: trusted: Fix memory leak on object td

Two error return paths are neglecting to free allocated object td,
causing a memory leak. Fix this by returning via the error return
path that securely kfree's td.

Fixes clang scan-build warning:
security/keys/trusted-keys/trusted_tpm1.c:496:10: warning: Potential
memory leak [unix.Malloc]</description><pubDate>Wed, 28 Feb 2024 08:26:44 +0000</pubDate></item><item><title>CVE-2021-47010 | net: Only allow init netns to set default tcp cong to a restricted algo</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47010</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: Only allow init netns to set default tcp cong to a restricted algo

tcp_set_default_congestion_control() is netns-safe in that it writes
to &amp;net-&gt;ipv4.tcp_congestion_control, but it also sets
ca-&gt;flags |= TCP_CONG_NON_RESTRICTED which is not namespaced.
This has the unintended side-effect of changing the global
net.ipv4.tcp_allowed_congestion_control sysctl, despite the fact that it
is read-only: 97684f0970f6 ("net: Make tcp_allowed_congestion_control
readonly in non-init netns")

Resolve this netns "leak" by only allowing the init netns to set the
default algorithm to one that is restricted. This restriction could be
removed if tcp_allowed_congestion_control were namespace-ified in the
future.

This bug was uncovered with
https://github.com/JonathonReinhart/linux-netns-sysctl-verify</description><pubDate>Wed, 28 Feb 2024 08:26:44 +0000</pubDate></item><item><title>CVE-2021-47011 | mm: memcontrol: slab: fix obtain a reference to a freeing memcg</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47011</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm: memcontrol: slab: fix obtain a reference to a freeing memcg

Patch series "Use obj_cgroup APIs to charge kmem pages", v5.

Since Roman's series "The new cgroup slab memory controller" applied.
All slab objects are charged with the new APIs of obj_cgroup.  The new
APIs introduce a struct obj_cgroup to charge slab objects.  It prevents
long-living objects from pinning the original memory cgroup in the
memory.  But there are still some corner objects (e.g.  allocations
larger than order-1 page on SLUB) which are not charged with the new
APIs.  Those objects (include the pages which are allocated from buddy
allocator directly) are charged as kmem pages which still hold a
reference to the memory cgroup.

E.g.  We know that the kernel stack is charged as kmem pages because the
size of the kernel stack can be greater than 2 pages (e.g.  16KB on
x86_64 or arm64).  If we create a thread (suppose the thread stack is
charged to memory cgroup A) and then move it from memory cgroup A to
memory cgroup B.  Because the kernel stack of the thread hold a
reference to the memory cgroup A.  The thread can pin the memory cgroup
A in the memory even if we remove the cgroup A.  If we want to see this
scenario by using the following script.  We can see that the system has
added 500 dying cgroups (This is not a real world issue, just a script
to show that the large kmallocs are charged as kmem pages which can pin
the memory cgroup in the memory).

	#!/bin/bash

	cat /proc/cgroups | grep memory

	cd /sys/fs/cgroup/memory
	echo 1 &gt; memory.move_charge_at_immigrate

	for i in range{1..500}
	do
		mkdir kmem_test
		echo $$ &gt; kmem_test/cgroup.procs
		sleep 3600 &amp;
		echo $$ &gt; cgroup.procs
		echo `cat kmem_test/cgroup.procs` &gt; cgroup.procs
		rmdir kmem_test
	done

	cat /proc/cgroups | grep memory

This patchset aims to make those kmem pages to drop the reference to
memory cgroup by using the APIs of obj_cgroup.  Finally, we can see that
the number of the dying cgroups will not increase if we run the above test
script.

This patch (of 7):

The rcu_read_lock/unlock only can guarantee that the memcg will not be
freed, but it cannot guarantee the success of css_get (which is in the
refill_stock when cached memcg changed) to memcg.

  rcu_read_lock()
  memcg = obj_cgroup_memcg(old)
  __memcg_kmem_uncharge(memcg)
      refill_stock(memcg)
          if (stock-&gt;cached != memcg)
              // css_get can change the ref counter from 0 back to 1.
              css_get(&amp;memcg-&gt;css)
  rcu_read_unlock()

This fix is very like the commit:

  eefbfa7fd678 ("mm: memcg/slab: fix use after free in obj_cgroup_charge")

Fix this by holding a reference to the memcg which is passed to the
__memcg_kmem_uncharge() before calling __memcg_kmem_uncharge().</description><pubDate>Wed, 28 Feb 2024 08:26:45 +0000</pubDate></item><item><title>CVE-2021-47012 | RDMA/siw: Fix a use after free in siw_alloc_mr</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47012</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/siw: Fix a use after free in siw_alloc_mr

Our code analyzer reported a UAF.

In siw_alloc_mr(), it calls siw_mr_add_mem(mr,..). In the implementation of
siw_mr_add_mem(), mem is assigned to mr-&gt;mem and then mem is freed via
kfree(mem) if xa_alloc_cyclic() failed. Here, mr-&gt;mem still point to a
freed object. After, the execution continue up to the err_out branch of
siw_alloc_mr, and the freed mr-&gt;mem is used in siw_mr_drop_mem(mr).

My patch moves "mr-&gt;mem = mem" behind the if (xa_alloc_cyclic(..)&lt;0) {}
section, to avoid the uaf.</description><pubDate>Wed, 28 Feb 2024 08:26:45 +0000</pubDate></item><item><title>CVE-2021-47013 | net:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47013</link><description>In the Linux kernel, the following vulnerability has been resolved:

net:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send

In emac_mac_tx_buf_send, it calls emac_tx_fill_tpd(..,skb,..).
If some error happens in emac_tx_fill_tpd(), the skb will be freed via
dev_kfree_skb(skb) in error branch of emac_tx_fill_tpd().
But the freed skb is still used via skb-&gt;len by netdev_sent_queue(,skb-&gt;len).

As i observed that emac_tx_fill_tpd() haven't modified the value of skb-&gt;len,
thus my patch assigns skb-&gt;len to 'len' before the possible free and
use 'len' instead of skb-&gt;len later.</description><pubDate>Wed, 28 Feb 2024 08:26:45 +0000</pubDate></item><item><title>CVE-2021-47014 | net/sched: act_ct: fix wild memory access when clearing fragments</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47014</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/sched: act_ct: fix wild memory access when clearing fragments

while testing re-assembly/re-fragmentation using act_ct, it's possible to
observe a crash like the following one:

 KASAN: maybe wild-memory-access in range [0x0001000000000448-0x000100000000044f]
 CPU: 50 PID: 0 Comm: swapper/50 Tainted: G S                5.12.0-rc7+ #424
 Hardware name: Dell Inc. PowerEdge R730/072T6D, BIOS 2.4.3 01/17/2017
 RIP: 0010:inet_frag_rbtree_purge+0x50/0xc0
 Code: 00 fc ff df 48 89 c3 31 ed 48 89 df e8 a9 7a 38 ff 4c 89 fe 48 89 df 49 89 c6 e8 5b 3a 38 ff 48 8d 7b 40 48 89 f8 48 c1 e8 03 &lt;42&gt; 80 3c 20 00 75 59 48 8d bb d0 00 00 00 4c 8b 6b 40 48 89 f8 48
 RSP: 0018:ffff888c31449db8 EFLAGS: 00010203
 RAX: 0000200000000089 RBX: 000100000000040e RCX: ffffffff989eb960
 RDX: 0000000000000140 RSI: ffffffff97cfb977 RDI: 000100000000044e
 RBP: 0000000000000900 R08: 0000000000000000 R09: ffffed1186289350
 R10: 0000000000000003 R11: ffffed1186289350 R12: dffffc0000000000
 R13: 000100000000040e R14: 0000000000000000 R15: ffff888155e02160
 FS:  0000000000000000(0000) GS:ffff888c31440000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 00005600cb70a5b8 CR3: 0000000a2c014005 CR4: 00000000003706e0
 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
 Call Trace:
  &lt;IRQ&gt;
  inet_frag_destroy+0xa9/0x150
  call_timer_fn+0x2d/0x180
  run_timer_softirq+0x4fe/0xe70
  __do_softirq+0x197/0x5a0
  irq_exit_rcu+0x1de/0x200
  sysvec_apic_timer_interrupt+0x6b/0x80
  &lt;/IRQ&gt;

when act_ct temporarily stores an IP fragment, restoring the skb qdisc cb
results in putting random data in FRAG_CB(), and this causes those "wild"
memory accesses later, when the rbtree is purged. Never overwrite the skb
cb in case tcf_ct_handle_fragments() returns -EINPROGRESS.</description><pubDate>Wed, 28 Feb 2024 08:26:46 +0000</pubDate></item><item><title>CVE-2021-47015 | bnxt_en: Fix RX consumer index logic in the error path.</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47015</link><description>In the Linux kernel, the following vulnerability has been resolved:

bnxt_en: Fix RX consumer index logic in the error path.

In bnxt_rx_pkt(), the RX buffers are expected to complete in order.
If the RX consumer index indicates an out of order buffer completion,
it means we are hitting a hardware bug and the driver will abort all
remaining RX packets and reset the RX ring.  The RX consumer index
that we pass to bnxt_discard_rx() is not correct.  We should be
passing the current index (tmp_raw_cons) instead of the old index
(raw_cons).  This bug can cause us to be at the wrong index when
trying to abort the next RX packet.  It can crash like this:

 #0 [ffff9bbcdf5c39a8] machine_kexec at ffffffff9b05e007
 #1 [ffff9bbcdf5c3a00] __crash_kexec at ffffffff9b111232
 #2 [ffff9bbcdf5c3ad0] panic at ffffffff9b07d61e
 #3 [ffff9bbcdf5c3b50] oops_end at ffffffff9b030978
 #4 [ffff9bbcdf5c3b78] no_context at ffffffff9b06aaf0
 #5 [ffff9bbcdf5c3bd8] __bad_area_nosemaphore at ffffffff9b06ae2e
 #6 [ffff9bbcdf5c3c28] bad_area_nosemaphore at ffffffff9b06af24
 #7 [ffff9bbcdf5c3c38] __do_page_fault at ffffffff9b06b67e
 #8 [ffff9bbcdf5c3cb0] do_page_fault at ffffffff9b06bb12
 #9 [ffff9bbcdf5c3ce0] page_fault at ffffffff9bc015c5
    [exception RIP: bnxt_rx_pkt+237]
    RIP: ffffffffc0259cdd  RSP: ffff9bbcdf5c3d98  RFLAGS: 00010213
    RAX: 000000005dd8097f  RBX: ffff9ba4cb11b7e0  RCX: ffffa923cf6e9000
    RDX: 0000000000000fff  RSI: 0000000000000627  RDI: 0000000000001000
    RBP: ffff9bbcdf5c3e60   R8: 0000000000420003   R9: 000000000000020d
    R10: ffffa923cf6ec138  R11: ffff9bbcdf5c3e83  R12: ffff9ba4d6f928c0
    R13: ffff9ba4cac28080  R14: ffff9ba4cb11b7f0  R15: ffff9ba4d5a30000
    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018</description><pubDate>Wed, 28 Feb 2024 08:26:46 +0000</pubDate></item><item><title>CVE-2021-47017 | ath10k: Fix a use after free in ath10k_htc_send_bundle</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47017</link><description>In the Linux kernel, the following vulnerability has been resolved:

ath10k: Fix a use after free in ath10k_htc_send_bundle

In ath10k_htc_send_bundle, the bundle_skb could be freed by
dev_kfree_skb_any(bundle_skb). But the bundle_skb is used later
by bundle_skb-&gt;len.

As skb_len = bundle_skb-&gt;len, my patch replaces bundle_skb-&gt;len to
skb_len after the bundle_skb was freed.</description><pubDate>Wed, 28 Feb 2024 08:26:47 +0000</pubDate></item><item><title>CVE-2021-47018 | powerpc/64: Fix the definition of the fixmap area</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47018</link><description>In the Linux kernel, the following vulnerability has been resolved:

powerpc/64: Fix the definition of the fixmap area

At the time being, the fixmap area is defined at the top of
the address space or just below KASAN.

This definition is not valid for PPC64.

For PPC64, use the top of the I/O space.

Because of circular dependencies, it is not possible to include
asm/fixmap.h in asm/book3s/64/pgtable.h , so define a fixed size
AREA at the top of the I/O space for fixmap and ensure during
build that the size is big enough.</description><pubDate>Wed, 28 Feb 2024 08:26:47 +0000</pubDate></item><item><title>CVE-2021-47019 | mt76: mt7921: fix possible invalid register access</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47019</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7921: fix possible invalid register access

Disable the interrupt and synchronze for the pending irq handlers to ensure
the irq tasklet is not being scheduled after the suspend to avoid the
possible invalid register access acts when the host pcie controller is
suspended.

[17932.910534] mt7921e 0000:01:00.0: pci_pm_suspend+0x0/0x22c returned 0 after 21375 usecs
[17932.910590] pcieport 0000:00:00.0: calling pci_pm_suspend+0x0/0x22c @ 18565, parent: pci0000:00
[17932.910602] pcieport 0000:00:00.0: pci_pm_suspend+0x0/0x22c returned 0 after 8 usecs
[17932.910671] mtk-pcie 11230000.pcie: calling platform_pm_suspend+0x0/0x60 @ 22783, parent: soc
[17932.910674] mtk-pcie 11230000.pcie: platform_pm_suspend+0x0/0x60 returned 0 after 0 usecs

...

17933.615352] x1 : 00000000000d4200 x0 : ffffff8269ca2300
[17933.620666] Call trace:
[17933.623127]  mt76_mmio_rr+0x28/0xf0 [mt76]
[17933.627234]  mt7921_rr+0x38/0x44 [mt7921e]
[17933.631339]  mt7921_irq_tasklet+0x54/0x1d8 [mt7921e]
[17933.636309]  tasklet_action_common+0x12c/0x16c
[17933.640754]  tasklet_action+0x24/0x2c
[17933.644418]  __do_softirq+0x16c/0x344
[17933.648082]  irq_exit+0xa8/0xac
[17933.651224]  scheduler_ipi+0xd4/0x148
[17933.654890]  handle_IPI+0x164/0x2d4
[17933.658379]  gic_handle_irq+0x140/0x178
[17933.662216]  el1_irq+0xb8/0x180
[17933.665361]  cpuidle_enter_state+0xf8/0x204
[17933.669544]  cpuidle_enter+0x38/0x4c
[17933.673122]  do_idle+0x1a4/0x2a8
[17933.676352]  cpu_startup_entry+0x24/0x28
[17933.680276]  rest_init+0xd4/0xe0
[17933.683508]  arch_call_rest_init+0x10/0x18
[17933.687606]  start_kernel+0x340/0x3b4
[17933.691279] Code: aa0003f5 d503201f f953eaa8 8b344108 (b9400113)
[17933.697373] ---[ end trace a24b8e26ffbda3c5 ]---
[17933.767846] Kernel panic - not syncing: Fatal exception in interrupt</description><pubDate>Wed, 28 Feb 2024 08:26:47 +0000</pubDate></item><item><title>CVE-2021-47021 | mt76: mt7915: fix memleak when mt7915_unregister_device()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47021</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7915: fix memleak when mt7915_unregister_device()

mt7915_tx_token_put() should get call before mt76_free_pending_txwi().</description><pubDate>Wed, 28 Feb 2024 08:26:48 +0000</pubDate></item><item><title>CVE-2021-47022 | mt76: mt7615: fix memleak when mt7615_unregister_device()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47022</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7615: fix memleak when mt7615_unregister_device()

mt7615_tx_token_put() should get call before mt76_free_pending_txwi().</description><pubDate>Wed, 28 Feb 2024 08:26:48 +0000</pubDate></item><item><title>CVE-2021-47023 | net: marvell: prestera: fix port event handling on init</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47023</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: marvell: prestera: fix port event handling on init

For some reason there might be a crash during ports creation if port
events are handling at the same time  because fw may send initial
port event with down state.

The crash points to cancel_delayed_work() which is called when port went
is down.  Currently I did not find out the real cause of the issue, so
fixed it by cancel port stats work only if previous port's state was up
&amp; runnig.

The following is the crash which can be triggered:

[   28.311104] Unable to handle kernel paging request at virtual address
000071775f776600
[   28.319097] Mem abort info:
[   28.321914]   ESR = 0x96000004
[   28.324996]   EC = 0x25: DABT (current EL), IL = 32 bits
[   28.330350]   SET = 0, FnV = 0
[   28.333430]   EA = 0, S1PTW = 0
[   28.336597] Data abort info:
[   28.339499]   ISV = 0, ISS = 0x00000004
[   28.343362]   CM = 0, WnR = 0
[   28.346354] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000100bf7000
[   28.352842] [000071775f776600] pgd=0000000000000000,
p4d=0000000000000000
[   28.359695] Internal error: Oops: 96000004 [#1] PREEMPT SMP
[   28.365310] Modules linked in: prestera_pci(+) prestera
uio_pdrv_genirq
[   28.372005] CPU: 0 PID: 1291 Comm: kworker/0:1H Not tainted
5.11.0-rc4 #1
[   28.378846] Hardware name: DNI AmazonGo1 A7040 board (DT)
[   28.384283] Workqueue: prestera_fw_wq prestera_fw_evt_work_fn
[prestera_pci]
[   28.391413] pstate: 60000085 (nZCv daIf -PAN -UAO -TCO BTYPE=--)
[   28.397468] pc : get_work_pool+0x48/0x60
[   28.401442] lr : try_to_grab_pending+0x6c/0x1b0
[   28.406018] sp : ffff80001391bc60
[   28.409358] x29: ffff80001391bc60 x28: 0000000000000000
[   28.414725] x27: ffff000104fc8b40 x26: ffff80001127de88
[   28.420089] x25: 0000000000000000 x24: ffff000106119760
[   28.425452] x23: ffff00010775dd60 x22: ffff00010567e000
[   28.430814] x21: 0000000000000000 x20: ffff80001391bcb0
[   28.436175] x19: ffff00010775deb8 x18: 00000000000000c0
[   28.441537] x17: 0000000000000000 x16: 000000008d9b0e88
[   28.446898] x15: 0000000000000001 x14: 00000000000002ba
[   28.452261] x13: 80a3002c00000002 x12: 00000000000005f4
[   28.457622] x11: 0000000000000030 x10: 000000000000000c
[   28.462985] x9 : 000000000000000c x8 : 0000000000000030
[   28.468346] x7 : ffff800014400000 x6 : ffff000106119758
[   28.473708] x5 : 0000000000000003 x4 : ffff00010775dc60
[   28.479068] x3 : 0000000000000000 x2 : 0000000000000060
[   28.484429] x1 : 000071775f776600 x0 : ffff00010775deb8
[   28.489791] Call trace:
[   28.492259]  get_work_pool+0x48/0x60
[   28.495874]  cancel_delayed_work+0x38/0xb0
[   28.500011]  prestera_port_handle_event+0x90/0xa0 [prestera]
[   28.505743]  prestera_evt_recv+0x98/0xe0 [prestera]
[   28.510683]  prestera_fw_evt_work_fn+0x180/0x228 [prestera_pci]
[   28.516660]  process_one_work+0x1e8/0x360
[   28.520710]  worker_thread+0x44/0x480
[   28.524412]  kthread+0x154/0x160
[   28.527670]  ret_from_fork+0x10/0x38
[   28.531290] Code: a8c17bfd d50323bf d65f03c0 9278dc21 (f9400020)
[   28.537429] ---[ end trace 5eced933df3a080b ]---</description><pubDate>Wed, 28 Feb 2024 08:26:49 +0000</pubDate></item><item><title>CVE-2021-47024 | vsock/virtio: free queued packets when closing socket</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47024</link><description>In the Linux kernel, the following vulnerability has been resolved:

vsock/virtio: free queued packets when closing socket

As reported by syzbot [1], there is a memory leak while closing the
socket. We partially solved this issue with commit ac03046ece2b
("vsock/virtio: free packets during the socket release"), but we
forgot to drain the RX queue when the socket is definitely closed by
the scheduled work.

To avoid future issues, let's use the new virtio_transport_remove_sock()
to drain the RX queue before removing the socket from the af_vsock lists
calling vsock_remove_sock().

[1] https://syzkaller.appspot.com/bug?extid=24452624fc4c571eedd9</description><pubDate>Wed, 28 Feb 2024 08:26:49 +0000</pubDate></item><item><title>CVE-2021-47025 | iommu/mediatek: Always enable the clk on resume</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47025</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/mediatek: Always enable the clk on resume

In mtk_iommu_runtime_resume always enable the clk, even
if m4u_dom is null. Otherwise the 'suspend' cb might
disable the clk which is already disabled causing the warning:

[    1.586104] infra_m4u already disabled
[    1.586133] WARNING: CPU: 0 PID: 121 at drivers/clk/clk.c:952 clk_core_disable+0xb0/0xb8
[    1.594391] mtk-iommu 10205000.iommu: bound 18001000.larb (ops mtk_smi_larb_component_ops)
[    1.598108] Modules linked in:
[    1.598114] CPU: 0 PID: 121 Comm: kworker/0:2 Not tainted 5.12.0-rc5 #69
[    1.609246] mtk-iommu 10205000.iommu: bound 14027000.larb (ops mtk_smi_larb_component_ops)
[    1.617487] Hardware name: Google Elm (DT)
[    1.617491] Workqueue: pm pm_runtime_work
[    1.620545] mtk-iommu 10205000.iommu: bound 19001000.larb (ops mtk_smi_larb_component_ops)

[    1.627229] pstate: 60000085 (nZCv daIf -PAN -UAO -TCO BTYPE=--)
[    1.659297] pc : clk_core_disable+0xb0/0xb8
[    1.663475] lr : clk_core_disable+0xb0/0xb8
[    1.667652] sp : ffff800011b9bbe0
[    1.670959] x29: ffff800011b9bbe0 x28: 0000000000000000
[    1.676267] x27: ffff800011448000 x26: ffff8000100cfd98
[    1.681574] x25: ffff800011b9bd48 x24: 0000000000000000
[    1.686882] x23: 0000000000000000 x22: ffff8000106fad90
[    1.692189] x21: 000000000000000a x20: ffff0000c0048500
[    1.697496] x19: ffff0000c0048500 x18: ffffffffffffffff
[    1.702804] x17: 0000000000000000 x16: 0000000000000000
[    1.708112] x15: ffff800011460300 x14: fffffffffffe0000
[    1.713420] x13: ffff8000114602d8 x12: 0720072007200720
[    1.718727] x11: 0720072007200720 x10: 0720072007200720
[    1.724035] x9 : ffff800011b9bbe0 x8 : ffff800011b9bbe0
[    1.729342] x7 : 0000000000000009 x6 : ffff8000114b8328
[    1.734649] x5 : 0000000000000000 x4 : 0000000000000000
[    1.739956] x3 : 00000000ffffffff x2 : ffff800011460298
[    1.745263] x1 : 1af1d7de276f4500 x0 : 0000000000000000
[    1.750572] Call trace:
[    1.753010]  clk_core_disable+0xb0/0xb8
[    1.756840]  clk_core_disable_lock+0x24/0x40
[    1.761105]  clk_disable+0x20/0x30
[    1.764501]  mtk_iommu_runtime_suspend+0x88/0xa8
[    1.769114]  pm_generic_runtime_suspend+0x2c/0x48
[    1.773815]  __rpm_callback+0xe0/0x178
[    1.777559]  rpm_callback+0x24/0x88
[    1.781041]  rpm_suspend+0xdc/0x470
[    1.784523]  rpm_idle+0x12c/0x170
[    1.787831]  pm_runtime_work+0xa8/0xc0
[    1.791573]  process_one_work+0x1e8/0x360
[    1.795580]  worker_thread+0x44/0x478
[    1.799237]  kthread+0x150/0x158
[    1.802460]  ret_from_fork+0x10/0x30
[    1.806034] ---[ end trace 82402920ef64573b ]---
[    1.810728] ------------[ cut here ]------------

In addition, we now don't need to enable the clock from the
function mtk_iommu_hw_init since it is already enabled by the resume.</description><pubDate>Wed, 28 Feb 2024 08:26:50 +0000</pubDate></item><item><title>CVE-2021-47026 | RDMA/rtrs-clt: destroy sysfs after removing session from active list</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47026</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/rtrs-clt: destroy sysfs after removing session from active list

A session can be removed dynamically by sysfs interface "remove_path" that
eventually calls rtrs_clt_remove_path_from_sysfs function.  The current
rtrs_clt_remove_path_from_sysfs first removes the sysfs interfaces and
frees sess-&gt;stats object. Second it removes the session from the active
list.

Therefore some functions could access non-connected session and access the
freed sess-&gt;stats object even-if they check the session status before
accessing the session.

For instance rtrs_clt_request and get_next_path_min_inflight check the
session status and try to send IO to the session.  The session status
could be changed when they are trying to send IO but they could not catch
the change and update the statistics information in sess-&gt;stats object,
and generate use-after-free problem.
(see: "RDMA/rtrs-clt: Check state of the rtrs_clt_sess before reading its
stats")

This patch changes the rtrs_clt_remove_path_from_sysfs to remove the
session from the active session list and then destroy the sysfs
interfaces.

Each function still should check the session status because closing or
error recovery paths can change the status.</description><pubDate>Wed, 28 Feb 2024 08:26:50 +0000</pubDate></item><item><title>CVE-2021-47027 | mt76: mt7921: fix kernel crash when the firmware fails to download</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47027</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7921: fix kernel crash when the firmware fails to download

Fix kernel crash when the firmware is missing or fails to download.

[    9.444758] kernel BUG at drivers/pci/msi.c:375!
[    9.449363] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
[    9.501033] pstate: a0400009 (NzCv daif +PAN -UAO)
[    9.505814] pc : free_msi_irqs+0x180/0x184
[    9.509897] lr : free_msi_irqs+0x40/0x184
[    9.513893] sp : ffffffc015193870
[    9.517194] x29: ffffffc015193870 x28: 00000000f0e94fa2
[    9.522492] x27: 0000000000000acd x26: 000000000000009a
[    9.527790] x25: ffffffc0152cee58 x24: ffffffdbb383e0d8
[    9.533087] x23: ffffffdbb38628d0 x22: 0000000000040200
[    9.538384] x21: ffffff8cf7de7318 x20: ffffff8cd65a2480
[    9.543681] x19: ffffff8cf7de7000 x18: 0000000000000000
[    9.548979] x17: ffffff8cf9ca03b4 x16: ffffffdc13ad9a34
[    9.554277] x15: 0000000000000000 x14: 0000000000080800
[    9.559575] x13: ffffff8cd65a2980 x12: 0000000000000000
[    9.564873] x11: ffffff8cfa45d820 x10: ffffff8cfa45d6d0
[    9.570171] x9 : 0000000000000040 x8 : ffffff8ccef1b780
[    9.575469] x7 : aaaaaaaaaaaaaaaa x6 : 0000000000000000
[    9.580766] x5 : ffffffdc13824900 x4 : ffffff8ccefe0000
[    9.586063] x3 : 0000000000000000 x2 : 0000000000000000
[    9.591362] x1 : 0000000000000125 x0 : ffffff8ccefe0000
[    9.596660] Call trace:
[    9.599095]  free_msi_irqs+0x180/0x184
[    9.602831]  pci_disable_msi+0x100/0x130
[    9.606740]  pci_free_irq_vectors+0x24/0x30
[    9.610915]  mt7921_pci_probe+0xbc/0x250 [mt7921e]
[    9.615693]  pci_device_probe+0xd4/0x14c
[    9.619604]  really_probe+0x134/0x2ec
[    9.623252]  driver_probe_device+0x64/0xfc
[    9.627335]  device_driver_attach+0x4c/0x6c
[    9.631506]  __driver_attach+0xac/0xc0
[    9.635243]  bus_for_each_dev+0x8c/0xd4
[    9.639066]  driver_attach+0x2c/0x38
[    9.642628]  bus_add_driver+0xfc/0x1d0
[    9.646365]  driver_register+0x64/0xf8
[    9.650101]  __pci_register_driver+0x6c/0x7c
[    9.654360]  init_module+0x28/0xfdc [mt7921e]
[    9.658704]  do_one_initcall+0x13c/0x2d0
[    9.662615]  do_init_module+0x58/0x1e8
[    9.666351]  load_module+0xd80/0xeb4
[    9.669912]  __arm64_sys_finit_module+0xa8/0xe0
[    9.674430]  el0_svc_common+0xa4/0x16c
[    9.678168]  el0_svc_compat_handler+0x2c/0x40
[    9.682511]  el0_svc_compat+0x8/0x10
[    9.686076] Code: a94257f6 f9400bf7 a8c47bfd d65f03c0 (d4210000)
[    9.692155] ---[ end trace 7621f966afbf0a29 ]---
[    9.697385] Kernel panic - not syncing: Fatal exception
[    9.702599] SMP: stopping secondary CPUs
[    9.706549] Kernel Offset: 0x1c03600000 from 0xffffffc010000000
[    9.712456] PHYS_OFFSET: 0xfffffff440000000
[    9.716625] CPU features: 0x080026,2a80aa18
[    9.720795] Memory Limit: none</description><pubDate>Wed, 28 Feb 2024 08:26:50 +0000</pubDate></item><item><title>CVE-2021-47028 | mt76: mt7915: fix txrate reporting</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47028</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7915: fix txrate reporting

Properly check rate_info to fix unexpected reporting.

[ 1215.161863] Call trace:
[ 1215.164307]  cfg80211_calculate_bitrate+0x124/0x200 [cfg80211]
[ 1215.170139]  ieee80211s_update_metric+0x80/0xc0 [mac80211]
[ 1215.175624]  ieee80211_tx_status_ext+0x508/0x838 [mac80211]
[ 1215.181190]  mt7915_mcu_get_rx_rate+0x28c/0x8d0 [mt7915e]
[ 1215.186580]  mt7915_mac_tx_free+0x324/0x7c0 [mt7915e]
[ 1215.191623]  mt7915_queue_rx_skb+0xa8/0xd0 [mt7915e]
[ 1215.196582]  mt76_dma_cleanup+0x7b0/0x11d0 [mt76]
[ 1215.201276]  __napi_poll+0x38/0xf8
[ 1215.204668]  napi_workfn+0x40/0x80
[ 1215.208062]  process_one_work+0x1fc/0x390
[ 1215.212062]  worker_thread+0x48/0x4d0
[ 1215.215715]  kthread+0x120/0x128
[ 1215.218935]  ret_from_fork+0x10/0x1c</description><pubDate>Wed, 28 Feb 2024 08:26:51 +0000</pubDate></item><item><title>CVE-2021-47029 | mt76: connac: fix kernel warning adding monitor interface</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47029</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: connac: fix kernel warning adding monitor interface

Fix the following kernel warning adding a monitor interface in
mt76_connac_mcu_uni_add_dev routine.

[  507.984882] ------------[ cut here ]------------
[  507.989515] WARNING: CPU: 1 PID: 3017 at mt76_connac_mcu_uni_add_dev+0x178/0x190 [mt76_connac_lib]
[  508.059379] CPU: 1 PID: 3017 Comm: ifconfig Not tainted 5.4.98 #0
[  508.065461] Hardware name: MT7622_MT7531 RFB (DT)
[  508.070156] pstate: 80000005 (Nzcv daif -PAN -UAO)
[  508.074939] pc : mt76_connac_mcu_uni_add_dev+0x178/0x190 [mt76_connac_lib]
[  508.081806] lr : mt7921_eeprom_init+0x1288/0x1cb8 [mt7921e]
[  508.087367] sp : ffffffc013a33930
[  508.090671] x29: ffffffc013a33930 x28: ffffff801e628ac0
[  508.095973] x27: ffffff801c7f1200 x26: ffffff801c7eb008
[  508.101275] x25: ffffff801c7eaef0 x24: ffffff801d025610
[  508.106577] x23: ffffff801d022990 x22: ffffff801d024de8
[  508.111879] x21: ffffff801d0226a0 x20: ffffff801c7eaee8
[  508.117181] x19: ffffff801d0226a0 x18: 000000005d00b000
[  508.122482] x17: 00000000ffffffff x16: 0000000000000000
[  508.127785] x15: 0000000000000080 x14: ffffff801d704000
[  508.133087] x13: 0000000000000040 x12: 0000000000000002
[  508.138389] x11: 000000000000000c x10: 0000000000000000
[  508.143691] x9 : 0000000000000020 x8 : 0000000000000001
[  508.148992] x7 : 0000000000000000 x6 : 0000000000000000
[  508.154294] x5 : ffffff801c7eaee8 x4 : 0000000000000006
[  508.159596] x3 : 0000000000000001 x2 : 0000000000000000
[  508.164898] x1 : ffffff801c7eac08 x0 : ffffff801d0226a0
[  508.170200] Call trace:
[  508.172640]  mt76_connac_mcu_uni_add_dev+0x178/0x190 [mt76_connac_lib]
[  508.179159]  mt7921_eeprom_init+0x1288/0x1cb8 [mt7921e]
[  508.184394]  drv_add_interface+0x34/0x88 [mac80211]
[  508.189271]  ieee80211_add_virtual_monitor+0xe0/0xb48 [mac80211]
[  508.195277]  ieee80211_do_open+0x86c/0x918 [mac80211]
[  508.200328]  ieee80211_do_open+0x900/0x918 [mac80211]
[  508.205372]  __dev_open+0xcc/0x150
[  508.208763]  __dev_change_flags+0x134/0x198
[  508.212937]  dev_change_flags+0x20/0x60
[  508.216764]  devinet_ioctl+0x3e8/0x748
[  508.220503]  inet_ioctl+0x1e4/0x350
[  508.223983]  sock_do_ioctl+0x48/0x2a0
[  508.227635]  sock_ioctl+0x310/0x4f8
[  508.231116]  do_vfs_ioctl+0xa4/0xac0
[  508.234681]  ksys_ioctl+0x44/0x90
[  508.237985]  __arm64_sys_ioctl+0x1c/0x48
[  508.241901]  el0_svc_common.constprop.1+0x7c/0x100
[  508.246681]  el0_svc_handler+0x18/0x20
[  508.250421]  el0_svc+0x8/0x1c8
[  508.253465] ---[ end trace c7b90fee13d72c39 ]---
[  508.261278] ------------[ cut here ]------------</description><pubDate>Wed, 28 Feb 2024 08:26:51 +0000</pubDate></item><item><title>CVE-2021-47030 | mt76: mt7615: fix memory leak in mt7615_coredump_work</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47030</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7615: fix memory leak in mt7615_coredump_work

Similar to the issue fixed in mt7921_coredump_work, fix a possible memory
leak in mt7615_coredump_work routine.</description><pubDate>Wed, 28 Feb 2024 08:26:52 +0000</pubDate></item><item><title>CVE-2021-47031 | mt76: mt7921: fix memory leak in mt7921_coredump_work</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47031</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7921: fix memory leak in mt7921_coredump_work

Fix possible memory leak in mt7921_coredump_work.</description><pubDate>Wed, 28 Feb 2024 08:26:52 +0000</pubDate></item><item><title>CVE-2021-47032 | mt76: mt7915: fix tx skb dma unmap</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47032</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7915: fix tx skb dma unmap

The first pointer in the txp needs to be unmapped as well, otherwise it will
leak DMA mapping entries</description><pubDate>Wed, 28 Feb 2024 08:26:52 +0000</pubDate></item><item><title>CVE-2021-47033 | mt76: mt7615: fix tx skb dma unmap</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47033</link><description>In the Linux kernel, the following vulnerability has been resolved:

mt76: mt7615: fix tx skb dma unmap

The first pointer in the txp needs to be unmapped as well, otherwise it will
leak DMA mapping entries</description><pubDate>Wed, 28 Feb 2024 08:26:53 +0000</pubDate></item><item><title>CVE-2021-47034 | powerpc/64s: Fix pte update for kernel memory on radix</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47034</link><description>In the Linux kernel, the following vulnerability has been resolved:

powerpc/64s: Fix pte update for kernel memory on radix

When adding a PTE a ptesync is needed to order the update of the PTE
with subsequent accesses otherwise a spurious fault may be raised.

radix__set_pte_at() does not do this for performance gains. For
non-kernel memory this is not an issue as any faults of this kind are
corrected by the page fault handler. For kernel memory these faults
are not handled. The current solution is that there is a ptesync in
flush_cache_vmap() which should be called when mapping from the
vmalloc region.

However, map_kernel_page() does not call flush_cache_vmap(). This is
troublesome in particular for code patching with Strict RWX on radix.
In do_patch_instruction() the page frame that contains the instruction
to be patched is mapped and then immediately patched. With no ordering
or synchronization between setting up the PTE and writing to the page
it is possible for faults.

As the code patching is done using __put_user_asm_goto() the resulting
fault is obscured - but using a normal store instead it can be seen:

  BUG: Unable to handle kernel data access on write at 0xc008000008f24a3c
  Faulting instruction address: 0xc00000000008bd74
  Oops: Kernel access of bad area, sig: 11 [#1]
  LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV
  Modules linked in: nop_module(PO+) [last unloaded: nop_module]
  CPU: 4 PID: 757 Comm: sh Tainted: P           O      5.10.0-rc5-01361-ge3c1b78c8440-dirty #43
  NIP:  c00000000008bd74 LR: c00000000008bd50 CTR: c000000000025810
  REGS: c000000016f634a0 TRAP: 0300   Tainted: P           O       (5.10.0-rc5-01361-ge3c1b78c8440-dirty)
  MSR:  9000000000009033 &lt;SF,HV,EE,ME,IR,DR,RI,LE&gt;  CR: 44002884  XER: 00000000
  CFAR: c00000000007c68c DAR: c008000008f24a3c DSISR: 42000000 IRQMASK: 1

This results in the kind of issue reported here:
  https://lore.kernel.org/linuxppc-dev/15AC5B0E-A221-4B8C-9039-FA96B8EF7C88@lca.pw/

Chris Riedl suggested a reliable way to reproduce the issue:
  $ mount -t debugfs none /sys/kernel/debug
  $ (while true; do echo function &gt; /sys/kernel/debug/tracing/current_tracer ; echo nop &gt; /sys/kernel/debug/tracing/current_tracer ; done) &amp;

Turning ftrace on and off does a large amount of code patching which
in usually less then 5min will crash giving a trace like:

   ftrace-powerpc: (____ptrval____): replaced (4b473b11) != old (60000000)
   ------------[ ftrace bug ]------------
   ftrace failed to modify
   [&lt;c000000000bf8e5c&gt;] napi_busy_loop+0xc/0x390
    actual:   11:3b:47:4b
   Setting ftrace call site to call ftrace function
   ftrace record flags: 80000001
    (1)
    expected tramp: c00000000006c96c
   ------------[ cut here ]------------
   WARNING: CPU: 4 PID: 809 at kernel/trace/ftrace.c:2065 ftrace_bug+0x28c/0x2e8
   Modules linked in: nop_module(PO-) [last unloaded: nop_module]
   CPU: 4 PID: 809 Comm: sh Tainted: P           O      5.10.0-rc5-01360-gf878ccaf250a #1
   NIP:  c00000000024f334 LR: c00000000024f330 CTR: c0000000001a5af0
   REGS: c000000004c8b760 TRAP: 0700   Tainted: P           O       (5.10.0-rc5-01360-gf878ccaf250a)
   MSR:  900000000282b033 &lt;SF,HV,VEC,VSX,EE,FP,ME,IR,DR,RI,LE&gt;  CR: 28008848  XER: 20040000
   CFAR: c0000000001a9c98 IRQMASK: 0
   GPR00: c00000000024f330 c000000004c8b9f0 c000000002770600 0000000000000022
   GPR04: 00000000ffff7fff c000000004c8b6d0 0000000000000027 c0000007fe9bcdd8
   GPR08: 0000000000000023 ffffffffffffffd8 0000000000000027 c000000002613118
   GPR12: 0000000000008000 c0000007fffdca00 0000000000000000 0000000000000000
   GPR16: 0000000023ec37c5 0000000000000000 0000000000000000 0000000000000008
   GPR20: c000000004c8bc90 c0000000027a2d20 c000000004c8bcd0 c000000002612fe8
   GPR24: 0000000000000038 0000000000000030 0000000000000028 0000000000000020
   GPR28: c000000000ff1b68 c000000000bf8e5c c00000000312f700 c000000000fbb9b0
   NIP ftrace_bug+0x28c/0x2e8
   LR  ftrace_bug+0x288/0x2e8
   Call T
---truncated---</description><pubDate>Wed, 28 Feb 2024 08:26:53 +0000</pubDate></item><item><title>CVE-2021-47035 | iommu/vt-d: Remove WO permissions on second-level paging entries</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47035</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/vt-d: Remove WO permissions on second-level paging entries

When the first level page table is used for IOVA translation, it only
supports Read-Only and Read-Write permissions. The Write-Only permission
is not supported as the PRESENT bit (implying Read permission) should
always set. When using second level, we still give separate permissions
that allows WriteOnly which seems inconsistent and awkward. We want to
have consistent behavior. After moving to 1st level, we don't want things
to work sometimes, and break if we use 2nd level for the same mappings.
Hence remove this configuration.</description><pubDate>Wed, 28 Feb 2024 08:26:54 +0000</pubDate></item><item><title>CVE-2021-47036 | udp: skip L4 aggregation for UDP tunnel packets</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47036</link><description>In the Linux kernel, the following vulnerability has been resolved:

udp: skip L4 aggregation for UDP tunnel packets

If NETIF_F_GRO_FRAGLIST or NETIF_F_GRO_UDP_FWD are enabled, and there
are UDP tunnels available in the system, udp_gro_receive() could end-up
doing L4 aggregation (either SKB_GSO_UDP_L4 or SKB_GSO_FRAGLIST) at
the outer UDP tunnel level for packets effectively carrying and UDP
tunnel header.

That could cause inner protocol corruption. If e.g. the relevant
packets carry a vxlan header, different vxlan ids will be ignored/
aggregated to the same GSO packet. Inner headers will be ignored, too,
so that e.g. TCP over vxlan push packets will be held in the GRO
engine till the next flush, etc.

Just skip the SKB_GSO_UDP_L4 and SKB_GSO_FRAGLIST code path if the
current packet could land in a UDP tunnel, and let udp_gro_receive()
do GRO via udp_sk(sk)-&gt;gro_receive.

The check implemented in this patch is broader than what is strictly
needed, as the existing UDP tunnel could be e.g. configured on top of
a different device: we could end-up skipping GRO at-all for some packets.

Anyhow, that is a very thin corner case and covering it will add quite
a bit of complexity.

v1 -&gt; v2:
 - hopefully clarify the commit message</description><pubDate>Wed, 28 Feb 2024 08:26:54 +0000</pubDate></item><item><title>CVE-2021-47037 | ASoC: q6afe-clocks: fix reprobing of the driver</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47037</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: q6afe-clocks: fix reprobing of the driver

Q6afe-clocks driver can get reprobed. For example if the APR services
are restarted after the firmware crash. However currently Q6afe-clocks
driver will oops because hw.init will get cleared during first _probe
call. Rewrite the driver to fill the clock data at runtime rather than
using big static array of clocks.</description><pubDate>Wed, 28 Feb 2024 08:26:55 +0000</pubDate></item><item><title>CVE-2021-47038 | Bluetooth: avoid deadlock between hci_dev-&amp;gt;lock and socket lock</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47038</link><description>In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: avoid deadlock between hci_dev-&gt;lock and socket lock

Commit eab2404ba798 ("Bluetooth: Add BT_PHY socket option") added a
dependency between socket lock and hci_dev-&gt;lock that could lead to
deadlock.

It turns out that hci_conn_get_phy() is not in any way relying on hdev
being immutable during the runtime of this function, neither does it even
look at any of the members of hdev, and as such there is no need to hold
that lock.

This fixes the lockdep splat below:

 ======================================================
 WARNING: possible circular locking dependency detected
 5.12.0-rc1-00026-g73d464503354 #10 Not tainted
 ------------------------------------------------------
 bluetoothd/1118 is trying to acquire lock:
 ffff8f078383c078 (&amp;hdev-&gt;lock){+.+.}-{3:3}, at: hci_conn_get_phy+0x1c/0x150 [bluetooth]

 but task is already holding lock:
 ffff8f07e831d920 (sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP){+.+.}-{0:0}, at: l2cap_sock_getsockopt+0x8b/0x610

 which lock already depends on the new lock.

 the existing dependency chain (in reverse order) is:

 -&gt; #3 (sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP){+.+.}-{0:0}:
        lock_sock_nested+0x72/0xa0
        l2cap_sock_ready_cb+0x18/0x70 [bluetooth]
        l2cap_config_rsp+0x27a/0x520 [bluetooth]
        l2cap_sig_channel+0x658/0x1330 [bluetooth]
        l2cap_recv_frame+0x1ba/0x310 [bluetooth]
        hci_rx_work+0x1cc/0x640 [bluetooth]
        process_one_work+0x244/0x5f0
        worker_thread+0x3c/0x380
        kthread+0x13e/0x160
        ret_from_fork+0x22/0x30

 -&gt; #2 (&amp;chan-&gt;lock#2/1){+.+.}-{3:3}:
        __mutex_lock+0xa3/0xa10
        l2cap_chan_connect+0x33a/0x940 [bluetooth]
        l2cap_sock_connect+0x141/0x2a0 [bluetooth]
        __sys_connect+0x9b/0xc0
        __x64_sys_connect+0x16/0x20
        do_syscall_64+0x33/0x80
        entry_SYSCALL_64_after_hwframe+0x44/0xae

 -&gt; #1 (&amp;conn-&gt;chan_lock){+.+.}-{3:3}:
        __mutex_lock+0xa3/0xa10
        l2cap_chan_connect+0x322/0x940 [bluetooth]
        l2cap_sock_connect+0x141/0x2a0 [bluetooth]
        __sys_connect+0x9b/0xc0
        __x64_sys_connect+0x16/0x20
        do_syscall_64+0x33/0x80
        entry_SYSCALL_64_after_hwframe+0x44/0xae

 -&gt; #0 (&amp;hdev-&gt;lock){+.+.}-{3:3}:
        __lock_acquire+0x147a/0x1a50
        lock_acquire+0x277/0x3d0
        __mutex_lock+0xa3/0xa10
        hci_conn_get_phy+0x1c/0x150 [bluetooth]
        l2cap_sock_getsockopt+0x5a9/0x610 [bluetooth]
        __sys_getsockopt+0xcc/0x200
        __x64_sys_getsockopt+0x20/0x30
        do_syscall_64+0x33/0x80
        entry_SYSCALL_64_after_hwframe+0x44/0xae

 other info that might help us debug this:

 Chain exists of:
   &amp;hdev-&gt;lock --&gt; &amp;chan-&gt;lock#2/1 --&gt; sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP

  Possible unsafe locking scenario:

        CPU0                    CPU1
        ----                    ----
   lock(sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP);
                                lock(&amp;chan-&gt;lock#2/1);
                                lock(sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP);
   lock(&amp;hdev-&gt;lock);

  *** DEADLOCK ***

 1 lock held by bluetoothd/1118:
  #0: ffff8f07e831d920 (sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP){+.+.}-{0:0}, at: l2cap_sock_getsockopt+0x8b/0x610 [bluetooth]

 stack backtrace:
 CPU: 3 PID: 1118 Comm: bluetoothd Not tainted 5.12.0-rc1-00026-g73d464503354 #10
 Hardware name: LENOVO 20K5S22R00/20K5S22R00, BIOS R0IET38W (1.16 ) 05/31/2017
 Call Trace:
  dump_stack+0x7f/0xa1
  check_noncircular+0x105/0x120
  ? __lock_acquire+0x147a/0x1a50
  __lock_acquire+0x147a/0x1a50
  lock_acquire+0x277/0x3d0
  ? hci_conn_get_phy+0x1c/0x150 [bluetooth]
  ? __lock_acquire+0x2e1/0x1a50
  ? lock_is_held_type+0xb4/0x120
  ? hci_conn_get_phy+0x1c/0x150 [bluetooth]
  __mutex_lock+0xa3/0xa10
  ? hci_conn_get_phy+0x1c/0x150 [bluetooth]
  ? lock_acquire+0x277/0x3d0
  ? mark_held_locks+0x49/0x70
  ? mark_held_locks+0x49/0x70
  ? hci_conn_get_phy+0x1c/0x150 [bluetooth]
  hci_conn_get_phy+0x
---truncated---</description><pubDate>Wed, 28 Feb 2024 08:26:55 +0000</pubDate></item><item><title>CVE-2021-47039 | ataflop: potential out of bounds in do_format()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47039</link><description>In the Linux kernel, the following vulnerability has been resolved:

ataflop: potential out of bounds in do_format()

The function uses "type" as an array index:

	q = unit[drive].disk[type]-&gt;queue;

Unfortunately the bounds check on "type" isn't done until later in the
function.  Fix this by moving the bounds check to the start.</description><pubDate>Wed, 28 Feb 2024 08:26:55 +0000</pubDate></item><item><title>CVE-2021-47040 | io_uring: fix overflows checks in provide buffers</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47040</link><description>In the Linux kernel, the following vulnerability has been resolved:

io_uring: fix overflows checks in provide buffers

Colin reported before possible overflow and sign extension problems in
io_provide_buffers_prep(). As Linus pointed out previous attempt did nothing
useful, see d81269fecb8ce ("io_uring: fix provide_buffers sign extension").

Do that with help of check_&lt;op&gt;_overflow helpers. And fix struct
io_provide_buf::len type, as it doesn't make much sense to keep it
signed.</description><pubDate>Wed, 28 Feb 2024 08:26:56 +0000</pubDate></item><item><title>CVE-2021-47041 | nvmet-tcp: fix incorrect locking in state_change sk callback</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47041</link><description>In the Linux kernel, the following vulnerability has been resolved:

nvmet-tcp: fix incorrect locking in state_change sk callback

We are not changing anything in the TCP connection state so
we should not take a write_lock but rather a read lock.

This caused a deadlock when running nvmet-tcp and nvme-tcp
on the same system, where state_change callbacks on the
host and on the controller side have causal relationship
and made lockdep report on this with blktests:

================================
WARNING: inconsistent lock state
5.12.0-rc3 #1 Tainted: G          I
--------------------------------
inconsistent {IN-SOFTIRQ-W} -&gt; {SOFTIRQ-ON-R} usage.
nvme/1324 [HC0[0]:SC0[0]:HE1:SE1] takes:
ffff888363151000 (clock-AF_INET){++-?}-{2:2}, at: nvme_tcp_state_change+0x21/0x150 [nvme_tcp]
{IN-SOFTIRQ-W} state was registered at:
  __lock_acquire+0x79b/0x18d0
  lock_acquire+0x1ca/0x480
  _raw_write_lock_bh+0x39/0x80
  nvmet_tcp_state_change+0x21/0x170 [nvmet_tcp]
  tcp_fin+0x2a8/0x780
  tcp_data_queue+0xf94/0x1f20
  tcp_rcv_established+0x6ba/0x1f00
  tcp_v4_do_rcv+0x502/0x760
  tcp_v4_rcv+0x257e/0x3430
  ip_protocol_deliver_rcu+0x69/0x6a0
  ip_local_deliver_finish+0x1e2/0x2f0
  ip_local_deliver+0x1a2/0x420
  ip_rcv+0x4fb/0x6b0
  __netif_receive_skb_one_core+0x162/0x1b0
  process_backlog+0x1ff/0x770
  __napi_poll.constprop.0+0xa9/0x5c0
  net_rx_action+0x7b3/0xb30
  __do_softirq+0x1f0/0x940
  do_softirq+0xa1/0xd0
  __local_bh_enable_ip+0xd8/0x100
  ip_finish_output2+0x6b7/0x18a0
  __ip_queue_xmit+0x706/0x1aa0
  __tcp_transmit_skb+0x2068/0x2e20
  tcp_write_xmit+0xc9e/0x2bb0
  __tcp_push_pending_frames+0x92/0x310
  inet_shutdown+0x158/0x300
  __nvme_tcp_stop_queue+0x36/0x270 [nvme_tcp]
  nvme_tcp_stop_queue+0x87/0xb0 [nvme_tcp]
  nvme_tcp_teardown_admin_queue+0x69/0xe0 [nvme_tcp]
  nvme_do_delete_ctrl+0x100/0x10c [nvme_core]
  nvme_sysfs_delete.cold+0x8/0xd [nvme_core]
  kernfs_fop_write_iter+0x2c7/0x460
  new_sync_write+0x36c/0x610
  vfs_write+0x5c0/0x870
  ksys_write+0xf9/0x1d0
  do_syscall_64+0x33/0x40
  entry_SYSCALL_64_after_hwframe+0x44/0xae
irq event stamp: 10687
hardirqs last  enabled at (10687): [&lt;ffffffff9ec376bd&gt;] _raw_spin_unlock_irqrestore+0x2d/0x40
hardirqs last disabled at (10686): [&lt;ffffffff9ec374d8&gt;] _raw_spin_lock_irqsave+0x68/0x90
softirqs last  enabled at (10684): [&lt;ffffffff9f000608&gt;] __do_softirq+0x608/0x940
softirqs last disabled at (10649): [&lt;ffffffff9cdedd31&gt;] do_softirq+0xa1/0xd0

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(clock-AF_INET);
  &lt;Interrupt&gt;
    lock(clock-AF_INET);

 *** DEADLOCK ***

5 locks held by nvme/1324:
 #0: ffff8884a01fe470 (sb_writers#4){.+.+}-{0:0}, at: ksys_write+0xf9/0x1d0
 #1: ffff8886e435c090 (&amp;of-&gt;mutex){+.+.}-{3:3}, at: kernfs_fop_write_iter+0x216/0x460
 #2: ffff888104d90c38 (kn-&gt;active#255){++++}-{0:0}, at: kernfs_remove_self+0x22d/0x330
 #3: ffff8884634538d0 (&amp;queue-&gt;queue_lock){+.+.}-{3:3}, at: nvme_tcp_stop_queue+0x52/0xb0 [nvme_tcp]
 #4: ffff888363150d30 (sk_lock-AF_INET){+.+.}-{0:0}, at: inet_shutdown+0x59/0x300

stack backtrace:
CPU: 26 PID: 1324 Comm: nvme Tainted: G          I       5.12.0-rc3 #1
Hardware name: Dell Inc. PowerEdge R640/06NR82, BIOS 2.10.0 11/12/2020
Call Trace:
 dump_stack+0x93/0xc2
 mark_lock_irq.cold+0x2c/0xb3
 ? verify_lock_unused+0x390/0x390
 ? stack_trace_consume_entry+0x160/0x160
 ? lock_downgrade+0x100/0x100
 ? save_trace+0x88/0x5e0
 ? _raw_spin_unlock_irqrestore+0x2d/0x40
 mark_lock+0x530/0x1470
 ? mark_lock_irq+0x1d10/0x1d10
 ? enqueue_timer+0x660/0x660
 mark_usage+0x215/0x2a0
 __lock_acquire+0x79b/0x18d0
 ? tcp_schedule_loss_probe.part.0+0x38c/0x520
 lock_acquire+0x1ca/0x480
 ? nvme_tcp_state_change+0x21/0x150 [nvme_tcp]
 ? rcu_read_unlock+0x40/0x40
 ? tcp_mtu_probe+0x1ae0/0x1ae0
 ? kmalloc_reserve+0xa0/0xa0
 ? sysfs_file_ops+0x170/0x170
 _raw_read_lock+0x3d/0xa0
 ? nvme_tcp_state_change+0x21/0x150 [nvme_tcp]
 nvme_tcp_state_change+0x21/0x150 [nvme_tcp]
 ? sysfs_file_ops
---truncated---</description><pubDate>Wed, 28 Feb 2024 08:26:56 +0000</pubDate></item><item><title>CVE-2021-47042 | drm/amd/display: Free local data after use</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47042</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Free local data after use

Fixes the following memory leak in dc_link_construct():

unreferenced object 0xffffa03e81471400 (size 1024):
comm "amd_module_load", pid 2486, jiffies 4294946026 (age 10.544s)
hex dump (first 32 bytes):
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
backtrace:
[&lt;000000000bdf5c4a&gt;] kmem_cache_alloc_trace+0x30a/0x4a0
[&lt;00000000e7c59f0e&gt;] link_create+0xce/0xac0 [amdgpu]
[&lt;000000002fb6c072&gt;] dc_create+0x370/0x720 [amdgpu]
[&lt;000000000094d1f3&gt;] amdgpu_dm_init+0x18e/0x17a0 [amdgpu]
[&lt;00000000bec048fd&gt;] dm_hw_init+0x12/0x20 [amdgpu]
[&lt;00000000a2bb7cf6&gt;] amdgpu_device_init+0x1463/0x1e60 [amdgpu]
[&lt;0000000032d3bb13&gt;] amdgpu_driver_load_kms+0x5b/0x330 [amdgpu]
[&lt;00000000a27834f9&gt;] amdgpu_pci_probe+0x192/0x280 [amdgpu]
[&lt;00000000fec7d291&gt;] local_pci_probe+0x47/0xa0
[&lt;0000000055dbbfa7&gt;] pci_device_probe+0xe3/0x180
[&lt;00000000815da970&gt;] really_probe+0x1c4/0x4e0
[&lt;00000000b4b6974b&gt;] driver_probe_device+0x62/0x150
[&lt;000000000f9ecc61&gt;] device_driver_attach+0x58/0x60
[&lt;000000000f65c843&gt;] __driver_attach+0xd6/0x150
[&lt;000000002f5e3683&gt;] bus_for_each_dev+0x6a/0xc0
[&lt;00000000a1cfc897&gt;] driver_attach+0x1e/0x20</description><pubDate>Wed, 28 Feb 2024 08:26:57 +0000</pubDate></item><item><title>CVE-2021-47043 | media: venus: core: Fix some resource leaks in the error path of &amp;#x27;venus_probe()&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47043</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: venus: core: Fix some resource leaks in the error path of 'venus_probe()'

If an error occurs after a successful 'of_icc_get()' call, it must be
undone.

Use 'devm_of_icc_get()' instead of 'of_icc_get()' to avoid the leak.
Update the remove function accordingly and axe the now unneeded
'icc_put()' calls.</description><pubDate>Wed, 28 Feb 2024 08:26:57 +0000</pubDate></item><item><title>CVE-2021-47044 | sched/fair: Fix shift-out-of-bounds in load_balance()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47044</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched/fair: Fix shift-out-of-bounds in load_balance()

Syzbot reported a handful of occurrences where an sd-&gt;nr_balance_failed can
grow to much higher values than one would expect.

A successful load_balance() resets it to 0; a failed one increments
it. Once it gets to sd-&gt;cache_nice_tries + 3, this *should* trigger an
active balance, which will either set it to sd-&gt;cache_nice_tries+1 or reset
it to 0. However, in case the to-be-active-balanced task is not allowed to
run on env-&gt;dst_cpu, then the increment is done without any further
modification.

This could then be repeated ad nauseam, and would explain the absurdly high
values reported by syzbot (86, 149). VincentG noted there is value in
letting sd-&gt;cache_nice_tries grow, so the shift itself should be
fixed. That means preventing:

  """
  If the value of the right operand is negative or is greater than or equal
  to the width of the promoted left operand, the behavior is undefined.
  """

Thus we need to cap the shift exponent to
  BITS_PER_TYPE(typeof(lefthand)) - 1.

I had a look around for other similar cases via coccinelle:

  @expr@
  position pos;
  expression E1;
  expression E2;
  @@
  (
  E1 &gt;&gt; E2@pos
  |
  E1 &gt;&gt; E2@pos
  )

  @cst depends on expr@
  position pos;
  expression expr.E1;
  constant cst;
  @@
  (
  E1 &gt;&gt; cst@pos
  |
  E1 &lt;&lt; cst@pos
  )

  @script:python depends on !cst@
  pos &lt;&lt; expr.pos;
  exp &lt;&lt; expr.E2;
  @@
  # Dirty hack to ignore constexpr
  if exp.upper() != exp:
     coccilib.report.print_report(pos[0], "Possible UB shift here")

The only other match in kernel/sched is rq_clock_thermal() which employs
sched_thermal_decay_shift, and that exponent is already capped to 10, so
that one is fine.</description><pubDate>Wed, 28 Feb 2024 08:26:57 +0000</pubDate></item><item><title>CVE-2021-47045 | scsi: lpfc: Fix null pointer dereference in lpfc_prep_els_iocb()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47045</link><description>In the Linux kernel, the following vulnerability has been resolved:

scsi: lpfc: Fix null pointer dereference in lpfc_prep_els_iocb()

It is possible to call lpfc_issue_els_plogi() passing a did for which no
matching ndlp is found. A call is then made to lpfc_prep_els_iocb() with a
null pointer to a lpfc_nodelist structure resulting in a null pointer
dereference.

Fix by returning an error status if no valid ndlp is found. Fix up comments
regarding ndlp reference counting.</description><pubDate>Wed, 28 Feb 2024 08:26:58 +0000</pubDate></item><item><title>CVE-2021-47046 | drm/amd/display: Fix off by one in hdmi_14_process_transaction()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47046</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix off by one in hdmi_14_process_transaction()

The hdcp_i2c_offsets[] array did not have an entry for
HDCP_MESSAGE_ID_WRITE_CONTENT_STREAM_TYPE so it led to an off by one
read overflow.  I added an entry and copied the 0x0 value for the offset
from similar code in drivers/gpu/drm/amd/display/modules/hdcp/hdcp_ddc.c.

I also declared several of these arrays as having HDCP_MESSAGE_ID_MAX
entries.  This doesn't change the code, but it's just a belt and
suspenders approach to try future proof the code.</description><pubDate>Wed, 28 Feb 2024 08:26:58 +0000</pubDate></item><item><title>CVE-2021-47047 | spi: spi-zynqmp-gqspi: return -ENOMEM if dma_map_single fails</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47047</link><description>In the Linux kernel, the following vulnerability has been resolved:

spi: spi-zynqmp-gqspi: return -ENOMEM if dma_map_single fails

The spi controller supports 44-bit address space on AXI in DMA mode,
so set dma_addr_t width to 44-bit to avoid using a swiotlb mapping.
In addition, if dma_map_single fails, it should return immediately
instead of continuing doing the DMA operation which bases on invalid
address.

This fixes the following crash which occurs in reading a big block
from flash:

[  123.633577] zynqmp-qspi ff0f0000.spi: swiotlb buffer is full (sz: 4194304 bytes), total 32768 (slots), used 0 (slots)
[  123.644230] zynqmp-qspi ff0f0000.spi: ERR:rxdma:memory not mapped
[  123.784625] Unable to handle kernel paging request at virtual address 00000000003fffc0
[  123.792536] Mem abort info:
[  123.795313]   ESR = 0x96000145
[  123.798351]   EC = 0x25: DABT (current EL), IL = 32 bits
[  123.803655]   SET = 0, FnV = 0
[  123.806693]   EA = 0, S1PTW = 0
[  123.809818] Data abort info:
[  123.812683]   ISV = 0, ISS = 0x00000145
[  123.816503]   CM = 1, WnR = 1
[  123.819455] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000805047000
[  123.825887] [00000000003fffc0] pgd=0000000803b45003, p4d=0000000803b45003, pud=0000000000000000
[  123.834586] Internal error: Oops: 96000145 [#1] PREEMPT SMP</description><pubDate>Wed, 28 Feb 2024 08:26:59 +0000</pubDate></item><item><title>CVE-2021-47048 | spi: spi-zynqmp-gqspi: fix use-after-free in zynqmp_qspi_exec_op</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47048</link><description>In the Linux kernel, the following vulnerability has been resolved:

spi: spi-zynqmp-gqspi: fix use-after-free in zynqmp_qspi_exec_op

When handling op-&gt;addr, it is using the buffer "tmpbuf" which has been
freed. This will trigger a use-after-free KASAN warning. Let's use
temporary variables to store op-&gt;addr.val and op-&gt;cmd.opcode to fix
this issue.</description><pubDate>Wed, 28 Feb 2024 08:26:59 +0000</pubDate></item><item><title>CVE-2021-47049 | Drivers: hv: vmbus: Use after free in __vmbus_open()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47049</link><description>In the Linux kernel, the following vulnerability has been resolved:

Drivers: hv: vmbus: Use after free in __vmbus_open()

The "open_info" variable is added to the &amp;vmbus_connection.chn_msg_list,
but the error handling frees "open_info" without removing it from the
list.  This will result in a use after free.  First remove it from the
list, and then free it.</description><pubDate>Wed, 28 Feb 2024 08:26:59 +0000</pubDate></item><item><title>CVE-2021-47050 | memory: renesas-rpc-if: fix possible NULL pointer dereference of resource</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47050</link><description>In the Linux kernel, the following vulnerability has been resolved:

memory: renesas-rpc-if: fix possible NULL pointer dereference of resource

The platform_get_resource_byname() can return NULL which would be
immediately dereferenced by resource_size().  Instead dereference it
after validating the resource.

Addresses-Coverity: Dereference null return value</description><pubDate>Wed, 28 Feb 2024 08:27:00 +0000</pubDate></item><item><title>CVE-2021-47051 | spi: fsl-lpspi: Fix PM reference leak in lpspi_prepare_xfer_hardware()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47051</link><description>In the Linux kernel, the following vulnerability has been resolved:

spi: fsl-lpspi: Fix PM reference leak in lpspi_prepare_xfer_hardware()

pm_runtime_get_sync will increment pm usage counter even it failed.
Forgetting to putting operation will result in reference leak here.
Fix it by replacing it with pm_runtime_resume_and_get to keep usage
counter balanced.</description><pubDate>Wed, 28 Feb 2024 08:27:00 +0000</pubDate></item><item><title>CVE-2021-47052 | crypto: sa2ul - Fix memory leak of rxd</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47052</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: sa2ul - Fix memory leak of rxd

There are two error return paths that are not freeing rxd and causing
memory leaks.  Fix these.

Addresses-Coverity: ("Resource leak")</description><pubDate>Wed, 28 Feb 2024 08:27:01 +0000</pubDate></item><item><title>CVE-2021-47053 | crypto: sun8i-ss - Fix memory leak of pad</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47053</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: sun8i-ss - Fix memory leak of pad

It appears there are several failure return paths that don't seem
to be free'ing pad. Fix these.

Addresses-Coverity: ("Resource leak")</description><pubDate>Wed, 28 Feb 2024 08:27:01 +0000</pubDate></item><item><title>CVE-2024-1388 | The Yuki theme for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the reset_customizer_op...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1388</link><description>The Yuki theme for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the reset_customizer_options() function in all versions up to, and including, 1.3.13. This makes it possible for authenticated attackers, with subscriber-level access and above, to reset the theme's settings.</description><pubDate>Wed, 28 Feb 2024 06:51:54 +0000</pubDate></item><item><title>CVE-2024-1568 | The Seraphinite Accelerator plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 2.20.52 ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1568</link><description>The Seraphinite Accelerator plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 2.20.52 via the OnAdminApi_HtmlCheck function. This makes it possible for authenticated attackers, with subscriber-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.</description><pubDate>Wed, 28 Feb 2024 06:51:54 +0000</pubDate></item><item><title>CVE-2024-1943 | The Yuki theme for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including 1.3.14. This is due to missing...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1943</link><description>The Yuki theme for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including 1.3.14. This is due to missing or incorrect nonce validation on the reset_customizer_options() function. This makes it possible for unauthenticated attackers to reset the themes settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 28 Feb 2024 06:51:55 +0000</pubDate></item><item><title>CVE-2024-27913 | ospf_te_parse_te in ospfd/ospf_te.c in FRRouting (FRR) through 9.1 allows remote attackers to cause a denial of service (ospfd daemon crash)...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27913</link><description>ospf_te_parse_te in ospfd/ospf_te.c in FRRouting (FRR) through 9.1 allows remote attackers to cause a denial of service (ospfd daemon crash) via a malformed OSPF LSA packet, because of an attempted access to a missing attribute field.</description><pubDate>Wed, 28 Feb 2024 06:38:02 +0000</pubDate></item><item><title>CVE-2024-22723 | Webtrees 2.1.18 is vulnerable to Directory Traversal. By manipulating the "media_folder" parameter in the URL, an attacker (in this case, an...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22723</link><description>Webtrees 2.1.18 is vulnerable to Directory Traversal. By manipulating the "media_folder" parameter in the URL, an attacker (in this case, an administrator) can navigate beyond the intended directory (the 'media/' directory) to access sensitive files in other parts of the application's file system.</description><pubDate>Wed, 28 Feb 2024 06:20:25 +0000</pubDate></item><item><title>CVE-2024-0550 | Privileged User using traversal to read system files</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0550</link><description>A user who is privileged already `manager` or `admin` can set their profile picture via the frontend API using a relative filepath to then user the PFP GET API to download any valid files.

The attacker would have to have been granted privileged permissions to the system before executing this attack.</description><pubDate>Wed, 28 Feb 2024 04:56:55 +0000</pubDate></item><item><title>CVE-2023-50735 | A vulnerability has been identified in the PostScript interpreter in various Lexmark devices.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50735</link><description>A heap corruption vulnerability has been identified in PostScript interpreter in various Lexmark devices. The vulnerability can be leveraged by an attacker to execute arbitrary code.</description><pubDate>Wed, 28 Feb 2024 02:46:02 +0000</pubDate></item><item><title>CVE-2023-50736 | A vulnerability has been identified in the PostScript interpreter in various Lexmark devices.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50736</link><description>A memory corruption vulnerability has been identified in PostScript interpreter in various Lexmark devices. The vulnerability can be leveraged by an attacker to execute arbitrary code.</description><pubDate>Wed, 28 Feb 2024 02:46:02 +0000</pubDate></item><item><title>CVE-2023-50737 | An input validation vulnerability in the SE Menu allows an attacker to execute arbitrary code.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50737</link><description>The SE menu contains information used by Lexmark to diagnose device errors. A vulnerability in one of the SE menu routines can be leveraged by an attacker to execute arbitrary code.</description><pubDate>Wed, 28 Feb 2024 02:46:03 +0000</pubDate></item><item><title>CVE-2023-50734 | A vulnerability has been identified in the PostScript interpreter in various Lexmark devices.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50734</link><description>A buffer overflow vulnerability has been identified in PostScript interpreter in various Lexmark devices. The vulnerability can be leveraged by an attacker to execute arbitrary code.</description><pubDate>Wed, 28 Feb 2024 02:03:48 +0000</pubDate></item><item><title>CVE-2023-50303 | IBM InfoSphere Information Server cross-site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50303</link><description>IBM InfoSphere Information Server 11.7 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  273333.</description><pubDate>Wed, 28 Feb 2024 00:27:50 +0000</pubDate></item><item><title>CVE-2024-1892 | ReDos vulnerability of XMLFeedSpider in GitHub repository scrapy/scrapy</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1892</link><description>Parts of the Scrapy API were found to be vulnerable to a ReDoS attack. Handling a malicious response could cause extreme CPU and memory usage during the parsing of its content, due to the use of vulnerable regular expressions for that parsing.</description><pubDate>Wed, 28 Feb 2024 00:27:50 +0000</pubDate></item><item><title>CVE-2024-1932 | Unrestricted Upload of File with Dangerous Type in freescout-helpdesk/freescout</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1932</link><description>Unrestricted Upload of File with Dangerous Type in freescout-helpdesk/freescout</description><pubDate>Wed, 28 Feb 2024 00:27:51 +0000</pubDate></item></channel></rss>