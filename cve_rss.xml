<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Tue, 21 Jan 2025 22:38:52 +0000</lastBuildDate><item><title>CVE-2024-24416 | The Linux Foundation Magma &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90fec2dea486) was discovered to contain a buffer overf...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24416</link><description>The Linux Foundation Magma &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90fec2dea486) was discovered to contain a buffer overflow in the decode_access_point_name_ie function at /3gpp/3gpp_24.008_sm_ies.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted NAS packet.</description><pubDate>Tue, 21 Jan 2025 22:38:54 +0000</pubDate></item><item><title>CVE-2024-24419 | The Linux Foundation Magma &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90fec2dea486) was discovered to contain a buffer overf...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24419</link><description>The Linux Foundation Magma &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90fec2dea486) was discovered to contain a buffer overflow in the decode_traffic_flow_template_packet_filter function at /3gpp/3gpp_24.008_sm_ies.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted NAS packet.</description><pubDate>Tue, 21 Jan 2025 22:38:54 +0000</pubDate></item><item><title>CVE-2023-37024 | A reachable assertion in the Mobile Management Entity (MME) of Magma versions &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90f...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37024</link><description>A reachable assertion in the Mobile Management Entity (MME) of Magma versions &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90fec2dea486) allows remote attackers to crash the MME with an unauthenticated cellphone by sending a NAS packet containing an `Emergency Number List` Information Element.</description><pubDate>Tue, 21 Jan 2025 22:38:55 +0000</pubDate></item><item><title>CVE-2023-37029 | Magma versions &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90fec2dea486) are susceptible to an assertion-based crash when an ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37029</link><description>Magma versions &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90fec2dea486) are susceptible to an assertion-based crash when an oversized NAS packet is received. An attacker may leverage this behavior to repeatedly crash the MME via either a compromised base station or via an unauthenticated cellphone within range of a base station managed by the MME, causing a denial of service.</description><pubDate>Tue, 21 Jan 2025 22:38:55 +0000</pubDate></item><item><title>CVE-2023-37032 | A Stack-based buffer overflow in the Mobile Management Entity (MME) of Magma versions &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-37032</link><description>A Stack-based buffer overflow in the Mobile Management Entity (MME) of Magma versions &lt;= 1.8.0 (fixed in v1.9 commit 08472ba98b8321f802e95f5622fa90fec2dea486) allows remote attackers to crash the MME with an unauthenticated cellphone by sending a NAS packet containing an oversized `Emergency Number List` Information Element.</description><pubDate>Tue, 21 Jan 2025 22:38:56 +0000</pubDate></item><item><title>CVE-2024-24427 | A reachable assertion in the amf_ue_set_suci function of Open5GS &lt;= 2.6.4 allows attackers to cause a Denial of Service (DoS) via a crafted ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24427</link><description>A reachable assertion in the amf_ue_set_suci function of Open5GS &lt;= 2.6.4 allows attackers to cause a Denial of Service (DoS) via a crafted NAS packet.</description><pubDate>Tue, 21 Jan 2025 22:29:18 +0000</pubDate></item><item><title>CVE-2024-24428 | A reachable assertion in the oai_nas_5gmm_decode function of Open5GS &lt;= 2.6.4 allows attackers to cause a Denial of Service (DoS) via a craf...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24428</link><description>A reachable assertion in the oai_nas_5gmm_decode function of Open5GS &lt;= 2.6.4 allows attackers to cause a Denial of Service (DoS) via a crafted NGAP packet.</description><pubDate>Tue, 21 Jan 2025 22:29:18 +0000</pubDate></item><item><title>CVE-2024-24443 | An uninitialized pointer dereference in the ngap_handle_pdu_session_resource_setup_response routine of OpenAirInterface CN5G AMF (oai-cn5g-a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24443</link><description>An uninitialized pointer dereference in the ngap_handle_pdu_session_resource_setup_response routine of OpenAirInterface CN5G AMF (oai-cn5g-amf) up to v2.0.0 allows attackers to cause a Denial of Service (DoS) via a crafted PDU Session Resource Setup Response.</description><pubDate>Tue, 21 Jan 2025 22:29:19 +0000</pubDate></item><item><title>CVE-2023-50733 | A Server-Side Request Forgery (SSRF) vulnerability exists in newer Lexmark devices.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50733</link><description>A Server-Side Request Forgery (SSRF) vulnerability has been identified in the Web Services feature of newer
Lexmark devices.</description><pubDate>Tue, 21 Jan 2025 22:29:20 +0000</pubDate></item><item><title>CVE-2024-24442 | A NULL pointer dereference in the ngap_app::handle_receive routine of OpenAirInterface CN5G AMF (oai-cn5g-amf) up to v2.0.0 allows attackers...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24442</link><description>A NULL pointer dereference in the ngap_app::handle_receive routine of OpenAirInterface CN5G AMF (oai-cn5g-amf) up to v2.0.0 allows attackers to cause a Denial of Service (DoS) via a crafted NGAP message.</description><pubDate>Tue, 21 Jan 2025 22:29:20 +0000</pubDate></item><item><title>CVE-2024-24444 | Improper file descriptor handling for closed connections in OpenAirInterface CN5G AMF (oai-cn5g-amf) up to v2.0.0 allows attackers to cause ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24444</link><description>Improper file descriptor handling for closed connections in OpenAirInterface CN5G AMF (oai-cn5g-amf) up to v2.0.0 allows attackers to cause a Denial of Service (DoS) by repeatedly establishing SCTP connections with the N2 interface.</description><pubDate>Tue, 21 Jan 2025 22:29:20 +0000</pubDate></item><item><title>CVE-2024-24451 | A stack overflow in the sctp_server::sctp_receiver_thread component of OpenAirInterface CN5G AMF (oai-cn5g-amf) up to v2.0.0 allows attacker...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24451</link><description>A stack overflow in the sctp_server::sctp_receiver_thread component of OpenAirInterface CN5G AMF (oai-cn5g-amf) up to v2.0.0 allows attackers to cause a Denial of Service (DoS) by repeatedly establishing SCTP connections with the N2 interface.</description><pubDate>Tue, 21 Jan 2025 22:29:21 +0000</pubDate></item><item><title>CVE-2024-24445 | OpenAirInterface CN5G AMF (oai-cn5g-amf) &lt;= 2.0.0 contains a null dereference in its handling of unsupported NGAP protocol messages which al...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24445</link><description>OpenAirInterface CN5G AMF (oai-cn5g-amf) &lt;= 2.0.0 contains a null dereference in its handling of unsupported NGAP protocol messages which allows an attacker with network-adjacent access to the AMF to carry out denial of service. When a procedure code/presence field tuple is received that is unsupported, OAI indexes into a null function pointer and subsequently dereferences it.</description><pubDate>Tue, 21 Jan 2025 22:10:22 +0000</pubDate></item><item><title>CVE-2023-27112 | pearProjectApi v2.8.10 was discovered to contain a SQL injection vulnerability via the projectCode parameter at project.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-27112</link><description>pearProjectApi v2.8.10 was discovered to contain a SQL injection vulnerability via the projectCode parameter at project.php.</description><pubDate>Tue, 21 Jan 2025 21:42:38 +0000</pubDate></item><item><title>CVE-2023-27113 | pearProjectApi v2.8.10 was discovered to contain a SQL injection vulnerability via the organizationCode parameter at project.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-27113</link><description>pearProjectApi v2.8.10 was discovered to contain a SQL injection vulnerability via the organizationCode parameter at project.php.</description><pubDate>Tue, 21 Jan 2025 21:42:39 +0000</pubDate></item><item><title>CVE-2024-45479 | Apache Ranger: SSRF in Edit Service page - Add logic to filter requests to localhost</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45479</link><description>SSRF vulnerability in Edit Service Page of Apache Ranger UI in Apache Ranger Version 2.4.0.
Users are recommended to upgrade to version Apache Ranger 2.5.0, which fixes this issue.</description><pubDate>Tue, 21 Jan 2025 21:35:34 +0000</pubDate></item><item><title>CVE-2024-45478 | Apache Ranger: Stored XSS in Edit Service page - Add logic to validate user input</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45478</link><description>Stored XSS vulnerability in Edit Service Page of Apache Ranger UI in Apache Ranger Version 2.4.0.
Users are recommended to upgrade to version Apache Ranger 2.5.0, which fixes this issue.</description><pubDate>Tue, 21 Jan 2025 21:27:38 +0000</pubDate></item><item><title>CVE-2024-51941 | Apache Ambari: Remote Code Injection in Ambari Metrics and AMS Alerts</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51941</link><description>A remote code injection vulnerability exists in the Ambari Metrics and 
AMS Alerts feature, allowing authenticated users to inject and execute 
arbitrary code. The vulnerability occurs when processing alert 
definitions, where malicious input can be injected into the alert script
 execution path. An attacker with authenticated access can exploit this 
vulnerability to execute arbitrary commands on the server. The issue has
 been fixed in the latest versions of Ambari.</description><pubDate>Tue, 21 Jan 2025 21:27:39 +0000</pubDate></item><item><title>CVE-2025-23195 | Apache Ambari: XML External Entity (XXE) Vulnerability in Ambari/Oozie</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23195</link><description>An XML External Entity (XXE) vulnerability exists in the Ambari/Oozie 
project, allowing an attacker to inject malicious XML entities. This 
vulnerability occurs due to insecure parsing of XML input using the 
`DocumentBuilderFactory` class without disabling external entity 
resolution. An attacker can exploit this vulnerability to read arbitrary
 files on the server or perform server-side request forgery (SSRF) 
attacks. The issue has been fixed in both Ambari 2.7.9 and the trunk 
branch.</description><pubDate>Tue, 21 Jan 2025 21:27:39 +0000</pubDate></item><item><title>CVE-2025-23196 | Apache Ambari: Code Injection Vulnerability in Ambari Alert Definition</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23196</link><description>A code injection vulnerability exists in the Ambari Alert Definition 
feature, allowing authenticated users to inject and execute arbitrary 
shell commands. The vulnerability arises when defining alert scripts, 
where the script filename field is executed using `sh -c`. An attacker 
with authenticated access can exploit this vulnerability to inject 
malicious commands, leading to remote code execution on the server. The 
issue has been fixed in the latest versions of Ambari.</description><pubDate>Tue, 21 Jan 2025 21:27:40 +0000</pubDate></item><item><title>CVE-2024-55958 | Northern.tech CFEngine Enterprise Mission Portal 3.24.0, 3.21.5, and below allows XSS. The fixed versions are 3.24.1 and 3.21.6.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-55958</link><description>Northern.tech CFEngine Enterprise Mission Portal 3.24.0, 3.21.5, and below allows XSS. The fixed versions are 3.24.1 and 3.21.6.</description><pubDate>Tue, 21 Jan 2025 21:15:33 +0000</pubDate></item><item><title>CVE-2024-55959 | Northern.tech Mender Client 4.x before 4.0.5 has Insecure Permissions.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-55959</link><description>Northern.tech Mender Client 4.x before 4.0.5 has Insecure Permissions.</description><pubDate>Tue, 21 Jan 2025 21:15:34 +0000</pubDate></item><item><title>CVE-2024-21245 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21245</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:12 +0000</pubDate></item><item><title>CVE-2024-48392 | OrangeScrum v2.0.11 is vulnerable to Cross Site Scripting (XSS). An attacker can inject malicious JavaScript code into user email due to lac...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48392</link><description>OrangeScrum v2.0.11 is vulnerable to Cross Site Scripting (XSS). An attacker can inject malicious JavaScript code into user email due to lack of input validation, which could lead to account takeover.</description><pubDate>Tue, 21 Jan 2025 20:59:12 +0000</pubDate></item><item><title>CVE-2025-21489 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21489</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:13 +0000</pubDate></item><item><title>CVE-2025-21490 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21490</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:13 +0000</pubDate></item><item><title>CVE-2025-21491 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21491</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:14 +0000</pubDate></item><item><title>CVE-2025-21492 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21492</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:14 +0000</pubDate></item><item><title>CVE-2025-21493 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21493</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:14 +0000</pubDate></item><item><title>CVE-2025-21494 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21494</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:15 +0000</pubDate></item><item><title>CVE-2025-21495 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21495</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:15 +0000</pubDate></item><item><title>CVE-2025-21497 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21497</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:16 +0000</pubDate></item><item><title>CVE-2025-21498 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21498</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:16 +0000</pubDate></item><item><title>CVE-2025-21499 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21499</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:16 +0000</pubDate></item><item><title>CVE-2025-21500 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21500</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:17 +0000</pubDate></item><item><title>CVE-2025-21501 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21501</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:17 +0000</pubDate></item><item><title>CVE-2025-21502 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21502</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:18 +0000</pubDate></item><item><title>CVE-2025-21503 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21503</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:18 +0000</pubDate></item><item><title>CVE-2025-21504 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21504</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:19 +0000</pubDate></item><item><title>CVE-2025-21505 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21505</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:19 +0000</pubDate></item><item><title>CVE-2025-21506 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21506</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:19 +0000</pubDate></item><item><title>CVE-2025-21507 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21507</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:20 +0000</pubDate></item><item><title>CVE-2025-21508 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21508</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:20 +0000</pubDate></item><item><title>CVE-2025-21509 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21509</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:20 +0000</pubDate></item><item><title>CVE-2025-21510 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21510</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:21 +0000</pubDate></item><item><title>CVE-2025-21511 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21511</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:21 +0000</pubDate></item><item><title>CVE-2025-21512 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21512</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:22 +0000</pubDate></item><item><title>CVE-2025-21513 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21513</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:22 +0000</pubDate></item><item><title>CVE-2025-21514 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21514</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:22 +0000</pubDate></item><item><title>CVE-2025-21515 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21515</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:23 +0000</pubDate></item><item><title>CVE-2025-21516 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21516</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:23 +0000</pubDate></item><item><title>CVE-2025-21517 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21517</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:24 +0000</pubDate></item><item><title>CVE-2025-21518 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21518</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:24 +0000</pubDate></item><item><title>CVE-2025-21519 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21519</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:24 +0000</pubDate></item><item><title>CVE-2025-21520 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21520</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:25 +0000</pubDate></item><item><title>CVE-2025-21521 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21521</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:25 +0000</pubDate></item><item><title>CVE-2025-21522 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21522</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:26 +0000</pubDate></item><item><title>CVE-2025-21523 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21523</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:26 +0000</pubDate></item><item><title>CVE-2025-21524 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21524</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:26 +0000</pubDate></item><item><title>CVE-2025-21525 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21525</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:27 +0000</pubDate></item><item><title>CVE-2025-21526 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21526</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:27 +0000</pubDate></item><item><title>CVE-2025-21527 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21527</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:28 +0000</pubDate></item><item><title>CVE-2025-21528 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21528</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:28 +0000</pubDate></item><item><title>CVE-2025-21529 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21529</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:28 +0000</pubDate></item><item><title>CVE-2025-21530 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21530</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:29 +0000</pubDate></item><item><title>CVE-2025-21531 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21531</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:29 +0000</pubDate></item><item><title>CVE-2025-21532 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21532</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:29 +0000</pubDate></item><item><title>CVE-2025-21533 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21533</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:30 +0000</pubDate></item><item><title>CVE-2025-21534 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21534</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:30 +0000</pubDate></item><item><title>CVE-2025-21535 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21535</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:31 +0000</pubDate></item><item><title>CVE-2025-21536 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21536</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:31 +0000</pubDate></item><item><title>CVE-2025-21537 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21537</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:31 +0000</pubDate></item><item><title>CVE-2025-21538 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21538</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:32 +0000</pubDate></item><item><title>CVE-2025-21539 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21539</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:32 +0000</pubDate></item><item><title>CVE-2025-21540 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21540</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:33 +0000</pubDate></item><item><title>CVE-2025-21541 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21541</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:33 +0000</pubDate></item><item><title>CVE-2025-21542 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21542</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:33 +0000</pubDate></item><item><title>CVE-2025-21543 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21543</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:34 +0000</pubDate></item><item><title>CVE-2025-21544 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21544</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:34 +0000</pubDate></item><item><title>CVE-2025-21545 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21545</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:34 +0000</pubDate></item><item><title>CVE-2025-21546 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21546</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:35 +0000</pubDate></item><item><title>CVE-2025-21547 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21547</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:35 +0000</pubDate></item><item><title>CVE-2025-21548 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21548</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:36 +0000</pubDate></item><item><title>CVE-2025-21549 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21549</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:36 +0000</pubDate></item><item><title>CVE-2025-21550 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21550</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:36 +0000</pubDate></item><item><title>CVE-2025-21551 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21551</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:37 +0000</pubDate></item><item><title>CVE-2025-21552 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21552</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:37 +0000</pubDate></item><item><title>CVE-2025-21553 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21553</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:38 +0000</pubDate></item><item><title>CVE-2025-21554 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21554</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:38 +0000</pubDate></item><item><title>CVE-2025-21555 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21555</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:38 +0000</pubDate></item><item><title>CVE-2025-21556 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21556</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:39 +0000</pubDate></item><item><title>CVE-2025-21557 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21557</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:39 +0000</pubDate></item><item><title>CVE-2025-21558 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21558</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:39 +0000</pubDate></item><item><title>CVE-2025-21559 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21559</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:40 +0000</pubDate></item><item><title>CVE-2025-21560 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21560</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:40 +0000</pubDate></item><item><title>CVE-2025-21561 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21561</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:41 +0000</pubDate></item><item><title>CVE-2025-21562 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21562</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:41 +0000</pubDate></item><item><title>CVE-2025-21563 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21563</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:41 +0000</pubDate></item><item><title>CVE-2025-21564 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21564</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:42 +0000</pubDate></item><item><title>CVE-2025-21565 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21565</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:42 +0000</pubDate></item><item><title>CVE-2025-21566 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21566</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:43 +0000</pubDate></item><item><title>CVE-2025-21567 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21567</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:43 +0000</pubDate></item><item><title>CVE-2025-21568 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21568</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:43 +0000</pubDate></item><item><title>CVE-2025-21569 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21569</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:44 +0000</pubDate></item><item><title>CVE-2025-21570 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21570</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:44 +0000</pubDate></item><item><title>CVE-2025-21571 | No english description</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21571</link><description>No english description</description><pubDate>Tue, 21 Jan 2025 20:59:44 +0000</pubDate></item><item><title>CVE-2024-57360 | https://www.gnu.org/software/binutils/ nm &gt;=2.43 is affected by: Incorrect Access Control. The type of exploitation is: local. The component...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57360</link><description>https://www.gnu.org/software/binutils/ nm &gt;=2.43 is affected by: Incorrect Access Control. The type of exploitation is: local. The component is: `nm --without-symbol-version` function.</description><pubDate>Tue, 21 Jan 2025 20:52:19 +0000</pubDate></item><item><title>CVE-2024-57541 | Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (ipv6_protect_status) is copied to ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57541</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (ipv6_protect_status) is copied to the stack without length verification.</description><pubDate>Tue, 21 Jan 2025 20:45:13 +0000</pubDate></item><item><title>CVE-2024-57542 | Linksys E8450 v1.2.00.360516 was discovered to contain a command injection vulnerability via the field id_email_check_btn.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57542</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a command injection vulnerability via the field id_email_check_btn.</description><pubDate>Tue, 21 Jan 2025 20:45:13 +0000</pubDate></item><item><title>CVE-2024-57543 | Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (dhcpstart_ip) is copied to the sta...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57543</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (dhcpstart_ip) is copied to the stack without length verification.</description><pubDate>Tue, 21 Jan 2025 20:45:13 +0000</pubDate></item><item><title>CVE-2024-57544 | Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (lan_ipaddr) is copied to the stack...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57544</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (lan_ipaddr) is copied to the stack without length verification.</description><pubDate>Tue, 21 Jan 2025 20:45:14 +0000</pubDate></item><item><title>CVE-2024-57545 | Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (hidden_dhcp_num) is copied to the ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57545</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (hidden_dhcp_num) is copied to the stack without length verification.</description><pubDate>Tue, 21 Jan 2025 20:45:14 +0000</pubDate></item><item><title>CVE-2024-57536 | Linksys E8450 v1.2.00.360516 was discovered to contain a command injection vulnerability via wizard_status.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57536</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a command injection vulnerability via wizard_status.</description><pubDate>Tue, 21 Jan 2025 20:38:20 +0000</pubDate></item><item><title>CVE-2024-57537 | Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (page) is copied to the stack witho...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57537</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (page) is copied to the stack without length verification.</description><pubDate>Tue, 21 Jan 2025 20:38:21 +0000</pubDate></item><item><title>CVE-2024-57538 | Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (anonymous_protect_status) is copie...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57538</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (anonymous_protect_status) is copied to the stack without length verification.</description><pubDate>Tue, 21 Jan 2025 20:38:21 +0000</pubDate></item><item><title>CVE-2024-57539 | Linksys E8450 v1.2.00.360516 was discovered to contain a command injection vulnerability via userEmail.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57539</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a command injection vulnerability via userEmail.</description><pubDate>Tue, 21 Jan 2025 20:38:21 +0000</pubDate></item><item><title>CVE-2024-57540 | Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (action) is copied to the stack wit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57540</link><description>Linksys E8450 v1.2.00.360516 was discovered to contain a buffer overflow vulnerability. The parsed field (action) is copied to the stack without length verification.</description><pubDate>Tue, 21 Jan 2025 20:38:22 +0000</pubDate></item><item><title>CVE-2024-42936 | The mqlink.elf is service component in Ruijie RG-EW300N with firmware ReyeeOS 1.300.1422 is vulnerable to Remote Code Execution via a modifi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42936</link><description>The mqlink.elf is service component in Ruijie RG-EW300N with firmware ReyeeOS 1.300.1422 is vulnerable to Remote Code Execution via a modified MQTT broker message.</description><pubDate>Tue, 21 Jan 2025 19:28:35 +0000</pubDate></item><item><title>CVE-2025-24024 | Mjolnir v1.9.0 accepts commands from any room</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24024</link><description>Mjolnir is a moderation tool for Matrix. Mjolnir v1.9.0 responds to management commands from any room the bot is member of. This can allow users who aren't operators of the bot to use the bot's functions, including server administration components if enabled. Version 1.9.1 reverts the feature that introduced the bug, and version 1.9.2 reintroduces the feature safely. Downgrading to version 1.8.3 is recommended if upgrading to 1.9.1 or higher isn't possible.</description><pubDate>Tue, 21 Jan 2025 19:28:36 +0000</pubDate></item><item><title>CVE-2023-45908 | Homarr before v0.14.0 was discovered to contain a stored cross-site scripting (XSS) vulnerability via the Notebook widget.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-45908</link><description>Homarr before v0.14.0 was discovered to contain a stored cross-site scripting (XSS) vulnerability via the Notebook widget.</description><pubDate>Tue, 21 Jan 2025 19:21:38 +0000</pubDate></item><item><title>CVE-2024-55504 | An issue in RAR Extractor - Unarchiver Free and Pro v.6.4.0 allows local attackers to inject arbitrary code potentially leading to remote co...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-55504</link><description>An issue in RAR Extractor - Unarchiver Free and Pro v.6.4.0 allows local attackers to inject arbitrary code potentially leading to remote control and unauthorized access to sensitive user data via the exploit_combined.dylib component on MacOS.</description><pubDate>Tue, 21 Jan 2025 19:21:39 +0000</pubDate></item><item><title>CVE-2024-51417 | An issue in System.Linq.Dynamic.Core Latest version v.1.4.6 allows remote access to properties on reflection types and static properties/fie...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51417</link><description>An issue in System.Linq.Dynamic.Core Latest version v.1.4.6 allows remote access to properties on reflection types and static properties/fields.</description><pubDate>Tue, 21 Jan 2025 19:10:36 +0000</pubDate></item><item><title>CVE-2025-23369 | Improper Verification of Cryptographic Signature in GitHub Enterprise Server Allows Signature Spoofing by Improper Validation</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23369</link><description>An improper verification of cryptographic signature vulnerability was identified in GitHub Enterprise Server that allowed signature spoofing for unauthorized internal users.  Instances not utilizing SAML single sign-on or where the attacker is not already an existing user were not impacted. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.12.14, 3.13.10, 3.14.7, 3.15.2, and 3.16.0. This vulnerability was reported via the GitHub Bug Bounty program.</description><pubDate>Tue, 21 Jan 2025 18:57:40 +0000</pubDate></item><item><title>CVE-2024-54795 | SpagoBI v3.5.1 contains multiple Stored Cross-Site Scripting (XSS) vulnerabilities in the create/edit forms of the worksheet designer functi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-54795</link><description>SpagoBI v3.5.1 contains multiple Stored Cross-Site Scripting (XSS) vulnerabilities in the create/edit forms of the worksheet designer function.</description><pubDate>Tue, 21 Jan 2025 18:26:11 +0000</pubDate></item><item><title>CVE-2024-54792 | A Cross-Site Request Forgery (CSRF) vulnerability has been found in SpagoBI v3.5.1 in the user administration panel. An authenticated user c...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-54792</link><description>A Cross-Site Request Forgery (CSRF) vulnerability has been found in SpagoBI v3.5.1 in the user administration panel. An authenticated user can lead another user into executing unwanted actions inside the application they are logged in, like adding, editing or deleting users.</description><pubDate>Tue, 21 Jan 2025 18:26:12 +0000</pubDate></item><item><title>CVE-2024-54794 | The script input feature of SpagoBI 3.5.1 allows arbitrary code execution.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-54794</link><description>The script input feature of SpagoBI 3.5.1 allows arbitrary code execution.</description><pubDate>Tue, 21 Jan 2025 18:26:13 +0000</pubDate></item><item><title>CVE-2025-24020 | WeGIA Open Redirect vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24020</link><description>WeGIA is a Web manager for charitable institutions. An Open Redirect vulnerability was identified in the `control.php` endpoint of versions up to and including 3.2.10 of the WeGIA application. The vulnerability allows the `nextPage` parameter to be manipulated, redirecting authenticated users to arbitrary external URLs without validation. The issue stems from the lack of validation for the `nextPage` parameter, which accepts external URLs as redirection destinations. This vulnerability can be exploited to perform phishing attacks or redirect users to malicious websites. Version 3.2.11 contains a fix for the issue.</description><pubDate>Tue, 21 Jan 2025 18:00:32 +0000</pubDate></item><item><title>CVE-2025-22150 | Undici Uses Insufficiently Random Values</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22150</link><description>Undici is an HTTP/1.1 client. Starting in version 4.5.0 and prior to versions 5.28.5, 6.21.1, and 7.2.3, undici uses `Math.random()` to choose the boundary for a multipart/form-data request. It is known that the output of `Math.random()` can be predicted if several of its generated values are known. If there is a mechanism in an app that sends multipart requests to an attacker-controlled website, they can use this to leak the necessary values. Therefore, an attacker can tamper with the requests going to the backend APIs if certain conditions are met. This is fixed in versions 5.28.5, 6.21.1, and 7.2.3. As a workaround, do not issue multipart requests to attacker controlled servers.</description><pubDate>Tue, 21 Jan 2025 17:53:25 +0000</pubDate></item><item><title>CVE-2025-24019 | YesWiki vulnerable to authenticated arbitrary file deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24019</link><description>YesWiki is a wiki system written in PHP. In versions up to and including 4.4.5, it is possible for any authenticated user, through the use of the filemanager to delete any file owned by the user running the FastCGI Process Manager (FPM) on the host without any limitation on the filesystem's scope. This vulnerability allows any authenticated user to arbitrarily remove content from the Wiki resulting in partial loss of data and defacement/deterioration of the website. In the context of a container installation of YesWiki without any modification, the `yeswiki` files (for example .php) are not owned by the same user (root) as the one running the FPM process (www-data). However in a standard installation, www-data may also be the owner of the PHP files, allowing a malicious user to completely cut the access to the wiki by deleting all important PHP files (like index.php or core files of YesWiki). Version 4.5.0 contains a patch for this issue.</description><pubDate>Tue, 21 Jan 2025 17:38:55 +0000</pubDate></item><item><title>CVE-2025-22267 | WordPress Weaver Themes Shortcode Compatibility Plugin &amp;lt;= 1.0.4 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22267</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Bruce Wampler Weaver Themes Shortcode Compatibility allows Stored XSS. This issue affects Weaver Themes Shortcode Compatibility: from n/a through 1.0.4.</description><pubDate>Tue, 21 Jan 2025 17:29:27 +0000</pubDate></item><item><title>CVE-2025-22276 | WordPress Related Post Shortcode Plugin &amp;lt;= 1.2 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22276</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Enguerran Weiss Related Post Shortcode allows Stored XSS. This issue affects Related Post Shortcode: from n/a through 1.2.</description><pubDate>Tue, 21 Jan 2025 17:29:27 +0000</pubDate></item><item><title>CVE-2025-22661 | WordPress Online Payments plugin &amp;lt;= 3.20.0 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22661</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in vcita.com Online Payments – Get Paid with PayPal, Square &amp; Stripe allows Stored XSS. This issue affects Online Payments – Get Paid with PayPal, Square &amp; Stripe: from n/a through 3.20.0.</description><pubDate>Tue, 21 Jan 2025 17:29:28 +0000</pubDate></item><item><title>CVE-2025-22721 | WordPress ApplyOnline plugin &amp;lt;= 2.6.7.1 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22721</link><description>Missing Authorization vulnerability in Farhan Noor ApplyOnline – Application Form Builder and Manager allows Exploiting Incorrectly Configured Access Control Security Levels. This issue affects ApplyOnline – Application Form Builder and Manager: from n/a through 2.6.7.1.</description><pubDate>Tue, 21 Jan 2025 17:29:28 +0000</pubDate></item><item><title>CVE-2025-22722 | WordPress Widget Options plugin &amp;lt;= 4.0.8 - Broken Access Control to Notice Dimissal vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22722</link><description>Missing Authorization vulnerability in Widget Options Team Widget Options allows Exploiting Incorrectly Configured Access Control Security Levels. This issue affects Widget Options: from n/a through 4.0.8.</description><pubDate>Tue, 21 Jan 2025 17:29:29 +0000</pubDate></item><item><title>CVE-2025-23454 | WordPress Nature FlipBook WordPress Plugin plugin &amp;lt;= 1.7 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23454</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in flashmaniac Nature FlipBook allows Reflected XSS. This issue affects Nature FlipBook: from n/a through 1.7.</description><pubDate>Tue, 21 Jan 2025 17:29:29 +0000</pubDate></item><item><title>CVE-2025-23461 | WordPress Social2Blog plugin &amp;lt;= 0.2.990 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23461</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Andrea Dotta, Jacopo Campani, di xkoll.com Social2Blog allows Reflected XSS. This issue affects Social2Blog: from n/a through 0.2.990.</description><pubDate>Tue, 21 Jan 2025 17:29:30 +0000</pubDate></item><item><title>CVE-2025-23477 | WordPress Realty Workstation plugin &amp;lt;= 1.0.45 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23477</link><description>Missing Authorization vulnerability in Realty Workstation Realty Workstation allows Accessing Functionality Not Properly Constrained by ACLs. This issue affects Realty Workstation: from n/a through 1.0.45.</description><pubDate>Tue, 21 Jan 2025 17:29:30 +0000</pubDate></item><item><title>CVE-2025-23489 | WordPress WP-Announcements plugin &amp;lt;= 1.8 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23489</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Brian Messenlehner of WebDevStudios WP-Announcements allows Reflected XSS. This issue affects WP-Announcements: from n/a through 1.8.</description><pubDate>Tue, 21 Jan 2025 17:29:30 +0000</pubDate></item><item><title>CVE-2025-23551 | WordPress SexBundle plugin &amp;lt;= 1.4 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23551</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in P. Razvan SexBundle allows Reflected XSS. This issue affects SexBundle: from n/a through 1.4.</description><pubDate>Tue, 21 Jan 2025 17:29:31 +0000</pubDate></item><item><title>CVE-2025-23580 | WordPress BizLibrary plugin &amp;lt;= 1.1 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23580</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Matthew Garvin BizLibrary allows Reflected XSS. This issue affects BizLibrary: from n/a through 1.1.</description><pubDate>Tue, 21 Jan 2025 17:29:31 +0000</pubDate></item><item><title>CVE-2025-23994 | WordPress Estatebud – Properties &amp;amp; Listings plugin &amp;lt;= 5.5.0 - CSRF to Stored XSS vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23994</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Estatebud Estatebud – Properties &amp; Listings allows Stored XSS. This issue affects Estatebud – Properties &amp; Listings: from n/a through 5.5.0.</description><pubDate>Tue, 21 Jan 2025 17:29:32 +0000</pubDate></item><item><title>CVE-2025-23996 | WordPress AnyRoad plugin &amp;lt;= 1.3.2 - Cross Site Request Forgery (CSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23996</link><description>Cross-Site Request Forgery (CSRF) vulnerability in anyroad.com AnyRoad allows Cross Site Request Forgery. This issue affects AnyRoad: from n/a through 1.3.2.</description><pubDate>Tue, 21 Jan 2025 17:29:32 +0000</pubDate></item><item><title>CVE-2025-24456 | In JetBrains Hub before 2024.3.55417 privilege escalation was possible via LDAP authentication mapping</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24456</link><description>In JetBrains Hub before 2024.3.55417 privilege escalation was possible via LDAP authentication mapping</description><pubDate>Tue, 21 Jan 2025 17:29:33 +0000</pubDate></item><item><title>CVE-2025-24457 | In JetBrains YouTrack before 2024.3.55417 permanent tokens could be exposed in logs</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24457</link><description>In JetBrains YouTrack before 2024.3.55417 permanent tokens could be exposed in logs</description><pubDate>Tue, 21 Jan 2025 17:29:33 +0000</pubDate></item><item><title>CVE-2025-24458 | In JetBrains YouTrack before 2024.3.55417 account takeover was possible via spoofed email and Helpdesk integration</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24458</link><description>In JetBrains YouTrack before 2024.3.55417 account takeover was possible via spoofed email and Helpdesk integration</description><pubDate>Tue, 21 Jan 2025 17:29:33 +0000</pubDate></item><item><title>CVE-2025-24459 | In JetBrains TeamCity before 2024.12.1 reflected XSS was possible on the Vault Connection page</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24459</link><description>In JetBrains TeamCity before 2024.12.1 reflected XSS was possible on the Vault Connection page</description><pubDate>Tue, 21 Jan 2025 17:29:34 +0000</pubDate></item><item><title>CVE-2025-24460 | In JetBrains TeamCity before 2024.12.1 improper access control allowed to see Projects’ names in the agent pool</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24460</link><description>In JetBrains TeamCity before 2024.12.1 improper access control allowed to see Projects’ names in the agent pool</description><pubDate>Tue, 21 Jan 2025 17:29:34 +0000</pubDate></item><item><title>CVE-2025-24461 | In JetBrains TeamCity before 2024.12.1 decryption of connection secrets without proper permissions was possible via Test Connection endpoint</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24461</link><description>In JetBrains TeamCity before 2024.12.1 decryption of connection secrets without proper permissions was possible via Test Connection endpoint</description><pubDate>Tue, 21 Jan 2025 17:29:35 +0000</pubDate></item><item><title>CVE-2025-24018 | YesWiki Vulnerable to Authenticated Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24018</link><description>YesWiki is a wiki system written in PHP. In versions up to and including 4.4.5, it is possible for an authenticated user with rights to edit/create a page or comment to trigger a stored XSS which will be reflected on any page where the resource is loaded. The vulnerability makes use of the content edition feature and more specifically of the `{{attach}}` component allowing users to attach files/medias to a page. When a file is attached using the `{{attach}}` component, if the resource contained in the `file` attribute doesn't exist, then the server will generate a file upload button containing the filename. This vulnerability allows any malicious authenticated user that has the right to create a comment or edit a page to be able to steal accounts and therefore modify pages, comments, permissions, extract user data (emails), thus impacting the integrity, availability and confidentiality of a YesWiki instance. Version 4.5.0 contains a patch for the issue.</description><pubDate>Tue, 21 Jan 2025 17:11:32 +0000</pubDate></item><item><title>CVE-2024-45687 | HTTP Server incorrectly accepting disallowed characters within header values</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45687</link><description>Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') vulnerability in Payara Platform Payara Server (Grizzly, REST Management Interface modules), Payara Platform Payara Micro (Grizzly modules) allows Manipulating State, Identity Spoofing.This issue affects Payara Server: from 4.1.151 through 4.1.2.191.51, from 5.20.0 through 5.70.0, from 5.2020.2 through 5.2022.5, from 6.2022.1 through 6.2024.12, from 6.0.0 through 6.21.0; Payara Micro: from 4.1.152 through 4.1.2.191.51, from 5.20.0 through 5.70.0, from 5.2020.2 through 5.2022.5, from 6.2022.1 through 6.2024.12, from 6.0.0 through 6.21.0.</description><pubDate>Tue, 21 Jan 2025 16:50:21 +0000</pubDate></item><item><title>CVE-2024-57036 | TOTOLINK A810R V4.1.2cu.5032_B20200407 was found to contain a command insertion vulnerability in downloadFile.cgi main function. This vulner...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57036</link><description>TOTOLINK A810R V4.1.2cu.5032_B20200407 was found to contain a command insertion vulnerability in downloadFile.cgi main function. This vulnerability allows an attacker to execute arbitrary commands by sending HTTP request.</description><pubDate>Tue, 21 Jan 2025 16:21:42 +0000</pubDate></item><item><title>CVE-2024-56990 | PHPGurukul Hospital Management System 4.0 is vulnerable to Cross Site Scripting (XSS) in /view-medhistory.php and /admin/view-patient.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-56990</link><description>PHPGurukul Hospital Management System 4.0 is vulnerable to Cross Site Scripting (XSS) in /view-medhistory.php and /admin/view-patient.php.</description><pubDate>Tue, 21 Jan 2025 15:59:42 +0000</pubDate></item><item><title>CVE-2025-24017 | YesWiki Vulnerable to Unauthenticated DOM Based XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24017</link><description>YesWiki is a wiki system written in PHP. Versions up to and including 4.4.5 are vulnerable to any end-user crafting a DOM based XSS on all of YesWiki's pages which is triggered when a user clicks on a malicious link. The vulnerability makes use of the search by tag feature. When a tag doesn't exist, the tag is reflected on the page and isn't properly sanitized on the server side which allows a malicious user to generate a link that will trigger an XSS on the client's side when clicked. This vulnerability allows any user to generate a malicious link that will trigger an account takeover when clicked, therefore allowing a user to steal other accounts, modify pages, comments, permissions, extract user data (emails), thus impacting the integrity, availability and confidentiality of a YesWiki instance. Version 4.5.0 contains a patch for the issue.</description><pubDate>Tue, 21 Jan 2025 15:45:30 +0000</pubDate></item><item><title>CVE-2025-24011 | Umbraco CMS Vulnerable to User Enumeration Feasible Based On Management API Timing and Response Codes</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24011</link><description>Umbraco is a free and open source .NET content management system. Starting in version 14.0.0 and prior to versions 14.3.2 and 15.1.2, it's possible to determine whether an account exists based on an analysis of response codes and timing of Umbraco management API responses. Versions 14.3.2 and 15.1.2 contain a patch. No known workarounds are available.</description><pubDate>Tue, 21 Jan 2025 15:38:28 +0000</pubDate></item><item><title>CVE-2025-24012 | Umbraco Backoffice Components Have XSS/HTML Injection Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24012</link><description>Umbraco is a free and open source .NET content management system. Starting in version 14.0.0 and prior to versions 14.3.2 and 15.1.2, authenticated users are able to exploit a cross-site scripting vulnerability when viewing certain localized backoffice components. Versions 14.3.2 and 15.1.2 contain a patch.</description><pubDate>Tue, 21 Jan 2025 15:38:29 +0000</pubDate></item><item><title>CVE-2025-0377 | HashiCorp go-slug Vulnerable to Zip Slip Attack</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0377</link><description>HashiCorp’s go-slug library is vulnerable to a zip-slip style attack when a non-existing user-provided path is extracted from the tar entry.</description><pubDate>Tue, 21 Jan 2025 15:28:32 +0000</pubDate></item><item><title>CVE-2024-53829 | Cross-Site Request Forgery in CodeChecker API</title><link>https://www.cve.org/CVERecord?id=CVE-2024-53829</link><description>CodeChecker is an analyzer tooling, defect database and viewer extension for the Clang Static Analyzer and Clang Tidy. 
Cross-site request forgery allows an unauthenticated attacker to hijack the authentication of a logged in user, and use the web API with the same permissions, including but not limited to adding, removing or editing products. The attacker needs to know the ID of the available products to modify or delete them. The attacker cannot directly exfiltrate data (view) from CodeChecker, due to being limited to form-based CSRF.

This issue affects CodeChecker: through 6.24.4.</description><pubDate>Tue, 21 Jan 2025 15:28:33 +0000</pubDate></item><item><title>CVE-2024-56997 | PHPGurukul Hospital Management System 4.0 is vulnerable to Cross Site Scripting (XSS) in /doctor/index.php via the 'Email' parameter.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-56997</link><description>PHPGurukul Hospital Management System 4.0 is vulnerable to Cross Site Scripting (XSS) in /doctor/index.php via the 'Email' parameter.</description><pubDate>Tue, 21 Jan 2025 14:30:30 +0000</pubDate></item><item><title>CVE-2024-56998 | PHPGurukul Hospital Management System 4.0 is vulnerable to Cross Site Scripting (XSS) in /edit-profile.php via the parameter $address.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-56998</link><description>PHPGurukul Hospital Management System 4.0 is vulnerable to Cross Site Scripting (XSS) in /edit-profile.php via the parameter $address.</description><pubDate>Tue, 21 Jan 2025 14:30:31 +0000</pubDate></item><item><title>CVE-2024-32555 | WordPress Easy Real Estate plugin &amp;lt;= 2.2.6 - Privilege Escalation vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-32555</link><description>Incorrect Privilege Assignment vulnerability in NotFound Easy Real Estate allows Privilege Escalation. This issue affects Easy Real Estate: from n/a through 2.2.6.</description><pubDate>Tue, 21 Jan 2025 14:11:28 +0000</pubDate></item><item><title>CVE-2025-22262 | WordPress Bonjour Bar plugin &amp;lt;= 1.0.0 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22262</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in NotFound Bonjour Bar allows Stored XSS. This issue affects Bonjour Bar: from n/a through 1.0.0.</description><pubDate>Tue, 21 Jan 2025 14:11:29 +0000</pubDate></item><item><title>CVE-2025-22706 | WordPress Social Pug: Author Box plugin &amp;lt;= 1.0.0 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22706</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in iova.mihai Social Pug: Author Box allows Reflected XSS. This issue affects Social Pug: Author Box: from n/a through 1.0.0.</description><pubDate>Tue, 21 Jan 2025 14:11:29 +0000</pubDate></item><item><title>CVE-2025-22709 | WordPress Verge3D Publishing and E-Commerce Plugin &amp;lt;= 4.8.0 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22709</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Soft8Soft LLC Verge3D allows Reflected XSS. This issue affects Verge3D: from n/a through 4.8.0.</description><pubDate>Tue, 21 Jan 2025 14:11:29 +0000</pubDate></item><item><title>CVE-2025-22710 | WordPress Smart Manager Plugin &amp;lt;= 8.52.0 - SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22710</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in StoreApps Smart Manager allows Blind SQL Injection. This issue affects Smart Manager: from n/a through 8.52.0.</description><pubDate>Tue, 21 Jan 2025 14:11:30 +0000</pubDate></item><item><title>CVE-2025-22711 | WordPress Image Source Control Lite Plugin &amp;lt;= 2.29.0 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22711</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Thomas Maier Image Source Control allows Reflected XSS. This issue affects Image Source Control: from n/a through 2.29.0.</description><pubDate>Tue, 21 Jan 2025 14:11:30 +0000</pubDate></item><item><title>CVE-2025-22716 | WordPress Taskbuilder Plugin &amp;lt;= 3.0.6 - SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22716</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Taskbuilder Team Taskbuilder allows SQL Injection. This issue affects Taskbuilder: from n/a through 3.0.6.</description><pubDate>Tue, 21 Jan 2025 14:11:31 +0000</pubDate></item><item><title>CVE-2025-22717 | WordPress My Tickets plugin &amp;lt;= 2.0.9 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22717</link><description>Missing Authorization vulnerability in Joe Dolson My Tickets allows Accessing Functionality Not Properly Constrained by ACLs. This issue affects My Tickets: from n/a through 2.0.9.</description><pubDate>Tue, 21 Jan 2025 14:11:31 +0000</pubDate></item><item><title>CVE-2025-22718 | WordPress FAT Event Lite plugin &amp;lt;= 1.1 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22718</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Roninwp FAT Event Lite allows Stored XSS. This issue affects FAT Event Lite: from n/a through 1.1.</description><pubDate>Tue, 21 Jan 2025 14:11:31 +0000</pubDate></item><item><title>CVE-2025-22719 | WordPress VikAppointments Services Booking Calendar plugin &amp;lt;= 1.2.16 - CSRF to Stored XSS vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22719</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in E4J s.r.l. VikAppointments Services Booking Calendar allows Stored XSS. This issue affects VikAppointments Services Booking Calendar: from n/a through 1.2.16.</description><pubDate>Tue, 21 Jan 2025 14:11:32 +0000</pubDate></item><item><title>CVE-2025-22723 | WordPress Barcode Scanner and Inventory manager plugin &amp;lt;= 1.6.7 - Arbitrary File Upload vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22723</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in UkrSolution Barcode Scanner with Inventory &amp; Order Manager allows Upload a Web Shell to a Web Server. This issue affects Barcode Scanner with Inventory &amp; Order Manager: from n/a through 1.6.7.</description><pubDate>Tue, 21 Jan 2025 14:11:32 +0000</pubDate></item><item><title>CVE-2025-22727 | WordPress MailChimp Subscribe Form plugin &amp;lt;= 4.1 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22727</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in PluginOps MailChimp Subscribe Forms  allows Stored XSS. This issue affects MailChimp Subscribe Forms : from n/a through 4.1.</description><pubDate>Tue, 21 Jan 2025 14:11:33 +0000</pubDate></item><item><title>CVE-2025-22732 | WordPress Ad Blocking Detector plugin &amp;lt;= 3.6.0 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22732</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Admiral Ad Blocking Detector allows Stored XSS. This issue affects Ad Blocking Detector: from n/a through 3.6.0.</description><pubDate>Tue, 21 Jan 2025 14:11:33 +0000</pubDate></item><item><title>CVE-2025-22733 | WordPress My auctions allegro Plugin &amp;lt;= 3.6.18 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22733</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in WPHocus My auctions allegro allows Reflected XSS. This issue affects My auctions allegro: from n/a through 3.6.18.</description><pubDate>Tue, 21 Jan 2025 14:11:33 +0000</pubDate></item><item><title>CVE-2025-22825 | WordPress Flexible PDF Coupons plugin &amp;lt; 1.10.3 - Stored Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22825</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in WP Desk Flexible PDF Coupons allows Stored XSS. This issue affects Flexible PDF Coupons: from n/a through n/a.</description><pubDate>Tue, 21 Jan 2025 14:11:34 +0000</pubDate></item><item><title>CVE-2025-23997 | WordPress Tamara Checkout plugin &amp;lt;= 1.9.8 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23997</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in dev@tamara.co Tamara Checkout allows Stored XSS. This issue affects Tamara Checkout: from n/a through 1.9.8.</description><pubDate>Tue, 21 Jan 2025 14:11:34 +0000</pubDate></item><item><title>CVE-2025-23998 | WordPress UltraLight theme &amp;lt;= 1.2 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23998</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Rara Theme UltraLight allows Reflected XSS. This issue affects UltraLight: from n/a through 1.2.</description><pubDate>Tue, 21 Jan 2025 14:11:35 +0000</pubDate></item><item><title>CVE-2025-24001 | WordPress PPO Call To Actions plugin &amp;lt;= 0.1.3 - CSRF to Stored XSS vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24001</link><description>Cross-Site Request Forgery (CSRF) vulnerability in PPO Việt Nam (ppo.vn) PPO Call To Actions allows Cross Site Request Forgery. This issue affects PPO Call To Actions: from n/a through 0.1.3.</description><pubDate>Tue, 21 Jan 2025 14:11:35 +0000</pubDate></item><item><title>CVE-2024-49300 | WordPress Hero Menu plugin &amp;lt;= 1.16.5 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49300</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in NotFound Hero Mega Menu - Responsive WordPress Menu Plugin allows Reflected XSS. This issue affects Hero Mega Menu - Responsive WordPress Menu Plugin: from n/a through 1.16.5.</description><pubDate>Tue, 21 Jan 2025 13:49:49 +0000</pubDate></item><item><title>CVE-2024-49303 | WordPress Hero Menu plugin &amp;lt;= 1.16.5 - SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49303</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in NotFound Hero Mega Menu - Responsive WordPress Menu Plugin allows SQL Injection. This issue affects Hero Mega Menu - Responsive WordPress Menu Plugin: from n/a through 1.16.5.</description><pubDate>Tue, 21 Jan 2025 13:49:49 +0000</pubDate></item><item><title>CVE-2024-49333 | WordPress Hero Menu plugin &amp;lt;= 1.16.5 - SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49333</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in NotFound Hero Mega Menu - Responsive WordPress Menu Plugin allows SQL Injection. This issue affects Hero Mega Menu - Responsive WordPress Menu Plugin: from n/a through 1.16.5.</description><pubDate>Tue, 21 Jan 2025 13:49:49 +0000</pubDate></item><item><title>CVE-2024-49655 | WordPress ARPrice plugin &amp;lt;= 4.0.3 - Unauthenticated SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49655</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in NotFound ARPrice allows SQL Injection. This issue affects ARPrice: from n/a through 4.0.3.</description><pubDate>Tue, 21 Jan 2025 13:49:50 +0000</pubDate></item><item><title>CVE-2024-49666 | WordPress ARPrice plugin &amp;lt;= 4.0.3 - SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49666</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in NotFound ARPrice allows SQL Injection. This issue affects ARPrice: from n/a through 4.0.3.</description><pubDate>Tue, 21 Jan 2025 13:49:50 +0000</pubDate></item><item><title>CVE-2024-49688 | WordPress ARPrice plugin &amp;lt;= 4.0.3 - Unauthenticated PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49688</link><description>Deserialization of Untrusted Data vulnerability in NotFound ARPrice allows Object Injection. This issue affects ARPrice: from n/a through 4.0.3.</description><pubDate>Tue, 21 Jan 2025 13:49:50 +0000</pubDate></item><item><title>CVE-2024-49699 | WordPress ARPrice plugin &amp;lt;= 4.0.3 - PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49699</link><description>Deserialization of Untrusted Data vulnerability in NotFound ARPrice allows Object Injection. This issue affects ARPrice: from n/a through 4.0.3.</description><pubDate>Tue, 21 Jan 2025 13:49:51 +0000</pubDate></item><item><title>CVE-2024-49700 | WordPress ARPrice plugin &amp;lt;= 4.0.3 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49700</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in NotFound ARPrice allows Reflected XSS. This issue affects ARPrice: from n/a through 4.0.3.</description><pubDate>Tue, 21 Jan 2025 13:49:51 +0000</pubDate></item><item><title>CVE-2024-51818 | WordPress Fancy Product Designer plugin &amp;lt;= 6.4.3 - Unauthenticated SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51818</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in NotFound Fancy Product Designer. This issue affects Fancy Product Designer: from n/a through 6.4.3.</description><pubDate>Tue, 21 Jan 2025 13:49:51 +0000</pubDate></item><item><title>CVE-2024-51888 | WordPress Homey Login Register Plugin &amp;lt;= 2.4.0 - Privilege Escalation vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51888</link><description>Incorrect Privilege Assignment vulnerability in NotFound Homey Login Register allows Privilege Escalation. This issue affects Homey Login Register: from n/a through 2.4.0.</description><pubDate>Tue, 21 Jan 2025 13:49:52 +0000</pubDate></item><item><title>CVE-2024-51919 | WordPress Fancy Product Designer plugin &amp;lt;= 6.4.3 - Unauthenticated Arbitrary File Upload vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51919</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in NotFound Fancy Product Designer. This issue affects Fancy Product Designer: from n/a through 6.4.3.</description><pubDate>Tue, 21 Jan 2025 13:49:52 +0000</pubDate></item><item><title>CVE-2024-56277 | WordPress Poll Maker Plugin &amp;lt; 5.5.5 - HTML Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-56277</link><description>Improper Encoding or Escaping of Output vulnerability in Poll Maker Team Poll Maker. This issue affects Poll Maker: from n/a through n/a.</description><pubDate>Tue, 21 Jan 2025 13:49:53 +0000</pubDate></item><item><title>CVE-2025-22311 | WordPress Private Messages for UserPro plugin &amp;lt;= 4.10.0 - Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22311</link><description>Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') vulnerability in NotFound Private Messages for UserPro. This issue affects Private Messages for UserPro: from n/a through 4.10.0.</description><pubDate>Tue, 21 Jan 2025 13:49:53 +0000</pubDate></item><item><title>CVE-2025-22318 | WordPress Standard Box Sizes plugin &amp;lt;= 1.6.13 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22318</link><description>Missing Authorization vulnerability in Eniture Technology Standard Box Sizes – for WooCommerce. This issue affects Standard Box Sizes – for WooCommerce: from n/a through 1.6.13.</description><pubDate>Tue, 21 Jan 2025 13:49:53 +0000</pubDate></item><item><title>CVE-2025-22322 | WordPress Private Messages for UserPro plugin &amp;lt;= 4.10.0 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22322</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in NotFound Private Messages for UserPro allows Reflected XSS. This issue affects Private Messages for UserPro: from n/a through 4.10.0.</description><pubDate>Tue, 21 Jan 2025 13:49:54 +0000</pubDate></item><item><title>CVE-2025-22553 | WordPress Multiple Carousel Plugin &amp;lt;= 2.0 - SQL Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22553</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in NotFound Multiple Carousel allows SQL Injection. This issue affects Multiple Carousel: from n/a through 2.0.</description><pubDate>Tue, 21 Jan 2025 13:49:54 +0000</pubDate></item><item><title>CVE-2025-22735 | WordPress Tag Cloud Plugin - Tag Groups plugin &amp;lt;= 2.0.4 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22735</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in TaxoPress WordPress Tag Cloud Plugin – Tag Groups allows Reflected XSS. This issue affects WordPress Tag Cloud Plugin – Tag Groups: from n/a through 2.0.4.</description><pubDate>Tue, 21 Jan 2025 13:49:54 +0000</pubDate></item><item><title>CVE-2025-22763 | WordPress Brizy Pro Plugin &amp;lt;= 2.6.1 - Reflected Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22763</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in NotFound Brizy Pro allows Reflected XSS. This issue affects Brizy Pro: from n/a through 2.6.1.</description><pubDate>Tue, 21 Jan 2025 13:49:55 +0000</pubDate></item><item><title>CVE-2024-57939 | riscv: Fix sleeping in invalid context in die()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57939</link><description>In the Linux kernel, the following vulnerability has been resolved:

riscv: Fix sleeping in invalid context in die()

die() can be called in exception handler, and therefore cannot sleep.
However, die() takes spinlock_t which can sleep with PREEMPT_RT enabled.
That causes the following warning:

BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:48
in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 285, name: mutex
preempt_count: 110001, expected: 0
RCU nest depth: 0, expected: 0
CPU: 0 UID: 0 PID: 285 Comm: mutex Not tainted 6.12.0-rc7-00022-ge19049cf7d56-dirty #234
Hardware name: riscv-virtio,qemu (DT)
Call Trace:
    dump_backtrace+0x1c/0x24
    show_stack+0x2c/0x38
    dump_stack_lvl+0x5a/0x72
    dump_stack+0x14/0x1c
    __might_resched+0x130/0x13a
    rt_spin_lock+0x2a/0x5c
    die+0x24/0x112
    do_trap_insn_illegal+0xa0/0xea
    _new_vmalloc_restore_context_a0+0xcc/0xd8
Oops - illegal instruction [#1]

Switch to use raw_spinlock_t, which does not sleep even with PREEMPT_RT
enabled.</description><pubDate>Tue, 21 Jan 2025 12:35:22 +0000</pubDate></item><item><title>CVE-2024-57940 | exfat: fix the infinite loop in exfat_readdir()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57940</link><description>In the Linux kernel, the following vulnerability has been resolved:

exfat: fix the infinite loop in exfat_readdir()

If the file system is corrupted so that a cluster is linked to
itself in the cluster chain, and there is an unused directory
entry in the cluster, 'dentry' will not be incremented, causing
condition 'dentry &lt; max_dentries' unable to prevent an infinite
loop.

This infinite loop causes s_lock not to be released, and other
tasks will hang, such as exfat_sync_fs().

This commit stops traversing the cluster chain when there is unused
directory entry in the cluster to avoid this infinite loop.</description><pubDate>Tue, 21 Jan 2025 12:35:22 +0000</pubDate></item><item><title>CVE-2024-57941 | netfs: Fix the (non-)cancellation of copy when cache is temporarily disabled</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57941</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfs: Fix the (non-)cancellation of copy when cache is temporarily disabled

When the caching for a cookie is temporarily disabled (e.g. due to a DIO
write on that file), future copying to the cache for that file is disabled
until all fds open on that file are closed.  However, if netfslib is using
the deprecated PG_private_2 method (such as is currently used by ceph), and
decides it wants to copy to the cache, netfs_advance_write() will just bail
at the first check seeing that the cache stream is unavailable, and
indicate that it dealt with all the content.

This means that we have no subrequests to provide notifications to drive
the state machine or even to pin the request and the request just gets
discarded, leaving the folios with PG_private_2 set.

Fix this by jumping directly to cancel the request if the cache is not
available.  That way, we don't remove mark3 from the folio_queue list and
netfs_pgpriv2_cancel() will clean up the folios.

This was found by running the generic/013 xfstest against ceph with an
active cache and the "-o fsc" option passed to ceph.  That would usually
hang</description><pubDate>Tue, 21 Jan 2025 12:35:23 +0000</pubDate></item><item><title>CVE-2024-57942 | netfs: Fix ceph copy to cache on write-begin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57942</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfs: Fix ceph copy to cache on write-begin

At the end of netfs_unlock_read_folio() in which folios are marked
appropriately for copying to the cache (either with by being marked dirty
and having their private data set or by having PG_private_2 set) and then
unlocked, the folio_queue struct has the entry pointing to the folio
cleared.  This presents a problem for netfs_pgpriv2_write_to_the_cache(),
which is used to write folios marked with PG_private_2 to the cache as it
expects to be able to trawl the folio_queue list thereafter to find the
relevant folios, leading to a hang.

Fix this by not clearing the folio_queue entry if we're going to do the
deprecated copy-to-cache.  The clearance will be done instead as the folios
are written to the cache.

This can be reproduced by starting cachefiles, mounting a ceph filesystem
with "-o fsc" and writing to it.</description><pubDate>Tue, 21 Jan 2025 12:35:23 +0000</pubDate></item><item><title>CVE-2024-57943 | exfat: fix the new buffer was not zeroed before writing</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57943</link><description>In the Linux kernel, the following vulnerability has been resolved:

exfat: fix the new buffer was not zeroed before writing

Before writing, if a buffer_head marked as new, its data must
be zeroed, otherwise uninitialized data in the page cache will
be written.

So this commit uses folio_zero_new_buffers() to zero the new
buffers before -&gt;write_end().</description><pubDate>Tue, 21 Jan 2025 12:35:23 +0000</pubDate></item><item><title>CVE-2024-57944 | iio: adc: ti-ads1298: Add NULL check in ads1298_init</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57944</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: ti-ads1298: Add NULL check in ads1298_init

devm_kasprintf() can return a NULL pointer on failure. A check on the
return value of such a call in ads1298_init() is missing. Add it.</description><pubDate>Tue, 21 Jan 2025 12:35:24 +0000</pubDate></item><item><title>CVE-2024-57945 | riscv: mm: Fix the out of bound issue of vmemmap address</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57945</link><description>In the Linux kernel, the following vulnerability has been resolved:

riscv: mm: Fix the out of bound issue of vmemmap address

In sparse vmemmap model, the virtual address of vmemmap is calculated as:
((struct page *)VMEMMAP_START - (phys_ram_base &gt;&gt; PAGE_SHIFT)).
And the struct page's va can be calculated with an offset:
(vmemmap + (pfn)).

However, when initializing struct pages, kernel actually starts from the
first page from the same section that phys_ram_base belongs to. If the
first page's physical address is not (phys_ram_base &gt;&gt; PAGE_SHIFT), then
we get an va below VMEMMAP_START when calculating va for it's struct page.

For example, if phys_ram_base starts from 0x82000000 with pfn 0x82000, the
first page in the same section is actually pfn 0x80000. During
init_unavailable_range(), we will initialize struct page for pfn 0x80000
with virtual address ((struct page *)VMEMMAP_START - 0x2000), which is
below VMEMMAP_START as well as PCI_IO_END.

This commit fixes this bug by introducing a new variable
'vmemmap_start_pfn' which is aligned with memory section size and using
it to calculate vmemmap address instead of phys_ram_base.</description><pubDate>Tue, 21 Jan 2025 12:35:24 +0000</pubDate></item><item><title>CVE-2024-57946 | virtio-blk: don&amp;#x27;t keep queue frozen during system suspend</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57946</link><description>In the Linux kernel, the following vulnerability has been resolved:

virtio-blk: don't keep queue frozen during system suspend

Commit 4ce6e2db00de ("virtio-blk: Ensure no requests in virtqueues before
deleting vqs.") replaces queue quiesce with queue freeze in virtio-blk's
PM callbacks. And the motivation is to drain inflight IOs before suspending.

block layer's queue freeze looks very handy, but it is also easy to cause
deadlock, such as, any attempt to call into bio_queue_enter() may run into
deadlock if the queue is frozen in current context. There are all kinds
of -&gt;suspend() called in suspend context, so keeping queue frozen in the
whole suspend context isn't one good idea. And Marek reported lockdep
warning[1] caused by virtio-blk's freeze queue in virtblk_freeze().

[1] https://lore.kernel.org/linux-block/ca16370e-d646-4eee-b9cc-87277c89c43c@samsung.com/

Given the motivation is to drain in-flight IOs, it can be done by calling
freeze &amp; unfreeze, meantime restore to previous behavior by keeping queue
quiesced during suspend.</description><pubDate>Tue, 21 Jan 2025 12:35:24 +0000</pubDate></item><item><title>CVE-2025-21656 | hwmon: (drivetemp) Fix driver producing garbage data when SCSI errors occur</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21656</link><description>In the Linux kernel, the following vulnerability has been resolved:

hwmon: (drivetemp) Fix driver producing garbage data when SCSI errors occur

scsi_execute_cmd() function can return both negative (linux codes) and
positive (scsi_cmnd result field) error codes.

Currently the driver just passes error codes of scsi_execute_cmd() to
hwmon core, which is incorrect because hwmon only checks for negative
error codes. This leads to hwmon reporting uninitialized data to
userspace in case of SCSI errors (for example if the disk drive was
disconnected).

This patch checks scsi_execute_cmd() output and returns -EIO if it's
error code is positive.

[groeck: Avoid inline variable declaration for portability]</description><pubDate>Tue, 21 Jan 2025 12:35:25 +0000</pubDate></item><item><title>CVE-2025-21657 | sched_ext: Replace rq_lock() to raw_spin_rq_lock() in scx_ops_bypass()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21657</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched_ext: Replace rq_lock() to raw_spin_rq_lock() in scx_ops_bypass()

scx_ops_bypass() iterates all CPUs to re-enqueue all the scx tasks.
For each CPU, it acquires a lock using rq_lock() regardless of whether
a CPU is offline or the CPU is currently running a task in a higher
scheduler class (e.g., deadline). The rq_lock() is supposed to be used
for online CPUs, and the use of rq_lock() may trigger an unnecessary
warning in rq_pin_lock(). Therefore, replace rq_lock() to
raw_spin_rq_lock() in scx_ops_bypass().

Without this change, we observe the following warning:

===== START =====
[    6.615205] rq-&gt;balance_callback &amp;&amp; rq-&gt;balance_callback != &amp;amp;balance_push_callback
[    6.615208] WARNING: CPU: 2 PID: 0 at kernel/sched/sched.h:1730 __schedule+0x1130/0x1c90
=====  END  =====</description><pubDate>Tue, 21 Jan 2025 12:35:25 +0000</pubDate></item><item><title>CVE-2025-21658 | btrfs: avoid NULL pointer dereference if no valid extent tree</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21658</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: avoid NULL pointer dereference if no valid extent tree

[BUG]
Syzbot reported a crash with the following call trace:

  BTRFS info (device loop0): scrub: started on devid 1
  BUG: kernel NULL pointer dereference, address: 0000000000000208
  #PF: supervisor read access in kernel mode
  #PF: error_code(0x0000) - not-present page
  PGD 106e70067 P4D 106e70067 PUD 107143067 PMD 0
  Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI
  CPU: 1 UID: 0 PID: 689 Comm: repro Kdump: loaded Tainted: G           O       6.13.0-rc4-custom+ #206
  Tainted: [O]=OOT_MODULE
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022
  RIP: 0010:find_first_extent_item+0x26/0x1f0 [btrfs]
  Call Trace:
   
   scrub_find_fill_first_stripe+0x13d/0x3b0 [btrfs]
   scrub_simple_mirror+0x175/0x260 [btrfs]
   scrub_stripe+0x5d4/0x6c0 [btrfs]
   scrub_chunk+0xbb/0x170 [btrfs]
   scrub_enumerate_chunks+0x2f4/0x5f0 [btrfs]
   btrfs_scrub_dev+0x240/0x600 [btrfs]
   btrfs_ioctl+0x1dc8/0x2fa0 [btrfs]
   ? do_sys_openat2+0xa5/0xf0
   __x64_sys_ioctl+0x97/0xc0
   do_syscall_64+0x4f/0x120
   entry_SYSCALL_64_after_hwframe+0x76/0x7e
   

[CAUSE]
The reproducer is using a corrupted image where extent tree root is
corrupted, thus forcing to use "rescue=all,ro" mount option to mount the
image.

Then it triggered a scrub, but since scrub relies on extent tree to find
where the data/metadata extents are, scrub_find_fill_first_stripe()
relies on an non-empty extent root.

But unfortunately scrub_find_fill_first_stripe() doesn't really expect
an NULL pointer for extent root, it use extent_root to grab fs_info and
triggered a NULL pointer dereference.

[FIX]
Add an extra check for a valid extent root at the beginning of
scrub_find_fill_first_stripe().

The new error path is introduced by 42437a6386ff ("btrfs: introduce
mount option rescue=ignorebadroots"), but that's pretty old, and later
commit b979547513ff ("btrfs: scrub: introduce helper to find and fill
sector info for a scrub_stripe") changed how we do scrub.

So for kernels older than 6.6, the fix will need manual backport.</description><pubDate>Tue, 21 Jan 2025 12:35:25 +0000</pubDate></item><item><title>CVE-2025-21659 | netdev: prevent accessing NAPI instances from another namespace</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21659</link><description>In the Linux kernel, the following vulnerability has been resolved:

netdev: prevent accessing NAPI instances from another namespace

The NAPI IDs were not fully exposed to user space prior to the netlink
API, so they were never namespaced. The netlink API must ensure that
at the very least NAPI instance belongs to the same netns as the owner
of the genl sock.

napi_by_id() can become static now, but it needs to move because of
dev_get_by_napi_id().</description><pubDate>Tue, 21 Jan 2025 12:35:26 +0000</pubDate></item><item><title>CVE-2025-21660 | ksmbd: fix unexpectedly changed path in ksmbd_vfs_kern_path_locked</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21660</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: fix unexpectedly changed path in ksmbd_vfs_kern_path_locked

When `ksmbd_vfs_kern_path_locked` met an error and it is not the last
entry, it will exit without restoring changed path buffer. But later this
buffer may be used as the filename for creation.</description><pubDate>Tue, 21 Jan 2025 12:35:26 +0000</pubDate></item><item><title>CVE-2025-21661 | gpio: virtuser: fix missing lookup table cleanups</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21661</link><description>In the Linux kernel, the following vulnerability has been resolved:

gpio: virtuser: fix missing lookup table cleanups

When a virtuser device is created via configfs and the probe fails due
to an incorrect lookup table, the table is not removed. This prevents
subsequent probe attempts from succeeding, even if the issue is
corrected, unless the device is released. Additionally, cleanup is also
needed in the less likely case of platform_device_register_full()
failure.

Besides, a consistent memory leak in lookup_table-&gt;dev_id was spotted
using kmemleak by toggling the live state between 0 and 1 with a correct
lookup table.

Introduce gpio_virtuser_remove_lookup_table() as the counterpart to the
existing gpio_virtuser_make_lookup_table() and call it from all
necessary points to ensure proper cleanup.</description><pubDate>Tue, 21 Jan 2025 12:35:27 +0000</pubDate></item><item><title>CVE-2025-21662 | net/mlx5: Fix variable not being completed when function returns</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21662</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix variable not being completed when function returns

When cmd_alloc_index(), fails cmd_work_handler() needs
to complete ent-&gt;slotted before returning early.
Otherwise the task which issued the command may hang:

   mlx5_core 0000:01:00.0: cmd_work_handler:877:(pid 3880418): failed to allocate command entry
   INFO: task kworker/13:2:4055883 blocked for more than 120 seconds.
         Not tainted 4.19.90-25.44.v2101.ky10.aarch64 #1
   "echo 0 &gt; /proc/sys/kernel/hung_task_timeout_secs" disables this message.
   kworker/13:2    D    0 4055883      2 0x00000228
   Workqueue: events mlx5e_tx_dim_work [mlx5_core]
   Call trace:
      __switch_to+0xe8/0x150
      __schedule+0x2a8/0x9b8
      schedule+0x2c/0x88
      schedule_timeout+0x204/0x478
      wait_for_common+0x154/0x250
      wait_for_completion+0x28/0x38
      cmd_exec+0x7a0/0xa00 [mlx5_core]
      mlx5_cmd_exec+0x54/0x80 [mlx5_core]
      mlx5_core_modify_cq+0x6c/0x80 [mlx5_core]
      mlx5_core_modify_cq_moderation+0xa0/0xb8 [mlx5_core]
      mlx5e_tx_dim_work+0x54/0x68 [mlx5_core]
      process_one_work+0x1b0/0x448
      worker_thread+0x54/0x468
      kthread+0x134/0x138
      ret_from_fork+0x10/0x18</description><pubDate>Tue, 21 Jan 2025 12:35:27 +0000</pubDate></item><item><title>CVE-2025-21663 | net: stmmac: dwmac-tegra: Read iommu stream id from device tree</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21663</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: stmmac: dwmac-tegra: Read iommu stream id from device tree

Nvidia's Tegra MGBE controllers require the IOMMU "Stream ID" (SID) to be
written to the MGBE_WRAP_AXI_ASID0_CTRL register.

The current driver is hard coded to use MGBE0's SID for all controllers.
This causes softirq time outs and kernel panics when using controllers
other than MGBE0.

Example dmesg errors when an ethernet cable is connected to MGBE1:

[  116.133290] tegra-mgbe 6910000.ethernet eth1: Link is Up - 1Gbps/Full - flow control rx/tx
[  121.851283] tegra-mgbe 6910000.ethernet eth1: NETDEV WATCHDOG: CPU: 5: transmit queue 0 timed out 5690 ms
[  121.851782] tegra-mgbe 6910000.ethernet eth1: Reset adapter.
[  121.892464] tegra-mgbe 6910000.ethernet eth1: Register MEM_TYPE_PAGE_POOL RxQ-0
[  121.905920] tegra-mgbe 6910000.ethernet eth1: PHY [stmmac-1:00] driver [Aquantia AQR113] (irq=171)
[  121.907356] tegra-mgbe 6910000.ethernet eth1: Enabling Safety Features
[  121.907578] tegra-mgbe 6910000.ethernet eth1: IEEE 1588-2008 Advanced Timestamp supported
[  121.908399] tegra-mgbe 6910000.ethernet eth1: registered PTP clock
[  121.908582] tegra-mgbe 6910000.ethernet eth1: configuring for phy/10gbase-r link mode
[  125.961292] tegra-mgbe 6910000.ethernet eth1: Link is Up - 1Gbps/Full - flow control rx/tx
[  181.921198] rcu: INFO: rcu_preempt detected stalls on CPUs/tasks:
[  181.921404] rcu: 	7-....: (1 GPs behind) idle=540c/1/0x4000000000000002 softirq=1748/1749 fqs=2337
[  181.921684] rcu: 	(detected by 4, t=6002 jiffies, g=1357, q=1254 ncpus=8)
[  181.921878] Sending NMI from CPU 4 to CPUs 7:
[  181.921886] NMI backtrace for cpu 7
[  181.922131] CPU: 7 UID: 0 PID: 0 Comm: swapper/7 Kdump: loaded Not tainted 6.13.0-rc3+ #6
[  181.922390] Hardware name: NVIDIA CTI Forge + Orin AGX/Jetson, BIOS 202402.1-Unknown 10/28/2024
[  181.922658] pstate: 40400009 (nZcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[  181.922847] pc : handle_softirqs+0x98/0x368
[  181.922978] lr : __do_softirq+0x18/0x20
[  181.923095] sp : ffff80008003bf50
[  181.923189] x29: ffff80008003bf50 x28: 0000000000000008 x27: 0000000000000000
[  181.923379] x26: ffffce78ea277000 x25: 0000000000000000 x24: 0000001c61befda0
[  181.924486] x23: 0000000060400009 x22: ffffce78e99918bc x21: ffff80008018bd70
[  181.925568] x20: ffffce78e8bb00d8 x19: ffff80008018bc20 x18: 0000000000000000
[  181.926655] x17: ffff318ebe7d3000 x16: ffff800080038000 x15: 0000000000000000
[  181.931455] x14: ffff000080816680 x13: ffff318ebe7d3000 x12: 000000003464d91d
[  181.938628] x11: 0000000000000040 x10: ffff000080165a70 x9 : ffffce78e8bb0160
[  181.945804] x8 : ffff8000827b3160 x7 : f9157b241586f343 x6 : eeb6502a01c81c74
[  181.953068] x5 : a4acfcdd2e8096bb x4 : ffffce78ea277340 x3 : 00000000ffffd1e1
[  181.960329] x2 : 0000000000000101 x1 : ffffce78ea277340 x0 : ffff318ebe7d3000
[  181.967591] Call trace:
[  181.970043]  handle_softirqs+0x98/0x368 (P)
[  181.974240]  __do_softirq+0x18/0x20
[  181.977743]  ____do_softirq+0x14/0x28
[  181.981415]  call_on_irq_stack+0x24/0x30
[  181.985180]  do_softirq_own_stack+0x20/0x30
[  181.989379]  __irq_exit_rcu+0x114/0x140
[  181.993142]  irq_exit_rcu+0x14/0x28
[  181.996816]  el1_interrupt+0x44/0xb8
[  182.000316]  el1h_64_irq_handler+0x14/0x20
[  182.004343]  el1h_64_irq+0x80/0x88
[  182.007755]  cpuidle_enter_state+0xc4/0x4a8 (P)
[  182.012305]  cpuidle_enter+0x3c/0x58
[  182.015980]  cpuidle_idle_call+0x128/0x1c0
[  182.020005]  do_idle+0xe0/0xf0
[  182.023155]  cpu_startup_entry+0x3c/0x48
[  182.026917]  secondary_start_kernel+0xdc/0x120
[  182.031379]  __secondary_switched+0x74/0x78
[  212.971162] rcu: INFO: rcu_preempt detected expedited stalls on CPUs/tasks: { 7-.... } 6103 jiffies s: 417 root: 0x80/.
[  212.985935] rcu: blocking rcu_node structures (internal RCU debug):
[  212.992758] Sending NMI from CPU 0 to CPUs 7:
[  212.998539] NMI backtrace for cpu 7
[  213.004304] CPU: 7 UID: 0 PI
---truncated---</description><pubDate>Tue, 21 Jan 2025 12:35:27 +0000</pubDate></item><item><title>CVE-2025-21664 | dm thin: make get_first_thin use rcu-safe list first function</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21664</link><description>In the Linux kernel, the following vulnerability has been resolved:

dm thin: make get_first_thin use rcu-safe list first function

The documentation in rculist.h explains the absence of list_empty_rcu()
and cautions programmers against relying on a list_empty() -&gt;
list_first() sequence in RCU safe code.  This is because each of these
functions performs its own READ_ONCE() of the list head.  This can lead
to a situation where the list_empty() sees a valid list entry, but the
subsequent list_first() sees a different view of list head state after a
modification.

In the case of dm-thin, this author had a production box crash from a GP
fault in the process_deferred_bios path.  This function saw a valid list
head in get_first_thin() but when it subsequently dereferenced that and
turned it into a thin_c, it got the inside of the struct pool, since the
list was now empty and referring to itself.  The kernel on which this
occurred printed both a warning about a refcount_t being saturated, and
a UBSAN error for an out-of-bounds cpuid access in the queued spinlock,
prior to the fault itself.  When the resulting kdump was examined, it
was possible to see another thread patiently waiting in thin_dtr's
synchronize_rcu.

The thin_dtr call managed to pull the thin_c out of the active thins
list (and have it be the last entry in the active_thins list) at just
the wrong moment which lead to this crash.

Fortunately, the fix here is straight forward.  Switch get_first_thin()
function to use list_first_or_null_rcu() which performs just a single
READ_ONCE() and returns NULL if the list is already empty.

This was run against the devicemapper test suite's thin-provisioning
suites for delete and suspend and no regressions were observed.</description><pubDate>Tue, 21 Jan 2025 12:35:28 +0000</pubDate></item><item><title>CVE-2024-57937 | mm: reinstate ability to map write-sealed memfd mappings read-only</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57937</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm: reinstate ability to map write-sealed memfd mappings read-only

Patch series "mm: reinstate ability to map write-sealed memfd mappings
read-only".

In commit 158978945f31 ("mm: perform the mapping_map_writable() check
after call_mmap()") (and preceding changes in the same series) it became
possible to mmap() F_SEAL_WRITE sealed memfd mappings read-only.

Commit 5de195060b2e ("mm: resolve faulty mmap_region() error path
behaviour") unintentionally undid this logic by moving the
mapping_map_writable() check before the shmem_mmap() hook is invoked,
thereby regressing this change.

This series reworks how we both permit write-sealed mappings being mapped
read-only and disallow mprotect() from undoing the write-seal, fixing this
regression.

We also add a regression test to ensure that we do not accidentally
regress this in future.

Thanks to Julian Orth for reporting this regression.


This patch (of 2):

In commit 158978945f31 ("mm: perform the mapping_map_writable() check
after call_mmap()") (and preceding changes in the same series) it became
possible to mmap() F_SEAL_WRITE sealed memfd mappings read-only.

This was previously unnecessarily disallowed, despite the man page
documentation indicating that it would be, thereby limiting the usefulness
of F_SEAL_WRITE logic.

We fixed this by adapting logic that existed for the F_SEAL_FUTURE_WRITE
seal (one which disallows future writes to the memfd) to also be used for
F_SEAL_WRITE.

For background - the F_SEAL_FUTURE_WRITE seal clears VM_MAYWRITE for a
read-only mapping to disallow mprotect() from overriding the seal - an
operation performed by seal_check_write(), invoked from shmem_mmap(), the
f_op-&gt;mmap() hook used by shmem mappings.

By extending this to F_SEAL_WRITE and critically - checking
mapping_map_writable() to determine if we may map the memfd AFTER we
invoke shmem_mmap() - the desired logic becomes possible.  This is because
mapping_map_writable() explicitly checks for VM_MAYWRITE, which we will
have cleared.

Commit 5de195060b2e ("mm: resolve faulty mmap_region() error path
behaviour") unintentionally undid this logic by moving the
mapping_map_writable() check before the shmem_mmap() hook is invoked,
thereby regressing this change.

We reinstate this functionality by moving the check out of shmem_mmap()
and instead performing it in do_mmap() at the point at which VMA flags are
being determined, which seems in any case to be a more appropriate place
in which to make this determination.

In order to achieve this we rework memfd seal logic to allow us access to
this information using existing logic and eliminate the clearing of
VM_MAYWRITE from seal_check_write() which we are performing in do_mmap()
instead.</description><pubDate>Tue, 21 Jan 2025 12:35:29 +0000</pubDate></item><item><title>CVE-2024-57938 | net/sctp: Prevent autoclose integer overflow in sctp_association_init()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57938</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/sctp: Prevent autoclose integer overflow in sctp_association_init()

While by default max_autoclose equals to INT_MAX / HZ, one may set
net.sctp.max_autoclose to UINT_MAX. There is code in
sctp_association_init() that can consequently trigger overflow.</description><pubDate>Tue, 21 Jan 2025 12:35:29 +0000</pubDate></item><item><title>CVE-2024-57930 | tracing: Have process_string() also allow arrays</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57930</link><description>In the Linux kernel, the following vulnerability has been resolved:

tracing: Have process_string() also allow arrays

In order to catch a common bug where a TRACE_EVENT() TP_fast_assign()
assigns an address of an allocated string to the ring buffer and then
references it in TP_printk(), which can be executed hours later when the
string is free, the function test_event_printk() runs on all events as
they are registered to make sure there's no unwanted dereferencing.

It calls process_string() to handle cases in TP_printk() format that has
"%s". It returns whether or not the string is safe. But it can have some
false positives.

For instance, xe_bo_move() has:

 TP_printk("move_lacks_source:%s, migrate object %p [size %zu] from %s to %s device_id:%s",
            __entry-&gt;move_lacks_source ? "yes" : "no", __entry-&gt;bo, __entry-&gt;size,
            xe_mem_type_to_name[__entry-&gt;old_placement],
            xe_mem_type_to_name[__entry-&gt;new_placement], __get_str(device_id))

Where the "%s" references into xe_mem_type_to_name[]. This is an array of
pointers that should be safe for the event to access. Instead of flagging
this as a bad reference, if a reference points to an array, where the
record field is the index, consider it safe.</description><pubDate>Tue, 21 Jan 2025 12:35:30 +0000</pubDate></item><item><title>CVE-2024-57931 | selinux: ignore unknown extended permissions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57931</link><description>In the Linux kernel, the following vulnerability has been resolved:

selinux: ignore unknown extended permissions

When evaluating extended permissions, ignore unknown permissions instead
of calling BUG(). This commit ensures that future permissions can be
added without interfering with older kernels.</description><pubDate>Tue, 21 Jan 2025 12:35:30 +0000</pubDate></item><item><title>CVE-2024-57932 | gve: guard XDP xmit NDO on existence of xdp queues</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57932</link><description>In the Linux kernel, the following vulnerability has been resolved:

gve: guard XDP xmit NDO on existence of xdp queues

In GVE, dedicated XDP queues only exist when an XDP program is installed
and the interface is up. As such, the NDO XDP XMIT callback should
return early if either of these conditions are false.

In the case of no loaded XDP program, priv-&gt;num_xdp_queues=0 which can
cause a divide-by-zero error, and in the case of interface down,
num_xdp_queues remains untouched to persist XDP queue count for the next
interface up, but the TX pointer itself would be NULL.

The XDP xmit callback also needs to synchronize with a device
transitioning from open to close. This synchronization will happen via
the GVE_PRIV_FLAGS_NAPI_ENABLED bit along with a synchronize_net() call,
which waits for any RCU critical sections at call-time to complete.</description><pubDate>Tue, 21 Jan 2025 12:35:30 +0000</pubDate></item><item><title>CVE-2024-57933 | gve: guard XSK operations on the existence of queues</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57933</link><description>In the Linux kernel, the following vulnerability has been resolved:

gve: guard XSK operations on the existence of queues

This patch predicates the enabling and disabling of XSK pools on the
existence of queues. As it stands, if the interface is down, disabling
or enabling XSK pools would result in a crash, as the RX queue pointer
would be NULL. XSK pool registration will occur as part of the next
interface up.

Similarly, xsk_wakeup needs be guarded against queues disappearing
while the function is executing, so a check against the
GVE_PRIV_FLAGS_NAPI_ENABLED flag is added to synchronize with the
disabling of the bit and the synchronize_net() in gve_turndown.</description><pubDate>Tue, 21 Jan 2025 12:35:31 +0000</pubDate></item><item><title>CVE-2024-57934 | fgraph: Add READ_ONCE() when accessing fgraph_array[]</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57934</link><description>In the Linux kernel, the following vulnerability has been resolved:

fgraph: Add READ_ONCE() when accessing fgraph_array[]

In __ftrace_return_to_handler(), a loop iterates over the fgraph_array[]
elements, which are fgraph_ops. The loop checks if an element is a
fgraph_stub to prevent using a fgraph_stub afterward.

However, if the compiler reloads fgraph_array[] after this check, it might
race with an update to fgraph_array[] that introduces a fgraph_stub. This
could result in the stub being processed, but the stub contains a null
"func_hash" field, leading to a NULL pointer dereference.

To ensure that the gops compared against the fgraph_stub matches the gops
processed later, add a READ_ONCE(). A similar patch appears in commit
63a8dfb ("function_graph: Add READ_ONCE() when accessing fgraph_array[]").</description><pubDate>Tue, 21 Jan 2025 12:35:31 +0000</pubDate></item><item><title>CVE-2024-57935 | RDMA/hns: Fix accessing invalid dip_ctx during destroying QP</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57935</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Fix accessing invalid dip_ctx during destroying QP

If it fails to modify QP to RTR, dip_ctx will not be attached. And
during detroying QP, the invalid dip_ctx pointer will be accessed.</description><pubDate>Tue, 21 Jan 2025 12:35:32 +0000</pubDate></item><item><title>CVE-2024-57936 | RDMA/bnxt_re: Fix max SGEs for the Work Request</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57936</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/bnxt_re: Fix max SGEs for the Work Request

Gen P7 supports up to 13 SGEs for now. WQE software structure
can hold only 6 now. Since the max send sge is reported as
13, the stack can give requests up to 13 SGEs. This is causing
traffic failures and system crashes.

Use the define for max SGE supported for variable size. This
will work for both static and variable WQEs.</description><pubDate>Tue, 21 Jan 2025 12:35:32 +0000</pubDate></item><item><title>CVE-2025-0615 | Input validation vulnerability in Qualifio&amp;#x27;s Wheel of Fortune</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0615</link><description>Input validation vulnerability in Qualifio's Wheel of Fortune. This vulnerability allows an attacker to modify an email to contain the ‘+’ symbol to access the application and win prizes as many times as wanted.</description><pubDate>Tue, 21 Jan 2025 11:52:54 +0000</pubDate></item><item><title>CVE-2025-0614 | Input validation vulnerability in Qualifio&amp;#x27;s Wheel of Fortune</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0614</link><description>Input validation vulnerability in Qualifio's Wheel of Fortune. This vulnerability could allow an attacker to modify a single email to contain upper and lower case characters in order to access the application and win prizes as many times as wanted.</description><pubDate>Tue, 21 Jan 2025 11:45:45 +0000</pubDate></item><item><title>CVE-2024-11226 | FireCask Like &amp;amp; Share Button &amp;lt;= 1.2 - Authenticated (Contributor+) Stored Cross-Site Scripting via width Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-11226</link><description>The FireCask Like &amp; Share Button plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'width' parameter in all versions up to, and including, 1.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 21 Jan 2025 11:12:52 +0000</pubDate></item><item><title>CVE-2024-13230 | Social Share, Social Login and Social Comments Plugin – Super Socializer &amp;lt;= 7.14 - Unauthenticated Limited SQL Injection via &amp;#x27;SuperSocializerKey&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-13230</link><description>The Social Share, Social Login and Social Comments Plugin – Super Socializer plugin for WordPress is vulnerable to Limited SQL Injection via the ‘SuperSocializerKey’ parameter in all versions up to, and including, 7.14 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional values into the already existing query that can be used to extract user metadata from the database.</description><pubDate>Tue, 21 Jan 2025 11:12:52 +0000</pubDate></item><item><title>CVE-2024-13444 | wp-greet &amp;lt;= 6.2 - Cross-Site Request Forgery to Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-13444</link><description>The wp-greet plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 6.2. This is due to missing or incorrect nonce validation on a function. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 21 Jan 2025 11:12:53 +0000</pubDate></item><item><title>CVE-2024-52973 | Kibana allocation of resources without limits or throttling leads to crash</title><link>https://www.cve.org/CVERecord?id=CVE-2024-52973</link><description>An allocation of resources without limits or throttling in Kibana can lead to a crash caused by a specially crafted request to /api/log_entries/summary. This can be carried out by users with read access to the Observability-Logs feature in Kibana.</description><pubDate>Tue, 21 Jan 2025 11:12:53 +0000</pubDate></item><item><title>CVE-2025-0450 | Betheme &amp;lt;= 27.6.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Custom JS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0450</link><description>The Betheme plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's custom JS functionality in all versions up to, and including, 27.6.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 21 Jan 2025 11:12:53 +0000</pubDate></item><item><title>CVE-2024-37284 | Elastic Defend Improper Handling of Alternate Encoding Leads to Crash</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37284</link><description>Improper handling of alternate encoding occurs when Elastic Defend on Windows systems attempts to scan a file or process encoded as a multibyte character. This leads to an uncaught exception causing Elastic Defend to crash which in turn will prevent it from quarantining the file and/or killing the process.</description><pubDate>Tue, 21 Jan 2025 11:12:54 +0000</pubDate></item><item><title>CVE-2024-43709 | Elasticsearch allocation of resources without limits or throttling leads to crash</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43709</link><description>An allocation of resources without limits or throttling in Elasticsearch can lead to an OutOfMemoryError exception resulting in a crash via a specially crafted query using an SQL function.</description><pubDate>Tue, 21 Jan 2025 11:12:55 +0000</pubDate></item><item><title>CVE-2024-6466 | NEC Corporation's WebSAM DeploymentManager v6.0 to v6.80 allows an attacker to reset configurations or restart products via network with X-F...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6466</link><description>NEC Corporation's WebSAM DeploymentManager v6.0 to v6.80 allows an attacker to reset configurations or restart products via network with X-FRAME-OPTIONS is not specified.</description><pubDate>Tue, 21 Jan 2025 10:19:21 +0000</pubDate></item><item><title>CVE-2025-23184 | Apache CXF: Denial of Service vulnerability with temporary files</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23184</link><description>A potential denial of service vulnerability is present in versions of Apache CXF before 3.5.10, 3.6.5 and 4.0.6. In some edge cases, the CachedOutputStream instances may not be closed and, if backed by temporary files, may fill up the file system (it applies to servers and clients).</description><pubDate>Tue, 21 Jan 2025 09:45:45 +0000</pubDate></item><item><title>CVE-2024-12005 | WP-BibTeX &amp;lt;= 3.0.1 - Cross-Site Request Forgery to Stored and Reflected Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-12005</link><description>The WP-BibTeX plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 3.0.1. This is due to missing or incorrect nonce validation on the wp_bibtex_option_page() function. This makes it possible for unauthenticated attackers to inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 21 Jan 2025 09:29:49 +0000</pubDate></item><item><title>CVE-2024-12104 | Visual Website Collaboration, Feedback &amp;amp; Project Management – Atarim &amp;lt;= 4.0.9 - Missing Authorization to Authenticated (Subscriber+) Project Page/File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-12104</link><description>The Visual Website Collaboration, Feedback &amp; Project Management – Atarim plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the wpf_delete_file and wpf_delete_file functions in all versions up to, and including, 4.0.9. This makes it possible for unauthenticated attackers to delete project pages and files.</description><pubDate>Tue, 21 Jan 2025 09:29:49 +0000</pubDate></item><item><title>CVE-2024-13404 | Link Library &amp;lt;= 7.7.2 - Reflected Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-13404</link><description>The Link Library plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'searchll' parameter in all versions up to, and including, 7.7.2 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Tue, 21 Jan 2025 09:29:49 +0000</pubDate></item><item><title>CVE-2024-10936 | String Locator &amp;lt;= 2.6.6 - Unauthenticated PHP Object Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10936</link><description>The String locator plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 2.6.6 via deserialization of untrusted input in the 'recursive_unserialize_replace' function. This makes it possible for unauthenticated attackers to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code. An administrator must perform a search and replace action to trigger the exploit.</description><pubDate>Tue, 21 Jan 2025 08:32:12 +0000</pubDate></item><item><title>CVE-2025-0371 | Jet Elements &amp;lt;= 2.7.2.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Multiple Widgets</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0371</link><description>The JetElements plugin for WordPress is vulnerable to Stored Cross-Site Scripting via several widgets in all versions up to, and including, 2.7.2.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 21 Jan 2025 08:32:13 +0000</pubDate></item><item><title>CVE-2025-23086 | On most desktop platforms, Brave Browser versions 1.70.x-1.73.x included a feature to show a site's origin on the OS-provided file selector ...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23086</link><description>On most desktop platforms, Brave Browser versions 1.70.x-1.73.x included a feature to show a site's origin on the OS-provided file selector dialog when a site prompts the user to upload or download a file. However the origin was not correctly inferred in some cases. When combined with an open redirector vulnerability on a trusted site, this could allow a malicious site to initiate a download whose origin in the file select dialog appears as the trusted site which initiated the redirect.</description><pubDate>Tue, 21 Jan 2025 04:42:41 +0000</pubDate></item><item><title>CVE-2024-13536 | 1003 Mortgage Application &amp;lt;= 1.87 - Unauthenticated Full Path Disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-13536</link><description>The 1003 Mortgage Application plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 1.87. This is due the /inc/class/fnm/export.php file being publicly accessible with error logging enabled. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.</description><pubDate>Tue, 21 Jan 2025 04:32:19 +0000</pubDate></item><item><title>CVE-2024-45091 | IBM UrbanCode Deploy information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45091</link><description>IBM UrbanCode Deploy (UCD) 7.0 through 7.0.5.24, 7.1 through 7.1.2.10, and 7.2 through 7.2.3.13 stores potentially sensitive information in log files that could be read by a local user with access to HTTP request logs.</description><pubDate>Tue, 21 Jan 2025 00:58:33 +0000</pubDate></item><item><title>CVE-2025-24014 | segmentation fault in win_line() in Vim &amp;lt; 9.1.1043</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24014</link><description>Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.</description><pubDate>Mon, 20 Jan 2025 23:01:06 +0000</pubDate></item><item><title>CVE-2024-13454 | Weak encryption algorithm in Easy-RSA version 3.0.5 through 3.1.7 allows a local attacker to more easily bruteforce the private CA key when ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-13454</link><description>Weak encryption algorithm in Easy-RSA version 3.0.5 through 3.1.7 allows a local attacker to more easily bruteforce the private CA key when created using OpenSSL 3</description><pubDate>Mon, 20 Jan 2025 21:25:19 +0000</pubDate></item><item><title>CVE-2025-23214 | Cosmos userbase checking vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23214</link><description>Cosmos provides users the ability self-host a home server by acting as a secure gateway to your application, as well as a server manager. By monitoring the error code returned in the login, it is possible to figure out whether a user exist or not in the database. Patched in 0.17.7.</description><pubDate>Mon, 20 Jan 2025 18:17:15 +0000</pubDate></item><item><title>CVE-2024-22347 | IBM UrbanCode Velocity information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22347</link><description>IBM DevOps Velocity 5.0.0 and IBM UrbanCode Velocity 4.0.0 through 4.0. 25 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.</description><pubDate>Mon, 20 Jan 2025 17:50:13 +0000</pubDate></item><item><title>CVE-2024-22348 | IBM UrbanCode Velocity cross-origin resource sharing</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22348</link><description>IBM DevOps Velocity 5.0.0 and IBM UrbanCode Velocity 4.0.0 through 4.0. 25 uses Cross-Origin Resource Sharing (CORS) which could allow an attacker to carry out privileged actions and retrieve sensitive information as the domain name is not being limited to only trusted domains.</description><pubDate>Mon, 20 Jan 2025 17:50:13 +0000</pubDate></item><item><title>CVE-2024-22349 | IBM UrbanCode Velocity information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22349</link><description>IBM DevOps Velocity 5.0.0 and IBM UrbanCode Velocity 4.0.0 through 4.0. 25 allows web pages to be stored locally which can be read by another user on the system.</description><pubDate>Mon, 20 Jan 2025 17:50:14 +0000</pubDate></item><item><title>CVE-2025-23221 | Fedify has an Infinite loop and Blind SSRF found inside the Webfinger mechanism</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23221</link><description>Fedify is a TypeScript library for building federated server apps powered by ActivityPub and other standards. This vulnerability allows a user to maneuver the Webfinger mechanism to perform a GET request to any internal resource on any Host, Port, URL combination regardless of present security mechanisms, and forcing the victim’s server into an infinite loop causing Denial of Service. Moreover, this issue can also be maneuvered into performing a Blind SSRF attack. This vulnerability is fixed in 1.0.14, 1.1.11, 1.2.11, and 1.3.4.</description><pubDate>Mon, 20 Jan 2025 16:58:22 +0000</pubDate></item><item><title>CVE-2025-24013 | CodeIgniter validation of header name and value</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24013</link><description>CodeIgniter is a PHP full-stack web framework. Prior to 4.5.8, CodeIgniter lacked proper header validation for its name and value. The potential attacker can construct deliberately malformed headers with Header class. This could disrupt application functionality, potentially causing errors or generating invalid HTTP requests. In some cases, these malformed requests might lead to a DoS scenario if a remote service’s web application firewall interprets them as malicious and blocks further communication with the application. This vulnerability is fixed in 4.5.8.</description><pubDate>Mon, 20 Jan 2025 16:10:43 +0000</pubDate></item><item><title>CVE-2025-23220 | WeGIA has a SQL Injection endpoint &amp;#x27;adicionar_raca.php&amp;#x27; parameter &amp;#x27;raca&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23220</link><description>WeGIA is an open source web manager with a focus on the Portuguese language and charitable institutions. A SQL Injection vulnerability was identified in the WeGIA application, specifically in the adicionar_raca.php endpoint. This vulnerability allows attackers to execute arbitrary SQL commands in the database, allowing unauthorized access to sensitive information. During the exploit, it was possible to perform a complete dump of the application's database, highlighting the severity of the flaw. This vulnerability is fixed in 3.2.10.</description><pubDate>Mon, 20 Jan 2025 16:10:44 +0000</pubDate></item><item><title>CVE-2025-24010 | Vite allows any websites to send any requests to the development server and read the response</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24010</link><description>Vite is a frontend tooling framework for javascript. Vite allowed any websites to send any requests to the development server and read the response due to default CORS settings and lack of validation on the Origin header for WebSocket connections. This vulnerability is fixed in 6.0.9, 5.4.12, and 4.5.6.</description><pubDate>Mon, 20 Jan 2025 16:10:44 +0000</pubDate></item><item><title>CVE-2025-23044 | Cross-Site Request Forgery (CSRF) allows creating admin account with POST request</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23044</link><description>PwnDoc is a penetration test report generator. There is no CSRF protection in pwndoc, allowing attackers to send requests on a logged-in user's behalf. This includes GET and POST requests due to the missing SameSite= attribute on cookies and the ability to refresh cookies. Commit 14acb704891245bf1703ce6296d62112e85aa995 patches the issue.</description><pubDate>Mon, 20 Jan 2025 15:55:14 +0000</pubDate></item><item><title>CVE-2025-23218 | WeGIA has a SQL Injection endpoint &amp;#x27;adicionar_especie.php&amp;#x27; parameter &amp;#x27;especie&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23218</link><description>WeGIA is an open source web manager with a focus on the Portuguese language and charitable institutions. A SQL Injection vulnerability was identified in the WeGIA application, specifically in the adicionar_especie.php endpoint. This vulnerability allows attackers to execute arbitrary SQL commands in the database, allowing unauthorized access to sensitive information. During the exploit, it was possible to perform a complete dump of the application's database, highlighting the severity of the flaw. This vulnerability is fixed in 3.2.10.</description><pubDate>Mon, 20 Jan 2025 15:55:15 +0000</pubDate></item><item><title>CVE-2025-23219 | WeGIA has a SQL Injection endpoint &amp;#x27;adicionar_cor.php&amp;#x27; parameter &amp;#x27;cor&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2025-23219</link><description>WeGIA is an open source web manager with a focus on the Portuguese language and charitable institutions. A SQL Injection vulnerability was identified in the WeGIA application, specifically in the adicionar_cor.php endpoint. This vulnerability allows attackers to execute arbitrary SQL commands in the database, allowing unauthorized access to sensitive information. During the exploit, it was possible to perform a complete dump of the application's database, highlighting the severity of the flaw. This vulnerability is fixed in 3.2.10.</description><pubDate>Mon, 20 Jan 2025 15:55:15 +0000</pubDate></item><item><title>CVE-2025-22620 | gix-worktree-state nonexclusive checkout sets executable files world-writable</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22620</link><description>gitoxide is an implementation of git written in Rust. Prior to 0.17.0, gix-worktree-state specifies 0777 permissions when checking out executable files, intending that the umask will restrict them appropriately. But one of the strategies it uses to set permissions is not subject to the umask. This causes files in a repository to be world-writable in some situations. This vulnerability is fixed in 0.17.0.</description><pubDate>Mon, 20 Jan 2025 15:48:11 +0000</pubDate></item><item><title>CVE-2025-22131 | Cross-Site Scripting (XSS) vulnerability in generateNavigation() function</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22131</link><description>PhpSpreadsheet is a PHP library for reading and writing spreadsheet files. Cross-Site Scripting (XSS) vulnerability in the code which translates the XLSX file into a HTML representation and displays it in the response.</description><pubDate>Mon, 20 Jan 2025 15:41:18 +0000</pubDate></item><item><title>CVE-2024-51738 | Sunshine improperly enforces pairing protocol request order</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51738</link><description>Sunshine is a self-hosted game stream host for Moonlight. In 0.23.1 and earlier, Sunshine's pairing protocol implementation does not validate request order and is thereby vulnerable to a MITM attack, potentially allowing an unauthenticated attacker to pair a client by hijacking a legitimate pairing attempt. This bug may also be used by a remote attacker to crash Sunshine. This vulnerability is fixed in 2025.118.151840.</description><pubDate>Mon, 20 Jan 2025 15:33:02 +0000</pubDate></item><item><title>CVE-2024-45647 | IBM Security Verify Access unverified password change</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45647</link><description>IBM Security Verify Access 10.0.0 through 10.0.8 and IBM Security Verify Access Docker 10.0.0 through 10.0.8 could allow could an unverified user to change the password of an expired user without prior knowledge of that password.</description><pubDate>Mon, 20 Jan 2025 15:01:20 +0000</pubDate></item><item><title>CVE-2025-21655 | io_uring/eventfd: ensure io_eventfd_signal() defers another RCU period</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21655</link><description>In the Linux kernel, the following vulnerability has been resolved:

io_uring/eventfd: ensure io_eventfd_signal() defers another RCU period

io_eventfd_do_signal() is invoked from an RCU callback, but when
dropping the reference to the io_ev_fd, it calls io_eventfd_free()
directly if the refcount drops to zero. This isn't correct, as any
potential freeing of the io_ev_fd should be deferred another RCU grace
period.

Just call io_eventfd_put() rather than open-code the dec-and-test and
free, which will correctly defer it another RCU grace period.</description><pubDate>Mon, 20 Jan 2025 13:56:38 +0000</pubDate></item><item><title>CVE-2025-24337 | WriteFreely through 0.15.1, when MySQL is used, allows local users to discover credentials by reading config.ini.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-24337</link><description>WriteFreely through 0.15.1, when MySQL is used, allows local users to discover credentials by reading config.ini.</description><pubDate>Mon, 20 Jan 2025 13:56:38 +0000</pubDate></item><item><title>CVE-2024-13176 | Timing side-channel in ECDSA signature computation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-13176</link><description>Issue summary: A timing side-channel which could potentially allow recovering
the private key exists in the ECDSA signature computation.

Impact summary: A timing side-channel in ECDSA signature computations
could allow recovering the private key by an attacker. However, measuring
the timing would require either local access to the signing application or
a very fast network connection with low latency.

There is a timing signal of around 300 nanoseconds when the top word of
the inverted ECDSA nonce value is zero. This can happen with significant
probability only for some of the supported elliptic curves. In particular
the NIST P-521 curve is affected. To be able to measure this leak, the attacker
process must either be located in the same physical computer or must
have a very fast network connection with low latency. For that reason
the severity of this vulnerability is Low.</description><pubDate>Mon, 20 Jan 2025 13:42:44 +0000</pubDate></item><item><title>CVE-2025-0479 | Security Misconfiguration Vulnerability in CP Plus Router</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0479</link><description>This vulnerability exists in the CP Plus Router due to insecure handling of cookie flags used within its web interface. A remote attacker could exploit this vulnerability by intercepting data transmissions during an HTTP session on the vulnerable system.
 
Successful exploitation of this vulnerability could allow the attacker to obtain sensitive information and compromise the targeted system.</description><pubDate>Mon, 20 Jan 2025 11:44:59 +0000</pubDate></item><item><title>CVE-2023-52923 | netfilter: nf_tables: adapt set backend to use GC transaction API</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52923</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: adapt set backend to use GC transaction API

Use the GC transaction API to replace the old and buggy gc API and the
busy mark approach.

No set elements are removed from async garbage collection anymore,
instead the _DEAD bit is set on so the set element is not visible from
lookup path anymore. Async GC enqueues transaction work that might be
aborted and retried later.

rbtree and pipapo set backends does not set on the _DEAD bit from the
sync GC path since this runs in control plane path where mutex is held.
In this case, set elements are deactivated, removed and then released
via RCU callback, sync GC never fails.</description><pubDate>Mon, 20 Jan 2025 10:57:21 +0000</pubDate></item><item><title>CVE-2025-0581 | CampCodes School Management Software Chat History send cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0581</link><description>A vulnerability classified as problematic has been found in CampCodes School Management Software 1.0. This affects an unknown part of the file /chat/group/send of the component Chat History. The manipulation of the argument message leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 20 Jan 2025 03:16:34 +0000</pubDate></item><item><title>CVE-2025-0582 | itsourcecode Farm Management System add-pig.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0582</link><description>A vulnerability classified as critical was found in itsourcecode Farm Management System up to 1.0. This vulnerability affects unknown code of the file /add-pig.php. The manipulation of the argument pigphoto leads to unrestricted upload. The attack can be initiated remotely.</description><pubDate>Mon, 20 Jan 2025 03:16:34 +0000</pubDate></item><item><title>CVE-2025-0579 | Shiprocket Module REST API Module restapi sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0579</link><description>A vulnerability was found in Shiprocket Module 3/4 on OpenCart. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /index.php?route=extension/shiprocket/module/restapi of the component REST API Module. The manipulation of the argument x-username leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 20 Jan 2025 02:57:38 +0000</pubDate></item><item><title>CVE-2025-0580 | Shiprocket Module REST API Module rest_api authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0580</link><description>A vulnerability was found in Shiprocket Module 3 on OpenCart. It has been rated as critical. Affected by this issue is some unknown functionality of the file /index.php?route=extension/module/rest_api&amp;amp;action=getOrders of the component REST API Module. The manipulation of the argument contentHash leads to incorrect authorization. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 20 Jan 2025 02:57:38 +0000</pubDate></item><item><title>CVE-2025-0586 | aEnrich Technology a+HRD - Insecure Deserialization</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0586</link><description>The a+HRD from aEnrich Technology has an Insecure Deserialization vulnerability, allowing remote attackers with database modification privileges and regular system privileges to perform arbitrary code execution.</description><pubDate>Mon, 20 Jan 2025 02:57:38 +0000</pubDate></item><item><title>CVE-2024-13524 | obsproject OBS Studio untrusted search path</title><link>https://www.cve.org/CVERecord?id=CVE-2024-13524</link><description>A vulnerability has been found in obsproject OBS Studio up to 30.0.2 on Windows and classified as problematic. Affected by this vulnerability is an unknown functionality. The manipulation leads to untrusted search path. The attack needs to be approached locally. The complexity of an attack is rather high. The exploitation appears to be difficult. It is recommended to apply a patch to fix this issue. The vendor disagrees that this issue is "something worth reporting, as every attack surface requires privileged access/user compromise".</description><pubDate>Mon, 20 Jan 2025 02:22:04 +0000</pubDate></item><item><title>CVE-2025-0584 | aEnrich Technology a+HRD - Server-Side Request Forgery (SSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0584</link><description>The a+HRD from aEnrich Technology has a Server-side Request Forgery, allowing unauthenticated remote attackers to exploit this vulnerability to probe internal network.</description><pubDate>Mon, 20 Jan 2025 02:22:04 +0000</pubDate></item><item><title>CVE-2025-0585 | aEnrich Technology a+HRD - SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0585</link><description>The a+HRD from aEnrich Technology has a SQL Injection vulnerability, allowing unauthenticated remote attackers to inject arbitrary SQL commands to read, modify, and delete database contents.</description><pubDate>Mon, 20 Jan 2025 02:22:05 +0000</pubDate></item><item><title>CVE-2025-0583 | aEnrich Technology a+HRD - Reflected Cross-site Scripting(XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0583</link><description>The a+HRD from aEnrich Technology has a Reflected Cross-site Scripting vulnerability, allowing unauthenticated remote attackers to execute arbitrary JavaScript codes in user's browser through phishing attacks.</description><pubDate>Mon, 20 Jan 2025 02:22:05 +0000</pubDate></item><item><title>CVE-2025-0578 | Facile Sistemas Cloud Apps Password Reset forgotpassword cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0578</link><description>A vulnerability was found in Facile Sistemas Cloud Apps up to 20250107. It has been classified as problematic. Affected is an unknown function of the file /account/forgotpassword of the component Password Reset Handler. The manipulation of the argument reterros leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 20 Jan 2025 02:22:06 +0000</pubDate></item><item><title>CVE-2025-0576 | Mobotix M15 player cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0576</link><description>A vulnerability was found in Mobotix M15 4.3.4.83 and classified as problematic. This issue affects some unknown processing of the file /control/player?center&amp;amp;eventlist&amp;amp;pda&amp;amp;dummy_for_reload=1736177631&amp;amp;p_evt. The manipulation of the argument p_qual leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Sun, 19 Jan 2025 23:37:51 +0000</pubDate></item><item><title>CVE-2025-0575 | Union Bank of India Vyom Rooting Detection protection mechanism</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0575</link><description>A vulnerability has been found in Union Bank of India Vyom 8.0.34 on Android and classified as problematic. This vulnerability affects unknown code of the component Rooting Detection. The manipulation leads to protection mechanism failure. The attack needs to be approached locally. The complexity of an attack is rather high. The exploitation appears to be difficult. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Sun, 19 Jan 2025 23:09:17 +0000</pubDate></item><item><title>CVE-2024-41742 | IBM TXSeries for Multiplatforms denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41742</link><description>IBM TXSeries for Multiplatforms 10.1 is vulnerable to a denial of service, caused by improper enforcement of the timeout on individual read operations. By conducting a slowloris-type attacks, a remote attacker could exploit this vulnerability to cause a denial of service.</description><pubDate>Sun, 19 Jan 2025 15:13:20 +0000</pubDate></item><item><title>CVE-2024-41743 | IBM TXSeries for Multiplatforms denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41743</link><description>IBM TXSeries for Multiplatforms 10.1 could allow a remote attacker to cause a denial of service using persistent connections due to improper allocation of resources.</description><pubDate>Sun, 19 Jan 2025 15:13:21 +0000</pubDate></item><item><title>CVE-2024-38337 | IBM Sterling Secure Proxy improper input validation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38337</link><description>IBM Sterling Secure Proxy 6.0.0.0, 6.0.0.1, 6.0.0.2, 6.0.0.3, 6.1.0.0, and 6.2.0.0 could allow an unauthorized attacker to retrieve or alter sensitive information contents due to incorrect permission assignments.</description><pubDate>Sun, 19 Jan 2025 15:13:22 +0000</pubDate></item><item><title>CVE-2024-41783 | IBM Sterling Secure Proxy improper input validation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41783</link><description>IBM Sterling Secure Proxy 6.0.0.0, 6.0.0.1, 6.0.0.2, 6.0.0.3, 6.1.0.0, and 6.2.0.0 could allow a privileged user to inject commands into the underlying operating system due to improper validation of a specified type of input.</description><pubDate>Sun, 19 Jan 2025 15:13:22 +0000</pubDate></item><item><title>CVE-2024-57904 | iio: adc: at91: call input_free_device() on allocated iio_dev</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57904</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: at91: call input_free_device() on allocated iio_dev

Current implementation of at91_ts_register() calls input_free_deivce()
on st-&gt;ts_input, however, the err label can be reached before the
allocated iio_dev is stored to st-&gt;ts_input. Thus call
input_free_device() on input instead of st-&gt;ts_input.</description><pubDate>Sun, 19 Jan 2025 12:13:38 +0000</pubDate></item><item><title>CVE-2024-57905 | iio: adc: ti-ads1119: fix information leak in triggered buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57905</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: ti-ads1119: fix information leak in triggered buffer

The 'scan' local struct is used to push data to user space from a
triggered buffer, but it has a hole between the sample (unsigned int)
and the timestamp. This hole is never initialized.

Initialize the struct to zero before using it to avoid pushing
uninitialized information to userspace.</description><pubDate>Sun, 19 Jan 2025 12:13:39 +0000</pubDate></item><item><title>CVE-2024-57906 | iio: adc: ti-ads8688: fix information leak in triggered buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57906</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: ti-ads8688: fix information leak in triggered buffer

The 'buffer' local array is used to push data to user space from a
triggered buffer, but it does not set values for inactive channels, as
it only uses iio_for_each_active_channel() to assign new values.

Initialize the array to zero before using it to avoid pushing
uninitialized information to userspace.</description><pubDate>Sun, 19 Jan 2025 12:13:39 +0000</pubDate></item><item><title>CVE-2024-57907 | iio: adc: rockchip_saradc: fix information leak in triggered buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57907</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: rockchip_saradc: fix information leak in triggered buffer

The 'data' local struct is used to push data to user space from a
triggered buffer, but it does not set values for inactive channels, as
it only uses iio_for_each_active_channel() to assign new values.

Initialize the struct to zero before using it to avoid pushing
uninitialized information to userspace.</description><pubDate>Sun, 19 Jan 2025 12:13:40 +0000</pubDate></item><item><title>CVE-2024-57908 | iio: imu: kmx61: fix information leak in triggered buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57908</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: imu: kmx61: fix information leak in triggered buffer

The 'buffer' local array is used to push data to user space from a
triggered buffer, but it does not set values for inactive channels, as
it only uses iio_for_each_active_channel() to assign new values.

Initialize the array to zero before using it to avoid pushing
uninitialized information to userspace.</description><pubDate>Sun, 19 Jan 2025 12:13:40 +0000</pubDate></item><item><title>CVE-2024-57909 | iio: light: bh1745: fix information leak in triggered buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57909</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: light: bh1745: fix information leak in triggered buffer

The 'scan' local struct is used to push data to user space from a
triggered buffer, but it does not set values for inactive channels, as
it only uses iio_for_each_active_channel() to assign new values.

Initialize the struct to zero before using it to avoid pushing
uninitialized information to userspace.</description><pubDate>Sun, 19 Jan 2025 12:13:41 +0000</pubDate></item><item><title>CVE-2024-57910 | iio: light: vcnl4035: fix information leak in triggered buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57910</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: light: vcnl4035: fix information leak in triggered buffer

The 'buffer' local array is used to push data to userspace from a
triggered buffer, but it does not set an initial value for the single
data element, which is an u16 aligned to 8 bytes. That leaves at least
4 bytes uninitialized even after writing an integer value with
regmap_read().

Initialize the array to zero before using it to avoid pushing
uninitialized information to userspace.</description><pubDate>Sun, 19 Jan 2025 12:13:41 +0000</pubDate></item><item><title>CVE-2024-57911 | iio: dummy: iio_simply_dummy_buffer: fix information leak in triggered buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57911</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: dummy: iio_simply_dummy_buffer: fix information leak in triggered buffer

The 'data' array is allocated via kmalloc() and it is used to push data
to user space from a triggered buffer, but it does not set values for
inactive channels, as it only uses iio_for_each_active_channel()
to assign new values.

Use kzalloc for the memory allocation to avoid pushing uninitialized
information to userspace.</description><pubDate>Sun, 19 Jan 2025 12:13:41 +0000</pubDate></item><item><title>CVE-2024-57912 | iio: pressure: zpa2326: fix information leak in triggered buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57912</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: pressure: zpa2326: fix information leak in triggered buffer

The 'sample' local struct is used to push data to user space from a
triggered buffer, but it has a hole between the temperature and the
timestamp (u32 pressure, u16 temperature, GAP, u64 timestamp).
This hole is never initialized.

Initialize the struct to zero before using it to avoid pushing
uninitialized information to userspace.</description><pubDate>Sun, 19 Jan 2025 12:13:42 +0000</pubDate></item><item><title>CVE-2024-57913 | usb: gadget: f_fs: Remove WARN_ON in functionfs_bind</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57913</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: f_fs: Remove WARN_ON in functionfs_bind

This commit addresses an issue related to below kernel panic where
panic_on_warn is enabled. It is caused by the unnecessary use of WARN_ON
in functionsfs_bind, which easily leads to the following scenarios.

1.adb_write in adbd               2. UDC write via configfs
  =================	             =====================

-&gt;usb_ffs_open_thread()           -&gt;UDC write
 -&gt;open_functionfs()               -&gt;configfs_write_iter()
  -&gt;adb_open()                      -&gt;gadget_dev_desc_UDC_store()
   -&gt;adb_write()                     -&gt;usb_gadget_register_driver_owner
                                      -&gt;driver_register()
-&gt;StartMonitor()                       -&gt;bus_add_driver()
 -&gt;adb_read()                           -&gt;gadget_bind_driver()
           -&gt;configfs_composite_bind()
                                          -&gt;usb_add_function()
-&gt;open_functionfs()                        -&gt;ffs_func_bind()
 -&gt;adb_open()                               -&gt;functionfs_bind()
                                       state !=FFS_ACTIVE&gt;

The adb_open, adb_read, and adb_write operations are invoked from the
daemon, but trying to bind the function is a process that is invoked by
UDC write through configfs, which opens up the possibility of a race
condition between the two paths. In this race scenario, the kernel panic
occurs due to the WARN_ON from functionfs_bind when panic_on_warn is
enabled. This commit fixes the kernel panic by removing the unnecessary
WARN_ON.

Kernel panic - not syncing: kernel: panic_on_warn set ...
[   14.542395] Call trace:
[   14.542464]  ffs_func_bind+0x1c8/0x14a8
[   14.542468]  usb_add_function+0xcc/0x1f0
[   14.542473]  configfs_composite_bind+0x468/0x588
[   14.542478]  gadget_bind_driver+0x108/0x27c
[   14.542483]  really_probe+0x190/0x374
[   14.542488]  __driver_probe_device+0xa0/0x12c
[   14.542492]  driver_probe_device+0x3c/0x220
[   14.542498]  __driver_attach+0x11c/0x1fc
[   14.542502]  bus_for_each_dev+0x104/0x160
[   14.542506]  driver_attach+0x24/0x34
[   14.542510]  bus_add_driver+0x154/0x270
[   14.542514]  driver_register+0x68/0x104
[   14.542518]  usb_gadget_register_driver_owner+0x48/0xf4
[   14.542523]  gadget_dev_desc_UDC_store+0xf8/0x144
[   14.542526]  configfs_write_iter+0xf0/0x138</description><pubDate>Sun, 19 Jan 2025 12:13:42 +0000</pubDate></item><item><title>CVE-2024-57914 | usb: typec: tcpci: fix NULL pointer issue on shared irq case</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57914</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: typec: tcpci: fix NULL pointer issue on shared irq case

The tcpci_irq() may meet below NULL pointer dereference issue:

[    2.641851] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000010
[    2.641951] status 0x1, 0x37f
[    2.650659] Mem abort info:
[    2.656490]   ESR = 0x0000000096000004
[    2.660230]   EC = 0x25: DABT (current EL), IL = 32 bits
[    2.665532]   SET = 0, FnV = 0
[    2.668579]   EA = 0, S1PTW = 0
[    2.671715]   FSC = 0x04: level 0 translation fault
[    2.676584] Data abort info:
[    2.679459]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
[    2.684936]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
[    2.689980]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
[    2.695284] [0000000000000010] user address but active_mm is swapper
[    2.701632] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
[    2.707883] Modules linked in:
[    2.710936] CPU: 1 UID: 0 PID: 87 Comm: irq/111-2-0051 Not tainted 6.12.0-rc6-06316-g7f63786ad3d1-dirty #4
[    2.720570] Hardware name: NXP i.MX93 11X11 EVK board (DT)
[    2.726040] pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[    2.732989] pc : tcpci_irq+0x38/0x318
[    2.736647] lr : _tcpci_irq+0x14/0x20
[    2.740295] sp : ffff80008324bd30
[    2.743597] x29: ffff80008324bd70 x28: ffff800080107894 x27: ffff800082198f70
[    2.750721] x26: ffff0000050e6680 x25: ffff000004d172ac x24: ffff0000050f0000
[    2.757845] x23: ffff000004d17200 x22: 0000000000000001 x21: ffff0000050f0000
[    2.764969] x20: ffff000004d17200 x19: 0000000000000000 x18: 0000000000000001
[    2.772093] x17: 0000000000000000 x16: ffff80008183d8a0 x15: ffff00007fbab040
[    2.779217] x14: ffff00007fb918c0 x13: 0000000000000000 x12: 000000000000017a
[    2.786341] x11: 0000000000000001 x10: 0000000000000a90 x9 : ffff80008324bd00
[    2.793465] x8 : ffff0000050f0af0 x7 : ffff00007fbaa840 x6 : 0000000000000031
[    2.800589] x5 : 000000000000017a x4 : 0000000000000002 x3 : 0000000000000002
[    2.807713] x2 : ffff80008324bd3a x1 : 0000000000000010 x0 : 0000000000000000
[    2.814838] Call trace:
[    2.817273]  tcpci_irq+0x38/0x318
[    2.820583]  _tcpci_irq+0x14/0x20
[    2.823885]  irq_thread_fn+0x2c/0xa8
[    2.827456]  irq_thread+0x16c/0x2f4
[    2.830940]  kthread+0x110/0x114
[    2.834164]  ret_from_fork+0x10/0x20
[    2.837738] Code: f9426420 f9001fe0 d2800000 52800201 (f9400a60)

This may happen on shared irq case. Such as two Type-C ports share one
irq. After the first port finished tcpci_register_port(), it may trigger
interrupt. However, if the interrupt comes by chance the 2nd port finishes
devm_request_threaded_irq(), the 2nd port interrupt handler will run at
first. Then the above issue happens due to tcpci is still a NULL pointer
in tcpci_irq() when dereference to regmap.

  devm_request_threaded_irq()
				&lt;-- port1 irq comes
  disable_irq(client-&gt;irq);
  tcpci_register_port()

This will restore the logic to the state before commit (77e85107a771 "usb:
typec: tcpci: support edge irq").

However, moving tcpci_register_port() earlier creates a problem when use
edge irq because tcpci_init() will be called before
devm_request_threaded_irq(). The tcpci_init() writes the ALERT_MASK to
the hardware to tell it to start generating interrupts but we're not ready
to deal with them yet, then the ALERT events may be missed and ALERT line
will not recover to high level forever. To avoid the issue, this will also
set ALERT_MASK register after devm_request_threaded_irq() return.</description><pubDate>Sun, 19 Jan 2025 12:13:43 +0000</pubDate></item><item><title>CVE-2024-57915 | usb: gadget: u_serial: Disable ep before setting port to null to fix the crash caused by port being null</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57915</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: u_serial: Disable ep before setting port to null to fix the crash caused by port being null

Considering that in some extreme cases, when performing the
unbinding operation, gserial_disconnect has cleared gser-&gt;ioport,
which triggers gadget reconfiguration, and then calls gs_read_complete,
resulting in access to a null pointer. Therefore, ep is disabled before
gserial_disconnect sets port to null to prevent this from happening.

Call trace:
 gs_read_complete+0x58/0x240
 usb_gadget_giveback_request+0x40/0x160
 dwc3_remove_requests+0x170/0x484
 dwc3_ep0_out_start+0xb0/0x1d4
 __dwc3_gadget_start+0x25c/0x720
 kretprobe_trampoline.cfi_jt+0x0/0x8
 kretprobe_trampoline.cfi_jt+0x0/0x8
 udc_bind_to_driver+0x1d8/0x300
 usb_gadget_probe_driver+0xa8/0x1dc
 gadget_dev_desc_UDC_store+0x13c/0x188
 configfs_write_iter+0x160/0x1f4
 vfs_write+0x2d0/0x40c
 ksys_write+0x7c/0xf0
 __arm64_sys_write+0x20/0x30
 invoke_syscall+0x60/0x150
 el0_svc_common+0x8c/0xf8
 do_el0_svc+0x28/0xa0
 el0_svc+0x24/0x84</description><pubDate>Sun, 19 Jan 2025 12:13:43 +0000</pubDate></item><item><title>CVE-2024-57916 | misc: microchip: pci1xxxx: Resolve kernel panic during GPIO IRQ handling</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57916</link><description>In the Linux kernel, the following vulnerability has been resolved:

misc: microchip: pci1xxxx: Resolve kernel panic during GPIO IRQ handling

Resolve kernel panic caused by improper handling of IRQs while
accessing GPIO values. This is done by replacing generic_handle_irq with
handle_nested_irq.</description><pubDate>Sun, 19 Jan 2025 12:13:44 +0000</pubDate></item><item><title>CVE-2024-57917 | topology: Keep the cpumask unchanged when printing cpumap</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57917</link><description>In the Linux kernel, the following vulnerability has been resolved:

topology: Keep the cpumask unchanged when printing cpumap

During fuzz testing, the following warning was discovered:

 different return values (15 and 11) from vsnprintf("%*pbl
 ", ...)

 test:keyward is WARNING in kvasprintf
 WARNING: CPU: 55 PID: 1168477 at lib/kasprintf.c:30 kvasprintf+0x121/0x130
 Call Trace:
  kvasprintf+0x121/0x130
  kasprintf+0xa6/0xe0
  bitmap_print_to_buf+0x89/0x100
  core_siblings_list_read+0x7e/0xb0
  kernfs_file_read_iter+0x15b/0x270
  new_sync_read+0x153/0x260
  vfs_read+0x215/0x290
  ksys_read+0xb9/0x160
  do_syscall_64+0x56/0x100
  entry_SYSCALL_64_after_hwframe+0x78/0xe2

The call trace shows that kvasprintf() reported this warning during the
printing of core_siblings_list. kvasprintf() has several steps:

 (1) First, calculate the length of the resulting formatted string.

 (2) Allocate a buffer based on the returned length.

 (3) Then, perform the actual string formatting.

 (4) Check whether the lengths of the formatted strings returned in
     steps (1) and (2) are consistent.

If the core_cpumask is modified between steps (1) and (3), the lengths
obtained in these two steps may not match. Indeed our test includes cpu
hotplugging, which should modify core_cpumask while printing.

To fix this issue, cache the cpumask into a temporary variable before
calling cpumap_print_{list, cpumask}_to_buf(), to keep it unchanged
during the printing process.</description><pubDate>Sun, 19 Jan 2025 12:13:44 +0000</pubDate></item><item><title>CVE-2024-57918 | drm/amd/display: fix page fault due to max surface definition mismatch</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57918</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: fix page fault due to max surface definition mismatch

DC driver is using two different values to define the maximum number of
surfaces: MAX_SURFACES and MAX_SURFACE_NUM. Consolidate MAX_SURFACES as
the unique definition for surface updates across DC.

It fixes page fault faced by Cosmic users on AMD display versions that
support two overlay planes, since the introduction of cursor overlay
mode.

[Nov26 21:33] BUG: unable to handle page fault for address: 0000000051d0f08b
[  +0.000015] #PF: supervisor read access in kernel mode
[  +0.000006] #PF: error_code(0x0000) - not-present page
[  +0.000005] PGD 0 P4D 0
[  +0.000007] Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI
[  +0.000006] CPU: 4 PID: 71 Comm: kworker/u32:6 Not tainted 6.10.0+ #300
[  +0.000006] Hardware name: Valve Jupiter/Jupiter, BIOS F7A0131 01/30/2024
[  +0.000007] Workqueue: events_unbound commit_work [drm_kms_helper]
[  +0.000040] RIP: 0010:copy_stream_update_to_stream.isra.0+0x30d/0x750 [amdgpu]
[  +0.000847] Code: 8b 10 49 89 94 24 f8 00 00 00 48 8b 50 08 49 89 94 24 00 01 00 00 8b 40 10 41 89 84 24 08 01 00 00 49 8b 45 78 48 85 c0 74 0b &lt;0f&gt; b6 00 41 88 84 24 90 64 00 00 49 8b 45 60 48 85 c0 74 3b 48 8b
[  +0.000010] RSP: 0018:ffffc203802f79a0 EFLAGS: 00010206
[  +0.000009] RAX: 0000000051d0f08b RBX: 0000000000000004 RCX: ffff9f964f0a8070
[  +0.000004] RDX: ffff9f9710f90e40 RSI: ffff9f96600c8000 RDI: ffff9f964f000000
[  +0.000004] RBP: ffffc203802f79f8 R08: 0000000000000000 R09: 0000000000000000
[  +0.000005] R10: 0000000000000000 R11: 0000000000000000 R12: ffff9f96600c8000
[  +0.000004] R13: ffff9f9710f90e40 R14: ffff9f964f000000 R15: ffff9f96600c8000
[  +0.000004] FS:  0000000000000000(0000) GS:ffff9f9970000000(0000) knlGS:0000000000000000
[  +0.000005] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  +0.000005] CR2: 0000000051d0f08b CR3: 00000002e6a20000 CR4: 0000000000350ef0
[  +0.000005] Call Trace:
[  +0.000011]  
[  +0.000010]  ? __die_body.cold+0x19/0x27
[  +0.000012]  ? page_fault_oops+0x15a/0x2d0
[  +0.000014]  ? exc_page_fault+0x7e/0x180
[  +0.000009]  ? asm_exc_page_fault+0x26/0x30
[  +0.000013]  ? copy_stream_update_to_stream.isra.0+0x30d/0x750 [amdgpu]
[  +0.000739]  ? dc_commit_state_no_check+0xd6c/0xe70 [amdgpu]
[  +0.000470]  update_planes_and_stream_state+0x49b/0x4f0 [amdgpu]
[  +0.000450]  ? srso_return_thunk+0x5/0x5f
[  +0.000009]  ? commit_minimal_transition_state+0x239/0x3d0 [amdgpu]
[  +0.000446]  update_planes_and_stream_v2+0x24a/0x590 [amdgpu]
[  +0.000464]  ? srso_return_thunk+0x5/0x5f
[  +0.000009]  ? sort+0x31/0x50
[  +0.000007]  ? amdgpu_dm_atomic_commit_tail+0x159f/0x3a30 [amdgpu]
[  +0.000508]  ? srso_return_thunk+0x5/0x5f
[  +0.000009]  ? amdgpu_crtc_get_scanout_position+0x28/0x40 [amdgpu]
[  +0.000377]  ? srso_return_thunk+0x5/0x5f
[  +0.000009]  ? drm_crtc_vblank_helper_get_vblank_timestamp_internal+0x160/0x390 [drm]
[  +0.000058]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? dma_fence_default_wait+0x8c/0x260
[  +0.000010]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? wait_for_completion_timeout+0x13b/0x170
[  +0.000006]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? dma_fence_wait_timeout+0x108/0x140
[  +0.000010]  ? commit_tail+0x94/0x130 [drm_kms_helper]
[  +0.000024]  ? process_one_work+0x177/0x330
[  +0.000008]  ? worker_thread+0x266/0x3a0
[  +0.000006]  ? __pfx_worker_thread+0x10/0x10
[  +0.000004]  ? kthread+0xd2/0x100
[  +0.000006]  ? __pfx_kthread+0x10/0x10
[  +0.000006]  ? ret_from_fork+0x34/0x50
[  +0.000004]  ? __pfx_kthread+0x10/0x10
[  +0.000005]  ? ret_from_fork_asm+0x1a/0x30
[  +0.000011]  

(cherry picked from commit 1c86c81a86c60f9b15d3e3f43af0363cf56063e7)</description><pubDate>Sun, 19 Jan 2025 12:13:44 +0000</pubDate></item><item><title>CVE-2024-57919 | drm/amd/display: fix divide error in DM plane scale calcs</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57919</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: fix divide error in DM plane scale calcs

dm_get_plane_scale doesn't take into account plane scaled size equal to
zero, leading to a kernel oops due to division by zero. Fix by setting
out-scale size as zero when the dst size is zero, similar to what is
done by drm_calc_scale(). This issue started with the introduction of
cursor ovelay mode that uses this function to assess cursor mode changes
via dm_crtc_get_cursor_mode() before checking plane state.

[Dec17 17:14] Oops: divide error: 0000 [#1] PREEMPT SMP NOPTI
[  +0.000018] CPU: 5 PID: 1660 Comm: surface-DP-1 Not tainted 6.10.0+ #231
[  +0.000007] Hardware name: Valve Jupiter/Jupiter, BIOS F7A0131 01/30/2024
[  +0.000004] RIP: 0010:dm_get_plane_scale+0x3f/0x60 [amdgpu]
[  +0.000553] Code: 44 0f b7 41 3a 44 0f b7 49 3e 83 e0 0f 48 0f a3 c2 73 21 69 41 28 e8 03 00 00 31 d2 41 f7 f1 31 d2 89 06 69 41 2c e8 03 00 00 &lt;41&gt; f7 f0 89 07 e9 d7 d8 7e e9 44 89 c8 45 89 c1 41 89 c0 eb d4 66
[  +0.000005] RSP: 0018:ffffa8df0de6b8a0 EFLAGS: 00010246
[  +0.000006] RAX: 00000000000003e8 RBX: ffff9ac65c1f6e00 RCX: ffff9ac65d055500
[  +0.000003] RDX: 0000000000000000 RSI: ffffa8df0de6b8b0 RDI: ffffa8df0de6b8b4
[  +0.000004] RBP: ffff9ac64e7a5800 R08: 0000000000000000 R09: 0000000000000a00
[  +0.000003] R10: 00000000000000ff R11: 0000000000000054 R12: ffff9ac6d0700010
[  +0.000003] R13: ffff9ac65d054f00 R14: ffff9ac65d055500 R15: ffff9ac64e7a60a0
[  +0.000004] FS:  00007f869ea00640(0000) GS:ffff9ac970080000(0000) knlGS:0000000000000000
[  +0.000004] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  +0.000003] CR2: 000055ca701becd0 CR3: 000000010e7f2000 CR4: 0000000000350ef0
[  +0.000004] Call Trace:
[  +0.000007]  
[  +0.000006]  ? __die_body.cold+0x19/0x27
[  +0.000009]  ? die+0x2e/0x50
[  +0.000007]  ? do_trap+0xca/0x110
[  +0.000007]  ? do_error_trap+0x6a/0x90
[  +0.000006]  ? dm_get_plane_scale+0x3f/0x60 [amdgpu]
[  +0.000504]  ? exc_divide_error+0x38/0x50
[  +0.000005]  ? dm_get_plane_scale+0x3f/0x60 [amdgpu]
[  +0.000488]  ? asm_exc_divide_error+0x1a/0x20
[  +0.000011]  ? dm_get_plane_scale+0x3f/0x60 [amdgpu]
[  +0.000593]  dm_crtc_get_cursor_mode+0x33f/0x430 [amdgpu]
[  +0.000562]  amdgpu_dm_atomic_check+0x2ef/0x1770 [amdgpu]
[  +0.000501]  drm_atomic_check_only+0x5e1/0xa30 [drm]
[  +0.000047]  drm_mode_atomic_ioctl+0x832/0xcb0 [drm]
[  +0.000050]  ? __pfx_drm_mode_atomic_ioctl+0x10/0x10 [drm]
[  +0.000047]  drm_ioctl_kernel+0xb3/0x100 [drm]
[  +0.000062]  drm_ioctl+0x27a/0x4f0 [drm]
[  +0.000049]  ? __pfx_drm_mode_atomic_ioctl+0x10/0x10 [drm]
[  +0.000055]  amdgpu_drm_ioctl+0x4e/0x90 [amdgpu]
[  +0.000360]  __x64_sys_ioctl+0x97/0xd0
[  +0.000010]  do_syscall_64+0x82/0x190
[  +0.000008]  ? __pfx_drm_mode_createblob_ioctl+0x10/0x10 [drm]
[  +0.000044]  ? srso_return_thunk+0x5/0x5f
[  +0.000006]  ? drm_ioctl_kernel+0xb3/0x100 [drm]
[  +0.000040]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? __check_object_size+0x50/0x220
[  +0.000007]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? drm_ioctl+0x2a4/0x4f0 [drm]
[  +0.000039]  ? __pfx_drm_mode_createblob_ioctl+0x10/0x10 [drm]
[  +0.000043]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? __pm_runtime_suspend+0x69/0xc0
[  +0.000006]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? amdgpu_drm_ioctl+0x71/0x90 [amdgpu]
[  +0.000366]  ? srso_return_thunk+0x5/0x5f
[  +0.000006]  ? syscall_exit_to_user_mode+0x77/0x210
[  +0.000007]  ? srso_return_thunk+0x5/0x5f
[  +0.000005]  ? do_syscall_64+0x8e/0x190
[  +0.000006]  ? srso_return_thunk+0x5/0x5f
[  +0.000006]  ? do_syscall_64+0x8e/0x190
[  +0.000006]  ? srso_return_thunk+0x5/0x5f
[  +0.000007]  entry_SYSCALL_64_after_hwframe+0x76/0x7e
[  +0.000008] RIP: 0033:0x55bb7cd962bc
[  +0.000007] Code: 4c 89 6c 24 18 4c 89 64 24 20 4c 89 74 24 28 0f 57 c0 0f 11 44 24 30 89 c7 48 8d 54 24 08 b8 10 00 00 00 be bc 64
---truncated---</description><pubDate>Sun, 19 Jan 2025 12:13:45 +0000</pubDate></item><item><title>CVE-2024-57920 | drm/amdkfd: wq_release signals dma_fence only when available</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57920</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdkfd: wq_release signals dma_fence only when available

kfd_process_wq_release() signals eviction fence by
dma_fence_signal() which wanrs if dma_fence
is NULL.

kfd_process-&gt;ef is initialized by kfd_process_device_init_vm()
through ioctl. That means the fence is NULL for a new
created kfd_process, and close a kfd_process right
after open it will trigger the warning.

This commit conditionally signals the eviction fence
in kfd_process_wq_release() only when it is available.

[  503.660882] WARNING: CPU: 0 PID: 9 at drivers/dma-buf/dma-fence.c:467 dma_fence_signal+0x74/0xa0
[  503.782940] Workqueue: kfd_process_wq kfd_process_wq_release [amdgpu]
[  503.789640] RIP: 0010:dma_fence_signal+0x74/0xa0
[  503.877620] Call Trace:
[  503.880066]  
[  503.882168]  ? __warn+0xcd/0x260
[  503.885407]  ? dma_fence_signal+0x74/0xa0
[  503.889416]  ? report_bug+0x288/0x2d0
[  503.893089]  ? handle_bug+0x53/0xa0
[  503.896587]  ? exc_invalid_op+0x14/0x50
[  503.900424]  ? asm_exc_invalid_op+0x16/0x20
[  503.904616]  ? dma_fence_signal+0x74/0xa0
[  503.908626]  kfd_process_wq_release+0x6b/0x370 [amdgpu]
[  503.914081]  process_one_work+0x654/0x10a0
[  503.918186]  worker_thread+0x6c3/0xe70
[  503.921943]  ? srso_alias_return_thunk+0x5/0xfbef5
[  503.926735]  ? srso_alias_return_thunk+0x5/0xfbef5
[  503.931527]  ? __kthread_parkme+0x82/0x140
[  503.935631]  ? __pfx_worker_thread+0x10/0x10
[  503.939904]  kthread+0x2a8/0x380
[  503.943132]  ? __pfx_kthread+0x10/0x10
[  503.946882]  ret_from_fork+0x2d/0x70
[  503.950458]  ? __pfx_kthread+0x10/0x10
[  503.954210]  ret_from_fork_asm+0x1a/0x30
[  503.958142]  
[  503.960328] ---[ end trace 0000000000000000 ]---

(cherry picked from commit 2774ef7625adb5fb9e9265c26a59dca7b8fd171e)</description><pubDate>Sun, 19 Jan 2025 12:13:45 +0000</pubDate></item><item><title>CVE-2024-57921 | drm/amdgpu: Add a lock when accessing the buddy trim function</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57921</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Add a lock when accessing the buddy trim function

When running YouTube videos and Steam games simultaneously,
the tester found a system hang / race condition issue with
the multi-display configuration setting. Adding a lock to
the buddy allocator's trim function would be the solution.


[ 7197.250436] general protection fault, probably for non-canonical address 0xdead000000000108
[ 7197.250447] RIP: 0010:__alloc_range+0x8b/0x340 [amddrm_buddy]
[ 7197.250470] Call Trace:
[ 7197.250472]  
[ 7197.250475]  ? show_regs+0x6d/0x80
[ 7197.250481]  ? die_addr+0x37/0xa0
[ 7197.250483]  ? exc_general_protection+0x1db/0x480
[ 7197.250488]  ? drm_suballoc_new+0x13c/0x93d [drm_suballoc_helper]
[ 7197.250493]  ? asm_exc_general_protection+0x27/0x30
[ 7197.250498]  ? __alloc_range+0x8b/0x340 [amddrm_buddy]
[ 7197.250501]  ? __alloc_range+0x109/0x340 [amddrm_buddy]
[ 7197.250506]  amddrm_buddy_block_trim+0x1b5/0x260 [amddrm_buddy]
[ 7197.250511]  amdgpu_vram_mgr_new+0x4f5/0x590 [amdgpu]
[ 7197.250682]  amdttm_resource_alloc+0x46/0xb0 [amdttm]
[ 7197.250689]  ttm_bo_alloc_resource+0xe4/0x370 [amdttm]
[ 7197.250696]  amdttm_bo_validate+0x9d/0x180 [amdttm]
[ 7197.250701]  amdgpu_bo_pin+0x15a/0x2f0 [amdgpu]
[ 7197.250831]  amdgpu_dm_plane_helper_prepare_fb+0xb2/0x360 [amdgpu]
[ 7197.251025]  ? try_wait_for_completion+0x59/0x70
[ 7197.251030]  drm_atomic_helper_prepare_planes.part.0+0x2f/0x1e0
[ 7197.251035]  drm_atomic_helper_prepare_planes+0x5d/0x70
[ 7197.251037]  drm_atomic_helper_commit+0x84/0x160
[ 7197.251040]  drm_atomic_nonblocking_commit+0x59/0x70
[ 7197.251043]  drm_mode_atomic_ioctl+0x720/0x850
[ 7197.251047]  ? __pfx_drm_mode_atomic_ioctl+0x10/0x10
[ 7197.251049]  drm_ioctl_kernel+0xb9/0x120
[ 7197.251053]  ? srso_alias_return_thunk+0x5/0xfbef5
[ 7197.251056]  drm_ioctl+0x2d4/0x550
[ 7197.251058]  ? __pfx_drm_mode_atomic_ioctl+0x10/0x10
[ 7197.251063]  amdgpu_drm_ioctl+0x4e/0x90 [amdgpu]
[ 7197.251186]  __x64_sys_ioctl+0xa0/0xf0
[ 7197.251190]  x64_sys_call+0x143b/0x25c0
[ 7197.251193]  do_syscall_64+0x7f/0x180
[ 7197.251197]  ? srso_alias_return_thunk+0x5/0xfbef5
[ 7197.251199]  ? amdgpu_display_user_framebuffer_create+0x215/0x320 [amdgpu]
[ 7197.251329]  ? drm_internal_framebuffer_create+0xb7/0x1a0
[ 7197.251332]  ? srso_alias_return_thunk+0x5/0xfbef5

(cherry picked from commit 3318ba94e56b9183d0304577c74b33b6b01ce516)</description><pubDate>Sun, 19 Jan 2025 12:13:46 +0000</pubDate></item><item><title>CVE-2024-57922 | drm/amd/display: Add check for granularity in dml ceil/floor helpers</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57922</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add check for granularity in dml ceil/floor helpers

[Why]
Wrapper functions for dcn_bw_ceil2() and dcn_bw_floor2()
should check for granularity is non zero to avoid assert and
divide-by-zero error in dcn_bw_ functions.

[How]
Add check for granularity 0.

(cherry picked from commit f6e09701c3eb2ccb8cb0518e0b67f1c69742a4ec)</description><pubDate>Sun, 19 Jan 2025 12:13:46 +0000</pubDate></item><item><title>CVE-2024-57923 | btrfs: zlib: fix avail_in bytes for s390 zlib HW compression path</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57923</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: zlib: fix avail_in bytes for s390 zlib HW compression path

Since the input data length passed to zlib_compress_folios() can be
arbitrary, always setting strm.avail_in to a multiple of PAGE_SIZE may
cause read-in bytes to exceed the input range. Currently this triggers
an assert in btrfs_compress_folios() on the debug kernel (see below).
Fix strm.avail_in calculation for S390 hardware acceleration path.

  assertion failed: *total_in &lt;= orig_len, in fs/btrfs/compression.c:1041
  ------------[ cut here ]------------
  kernel BUG at fs/btrfs/compression.c:1041!
  monitor event: 0040 ilc:2 [#1] PREEMPT SMP
  CPU: 16 UID: 0 PID: 325 Comm: kworker/u273:3 Not tainted 6.13.0-20241204.rc1.git6.fae3b21430ca.300.fc41.s390x+debug #1
  Hardware name: IBM 3931 A01 703 (z/VM 7.4.0)
  Workqueue: btrfs-delalloc btrfs_work_helper
  Krnl PSW : 0704d00180000000 0000021761df6538 (btrfs_compress_folios+0x198/0x1a0)
             R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:1 PM:0 RI:0 EA:3
  Krnl GPRS: 0000000080000000 0000000000000001 0000000000000047 0000000000000000
             0000000000000006 ffffff01757bb000 000001976232fcc0 000000000000130c
             000001976232fcd0 000001976232fcc8 00000118ff4a0e30 0000000000000001
             00000111821ab400 0000011100000000 0000021761df6534 000001976232fb58
  Krnl Code: 0000021761df6528: c020006f5ef4        larl    %r2,0000021762be2310
             0000021761df652e: c0e5ffbd09d5        brasl   %r14,00000217615978d8
            #0000021761df6534: af000000            mc      0,0
            &gt;0000021761df6538: 0707                bcr     0,%r7
             0000021761df653a: 0707                bcr     0,%r7
             0000021761df653c: 0707                bcr     0,%r7
             0000021761df653e: 0707                bcr     0,%r7
             0000021761df6540: c004004bb7ec        brcl    0,000002176276d518
  Call Trace:
   [&lt;0000021761df6538&gt;] btrfs_compress_folios+0x198/0x1a0
  ([&lt;0000021761df6534&gt;] btrfs_compress_folios+0x194/0x1a0)
   [&lt;0000021761d97788&gt;] compress_file_range+0x3b8/0x6d0
   [&lt;0000021761dcee7c&gt;] btrfs_work_helper+0x10c/0x160
   [&lt;0000021761645760&gt;] process_one_work+0x2b0/0x5d0
   [&lt;000002176164637e&gt;] worker_thread+0x20e/0x3e0
   [&lt;000002176165221a&gt;] kthread+0x15a/0x170
   [&lt;00000217615b859c&gt;] __ret_from_fork+0x3c/0x60
   [&lt;00000217626e72d2&gt;] ret_from_fork+0xa/0x38
  INFO: lockdep is turned off.
  Last Breaking-Event-Address:
   [&lt;0000021761597924&gt;] _printk+0x4c/0x58
  Kernel panic - not syncing: Fatal exception: panic_on_oops</description><pubDate>Sun, 19 Jan 2025 12:13:47 +0000</pubDate></item><item><title>CVE-2024-57924 | fs: relax assertions on failure to encode file handles</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57924</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs: relax assertions on failure to encode file handles

Encoding file handles is usually performed by a filesystem &gt;encode_fh()
method that may fail for various reasons.

The legacy users of exportfs_encode_fh(), namely, nfsd and
name_to_handle_at(2) syscall are ready to cope with the possibility
of failure to encode a file handle.

There are a few other users of exportfs_encode_{fh,fid}() that
currently have a WARN_ON() assertion when -&gt;encode_fh() fails.
Relax those assertions because they are wrong.

The second linked bug report states commit 16aac5ad1fa9 ("ovl: support
encoding non-decodable file handles") in v6.6 as the regressing commit,
but this is not accurate.

The aforementioned commit only increases the chances of the assertion
and allows triggering the assertion with the reproducer using overlayfs,
inotify and drop_caches.

Triggering this assertion was always possible with other filesystems and
other reasons of -&gt;encode_fh() failures and more particularly, it was
also possible with the exact same reproducer using overlayfs that is
mounted with options index=on,nfs_export=on also on kernels &lt; v6.6.
Therefore, I am not listing the aforementioned commit as a Fixes commit.

Backport hint: this patch will have a trivial conflict applying to
v6.6.y, and other trivial conflicts applying to stable kernels &lt; v6.6.</description><pubDate>Sun, 19 Jan 2025 12:13:47 +0000</pubDate></item><item><title>CVE-2024-57925 | ksmbd: fix a missing return value check bug</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57925</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: fix a missing return value check bug

In the smb2_send_interim_resp(), if ksmbd_alloc_work_struct()
fails to allocate a node, it returns a NULL pointer to the
in_work pointer. This can lead to an illegal memory write of
in_work-&gt;response_buf when allocate_interim_rsp_buf() attempts
to perform a kzalloc() on it.

To address this issue, incorporating a check for the return
value of ksmbd_alloc_work_struct() ensures that the function
returns immediately upon allocation failure, thereby preventing
the aforementioned illegal memory access.</description><pubDate>Sun, 19 Jan 2025 12:13:48 +0000</pubDate></item><item><title>CVE-2024-57926 | drm/mediatek: Set private-&amp;gt;all_drm_private[i]-&amp;gt;drm to NULL if mtk_drm_bind returns err</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57926</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/mediatek: Set private-&gt;all_drm_private[i]-&gt;drm to NULL if mtk_drm_bind returns err

The pointer need to be set to NULL, otherwise KASAN complains about
use-after-free. Because in mtk_drm_bind, all private's drm are set
as follows.

private-&gt;all_drm_private[i]-&gt;drm = drm;

And drm will be released by drm_dev_put in case mtk_drm_kms_init returns
failure. However, the shutdown path still accesses the previous allocated
memory in drm_atomic_helper_shutdown.

[   84.874820] watchdog: watchdog0: watchdog did not stop!
[   86.512054] ==================================================================
[   86.513162] BUG: KASAN: use-after-free in drm_atomic_helper_shutdown+0x33c/0x378
[   86.514258] Read of size 8 at addr ffff0000d46fc068 by task shutdown/1
[   86.515213]
[   86.515455] CPU: 1 UID: 0 PID: 1 Comm: shutdown Not tainted 6.13.0-rc1-mtk+gfa1a78e5d24b-dirty #55
[   86.516752] Hardware name: Unknown Product/Unknown Product, BIOS 2022.10 10/01/2022
[   86.517960] Call trace:
[   86.518333]  show_stack+0x20/0x38 (C)
[   86.518891]  dump_stack_lvl+0x90/0xd0
[   86.519443]  print_report+0xf8/0x5b0
[   86.519985]  kasan_report+0xb4/0x100
[   86.520526]  __asan_report_load8_noabort+0x20/0x30
[   86.521240]  drm_atomic_helper_shutdown+0x33c/0x378
[   86.521966]  mtk_drm_shutdown+0x54/0x80
[   86.522546]  platform_shutdown+0x64/0x90
[   86.523137]  device_shutdown+0x260/0x5b8
[   86.523728]  kernel_restart+0x78/0xf0
[   86.524282]  __do_sys_reboot+0x258/0x2f0
[   86.524871]  __arm64_sys_reboot+0x90/0xd8
[   86.525473]  invoke_syscall+0x74/0x268
[   86.526041]  el0_svc_common.constprop.0+0xb0/0x240
[   86.526751]  do_el0_svc+0x4c/0x70
[   86.527251]  el0_svc+0x4c/0xc0
[   86.527719]  el0t_64_sync_handler+0x144/0x168
[   86.528367]  el0t_64_sync+0x198/0x1a0
[   86.528920]
[   86.529157] The buggy address belongs to the physical page:
[   86.529972] page: refcount:0 mapcount:0 mapping:0000000000000000 index:0xffff0000d46fd4d0 pfn:0x1146fc
[   86.531319] flags: 0xbfffc0000000000(node=0|zone=2|lastcpupid=0xffff)
[   86.532267] raw: 0bfffc0000000000 0000000000000000 dead000000000122 0000000000000000
[   86.533390] raw: ffff0000d46fd4d0 0000000000000000 00000000ffffffff 0000000000000000
[   86.534511] page dumped because: kasan: bad access detected
[   86.535323]
[   86.535559] Memory state around the buggy address:
[   86.536265]  ffff0000d46fbf00: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
[   86.537314]  ffff0000d46fbf80: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
[   86.538363] &gt;ffff0000d46fc000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
[   86.544733]                                                           ^
[   86.551057]  ffff0000d46fc080: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
[   86.557510]  ffff0000d46fc100: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
[   86.563928] ==================================================================
[   86.571093] Disabling lock debugging due to kernel taint
[   86.577642] Unable to handle kernel paging request at virtual address e0e9c0920000000b
[   86.581834] KASAN: maybe wild-memory-access in range [0x0752049000000058-0x075204900000005f]
...</description><pubDate>Sun, 19 Jan 2025 12:13:48 +0000</pubDate></item><item><title>CVE-2024-57927 | nfs: Fix oops in nfs_netfs_init_request() when copying to cache</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57927</link><description>In the Linux kernel, the following vulnerability has been resolved:

nfs: Fix oops in nfs_netfs_init_request() when copying to cache

When netfslib wants to copy some data that has just been read on behalf of
nfs, it creates a new write request and calls nfs_netfs_init_request() to
initialise it, but with a NULL file pointer.  This causes
nfs_file_open_context() to oops - however, we don't actually need the nfs
context as we're only going to write to the cache.

Fix this by just returning if we aren't given a file pointer and emit a
warning if the request was for something other than copy-to-cache.

Further, fix nfs_netfs_free_request() so that it doesn't try to free the
context if the pointer is NULL.</description><pubDate>Sun, 19 Jan 2025 12:13:48 +0000</pubDate></item><item><title>CVE-2024-57928 | netfs: Fix enomem handling in buffered reads</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57928</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfs: Fix enomem handling in buffered reads

If netfs_read_to_pagecache() gets an error from either -&gt;prepare_read() or
from netfs_prepare_read_iterator(), it needs to decrement -&gt;nr_outstanding,
cancel the subrequest and break out of the issuing loop.  Currently, it
only does this for two of the cases, but there are two more that aren't
handled.

Fix this by moving the handling to a common place and jumping to it from
all four places.  This is in preference to inserting a wrapper around
netfs_prepare_read_iterator() as proposed by Dmitry Antipov[1].</description><pubDate>Sun, 19 Jan 2025 12:13:49 +0000</pubDate></item><item><title>CVE-2024-57929 | dm array: fix releasing a faulty array block twice in dm_array_cursor_end</title><link>https://www.cve.org/CVERecord?id=CVE-2024-57929</link><description>In the Linux kernel, the following vulnerability has been resolved:

dm array: fix releasing a faulty array block twice in dm_array_cursor_end

When dm_bm_read_lock() fails due to locking or checksum errors, it
releases the faulty block implicitly while leaving an invalid output
pointer behind. The caller of dm_bm_read_lock() should not operate on
this invalid dm_block pointer, or it will lead to undefined result.
For example, the dm_array_cursor incorrectly caches the invalid pointer
on reading a faulty array block, causing a double release in
dm_array_cursor_end(), then hitting the BUG_ON in dm-bufio cache_put().

Reproduce steps:

1. initialize a cache device

dmsetup create cmeta --table "0 8192 linear /dev/sdc 0"
dmsetup create cdata --table "0 65536 linear /dev/sdc 8192"
dmsetup create corig --table "0 524288 linear /dev/sdc $262144"
dd if=/dev/zero of=/dev/mapper/cmeta bs=4k count=1
dmsetup create cache --table "0 524288 cache /dev/mapper/cmeta \
/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0"

2. wipe the second array block offline

dmsteup remove cache cmeta cdata corig
mapping_root=$(dd if=/dev/sdc bs=1c count=8 skip=192 \
2&gt;/dev/null | hexdump -e '1/8 "%u\n"')
ablock=$(dd if=/dev/sdc bs=1c count=8 skip=$((4096*mapping_root+2056)) \
2&gt;/dev/null | hexdump -e '1/8 "%u\n"')
dd if=/dev/zero of=/dev/sdc bs=4k count=1 seek=$ablock

3. try reopen the cache device

dmsetup create cmeta --table "0 8192 linear /dev/sdc 0"
dmsetup create cdata --table "0 65536 linear /dev/sdc 8192"
dmsetup create corig --table "0 524288 linear /dev/sdc $262144"
dmsetup create cache --table "0 524288 cache /dev/mapper/cmeta \
/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0"

Kernel logs:

(snip)
device-mapper: array: array_block_check failed: blocknr 0 != wanted 10
device-mapper: block manager: array validator check failed for block 10
device-mapper: array: get_ablock failed
device-mapper: cache metadata: dm_array_cursor_next for mapping failed
------------[ cut here ]------------
kernel BUG at drivers/md/dm-bufio.c:638!

Fix by setting the cached block pointer to NULL on errors.

In addition to the reproducer described above, this fix can be
verified using the "array_cursor/damaged" test in dm-unit:
  dm-unit run /pdata/array_cursor/damaged --kernel-dir</description><pubDate>Sun, 19 Jan 2025 12:13:49 +0000</pubDate></item><item><title>CVE-2025-21631 | block, bfq: fix waker_bfqq UAF after bfq_split_bfqq()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21631</link><description>In the Linux kernel, the following vulnerability has been resolved:

block, bfq: fix waker_bfqq UAF after bfq_split_bfqq()

Our syzkaller report a following UAF for v6.6:

BUG: KASAN: slab-use-after-free in bfq_init_rq+0x175d/0x17a0 block/bfq-iosched.c:6958
Read of size 8 at addr ffff8881b57147d8 by task fsstress/232726

CPU: 2 PID: 232726 Comm: fsstress Not tainted 6.6.0-g3629d1885222 #39
Call Trace:
 
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x91/0xf0 lib/dump_stack.c:106
 print_address_description.constprop.0+0x66/0x300 mm/kasan/report.c:364
 print_report+0x3e/0x70 mm/kasan/report.c:475
 kasan_report+0xb8/0xf0 mm/kasan/report.c:588
 hlist_add_head include/linux/list.h:1023 [inline]
 bfq_init_rq+0x175d/0x17a0 block/bfq-iosched.c:6958
 bfq_insert_request.isra.0+0xe8/0xa20 block/bfq-iosched.c:6271
 bfq_insert_requests+0x27f/0x390 block/bfq-iosched.c:6323
 blk_mq_insert_request+0x290/0x8f0 block/blk-mq.c:2660
 blk_mq_submit_bio+0x1021/0x15e0 block/blk-mq.c:3143
 __submit_bio+0xa0/0x6b0 block/blk-core.c:639
 __submit_bio_noacct_mq block/blk-core.c:718 [inline]
 submit_bio_noacct_nocheck+0x5b7/0x810 block/blk-core.c:747
 submit_bio_noacct+0xca0/0x1990 block/blk-core.c:847
 __ext4_read_bh fs/ext4/super.c:205 [inline]
 ext4_read_bh+0x15e/0x2e0 fs/ext4/super.c:230
 __read_extent_tree_block+0x304/0x6f0 fs/ext4/extents.c:567
 ext4_find_extent+0x479/0xd20 fs/ext4/extents.c:947
 ext4_ext_map_blocks+0x1a3/0x2680 fs/ext4/extents.c:4182
 ext4_map_blocks+0x929/0x15a0 fs/ext4/inode.c:660
 ext4_iomap_begin_report+0x298/0x480 fs/ext4/inode.c:3569
 iomap_iter+0x3dd/0x1010 fs/iomap/iter.c:91
 iomap_fiemap+0x1f4/0x360 fs/iomap/fiemap.c:80
 ext4_fiemap+0x181/0x210 fs/ext4/extents.c:5051
 ioctl_fiemap.isra.0+0x1b4/0x290 fs/ioctl.c:220
 do_vfs_ioctl+0x31c/0x11a0 fs/ioctl.c:811
 __do_sys_ioctl fs/ioctl.c:869 [inline]
 __se_sys_ioctl+0xae/0x190 fs/ioctl.c:857
 do_syscall_x64 arch/x86/entry/common.c:51 [inline]
 do_syscall_64+0x70/0x120 arch/x86/entry/common.c:81
 entry_SYSCALL_64_after_hwframe+0x78/0xe2

Allocated by task 232719:
 kasan_save_stack+0x22/0x50 mm/kasan/common.c:45
 kasan_set_track+0x25/0x30 mm/kasan/common.c:52
 __kasan_slab_alloc+0x87/0x90 mm/kasan/common.c:328
 kasan_slab_alloc include/linux/kasan.h:188 [inline]
 slab_post_alloc_hook mm/slab.h:768 [inline]
 slab_alloc_node mm/slub.c:3492 [inline]
 kmem_cache_alloc_node+0x1b8/0x6f0 mm/slub.c:3537
 bfq_get_queue+0x215/0x1f00 block/bfq-iosched.c:5869
 bfq_get_bfqq_handle_split+0x167/0x5f0 block/bfq-iosched.c:6776
 bfq_init_rq+0x13a4/0x17a0 block/bfq-iosched.c:6938
 bfq_insert_request.isra.0+0xe8/0xa20 block/bfq-iosched.c:6271
 bfq_insert_requests+0x27f/0x390 block/bfq-iosched.c:6323
 blk_mq_insert_request+0x290/0x8f0 block/blk-mq.c:2660
 blk_mq_submit_bio+0x1021/0x15e0 block/blk-mq.c:3143
 __submit_bio+0xa0/0x6b0 block/blk-core.c:639
 __submit_bio_noacct_mq block/blk-core.c:718 [inline]
 submit_bio_noacct_nocheck+0x5b7/0x810 block/blk-core.c:747
 submit_bio_noacct+0xca0/0x1990 block/blk-core.c:847
 __ext4_read_bh fs/ext4/super.c:205 [inline]
 ext4_read_bh_nowait+0x15a/0x240 fs/ext4/super.c:217
 ext4_read_bh_lock+0xac/0xd0 fs/ext4/super.c:242
 ext4_bread_batch+0x268/0x500 fs/ext4/inode.c:958
 __ext4_find_entry+0x448/0x10f0 fs/ext4/namei.c:1671
 ext4_lookup_entry fs/ext4/namei.c:1774 [inline]
 ext4_lookup.part.0+0x359/0x6f0 fs/ext4/namei.c:1842
 ext4_lookup+0x72/0x90 fs/ext4/namei.c:1839
 __lookup_slow+0x257/0x480 fs/namei.c:1696
 lookup_slow fs/namei.c:1713 [inline]
 walk_component+0x454/0x5c0 fs/namei.c:2004
 link_path_walk.part.0+0x773/0xda0 fs/namei.c:2331
 link_path_walk fs/namei.c:3826 [inline]
 path_openat+0x1b9/0x520 fs/namei.c:3826
 do_filp_open+0x1b7/0x400 fs/namei.c:3857
 do_sys_openat2+0x5dc/0x6e0 fs/open.c:1428
 do_sys_open fs/open.c:1443 [inline]
 __do_sys_openat fs/open.c:1459 [inline]
 __se_sys_openat fs/open.c:1454 [inline]
 __x64_sys_openat+0x148/0x200 fs/open.c:1454
 do_syscall_x64 arch/x86/entry/common.c:51 [inline]
 do_syscall_6
---truncated---</description><pubDate>Sun, 19 Jan 2025 10:33:09 +0000</pubDate></item><item><title>CVE-2025-21632 | x86/fpu: Ensure shadow stack is active before &amp;quot;getting&amp;quot; registers</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21632</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/fpu: Ensure shadow stack is active before "getting" registers

The x86 shadow stack support has its own set of registers. Those registers
are XSAVE-managed, but they are "supervisor state components" which means
that userspace can not touch them with XSAVE/XRSTOR.  It also means that
they are not accessible from the existing ptrace ABI for XSAVE state.
Thus, there is a new ptrace get/set interface for it.

The regset code that ptrace uses provides an -&gt;active() handler in
addition to the get/set ones. For shadow stack this -&gt;active() handler
verifies that shadow stack is enabled via the ARCH_SHSTK_SHSTK bit in the
thread struct. The -&gt;active() handler is checked from some call sites of
the regset get/set handlers, but not the ptrace ones. This was not
understood when shadow stack support was put in place.

As a result, both the set/get handlers can be called with
XFEATURE_CET_USER in its init state, which would cause get_xsave_addr() to
return NULL and trigger a WARN_ON(). The ssp_set() handler luckily has an
ssp_active() check to avoid surprising the kernel with shadow stack
behavior when the kernel is not ready for it (ARCH_SHSTK_SHSTK==0). That
check just happened to avoid the warning.

But the -&gt;get() side wasn't so lucky. It can be called with shadow stacks
disabled, triggering the warning in practice, as reported by Christina
Schimpe:

WARNING: CPU: 5 PID: 1773 at arch/x86/kernel/fpu/regset.c:198 ssp_get+0x89/0xa0
[...]
Call Trace:

? show_regs+0x6e/0x80
? ssp_get+0x89/0xa0
? __warn+0x91/0x150
? ssp_get+0x89/0xa0
? report_bug+0x19d/0x1b0
? handle_bug+0x46/0x80
? exc_invalid_op+0x1d/0x80
? asm_exc_invalid_op+0x1f/0x30
? __pfx_ssp_get+0x10/0x10
? ssp_get+0x89/0xa0
? ssp_get+0x52/0xa0
__regset_get+0xad/0xf0
copy_regset_to_user+0x52/0xc0
ptrace_regset+0x119/0x140
ptrace_request+0x13c/0x850
? wait_task_inactive+0x142/0x1d0
? do_syscall_64+0x6d/0x90
arch_ptrace+0x102/0x300
[...]

Ensure that shadow stacks are active in a thread before looking them up
in the XSAVE buffer. Since ARCH_SHSTK_SHSTK and user_ssp[SHSTK_EN] are
set at the same time, the active check ensures that there will be
something to find in the XSAVE buffer.

[ dhansen: changelog/subject tweaks ]</description><pubDate>Sun, 19 Jan 2025 10:33:09 +0000</pubDate></item><item><title>CVE-2025-21633 | io_uring/sqpoll: zero sqd-&amp;gt;thread on tctx errors</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21633</link><description>In the Linux kernel, the following vulnerability has been resolved:

io_uring/sqpoll: zero sqd-&gt;thread on tctx errors

Syzkeller reports:

BUG: KASAN: slab-use-after-free in thread_group_cputime+0x409/0x700 kernel/sched/cputime.c:341
Read of size 8 at addr ffff88803578c510 by task syz.2.3223/27552
 Call Trace:
  
  ...
  kasan_report+0x143/0x180 mm/kasan/report.c:602
  thread_group_cputime+0x409/0x700 kernel/sched/cputime.c:341
  thread_group_cputime_adjusted+0xa6/0x340 kernel/sched/cputime.c:639
  getrusage+0x1000/0x1340 kernel/sys.c:1863
  io_uring_show_fdinfo+0xdfe/0x1770 io_uring/fdinfo.c:197
  seq_show+0x608/0x770 fs/proc/fd.c:68
  ...

That's due to sqd-&gt;task not being cleared properly in cases where
SQPOLL task tctx setup fails, which can essentially only happen with
fault injection to insert allocation errors.</description><pubDate>Sun, 19 Jan 2025 10:33:10 +0000</pubDate></item><item><title>CVE-2025-21634 | cgroup/cpuset: remove kernfs active break</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21634</link><description>In the Linux kernel, the following vulnerability has been resolved:

cgroup/cpuset: remove kernfs active break

A warning was found:

WARNING: CPU: 10 PID: 3486953 at fs/kernfs/file.c:828
CPU: 10 PID: 3486953 Comm: rmdir Kdump: loaded Tainted: G
RIP: 0010:kernfs_should_drain_open_files+0x1a1/0x1b0
RSP: 0018:ffff8881107ef9e0 EFLAGS: 00010202
RAX: 0000000080000002 RBX: ffff888154738c00 RCX: dffffc0000000000
RDX: 0000000000000007 RSI: 0000000000000004 RDI: ffff888154738c04
RBP: ffff888154738c04 R08: ffffffffaf27fa15 R09: ffffed102a8e7180
R10: ffff888154738c07 R11: 0000000000000000 R12: ffff888154738c08
R13: ffff888750f8c000 R14: ffff888750f8c0e8 R15: ffff888154738ca0
FS:  00007f84cd0be740(0000) GS:ffff8887ddc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000555f9fbe00c8 CR3: 0000000153eec001 CR4: 0000000000370ee0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 kernfs_drain+0x15e/0x2f0
 __kernfs_remove+0x165/0x300
 kernfs_remove_by_name_ns+0x7b/0xc0
 cgroup_rm_file+0x154/0x1c0
 cgroup_addrm_files+0x1c2/0x1f0
 css_clear_dir+0x77/0x110
 kill_css+0x4c/0x1b0
 cgroup_destroy_locked+0x194/0x380
 cgroup_rmdir+0x2a/0x140

It can be explained by:
rmdir 				echo 1 &gt; cpuset.cpus
				kernfs_fop_write_iter // active=0
cgroup_rm_file
kernfs_remove_by_name_ns	kernfs_get_active // active=1
__kernfs_remove					  // active=0x80000002
kernfs_drain			cpuset_write_resmask
wait_event
//waiting (active == 0x80000001)
				kernfs_break_active_protection
				// active = 0x80000001
// continue
				kernfs_unbreak_active_protection
				// active = 0x80000002
...
kernfs_should_drain_open_files
// warning occurs
				kernfs_put_active

This warning is caused by 'kernfs_break_active_protection' when it is
writing to cpuset.cpus, and the cgroup is removed concurrently.

The commit 3a5a6d0c2b03 ("cpuset: don't nest cgroup_mutex inside
get_online_cpus()") made cpuset_hotplug_workfn asynchronous, This change
involves calling flush_work(), which can create a multiple processes
circular locking dependency that involve cgroup_mutex, potentially leading
to a deadlock. To avoid deadlock. the commit 76bb5ab8f6e3 ("cpuset: break
kernfs active protection in cpuset_write_resmask()") added
'kernfs_break_active_protection' in the cpuset_write_resmask. This could
lead to this warning.

After the commit 2125c0034c5d ("cgroup/cpuset: Make cpuset hotplug
processing synchronous"), the cpuset_write_resmask no longer needs to
wait the hotplug to finish, which means that concurrent hotplug and cpuset
operations are no longer possible. Therefore, the deadlock doesn't exist
anymore and it does not have to 'break active protection' now. To fix this
warning, just remove kernfs_break_active_protection operation in the
'cpuset_write_resmask'.</description><pubDate>Sun, 19 Jan 2025 10:33:10 +0000</pubDate></item><item><title>CVE-2025-21635 | rds: sysctl: rds_tcp_{rcv,snd}buf: avoid using current-&amp;gt;nsproxy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21635</link><description>In the Linux kernel, the following vulnerability has been resolved:

rds: sysctl: rds_tcp_{rcv,snd}buf: avoid using current-&gt;nsproxy

As mentioned in a previous commit of this series, using the 'net'
structure via 'current' is not recommended for different reasons:

- Inconsistency: getting info from the reader's/writer's netns vs only
  from the opener's netns.

- current-&gt;nsproxy can be NULL in some cases, resulting in an 'Oops'
  (null-ptr-deref), e.g. when the current task is exiting, as spotted by
  syzbot [1] using acct(2).

The per-netns structure can be obtained from the table-&gt;data using
container_of(), then the 'net' one can be retrieved from the listen
socket (if available).</description><pubDate>Sun, 19 Jan 2025 10:33:11 +0000</pubDate></item><item><title>CVE-2025-21636 | sctp: sysctl: plpmtud_probe_interval: avoid using current-&amp;gt;nsproxy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21636</link><description>In the Linux kernel, the following vulnerability has been resolved:

sctp: sysctl: plpmtud_probe_interval: avoid using current-&gt;nsproxy

As mentioned in a previous commit of this series, using the 'net'
structure via 'current' is not recommended for different reasons:

- Inconsistency: getting info from the reader's/writer's netns vs only
  from the opener's netns.

- current-&gt;nsproxy can be NULL in some cases, resulting in an 'Oops'
  (null-ptr-deref), e.g. when the current task is exiting, as spotted by
  syzbot [1] using acct(2).

The 'net' structure can be obtained from the table-&gt;data using
container_of().

Note that table-&gt;data could also be used directly, as this is the only
member needed from the 'net' structure, but that would increase the size
of this fix, to use '*data' everywhere 'net-&gt;sctp.probe_interval' is
used.</description><pubDate>Sun, 19 Jan 2025 10:33:11 +0000</pubDate></item><item><title>CVE-2025-21637 | sctp: sysctl: udp_port: avoid using current-&amp;gt;nsproxy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21637</link><description>In the Linux kernel, the following vulnerability has been resolved:

sctp: sysctl: udp_port: avoid using current-&gt;nsproxy

As mentioned in a previous commit of this series, using the 'net'
structure via 'current' is not recommended for different reasons:

- Inconsistency: getting info from the reader's/writer's netns vs only
  from the opener's netns.

- current-&gt;nsproxy can be NULL in some cases, resulting in an 'Oops'
  (null-ptr-deref), e.g. when the current task is exiting, as spotted by
  syzbot [1] using acct(2).

The 'net' structure can be obtained from the table-&gt;data using
container_of().

Note that table-&gt;data could also be used directly, but that would
increase the size of this fix, while 'sctp.ctl_sock' still needs to be
retrieved from 'net' structure.</description><pubDate>Sun, 19 Jan 2025 10:33:11 +0000</pubDate></item><item><title>CVE-2025-21638 | sctp: sysctl: auth_enable: avoid using current-&amp;gt;nsproxy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21638</link><description>In the Linux kernel, the following vulnerability has been resolved:

sctp: sysctl: auth_enable: avoid using current-&gt;nsproxy

As mentioned in a previous commit of this series, using the 'net'
structure via 'current' is not recommended for different reasons:

- Inconsistency: getting info from the reader's/writer's netns vs only
  from the opener's netns.

- current-&gt;nsproxy can be NULL in some cases, resulting in an 'Oops'
  (null-ptr-deref), e.g. when the current task is exiting, as spotted by
  syzbot [1] using acct(2).

The 'net' structure can be obtained from the table-&gt;data using
container_of().

Note that table-&gt;data could also be used directly, but that would
increase the size of this fix, while 'sctp.ctl_sock' still needs to be
retrieved from 'net' structure.</description><pubDate>Sun, 19 Jan 2025 10:33:12 +0000</pubDate></item><item><title>CVE-2025-21639 | sctp: sysctl: rto_min/max: avoid using current-&amp;gt;nsproxy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21639</link><description>In the Linux kernel, the following vulnerability has been resolved:

sctp: sysctl: rto_min/max: avoid using current-&gt;nsproxy

As mentioned in a previous commit of this series, using the 'net'
structure via 'current' is not recommended for different reasons:

- Inconsistency: getting info from the reader's/writer's netns vs only
  from the opener's netns.

- current-&gt;nsproxy can be NULL in some cases, resulting in an 'Oops'
  (null-ptr-deref), e.g. when the current task is exiting, as spotted by
  syzbot [1] using acct(2).

The 'net' structure can be obtained from the table-&gt;data using
container_of().

Note that table-&gt;data could also be used directly, as this is the only
member needed from the 'net' structure, but that would increase the size
of this fix, to use '*data' everywhere 'net-&gt;sctp.rto_min/max' is used.</description><pubDate>Sun, 19 Jan 2025 10:33:12 +0000</pubDate></item><item><title>CVE-2025-21640 | sctp: sysctl: cookie_hmac_alg: avoid using current-&amp;gt;nsproxy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21640</link><description>In the Linux kernel, the following vulnerability has been resolved:

sctp: sysctl: cookie_hmac_alg: avoid using current-&gt;nsproxy

As mentioned in a previous commit of this series, using the 'net'
structure via 'current' is not recommended for different reasons:

- Inconsistency: getting info from the reader's/writer's netns vs only
  from the opener's netns.

- current-&gt;nsproxy can be NULL in some cases, resulting in an 'Oops'
  (null-ptr-deref), e.g. when the current task is exiting, as spotted by
  syzbot [1] using acct(2).

The 'net' structure can be obtained from the table-&gt;data using
container_of().

Note that table-&gt;data could also be used directly, as this is the only
member needed from the 'net' structure, but that would increase the size
of this fix, to use '*data' everywhere 'net-&gt;sctp.sctp_hmac_alg' is
used.</description><pubDate>Sun, 19 Jan 2025 10:33:12 +0000</pubDate></item><item><title>CVE-2025-21641 | mptcp: sysctl: blackhole timeout: avoid using current-&amp;gt;nsproxy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21641</link><description>In the Linux kernel, the following vulnerability has been resolved:

mptcp: sysctl: blackhole timeout: avoid using current-&gt;nsproxy

As mentioned in the previous commit, using the 'net' structure via
'current' is not recommended for different reasons:

- Inconsistency: getting info from the reader's/writer's netns vs only
  from the opener's netns.

- current-&gt;nsproxy can be NULL in some cases, resulting in an 'Oops'
  (null-ptr-deref), e.g. when the current task is exiting, as spotted by
  syzbot [1] using acct(2).

The 'pernet' structure can be obtained from the table-&gt;data using
container_of().</description><pubDate>Sun, 19 Jan 2025 10:33:13 +0000</pubDate></item><item><title>CVE-2025-21642 | mptcp: sysctl: sched: avoid using current-&amp;gt;nsproxy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21642</link><description>In the Linux kernel, the following vulnerability has been resolved:

mptcp: sysctl: sched: avoid using current-&gt;nsproxy

Using the 'net' structure via 'current' is not recommended for different
reasons.

First, if the goal is to use it to read or write per-netns data, this is
inconsistent with how the "generic" sysctl entries are doing: directly
by only using pointers set to the table entry, e.g. table-&gt;data. Linked
to that, the per-netns data should always be obtained from the table
linked to the netns it had been created for, which may not coincide with
the reader's or writer's netns.

Another reason is that access to current-&gt;nsproxy-&gt;netns can oops if
attempted when current-&gt;nsproxy had been dropped when the current task
is exiting. This is what syzbot found, when using acct(2):

  Oops: general protection fault, probably for non-canonical address 0xdffffc0000000005: 0000 [#1] PREEMPT SMP KASAN PTI
  KASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]
  CPU: 1 UID: 0 PID: 5924 Comm: syz-executor Not tainted 6.13.0-rc5-syzkaller-00004-gccb98ccef0e5 #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024
  RIP: 0010:proc_scheduler+0xc6/0x3c0 net/mptcp/ctrl.c:125
  Code: 03 42 80 3c 38 00 0f 85 fe 02 00 00 4d 8b a4 24 08 09 00 00 48 b8 00 00 00 00 00 fc ff df 49 8d 7c 24 28 48 89 fa 48 c1 ea 03 &lt;80&gt; 3c 02 00 0f 85 cc 02 00 00 4d 8b 7c 24 28 48 8d 84 24 c8 00 00
  RSP: 0018:ffffc900034774e8 EFLAGS: 00010206

  RAX: dffffc0000000000 RBX: 1ffff9200068ee9e RCX: ffffc90003477620
  RDX: 0000000000000005 RSI: ffffffff8b08f91e RDI: 0000000000000028
  RBP: 0000000000000001 R08: ffffc90003477710 R09: 0000000000000040
  R10: 0000000000000040 R11: 00000000726f7475 R12: 0000000000000000
  R13: ffffc90003477620 R14: ffffc90003477710 R15: dffffc0000000000
  FS:  0000000000000000(0000) GS:ffff8880b8700000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 00007fee3cd452d8 CR3: 000000007d116000 CR4: 00000000003526f0
  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
  Call Trace:
   
   proc_sys_call_handler+0x403/0x5d0 fs/proc/proc_sysctl.c:601
   __kernel_write_iter+0x318/0xa80 fs/read_write.c:612
   __kernel_write+0xf6/0x140 fs/read_write.c:632
   do_acct_process+0xcb0/0x14a0 kernel/acct.c:539
   acct_pin_kill+0x2d/0x100 kernel/acct.c:192
   pin_kill+0x194/0x7c0 fs/fs_pin.c:44
   mnt_pin_kill+0x61/0x1e0 fs/fs_pin.c:81
   cleanup_mnt+0x3ac/0x450 fs/namespace.c:1366
   task_work_run+0x14e/0x250 kernel/task_work.c:239
   exit_task_work include/linux/task_work.h:43 [inline]
   do_exit+0xad8/0x2d70 kernel/exit.c:938
   do_group_exit+0xd3/0x2a0 kernel/exit.c:1087
   get_signal+0x2576/0x2610 kernel/signal.c:3017
   arch_do_signal_or_restart+0x90/0x7e0 arch/x86/kernel/signal.c:337
   exit_to_user_mode_loop kernel/entry/common.c:111 [inline]
   exit_to_user_mode_prepare include/linux/entry-common.h:329 [inline]
   __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]
   syscall_exit_to_user_mode+0x150/0x2a0 kernel/entry/common.c:218
   do_syscall_64+0xda/0x250 arch/x86/entry/common.c:89
   entry_SYSCALL_64_after_hwframe+0x77/0x7f
  RIP: 0033:0x7fee3cb87a6a
  Code: Unable to access opcode bytes at 0x7fee3cb87a40.
  RSP: 002b:00007fffcccac688 EFLAGS: 00000202 ORIG_RAX: 0000000000000037
  RAX: 0000000000000000 RBX: 00007fffcccac710 RCX: 00007fee3cb87a6a
  RDX: 0000000000000041 RSI: 0000000000000000 RDI: 0000000000000003
  RBP: 0000000000000003 R08: 00007fffcccac6ac R09: 00007fffcccacac7
  R10: 00007fffcccac710 R11: 0000000000000202 R12: 00007fee3cd49500
  R13: 00007fffcccac6ac R14: 0000000000000000 R15: 00007fee3cd4b000
   
  Modules linked in:
  ---[ end trace 0000000000000000 ]---
  RIP: 0010:proc_scheduler+0xc6/0x3c0 net/mptcp/ctrl.c:125
  Code: 03 42 80 3c 38 00 0f 85 fe 02 00 00 4d 8b a4 24 08 09 00 00 48 b8 00 00 00 00 00 fc
---truncated---</description><pubDate>Sun, 19 Jan 2025 10:33:13 +0000</pubDate></item><item><title>CVE-2025-21643 | netfs: Fix kernel async DIO</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21643</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfs: Fix kernel async DIO

Netfslib needs to be able to handle kernel-initiated asynchronous DIO that
is supplied with a bio_vec[] array.  Currently, because of the async flag,
this gets passed to netfs_extract_user_iter() which throws a warning and
fails because it only handles IOVEC and UBUF iterators.  This can be
triggered through a combination of cifs and a loopback blockdev with
something like:

        mount //my/cifs/share /foo
        dd if=/dev/zero of=/foo/m0 bs=4K count=1K
        losetup --sector-size 4096 --direct-io=on /dev/loop2046 /foo/m0
        echo hello &gt;/dev/loop2046

This causes the following to appear in syslog:

        WARNING: CPU: 2 PID: 109 at fs/netfs/iterator.c:50 netfs_extract_user_iter+0x170/0x250 [netfs]

and the write to fail.

Fix this by removing the check in netfs_unbuffered_write_iter_locked() that
causes async kernel DIO writes to be handled as userspace writes.  Note
that this change relies on the kernel caller maintaining the existence of
the bio_vec array (or kvec[] or folio_queue) until the op is complete.</description><pubDate>Sun, 19 Jan 2025 10:33:13 +0000</pubDate></item><item><title>CVE-2025-21644 | drm/xe: Fix tlb invalidation when wedging</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21644</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/xe: Fix tlb invalidation when wedging

If GuC fails to load, the driver wedges, but in the process it tries to
do stuff that may not be initialized yet. This moves the
xe_gt_tlb_invalidation_init() to be done earlier: as its own doc says,
it's a software-only initialization and should had been named with the
_early() suffix.

Move it to be called by xe_gt_init_early(), so the locks and seqno are
initialized, avoiding a NULL ptr deref when wedging:

	xe 0000:03:00.0: [drm] *ERROR* GT0: load failed: status: Reset = 0, BootROM = 0x50, UKernel = 0x00, MIA = 0x00, Auth = 0x01
	xe 0000:03:00.0: [drm] *ERROR* GT0: firmware signature verification failed
	xe 0000:03:00.0: [drm] *ERROR* CRITICAL: Xe has declared device 0000:03:00.0 as wedged.
	...
	BUG: kernel NULL pointer dereference, address: 0000000000000000
	#PF: supervisor read access in kernel mode
	#PF: error_code(0x0000) - not-present page
	PGD 0 P4D 0
	Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI
	CPU: 9 UID: 0 PID: 3908 Comm: modprobe Tainted: G     U  W          6.13.0-rc4-xe+ #3
	Tainted: [U]=USER, [W]=WARN
	Hardware name: Intel Corporation Alder Lake Client Platform/AlderLake-S ADP-S DDR5 UDIMM CRB, BIOS ADLSFWI1.R00.3275.A00.2207010640 07/01/2022
	RIP: 0010:xe_gt_tlb_invalidation_reset+0x75/0x110 [xe]

This can be easily triggered by poking the GuC binary to force a
signature failure. There will still be an extra message,

	xe 0000:03:00.0: [drm] *ERROR* GT0: GuC mmio request 0x4100: no reply 0x4100

but that's better than a NULL ptr deref.

(cherry picked from commit 5001ef3af8f2c972d6fd9c5221a8457556f8bea6)</description><pubDate>Sun, 19 Jan 2025 10:33:14 +0000</pubDate></item><item><title>CVE-2025-21645 | platform/x86/amd/pmc: Only disable IRQ1 wakeup where i8042 actually enabled it</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21645</link><description>In the Linux kernel, the following vulnerability has been resolved:

platform/x86/amd/pmc: Only disable IRQ1 wakeup where i8042 actually enabled it

Wakeup for IRQ1 should be disabled only in cases where i8042 had
actually enabled it, otherwise "wake_depth" for this IRQ will try to
drop below zero and there will be an unpleasant WARN() logged:

kernel: atkbd serio0: Disabling IRQ1 wakeup source to avoid platform firmware bug
kernel: ------------[ cut here ]------------
kernel: Unbalanced IRQ 1 wake disable
kernel: WARNING: CPU: 10 PID: 6431 at kernel/irq/manage.c:920 irq_set_irq_wake+0x147/0x1a0

The PMC driver uses DEFINE_SIMPLE_DEV_PM_OPS() to define its dev_pm_ops
which sets amd_pmc_suspend_handler() to the .suspend, .freeze, and
.poweroff handlers. i8042_pm_suspend(), however, is only set as
the .suspend handler.

Fix the issue by call PMC suspend handler only from the same set of
dev_pm_ops handlers as i8042_pm_suspend(), which currently means just
the .suspend handler.

To reproduce this issue try hibernating (S4) the machine after a fresh boot
without putting it into s2idle first.

[ij: edited the commit message.]</description><pubDate>Sun, 19 Jan 2025 10:33:14 +0000</pubDate></item><item><title>CVE-2025-21646 | afs: Fix the maximum cell name length</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21646</link><description>In the Linux kernel, the following vulnerability has been resolved:

afs: Fix the maximum cell name length

The kafs filesystem limits the maximum length of a cell to 256 bytes, but a
problem occurs if someone actually does that: kafs tries to create a
directory under /proc/net/afs/ with the name of the cell, but that fails
with a warning:

        WARNING: CPU: 0 PID: 9 at fs/proc/generic.c:405

because procfs limits the maximum filename length to 255.

However, the DNS limits the maximum lookup length and, by extension, the
maximum cell name, to 255 less two (length count and trailing NUL).

Fix this by limiting the maximum acceptable cellname length to 253.  This
also allows us to be sure we can create the "/afs/./" mountpoint too.

Further, split the YFS VL record cell name maximum to be the 256 allowed by
the protocol and ignore the record retrieved by YFSVL.GetCellName if it
exceeds 253.</description><pubDate>Sun, 19 Jan 2025 10:33:15 +0000</pubDate></item><item><title>CVE-2025-21647 | sched: sch_cake: add bounds checks to host bulk flow fairness counts</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21647</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched: sch_cake: add bounds checks to host bulk flow fairness counts

Even though we fixed a logic error in the commit cited below, syzbot
still managed to trigger an underflow of the per-host bulk flow
counters, leading to an out of bounds memory access.

To avoid any such logic errors causing out of bounds memory accesses,
this commit factors out all accesses to the per-host bulk flow counters
to a series of helpers that perform bounds-checking before any
increments and decrements. This also has the benefit of improving
readability by moving the conditional checks for the flow mode into
these helpers, instead of having them spread out throughout the
code (which was the cause of the original logic error).

As part of this change, the flow quantum calculation is consolidated
into a helper function, which means that the dithering applied to the
ost load scaling is now applied both in the DRR rotation and when a
sparse flow's quantum is first initiated. The only user-visible effect
of this is that the maximum packet size that can be sent while a flow
stays sparse will now vary with +/- one byte in some cases. This should
not make a noticeable difference in practice, and thus it's not worth
complicating the code to preserve the old behaviour.</description><pubDate>Sun, 19 Jan 2025 10:33:15 +0000</pubDate></item><item><title>CVE-2025-21648 | netfilter: conntrack: clamp maximum hashtable size to INT_MAX</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21648</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: conntrack: clamp maximum hashtable size to INT_MAX

Use INT_MAX as maximum size for the conntrack hashtable. Otherwise, it
is possible to hit WARN_ON_ONCE in __kvmalloc_node_noprof() when
resizing hashtable because __GFP_NOWARN is unset. See:

  0708a0afe291 ("mm: Consider __GFP_NOWARN flag for oversized kvmalloc() calls")

Note: hashtable resize is only possible from init_netns.</description><pubDate>Sun, 19 Jan 2025 10:33:15 +0000</pubDate></item><item><title>CVE-2025-21649 | net: hns3: fix kernel crash when 1588 is sent on HIP08 devices</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21649</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hns3: fix kernel crash when 1588 is sent on HIP08 devices

Currently, HIP08 devices does not register the ptp devices, so the
hdev-&gt;ptp is NULL. But the tx process would still try to set hardware time
stamp info with SKBTX_HW_TSTAMP flag and cause a kernel crash.

[  128.087798] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000018
...
[  128.280251] pc : hclge_ptp_set_tx_info+0x2c/0x140 [hclge]
[  128.286600] lr : hclge_ptp_set_tx_info+0x20/0x140 [hclge]
[  128.292938] sp : ffff800059b93140
[  128.297200] x29: ffff800059b93140 x28: 0000000000003280
[  128.303455] x27: ffff800020d48280 x26: ffff0cb9dc814080
[  128.309715] x25: ffff0cb9cde93fa0 x24: 0000000000000001
[  128.315969] x23: 0000000000000000 x22: 0000000000000194
[  128.322219] x21: ffff0cd94f986000 x20: 0000000000000000
[  128.328462] x19: ffff0cb9d2a166c0 x18: 0000000000000000
[  128.334698] x17: 0000000000000000 x16: ffffcf1fc523ed24
[  128.340934] x15: 0000ffffd530a518 x14: 0000000000000000
[  128.347162] x13: ffff0cd6bdb31310 x12: 0000000000000368
[  128.353388] x11: ffff0cb9cfbc7070 x10: ffff2cf55dd11e02
[  128.359606] x9 : ffffcf1f85a212b4 x8 : ffff0cd7cf27dab0
[  128.365831] x7 : 0000000000000a20 x6 : ffff0cd7cf27d000
[  128.372040] x5 : 0000000000000000 x4 : 000000000000ffff
[  128.378243] x3 : 0000000000000400 x2 : ffffcf1f85a21294
[  128.384437] x1 : ffff0cb9db520080 x0 : ffff0cb9db500080
[  128.390626] Call trace:
[  128.393964]  hclge_ptp_set_tx_info+0x2c/0x140 [hclge]
[  128.399893]  hns3_nic_net_xmit+0x39c/0x4c4 [hns3]
[  128.405468]  xmit_one.constprop.0+0xc4/0x200
[  128.410600]  dev_hard_start_xmit+0x54/0xf0
[  128.415556]  sch_direct_xmit+0xe8/0x634
[  128.420246]  __dev_queue_xmit+0x224/0xc70
[  128.425101]  dev_queue_xmit+0x1c/0x40
[  128.429608]  ovs_vport_send+0xac/0x1a0 [openvswitch]
[  128.435409]  do_output+0x60/0x17c [openvswitch]
[  128.440770]  do_execute_actions+0x898/0x8c4 [openvswitch]
[  128.446993]  ovs_execute_actions+0x64/0xf0 [openvswitch]
[  128.453129]  ovs_dp_process_packet+0xa0/0x224 [openvswitch]
[  128.459530]  ovs_vport_receive+0x7c/0xfc [openvswitch]
[  128.465497]  internal_dev_xmit+0x34/0xb0 [openvswitch]
[  128.471460]  xmit_one.constprop.0+0xc4/0x200
[  128.476561]  dev_hard_start_xmit+0x54/0xf0
[  128.481489]  __dev_queue_xmit+0x968/0xc70
[  128.486330]  dev_queue_xmit+0x1c/0x40
[  128.490856]  ip_finish_output2+0x250/0x570
[  128.495810]  __ip_finish_output+0x170/0x1e0
[  128.500832]  ip_finish_output+0x3c/0xf0
[  128.505504]  ip_output+0xbc/0x160
[  128.509654]  ip_send_skb+0x58/0xd4
[  128.513892]  udp_send_skb+0x12c/0x354
[  128.518387]  udp_sendmsg+0x7a8/0x9c0
[  128.522793]  inet_sendmsg+0x4c/0x8c
[  128.527116]  __sock_sendmsg+0x48/0x80
[  128.531609]  __sys_sendto+0x124/0x164
[  128.536099]  __arm64_sys_sendto+0x30/0x5c
[  128.540935]  invoke_syscall+0x50/0x130
[  128.545508]  el0_svc_common.constprop.0+0x10c/0x124
[  128.551205]  do_el0_svc+0x34/0xdc
[  128.555347]  el0_svc+0x20/0x30
[  128.559227]  el0_sync_handler+0xb8/0xc0
[  128.563883]  el0_sync+0x160/0x180</description><pubDate>Sun, 19 Jan 2025 10:33:16 +0000</pubDate></item><item><title>CVE-2025-21650 | net: hns3: fixed hclge_fetch_pf_reg accesses bar space out of bounds issue</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21650</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hns3: fixed hclge_fetch_pf_reg accesses bar space out of bounds issue

The TQP BAR space is divided into two segments. TQPs 0-1023 and TQPs
1024-1279 are in different BAR space addresses. However,
hclge_fetch_pf_reg does not distinguish the tqp space information when
reading the tqp space information. When the number of TQPs is greater
than 1024, access bar space overwriting occurs.
The problem of different segments has been considered during the
initialization of tqp.io_base. Therefore, tqp.io_base is directly used
when the queue is read in hclge_fetch_pf_reg.

The error message:

Unable to handle kernel paging request at virtual address ffff800037200000
pc : hclge_fetch_pf_reg+0x138/0x250 [hclge]
lr : hclge_get_regs+0x84/0x1d0 [hclge]
Call trace:
 hclge_fetch_pf_reg+0x138/0x250 [hclge]
 hclge_get_regs+0x84/0x1d0 [hclge]
 hns3_get_regs+0x2c/0x50 [hns3]
 ethtool_get_regs+0xf4/0x270
 dev_ethtool+0x674/0x8a0
 dev_ioctl+0x270/0x36c
 sock_do_ioctl+0x110/0x2a0
 sock_ioctl+0x2ac/0x530
 __arm64_sys_ioctl+0xa8/0x100
 invoke_syscall+0x4c/0x124
 el0_svc_common.constprop.0+0x140/0x15c
 do_el0_svc+0x30/0xd0
 el0_svc+0x1c/0x2c
 el0_sync_handler+0xb0/0xb4
 el0_sync+0x168/0x180</description><pubDate>Sun, 19 Jan 2025 10:33:16 +0000</pubDate></item><item><title>CVE-2025-21651 | net: hns3: don&amp;#x27;t auto enable misc vector</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21651</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hns3: don't auto enable misc vector

Currently, there is a time window between misc irq enabled
and service task inited. If an interrupte is reported at
this time, it will cause warning like below:

[   16.324639] Call trace:
[   16.324641]  __queue_delayed_work+0xb8/0xe0
[   16.324643]  mod_delayed_work_on+0x78/0xd0
[   16.324655]  hclge_errhand_task_schedule+0x58/0x90 [hclge]
[   16.324662]  hclge_misc_irq_handle+0x168/0x240 [hclge]
[   16.324666]  __handle_irq_event_percpu+0x64/0x1e0
[   16.324667]  handle_irq_event+0x80/0x170
[   16.324670]  handle_fasteoi_edge_irq+0x110/0x2bc
[   16.324671]  __handle_domain_irq+0x84/0xfc
[   16.324673]  gic_handle_irq+0x88/0x2c0
[   16.324674]  el1_irq+0xb8/0x140
[   16.324677]  arch_cpu_idle+0x18/0x40
[   16.324679]  default_idle_call+0x5c/0x1bc
[   16.324682]  cpuidle_idle_call+0x18c/0x1c4
[   16.324684]  do_idle+0x174/0x17c
[   16.324685]  cpu_startup_entry+0x30/0x6c
[   16.324687]  secondary_start_kernel+0x1a4/0x280
[   16.324688] ---[ end trace 6aa0bff672a964aa ]---

So don't auto enable misc vector when request irq..</description><pubDate>Sun, 19 Jan 2025 10:33:16 +0000</pubDate></item><item><title>CVE-2025-21652 | ipvlan: Fix use-after-free in ipvlan_get_iflink().</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21652</link><description>In the Linux kernel, the following vulnerability has been resolved:

ipvlan: Fix use-after-free in ipvlan_get_iflink().

syzbot presented an use-after-free report [0] regarding ipvlan and
linkwatch.

ipvlan does not hold a refcnt of the lower device unlike vlan and
macvlan.

If the linkwatch work is triggered for the ipvlan dev, the lower dev
might have already been freed, resulting in UAF of ipvlan-&gt;phy_dev in
ipvlan_get_iflink().

We can delay the lower dev unregistration like vlan and macvlan by
holding the lower dev's refcnt in dev-&gt;netdev_ops-&gt;ndo_init() and
releasing it in dev-&gt;priv_destructor().

Jakub pointed out calling .ndo_XXX after unregister_netdevice() has
returned is error prone and suggested [1] addressing this UAF in the
core by taking commit 750e51603395 ("net: avoid potential UAF in
default_operstate()") further.

Let's assume unregistering devices DOWN and use RCU protection in
default_operstate() not to race with the device unregistration.

[0]:
BUG: KASAN: slab-use-after-free in ipvlan_get_iflink+0x84/0x88 drivers/net/ipvlan/ipvlan_main.c:353
Read of size 4 at addr ffff0000d768c0e0 by task kworker/u8:35/6944

CPU: 0 UID: 0 PID: 6944 Comm: kworker/u8:35 Not tainted 6.13.0-rc2-g9bc5c9515b48 #12 4c3cb9e8b4565456f6a355f312ff91f4f29b3c47
Hardware name: linux,dummy-virt (DT)
Workqueue: events_unbound linkwatch_event
Call trace:
 show_stack+0x38/0x50 arch/arm64/kernel/stacktrace.c:484 (C)
 __dump_stack lib/dump_stack.c:94 [inline]
 dump_stack_lvl+0xbc/0x108 lib/dump_stack.c:120
 print_address_description mm/kasan/report.c:378 [inline]
 print_report+0x16c/0x6f0 mm/kasan/report.c:489
 kasan_report+0xc0/0x120 mm/kasan/report.c:602
 __asan_report_load4_noabort+0x20/0x30 mm/kasan/report_generic.c:380
 ipvlan_get_iflink+0x84/0x88 drivers/net/ipvlan/ipvlan_main.c:353
 dev_get_iflink+0x7c/0xd8 net/core/dev.c:674
 default_operstate net/core/link_watch.c:45 [inline]
 rfc2863_policy+0x144/0x360 net/core/link_watch.c:72
 linkwatch_do_dev+0x60/0x228 net/core/link_watch.c:175
 __linkwatch_run_queue+0x2f4/0x5b8 net/core/link_watch.c:239
 linkwatch_event+0x64/0xa8 net/core/link_watch.c:282
 process_one_work+0x700/0x1398 kernel/workqueue.c:3229
 process_scheduled_works kernel/workqueue.c:3310 [inline]
 worker_thread+0x8c4/0xe10 kernel/workqueue.c:3391
 kthread+0x2b0/0x360 kernel/kthread.c:389
 ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:862

Allocated by task 9303:
 kasan_save_stack mm/kasan/common.c:47 [inline]
 kasan_save_track+0x30/0x68 mm/kasan/common.c:68
 kasan_save_alloc_info+0x44/0x58 mm/kasan/generic.c:568
 poison_kmalloc_redzone mm/kasan/common.c:377 [inline]
 __kasan_kmalloc+0x84/0xa0 mm/kasan/common.c:394
 kasan_kmalloc include/linux/kasan.h:260 [inline]
 __do_kmalloc_node mm/slub.c:4283 [inline]
 __kmalloc_node_noprof+0x2a0/0x560 mm/slub.c:4289
 __kvmalloc_node_noprof+0x9c/0x230 mm/util.c:650
 alloc_netdev_mqs+0xb4/0x1118 net/core/dev.c:11209
 rtnl_create_link+0x2b8/0xb60 net/core/rtnetlink.c:3595
 rtnl_newlink_create+0x19c/0x868 net/core/rtnetlink.c:3771
 __rtnl_newlink net/core/rtnetlink.c:3896 [inline]
 rtnl_newlink+0x122c/0x15c0 net/core/rtnetlink.c:4011
 rtnetlink_rcv_msg+0x61c/0x918 net/core/rtnetlink.c:6901
 netlink_rcv_skb+0x1dc/0x398 net/netlink/af_netlink.c:2542
 rtnetlink_rcv+0x34/0x50 net/core/rtnetlink.c:6928
 netlink_unicast_kernel net/netlink/af_netlink.c:1321 [inline]
 netlink_unicast+0x618/0x838 net/netlink/af_netlink.c:1347
 netlink_sendmsg+0x5fc/0x8b0 net/netlink/af_netlink.c:1891
 sock_sendmsg_nosec net/socket.c:711 [inline]
 __sock_sendmsg net/socket.c:726 [inline]
 __sys_sendto+0x2ec/0x438 net/socket.c:2197
 __do_sys_sendto net/socket.c:2204 [inline]
 __se_sys_sendto net/socket.c:2200 [inline]
 __arm64_sys_sendto+0xe4/0x110 net/socket.c:2200
 __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]
 invoke_syscall+0x90/0x278 arch/arm64/kernel/syscall.c:49
 el0_svc_common+0x13c/0x250 arch/arm64/kernel/syscall.c:132
 do_el0_svc+0x54/0x70 arch/arm64/kernel/syscall.c:151
 el
---truncated---</description><pubDate>Sun, 19 Jan 2025 10:33:17 +0000</pubDate></item><item><title>CVE-2025-21653 | net_sched: cls_flow: validate TCA_FLOW_RSHIFT attribute</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21653</link><description>In the Linux kernel, the following vulnerability has been resolved:

net_sched: cls_flow: validate TCA_FLOW_RSHIFT attribute

syzbot found that TCA_FLOW_RSHIFT attribute was not validated.
Right shitfing a 32bit integer is undefined for large shift values.

UBSAN: shift-out-of-bounds in net/sched/cls_flow.c:329:23
shift exponent 9445 is too large for 32-bit type 'u32' (aka 'unsigned int')
CPU: 1 UID: 0 PID: 54 Comm: kworker/u8:3 Not tainted 6.13.0-rc3-syzkaller-00180-g4f619d518db9 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024
Workqueue: ipv6_addrconf addrconf_dad_work
Call Trace:
 
  __dump_stack lib/dump_stack.c:94 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120
  ubsan_epilogue lib/ubsan.c:231 [inline]
  __ubsan_handle_shift_out_of_bounds+0x3c8/0x420 lib/ubsan.c:468
  flow_classify+0x24d5/0x25b0 net/sched/cls_flow.c:329
  tc_classify include/net/tc_wrapper.h:197 [inline]
  __tcf_classify net/sched/cls_api.c:1771 [inline]
  tcf_classify+0x420/0x1160 net/sched/cls_api.c:1867
  sfb_classify net/sched/sch_sfb.c:260 [inline]
  sfb_enqueue+0x3ad/0x18b0 net/sched/sch_sfb.c:318
  dev_qdisc_enqueue+0x4b/0x290 net/core/dev.c:3793
  __dev_xmit_skb net/core/dev.c:3889 [inline]
  __dev_queue_xmit+0xf0e/0x3f50 net/core/dev.c:4400
  dev_queue_xmit include/linux/netdevice.h:3168 [inline]
  neigh_hh_output include/net/neighbour.h:523 [inline]
  neigh_output include/net/neighbour.h:537 [inline]
  ip_finish_output2+0xd41/0x1390 net/ipv4/ip_output.c:236
  iptunnel_xmit+0x55d/0x9b0 net/ipv4/ip_tunnel_core.c:82
  udp_tunnel_xmit_skb+0x262/0x3b0 net/ipv4/udp_tunnel_core.c:173
  geneve_xmit_skb drivers/net/geneve.c:916 [inline]
  geneve_xmit+0x21dc/0x2d00 drivers/net/geneve.c:1039
  __netdev_start_xmit include/linux/netdevice.h:5002 [inline]
  netdev_start_xmit include/linux/netdevice.h:5011 [inline]
  xmit_one net/core/dev.c:3590 [inline]
  dev_hard_start_xmit+0x27a/0x7d0 net/core/dev.c:3606
  __dev_queue_xmit+0x1b73/0x3f50 net/core/dev.c:4434</description><pubDate>Sun, 19 Jan 2025 10:33:17 +0000</pubDate></item><item><title>CVE-2025-21654 | ovl: support encoding fid from inode with no alias</title><link>https://www.cve.org/CVERecord?id=CVE-2025-21654</link><description>In the Linux kernel, the following vulnerability has been resolved:

ovl: support encoding fid from inode with no alias

Dmitry Safonov reported that a WARN_ON() assertion can be trigered by
userspace when calling inotify_show_fdinfo() for an overlayfs watched
inode, whose dentry aliases were discarded with drop_caches.

The WARN_ON() assertion in inotify_show_fdinfo() was removed, because
it is possible for encoding file handle to fail for other reason, but
the impact of failing to encode an overlayfs file handle goes beyond
this assertion.

As shown in the LTP test case mentioned in the link below, failure to
encode an overlayfs file handle from a non-aliased inode also leads to
failure to report an fid with FAN_DELETE_SELF fanotify events.

As Dmitry notes in his analyzis of the problem, ovl_encode_fh() fails
if it cannot find an alias for the inode, but this failure can be fixed.
ovl_encode_fh() seldom uses the alias and in the case of non-decodable
file handles, as is often the case with fanotify fid info,
ovl_encode_fh() never needs to use the alias to encode a file handle.

Defer finding an alias until it is actually needed so ovl_encode_fh()
will not fail in the common case of FAN_DELETE_SELF fanotify events.</description><pubDate>Sun, 19 Jan 2025 10:33:18 +0000</pubDate></item><item><title>CVE-2025-0567 | Epic Games Launcher Installer profapi.dll untrusted search path</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0567</link><description>A vulnerability classified as problematic was found in Epic Games Launcher up to 17.2.1. This vulnerability affects unknown code in the library profapi.dll of the component Installer. The manipulation leads to untrusted search path. Attacking locally is a requirement. The complexity of an attack is rather high. The exploitation appears to be difficult.</description><pubDate>Sun, 19 Jan 2025 07:40:20 +0000</pubDate></item><item><title>CVE-2025-0566 | Tenda AC15 SetDevNetName formSetDevNetName stack-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0566</link><description>A vulnerability classified as critical has been found in Tenda AC15 15.13.07.13. This affects the function formSetDevNetName of the file /goform/SetDevNetName. The manipulation of the argument mac leads to stack-based buffer overflow. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 19 Jan 2025 06:36:03 +0000</pubDate></item><item><title>CVE-2025-0565 | ZZCMS index.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0565</link><description>A vulnerability was found in ZZCMS 2023. It has been rated as critical. Affected by this issue is some unknown functionality of the file /index.php. The manipulation of the argument id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 19 Jan 2025 06:18:05 +0000</pubDate></item><item><title>CVE-2024-8722 | WP All Import Pro &amp;lt;= 4.9.7 - Authenticated (Administrator+) Stored Cross-Site Scripting via SVG File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8722</link><description>The Import any XML or CSV File to WordPress PRO plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 4.9.7 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Administrator-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.</description><pubDate>Sun, 19 Jan 2025 04:34:41 +0000</pubDate></item><item><title>CVE-2025-0564 | code-projects Fantasy-Cricket authenticate.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0564</link><description>A vulnerability was found in code-projects Fantasy-Cricket 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /authenticate.php. The manipulation of the argument uname leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 19 Jan 2025 03:39:17 +0000</pubDate></item><item><title>CVE-2024-45652 | IBM Maximo Asset Management directory traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45652</link><description>IBM Maximo MXAPIASSET API 7.6.1.3 could allow a remote attacker to traverse directories on the system. An attacker could send a specially crafted URL request containing "dot dot" sequences (/../) to view arbitrary files on the system.</description><pubDate>Sun, 19 Jan 2025 03:03:24 +0000</pubDate></item><item><title>CVE-2024-45653 | IBM Sterling Connect:Direct Web Services information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45653</link><description>IBM Sterling Connect:Direct Web Services 6.0, 6.1, 6.2, and 6.3 could disclose sensitive IP address information to authenticated users in responses that could be used in further attacks against the system.</description><pubDate>Sun, 19 Jan 2025 03:03:24 +0000</pubDate></item><item><title>CVE-2024-45654 | IBM Security ReaQta improper input validation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45654</link><description>IBM Security ReaQta 3.12 could allow an authenticated user to perform unauthorized actions due to reliance on untrusted inputs.</description><pubDate>Sun, 19 Jan 2025 02:41:15 +0000</pubDate></item><item><title>CVE-2025-0562 | Codezips Gym Management System health_status_entry.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0562</link><description>A vulnerability was found in Codezips Gym Management System 1.0 and classified as critical. This issue affects some unknown processing of the file /dashboard/admin/health_status_entry.php. The manipulation of the argument usrid leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 19 Jan 2025 01:38:34 +0000</pubDate></item><item><title>CVE-2025-0563 | code-projects Fantasy-Cricket update.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0563</link><description>A vulnerability was found in code-projects Fantasy-Cricket 1.0. It has been classified as critical. Affected is an unknown function of the file /dash/update.php. The manipulation of the argument uname leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 19 Jan 2025 01:38:35 +0000</pubDate></item></channel></rss>