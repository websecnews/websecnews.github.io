<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Fri, 24 May 2024 06:27:43 +0000</lastBuildDate><item><title>CVE-2024-36361 | Pug through 3.0.2 allows JavaScript code execution if an application accepts untrusted input for the name option of the compileClient, compi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36361</link><description>Pug through 3.0.2 allows JavaScript code execution if an application accepts untrusted input for the name option of the compileClient, compileFileClient, or compileClientWithDependenciesTracked function. NOTE: these functions are for compiling Pug templates into JavaScript, and there would typically be no reason to allow untrusted callers.</description><pubDate>Fri, 24 May 2024 06:27:45 +0000</pubDate></item><item><title>CVE-2023-1001 | xuliangzhan vxe-table vxe-textarea textarea.js export cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-1001</link><description>A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.</description><pubDate>Fri, 24 May 2024 06:27:45 +0000</pubDate></item><item><title>CVE-2024-5142 | XSS in Hubshare&amp;#x27;s social module</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5142</link><description>Stored Cross-Site Scripting vulnerability in Social Module in M-Files Hubshare before version 5.0.3.8 allows authenticated attacker to run scripts in other users browser</description><pubDate>Fri, 24 May 2024 06:27:46 +0000</pubDate></item><item><title>CVE-2024-0867 | Email Log &amp;lt;= 2.4.8 - Unauthenticated Hook Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0867</link><description>The Email Log plugin for WordPress is vulnerable to Unauthenticated Hook Injection in all versions up to, and including, 2.4.8 via the check_nonce function. This makes it possible for unauthenticated attackers to execute actions with hooks in WordPress under certain circumstances. The action the attacker wishes to execute needs to have a nonce check, and the nonce needs to be known to the attacker. Furthermore, the absence of a capability check is a requirement.</description><pubDate>Fri, 24 May 2024 05:39:59 +0000</pubDate></item><item><title>CVE-2024-1134 | SEOPress – On-site SEO &amp;lt;= 7.5.2.1 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1134</link><description>The SEOPress – On-site SEO plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the SEO title and description parameters as well as others in all versions up to, and including, 7.5.2.1 due to insufficient input sanitization and output escaping. This makes it possible for attackers, with contributor access or higher, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 24 May 2024 05:39:59 +0000</pubDate></item><item><title>CVE-2024-3718 | The Plus Addons for Elementor &amp;lt;= 5.5.4 - Authenticated (Contributor+) Stored Cross-Site Scripting via Progress Bar, Header Meta Content, Scroll Navigation, Pricing Table, &amp;amp; Flip Box</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3718</link><description>The The Plus Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via several of the plugin's widgets all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 24 May 2024 05:39:59 +0000</pubDate></item><item><title>CVE-2024-2618 | Elementor Header &amp;amp; Footer Builder &amp;lt;= 1.6.26 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2618</link><description>The Elementor Header &amp; Footer Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the size attribute in all versions up to, and including, 1.6.26 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor access or higher, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 24 May 2024 04:37:18 +0000</pubDate></item><item><title>CVE-2024-2784 | The Plus Addons for Elementor &amp;lt;= 5.5.4 - Authenticated (Contibutor+) Stored Cross-Site Scripting via Hover Card</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2784</link><description>The The Plus Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Hover Card widget in all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 24 May 2024 04:37:19 +0000</pubDate></item><item><title>CVE-2024-3557 | WP Go Maps (formerly WP Google Maps) &amp;lt;= 9.0.36 - Authenticated (Contributor+) Stored Cross-Site Scripting via Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3557</link><description>The WP Go Maps (formerly WP Google Maps) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's wpgmza shortcode in all versions up to, and including, 9.0.36 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 24 May 2024 04:37:19 +0000</pubDate></item><item><title>CVE-2024-4544 | Pie Register - Social Sites Login (Add on) &amp;lt;= 1.7.7 - Authentication Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4544</link><description>The Pie Register - Social Sites Login (Add on) plugin for WordPress is vulnerable to authentication bypass in versions up to, and including, 1.7.7. This is due to insufficient verification on the user being supplied during a social login through the plugin. This makes it possible for unauthenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the email.</description><pubDate>Fri, 24 May 2024 03:39:21 +0000</pubDate></item><item><title>CVE-2024-5205 | Videojs HTML5 Player &amp;lt;= 1.1.11 - Authenticated (Contributor+) Stored Cross-Site Scripting via videojs_video Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5205</link><description>The Videojs HTML5 Player plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's videojs_video shortcode in all versions up to, and including, 1.1.11 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 24 May 2024 03:16:17 +0000</pubDate></item><item><title>CVE-2024-4409 | WP-ViperGB &amp;lt;= 1.6.1 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4409</link><description>The WP-ViperGB plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.6.1. This is due to missing or incorrect nonce validation when saving plugin settings. This makes it possible for unauthenticated attackers to change the plugin's settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 24 May 2024 02:35:26 +0000</pubDate></item><item><title>CVE-2024-5279 | Qiwen Netdisk File Rename cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5279</link><description>A vulnerability was found in Qiwen Netdisk up to 1.4.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the component File Rename Handler. The manipulation with the input &lt;img src="" /&gt; leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-266083.</description><pubDate>Thu, 23 May 2024 23:21:00 +0000</pubDate></item><item><title>CVE-2024-5245 | NETGEAR ProSAFE Network Management System Default Credentials Local Privilege Escalation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5245</link><description>NETGEAR ProSAFE Network Management System Default Credentials Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of NETGEAR ProSAFE Network Management System. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.

The specific flaw exists within the product installer. The issue results from the use of default MySQL credentials. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-22755.</description><pubDate>Thu, 23 May 2024 22:18:48 +0000</pubDate></item><item><title>CVE-2024-5246 | NETGEAR ProSAFE Network Management System Tomcat Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5246</link><description>NETGEAR ProSAFE Network Management System Tomcat Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of NETGEAR ProSAFE Network Management System. Authentication is required to exploit this vulnerability.

The specific flaw exists within the product installer. The issue results from the use of a vulnerable version of Apache Tomcat. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-22868.</description><pubDate>Thu, 23 May 2024 22:18:48 +0000</pubDate></item><item><title>CVE-2024-5247 | NETGEAR ProSAFE Network Management System UpLoadServlet Unrestricted File Upload Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5247</link><description>NETGEAR ProSAFE Network Management System UpLoadServlet Unrestricted File Upload Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of NETGEAR ProSAFE Network Management System. Authentication is required to exploit this vulnerability.

The specific flaw exists within the UpLoadServlet class. The issue results from the lack of proper validation of user-supplied data, which can allow the upload of arbitrary files. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-22923.</description><pubDate>Thu, 23 May 2024 22:18:49 +0000</pubDate></item><item><title>CVE-2024-5227 | TP-Link Omada ER605 PPTP VPN username Command Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5227</link><description>TP-Link Omada ER605 PPTP VPN username Command Injection Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are only vulnerable if configured to use a PPTP VPN with LDAP authentication.

The specific flaw exists within the handling of the username parameter provided to the /usr/bin/pppd endpoint. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22446.</description><pubDate>Thu, 23 May 2024 21:59:21 +0000</pubDate></item><item><title>CVE-2024-5228 | TP-Link Omada ER605  Comexe DDNS Response Handling Heap-based Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5228</link><description>TP-Link Omada ER605  Comexe DDNS Response Handling Heap-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are vulnerable only if configured to use the Comexe DDNS service.

The specific flaw exists within the handling of DNS responses. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length heap-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22383.</description><pubDate>Thu, 23 May 2024 21:59:22 +0000</pubDate></item><item><title>CVE-2024-5242 | TP-Link Omada ER605 Stack-based Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5242</link><description>TP-Link Omada ER605 Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are vulnerable only if configured to use the Comexe DDNS service.

The specific flaw exists within the handling of DDNS error codes. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22522.</description><pubDate>Thu, 23 May 2024 21:59:22 +0000</pubDate></item><item><title>CVE-2024-5243 | TP-Link Omada ER605 Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5243</link><description>TP-Link Omada ER605 Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are vulnerable only if configured to use the Comexe DDNS service.

The specific flaw exists within the handling of DNS names. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22523.</description><pubDate>Thu, 23 May 2024 21:59:22 +0000</pubDate></item><item><title>CVE-2024-5244 | TP-Link Omada ER605 Reliance on Security Through Obscurity Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5244</link><description>TP-Link Omada ER605 Reliance on Security Through Obscurity Vulnerability. This vulnerability allows network-adjacent attackers to access or spoof DDNS messages on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are vulnerable only if configured to use the Comexe DDNS service.

The specific flaw exists within the cmxddnsd executable. The issue results from reliance on obscurity to secure network data. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root. Was ZDI-CAN-22439.</description><pubDate>Thu, 23 May 2024 21:59:23 +0000</pubDate></item><item><title>CVE-2024-5291 | D-Link DIR-2150 GetDeviceSettings Target Command Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5291</link><description>D-Link DIR-2150 GetDeviceSettings Target Command Injection Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of D-Link DIR-2150 routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the SOAP API interface, which listens on TCP port 80 by default. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21235.</description><pubDate>Thu, 23 May 2024 21:39:09 +0000</pubDate></item><item><title>CVE-2024-5292 | D-Link Network Assistant Uncontrolled Search Path Element Local Privilege Escalation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5292</link><description>D-Link Network Assistant Uncontrolled Search Path Element Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of D-Link Network Assistant. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.

The specific flaw exists within the DNACore service. The service loads a file from an unsecured location. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-21426.</description><pubDate>Thu, 23 May 2024 21:39:09 +0000</pubDate></item><item><title>CVE-2024-5293 | D-Link DIR-2640 HTTP Referer Stack-Based Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5293</link><description>D-Link DIR-2640 HTTP Referer Stack-Based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of D-Link DIR-2640-US routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within prog.cgi, which handles HNAP requests made to the lighttpd webserver listening on TCP ports 80 and 443. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21853.</description><pubDate>Thu, 23 May 2024 21:39:09 +0000</pubDate></item><item><title>CVE-2024-5294 | D-Link DIR-3040 prog.cgi websSecurityHandler Memory Leak Denial-of-Service Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5294</link><description>D-Link DIR-3040 prog.cgi websSecurityHandler Memory Leak Denial-of-Service Vulnerability. This vulnerability allows network-adjacent attackers to create a denial-of-service condition on affected installations of D-Link DIR-3040 routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the prog.cgi program, which handles HNAP requests made to the lighttpd webserver listening on ports 80 and 443. The issue results from the lack of proper memory management when processing HTTP cookie values. An attacker can leverage this vulnerability to create a denial-of-service condition on the system.
. Was ZDI-CAN-21668.</description><pubDate>Thu, 23 May 2024 21:39:10 +0000</pubDate></item><item><title>CVE-2024-5295 | D-Link G416 flupl self Command Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5295</link><description>D-Link G416 flupl self Command Injection Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of D-Link G416 wireless routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the HTTP service listening on TCP port 80. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21294.</description><pubDate>Thu, 23 May 2024 21:39:10 +0000</pubDate></item><item><title>CVE-2024-5296 | D-Link D-View Use of Hard-coded Cryptographic Key Authentication Bypass Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5296</link><description>D-Link D-View Use of Hard-coded Cryptographic Key Authentication Bypass Vulnerability. This vulnerability allows remote attackers to bypass authentication on affected installations of D-Link D-View. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the TokenUtils class. The issue results from a hard-coded cryptographic key. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-21991.</description><pubDate>Thu, 23 May 2024 21:39:11 +0000</pubDate></item><item><title>CVE-2024-5297 | D-Link D-View executeWmicCmd Command Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5297</link><description>D-Link D-View executeWmicCmd Command Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of D-Link D-View. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.

The specific flaw exists within the executeWmicCmd method. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21821.</description><pubDate>Thu, 23 May 2024 21:39:11 +0000</pubDate></item><item><title>CVE-2024-5298 | D-Link D-View queryDeviceCustomMonitorResult Exposed Dangerous Method Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5298</link><description>D-Link D-View queryDeviceCustomMonitorResult Exposed Dangerous Method Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of D-Link D-View. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.

The specific flaw exists within the queryDeviceCustomMonitorResult method. The issue results from an exposed dangerous method. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21842.</description><pubDate>Thu, 23 May 2024 21:39:11 +0000</pubDate></item><item><title>CVE-2024-5299 | D-Link D-View execMonitorScript Exposed Dangerous Method Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5299</link><description>D-Link D-View execMonitorScript Exposed Dangerous Method Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of D-Link D-View. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.

The specific flaw exists within the execMonitorScript method. The issue results from an exposed dangerous method. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21828.</description><pubDate>Thu, 23 May 2024 21:39:12 +0000</pubDate></item><item><title>CVE-2024-5201 | Dimensions RM - Privilege Escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5201</link><description>Privilege Escalation in OpenText Dimensions RM allows an authenticated user to escalate there privilege to the privilege of another user via HTTP Request</description><pubDate>Thu, 23 May 2024 19:19:39 +0000</pubDate></item><item><title>CVE-2024-5202 | Dimensions RM - Arbitrary File Read</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5202</link><description>Arbitrary File Read in OpenText Dimensions RM allows authenticated users to read files stored on the server via webservices</description><pubDate>Thu, 23 May 2024 19:19:39 +0000</pubDate></item><item><title>CVE-2024-31843 | An issue was discovered in Italtel Embrace 1.6.4. The Web application does not properly check the parameters sent as input before they are p...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31843</link><description>An issue was discovered in Italtel Embrace 1.6.4. The Web application does not properly check the parameters sent as input before they are processed on the server side. This allows authenticated users to execute commands on the Operating System.</description><pubDate>Thu, 23 May 2024 19:19:40 +0000</pubDate></item><item><title>CVE-2024-35079 | An arbitrary file upload vulnerability in the uploadAudio method of inxedu v2024.4 allows attackers to execute arbitrary code via uploading ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35079</link><description>An arbitrary file upload vulnerability in the uploadAudio method of inxedu v2024.4 allows attackers to execute arbitrary code via uploading a crafted .jsp file.</description><pubDate>Thu, 23 May 2024 19:00:55 +0000</pubDate></item><item><title>CVE-2024-35080 | An arbitrary file upload vulnerability in the gok4 method of inxedu v2024.4 allows attackers to execute arbitrary code via uploading a craft...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35080</link><description>An arbitrary file upload vulnerability in the gok4 method of inxedu v2024.4 allows attackers to execute arbitrary code via uploading a crafted .jsp file.</description><pubDate>Thu, 23 May 2024 19:00:56 +0000</pubDate></item><item><title>CVE-2024-35375 | There is an arbitrary file upload vulnerability on the media add .php page in the backend of the website in version 5.7.114 of DedeCMS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35375</link><description>There is an arbitrary file upload vulnerability on the media add .php page in the backend of the website in version 5.7.114 of DedeCMS</description><pubDate>Thu, 23 May 2024 19:00:56 +0000</pubDate></item><item><title>CVE-2024-35570 | An arbitrary file upload vulnerability in the component \controller\ImageUploadController.class of inxedu v2.0.6 allows attackers to execute...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35570</link><description>An arbitrary file upload vulnerability in the component \controller\ImageUploadController.class of inxedu v2.0.6 allows attackers to execute arbitrary code via uploading a crafted jsp file.</description><pubDate>Thu, 23 May 2024 18:40:57 +0000</pubDate></item><item><title>CVE-2024-35081 | LuckyFrameWeb v3.5.2 was discovered to contain an arbitrary file deletion vulnerability via the fileName parameter in the fileDownload metho...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35081</link><description>LuckyFrameWeb v3.5.2 was discovered to contain an arbitrary file deletion vulnerability via the fileName parameter in the fileDownload method.</description><pubDate>Thu, 23 May 2024 17:22:01 +0000</pubDate></item><item><title>CVE-2024-35082 | J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysOperLogMapper.xml.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35082</link><description>J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysOperLogMapper.xml.</description><pubDate>Thu, 23 May 2024 17:22:02 +0000</pubDate></item><item><title>CVE-2024-35086 | J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in BpmTaskFromMapper.xml .</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35086</link><description>J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in BpmTaskFromMapper.xml .</description><pubDate>Thu, 23 May 2024 17:22:02 +0000</pubDate></item><item><title>CVE-2024-35091 | J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysTenantMapper.xml.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35091</link><description>J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysTenantMapper.xml.</description><pubDate>Thu, 23 May 2024 17:22:02 +0000</pubDate></item><item><title>CVE-2024-5143 | A user with device administrative privileges can change existing SMTP server settings on the device, without having to re-enter SMTP server ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5143</link><description>A user with device administrative privileges can change existing SMTP server settings on the device, without having to re-enter SMTP server credentials.  By redirecting send-to-email traffic to the new server, the original SMTP server credentials may potentially be exposed.</description><pubDate>Thu, 23 May 2024 17:22:03 +0000</pubDate></item><item><title>CVE-2024-2301 | Certain HP LaserJet Pro devices are potentially vulnerable to a Cross-Site Scripting (XSS) attack via the web management interface of the de...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2301</link><description>Certain HP LaserJet Pro devices are potentially vulnerable to a Cross-Site Scripting (XSS) attack via the web management interface of the device.</description><pubDate>Thu, 23 May 2024 17:01:01 +0000</pubDate></item><item><title>CVE-2024-35084 | J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysMsgPushMapper.xml.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35084</link><description>J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysMsgPushMapper.xml.</description><pubDate>Thu, 23 May 2024 17:01:02 +0000</pubDate></item><item><title>CVE-2024-35085 | J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in ProcessDefinitionMapper.xml.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35085</link><description>J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in ProcessDefinitionMapper.xml.</description><pubDate>Thu, 23 May 2024 17:01:02 +0000</pubDate></item><item><title>CVE-2024-35090 | J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysUreportFileMapper.xml.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35090</link><description>J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysUreportFileMapper.xml.</description><pubDate>Thu, 23 May 2024 17:01:02 +0000</pubDate></item><item><title>CVE-2024-35083 | J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysLoginInfoMapper.xml.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35083</link><description>J2EEFAST v2.7.0 was discovered to contain a SQL injection vulnerability via the findPage function in SysLoginInfoMapper.xml.</description><pubDate>Thu, 23 May 2024 17:01:03 +0000</pubDate></item><item><title>CVE-2024-34931 | A SQL injection vulnerability in /model/update_subject.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34931</link><description>A SQL injection vulnerability in /model/update_subject.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the name parameter.</description><pubDate>Thu, 23 May 2024 16:41:03 +0000</pubDate></item><item><title>CVE-2024-34932 | A SQL injection vulnerability in /model/update_exam.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34932</link><description>A SQL injection vulnerability in /model/update_exam.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the name parameter.</description><pubDate>Thu, 23 May 2024 16:41:03 +0000</pubDate></item><item><title>CVE-2024-34933 | A SQL injection vulnerability in /model/update_grade.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34933</link><description>A SQL injection vulnerability in /model/update_grade.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the admission_fee parameter.</description><pubDate>Thu, 23 May 2024 16:41:03 +0000</pubDate></item><item><title>CVE-2024-34934 | A SQL injection vulnerability in /view/emarks_range_grade_update_form.php in Campcodes Complete Web-Based School Management System 1.0 allow...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34934</link><description>A SQL injection vulnerability in /view/emarks_range_grade_update_form.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the conversation_id parameter.</description><pubDate>Thu, 23 May 2024 16:41:04 +0000</pubDate></item><item><title>CVE-2024-34935 | A SQL injection vulnerability in /view/conversation_history_admin.php in Campcodes Complete Web-Based School Management System 1.0 allows an...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34935</link><description>A SQL injection vulnerability in /view/conversation_history_admin.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the conversation_id parameter.</description><pubDate>Thu, 23 May 2024 16:41:04 +0000</pubDate></item><item><title>CVE-2024-34936 | A SQL injection vulnerability in /view/event1.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34936</link><description>A SQL injection vulnerability in /view/event1.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the month parameter.</description><pubDate>Thu, 23 May 2024 16:41:04 +0000</pubDate></item><item><title>CVE-2024-4365 | Advanced iFrame &amp;lt;= 2024.3 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4365</link><description>The Advanced iFrame plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘add_iframe_url_as_param_direct’ parameter in versions up to, and including, 2024.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 16:41:05 +0000</pubDate></item><item><title>CVE-2024-34927 | A SQL injection vulnerability in /model/update_classroom.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34927</link><description>A SQL injection vulnerability in /model/update_classroom.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the name parameter.</description><pubDate>Thu, 23 May 2024 16:41:06 +0000</pubDate></item><item><title>CVE-2024-34928 | A SQL injection vulnerability in /model/update_subject_routing.php in Campcodes Complete Web-Based School Management System 1.0 allows an at...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34928</link><description>A SQL injection vulnerability in /model/update_subject_routing.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the grade parameter.</description><pubDate>Thu, 23 May 2024 16:41:06 +0000</pubDate></item><item><title>CVE-2024-34929 | A SQL injection vulnerability in /view/find_friends.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34929</link><description>A SQL injection vulnerability in /view/find_friends.php in Campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the my_index parameter.</description><pubDate>Thu, 23 May 2024 16:41:06 +0000</pubDate></item><item><title>CVE-2024-34930 | A SQL injection vulnerability in /model/all_events1.php in Campcodes Complete Web-Based School Management System 1.0 allows attacker to exec...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34930</link><description>A SQL injection vulnerability in /model/all_events1.php in Campcodes Complete Web-Based School Management System 1.0 allows attacker to execute arbitrary SQL commands via the month parameter.</description><pubDate>Thu, 23 May 2024 16:41:07 +0000</pubDate></item><item><title>CVE-2024-5084 | Hash Form – Drag &amp;amp; Drop Form Builder &amp;lt;= 1.1.0 - Unauthenticated Arbitrary File Upload to Remote Code Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5084</link><description>The Hash Form – Drag &amp; Drop Form Builder plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the 'file_upload_action' function in all versions up to, and including, 1.1.0. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Thu, 23 May 2024 14:36:22 +0000</pubDate></item><item><title>CVE-2024-5085 | Hash Form – Drag &amp;amp; Drop Form Builder &amp;lt;= 1.1.0 - Unauthenticated PHP Object Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5085</link><description>The Hash Form – Drag &amp; Drop Form Builder plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.1.0 via deserialization of untrusted input in the 'process_entry' function. This makes it possible for unauthenticated attackers to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.</description><pubDate>Thu, 23 May 2024 14:36:22 +0000</pubDate></item><item><title>CVE-2024-35222 | iFrames Bypass Origin Checks for Tauri API Access Control</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35222</link><description>Tauri is a framework for building binaries for all major desktop platforms. Remote origin iFrames in Tauri applications can access the Tauri IPC endpoints without being explicitly allowed in the `dangerousRemoteDomainIpcAccess` in v1 and in the `capabilities` in v2. Valid commands with potentially unwanted consequences ("delete project", "transfer credits", etc.) could be invoked by an attacker that controls the content of an iframe running inside a Tauri app. This vulnerability has been patched in versions 1.6.7 and 2.0.0-beta.19.</description><pubDate>Thu, 23 May 2024 13:32:47 +0000</pubDate></item><item><title>CVE-2024-5168 | Improper access control vulnerability in Prodys Quantum Audio codec</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5168</link><description>Improper access control vulnerability in Prodys' Quantum Audio codec affecting versions 2.3.4t and below. This vulnerability could allow an unauthenticated user to bypass authentication entirely and execute arbitrary API requests against the web application.</description><pubDate>Thu, 23 May 2024 13:22:22 +0000</pubDate></item><item><title>CVE-2024-35224 | Stored Cross-Site Scripting (XSS) in OpenProject</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35224</link><description>OpenProject is the leading open source project management software. OpenProject utilizes `tablesorter` inside of the Cost Report feature. This dependency, when misconfigured, can lead to Stored XSS via `{icon}` substitution in table header values. This attack requires the permissions "Edit work packages" as well as "Add attachments". A project admin could attempt to escalate their privileges by sending this XSS to a System Admin. Otherwise, if a full System Admin is required, then this attack is significantly less impactful. By utilizing a ticket's attachment, you can store javascript in the application itself and bypass the application's CSP policy to achieve Stored XSS. This vulnerability has been patched in version(s) 14.1.0, 14.0.2 and 13.4.2.</description><pubDate>Thu, 23 May 2024 13:00:11 +0000</pubDate></item><item><title>CVE-2024-1803 | EmbedPress – Embed PDF, Google Docs, Vimeo, Wistia, Embed YouTube Videos, Audios, Maps &amp;amp; Embed Any Documents in Gutenberg &amp;amp; Elementor &amp;lt;= 3.9.12 - Insufficient Authorization Checks to Block Usual</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1803</link><description>The EmbedPress – Embed PDF, Google Docs, Vimeo, Wistia, Embed YouTube Videos, Audios, Maps &amp; Embed Any Documents in Gutenberg &amp; Elementor plugin for WordPress is vulnerable to unauthorized access of functionality due to insufficient authorization validation on the PDF embed block in all versions up to, and including, 3.9.12. This makes it possible for authenticated attackers, with contributor-level access and above, to embed PDF blocks.</description><pubDate>Thu, 23 May 2024 13:00:12 +0000</pubDate></item><item><title>CVE-2024-4471 | 140+ Widgets | Best Addons For Elementor – FREE &amp;lt;= 1.4.3.1 - Authenticated (Contributor+) PHP Object Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4471</link><description>The 140+ Widgets | Best Addons For Elementor – FREE for WordPress is vulnerable to PHP Object Injection in versions up to, and including, 1.4.3.1 via deserialization of untrusted input in the 'export_content' function. This allows authenticated attackers, with contributor-level permissions and above, to inject a PHP Object. No POP chain is present in the vulnerable plugin. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.
Thanks,
Francesco</description><pubDate>Thu, 23 May 2024 13:00:12 +0000</pubDate></item><item><title>CVE-2024-35197 | gix refs and paths with reserved Windows device names access the devices</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35197</link><description>gitoxide is a pure Rust implementation of Git. On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances. If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact. A minor degradation in availability may also be possible, such as with a very large file named `CON`, though the user could interrupt the application.</description><pubDate>Thu, 23 May 2024 12:44:47 +0000</pubDate></item><item><title>CVE-2024-34060 | Arbitrary File Write in IRIS EVTX Pipeline</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34060</link><description>IrisEVTXModule is an interface module for Evtx2Splunk and Iris in order to ingest Microsoft EVTX log files. The `iris-evtx-module` is a pipeline plugin of `iris-web` that processes EVTX files through IRIS web application. During the upload of an EVTX through this pipeline, the filename is not safely handled and may cause an Arbitrary File Write. This can lead to a remote code execution (RCE) when combined with a Server Side Template Injection (SSTI). This vulnerability has been patched in version 1.0.0.</description><pubDate>Thu, 23 May 2024 12:14:25 +0000</pubDate></item><item><title>CVE-2024-28188 | jupyter-scheduler&amp;#x27;s endpoint is missing authentication</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28188</link><description>Jupyter Scheduler is collection of extensions for programming jobs to run now or run on a schedule. The list of conda environments of `jupyter-scheduler` users maybe be exposed, potentially revealing information about projects that a specific user may be working on. This vulnerability has been patched in version(s) 1.1.6, 1.2.1, 1.8.2 and 2.5.2.</description><pubDate>Thu, 23 May 2024 12:14:26 +0000</pubDate></item><item><title>CVE-2024-26139 | OpenCTI Authenticated Privilege Escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26139</link><description>OpenCTI is an open source platform allowing organizations to manage their cyber threat intelligence knowledge and observables. Due to lack of certain security controls on the profile edit functionality, an authenticated attacker with low privileges can gain administrative privileges on the web application.</description><pubDate>Thu, 23 May 2024 11:52:35 +0000</pubDate></item><item><title>CVE-2023-6502 | Uncontrolled Resource Consumption in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6502</link><description>A Denial of Service (DoS) condition has been discovered in GitLab CE/EE affecting all versions before 16.10.6, version 16.11 before 16.11.3, and 17.0 before 17.0.1. It is possible for an attacker to cause a denial of service using a crafted wiki page.</description><pubDate>Thu, 23 May 2024 11:22:44 +0000</pubDate></item><item><title>CVE-2023-7045 | Cross-Site Request Forgery (CSRF) in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7045</link><description>A CSRF vulnerability exists within GitLab CE/EE from versions 13.11 before 16.10.6, from 16.11 before 16.11.3, from 17.0 before 17.0.1. By leveraging this vulnerability, an attacker could exfiltrate anti-CSRF tokens via the Kubernetes Agent Server (KAS).</description><pubDate>Thu, 23 May 2024 11:22:44 +0000</pubDate></item><item><title>CVE-2024-1814 | Spectra – WordPress Gutenberg Blocks &amp;lt;= 2.12.8 - Authenticated (Contributor+) Stored Cross-Site Scripting via Testimonial Block</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1814</link><description>The Spectra – WordPress Gutenberg Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Testimonial block in all versions up to, and including, 2.12.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 11:22:44 +0000</pubDate></item><item><title>CVE-2024-1815 | Spectra – WordPress Gutenberg Blocks &amp;lt;= 2.12.8 - Authenticated (Contributor+) Stored Cross-Site Scripting via Image Gallery Block</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1815</link><description>The Spectra – WordPress Gutenberg Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Image Gallery block in all versions up to, and including, 2.12.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 11:22:45 +0000</pubDate></item><item><title>CVE-2024-1947 | Uncontrolled Resource Consumption in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1947</link><description>A denial of service (DoS) condition was discovered in GitLab CE/EE affecting all versions from 13.2.4 before 16.10.6, 16.11 before 16.11.3, and 17.0 before 17.0.1. By leveraging this vulnerability an attacker could create a DoS condition by sending crafted API calls.</description><pubDate>Thu, 23 May 2024 11:22:45 +0000</pubDate></item><item><title>CVE-2024-3997 | Prime Slider – Addons For Elementor (Revolution of a slider, Hero Slider, Ecommerce Slider) &amp;lt;= 3.14.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Pagepiling Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3997</link><description>The Prime Slider – Addons For Elementor (Revolution of a slider, Hero Slider, Ecommerce Slider) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Pagepiling widget in all versions up to, and including, 3.14.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 11:22:46 +0000</pubDate></item><item><title>CVE-2024-4378 | Premium Addons for Elementor &amp;lt;= 4.10.31 - Authenticated (Contributor+) Stored Cross-Site Scripting via Menu and Shape Divider</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4378</link><description>The Premium Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's menu and shape widgets in all versions up to, and including, 4.10.30 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 11:22:46 +0000</pubDate></item><item><title>CVE-2024-4575 | LayerSlider 7.11.0 - Authenticated (Contributor+) Stored Cross-Site Scripting via ls_search_form Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4575</link><description>The LayerSlider plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's ls_search_form shortcode in version 7.11.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 11:22:46 +0000</pubDate></item><item><title>CVE-2024-5258 | Authorization Bypass Through User-Controlled Key in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5258</link><description>An authorization vulnerability exists within GitLab from versions 16.10 before 16.10.6, 16.11 before 16.11.3, and 17.0 before 17.0.1 where an authenticated attacker could utilize a crafted naming convention to bypass pipeline authorization logic.</description><pubDate>Thu, 23 May 2024 11:22:47 +0000</pubDate></item><item><title>CVE-2024-5165 | Eclipse Ditto User Interface vulnerable to XSS due to Improper Neutralization of Input</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5165</link><description>In Eclipse Ditto versions 3.0.0 to 3.5.5, the user input of several input fields of the Eclipse  Ditto Explorer User Interface https://eclipse.dev/ditto/user-interface.html  was not properly neutralized and thus vulnerable to both Reflected and Stored XSS (Cross Site Scripting).





Several inputs were not persisted at the backend of Eclipse Ditto, but only in local browser storage to save settings of "environments" of the UI and e.g. the last performed "search queries", resulting in a "Reflected XSS" vulnerability.




However, several other inputs were persisted at the backend of Eclipse Ditto, leading to a "Stored XSS" vulnerability. Those mean that authenticated and authorized users at Eclipse Ditto can persist Things in Ditto which can - when being displayed by other users also being authorized to see those Things in the Eclipse Ditto UI - cause scripts to be executed in the browser of other users.</description><pubDate>Thu, 23 May 2024 10:18:07 +0000</pubDate></item><item><title>CVE-2024-2861 | ProfilePress &amp;lt;= 4.15.8 - Authenticated (Contributor+) Stored Cross-Site Scripting via ProfilePress User Panel Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2861</link><description>The ProfilePress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ProfilePress User Panel widget in all versions up to, and including, 4.15.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 09:36:54 +0000</pubDate></item><item><title>CVE-2024-4779 | Unlimited Elements for Elementor &amp;lt;= 1.5.107 - Authenticated (Contributor+) SQL Injection via data[post_ids][0]</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4779</link><description>The Unlimited Elements For Elementor (Free Widgets, Addons, Templates) plugin for WordPress is vulnerable to SQL Injection via the ‘data[post_ids][0]’ parameter in all versions up to, and including, 1.5.107 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Thu, 23 May 2024 09:36:54 +0000</pubDate></item><item><title>CVE-2024-35186 | gix traversal outside working tree enables arbitrary code execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35186</link><description>gitoxide is a pure Rust implementation of Git. During checkout, `gix-worktree-state` does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application. This vulnerability leads to a major loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well. This vulnerability has been patched in version(s) 0.36.0.</description><pubDate>Thu, 23 May 2024 09:11:50 +0000</pubDate></item><item><title>CVE-2024-35223 | Dapr API Token Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35223</link><description>Dapr is a portable, event-driven, runtime for building distributed applications across cloud and edge. Dapr sends the app token of the invoker app instead of the app token of the invoked app. This causes of a leak of the application token of the invoker app to the invoked app when using Dapr as a gRPC proxy for remote service invocation. This vulnerability impacts Dapr users who use Dapr as a gRPC proxy for remote service invocation as well as the Dapr App API token functionality. An attacker could exploit this vulnerability to gain access to the app token of the invoker app, potentially compromising security and authentication mechanisms. This vulnerability was patched in version 1.13.3.</description><pubDate>Thu, 23 May 2024 09:11:51 +0000</pubDate></item><item><title>CVE-2024-5264 | Network Key Transfer with AES KHT vulnerability in Luna EFT</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5264</link><description>Network Transfer with AES KHT in Thales Luna EFT 2.1 and above allows a user with administrative console access to access backups taken via offline analysis</description><pubDate>Thu, 23 May 2024 08:53:22 +0000</pubDate></item><item><title>CVE-2024-30279 | ZDI-CAN-22887: Adobe Acrobat Reader DC JPEG2000 File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30279</link><description>Acrobat Reader versions 20.005.30574, 24.002.20736 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.</description><pubDate>Thu, 23 May 2024 08:33:24 +0000</pubDate></item><item><title>CVE-2024-30280 | ZDI-CAN-22867: Adobe Acrobat Pro DC AcroForm Annotation Out-Of-Bounds Read Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30280</link><description>Acrobat Reader versions 20.005.30574, 24.002.20736 and earlier are affected by an out-of-bounds read vulnerability when parsing a crafted file, which could result in a read past the end of an allocated memory structure. An attacker could leverage this vulnerability to execute code in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.</description><pubDate>Thu, 23 May 2024 08:33:24 +0000</pubDate></item><item><title>CVE-2024-32969 | vantage6 collaboration admins can extend their influence by expanding the collaboration</title><link>https://www.cve.org/CVERecord?id=CVE-2024-32969</link><description>vantage6 is an open-source infrastructure for privacy preserving analysis. Collaboration administrators can add extra organizations to their collaboration that can extend their influence. For example, organizations that they include can then create new users for which they know the passwords, and use that to read task results of other collaborations that that organization is involved in.  This is only relatively trusted users - with access to manage a collaboration - are able to do this, which reduces the impact. This vulnerability was patched in version 4.5.0rc3.</description><pubDate>Thu, 23 May 2024 08:33:25 +0000</pubDate></item><item><title>CVE-2024-4706 | WordPress + Microsoft Office 365 / Azure AD | LOGIN &amp;lt;= 27.2 - Authenticated (Contributor+) Stored Cross-Site Scripting via pintra Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4706</link><description>The WordPress + Microsoft Office 365 / Azure AD | LOGIN plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'pintra' shortcode in all versions up to, and including, 27.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 07:38:42 +0000</pubDate></item><item><title>CVE-2024-2874 | Uncontrolled Resource Consumption in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2874</link><description>An issue has been discovered in GitLab CE/EE affecting all versions before 16.10.6, version 16.11 before 16.11.3, and 17.0 before 17.0.1. A runner registered with a crafted description has the potential to disrupt the loading of targeted GitLab web resources.</description><pubDate>Thu, 23 May 2024 07:19:20 +0000</pubDate></item><item><title>CVE-2024-36011 | Bluetooth: HCI: Fix potential null-ptr-deref</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36011</link><description>In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: HCI: Fix potential null-ptr-deref

Fix potential null-ptr-deref in hci_le_big_sync_established_evt().</description><pubDate>Thu, 23 May 2024 07:19:20 +0000</pubDate></item><item><title>CVE-2024-36012 | Bluetooth: msft: fix slab-use-after-free in msft_do_close()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36012</link><description>In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: msft: fix slab-use-after-free in msft_do_close()

Tying the msft-&gt;data lifetime to hdev by freeing it in
hci_release_dev() to fix the following case:

[use]
msft_do_close()
  msft = hdev-&gt;msft_data;
  if (!msft)                      ...(1) &lt;- passed.
    return;
  mutex_lock(&amp;amp;msft-&gt;filter_lock); ...(4) &lt;- used after freed.

[free]
msft_unregister()
  msft = hdev-&gt;msft_data;
  hdev-&gt;msft_data = NULL;         ...(2)
  kfree(msft);                    ...(3) &lt;- msft is freed.

==================================================================
BUG: KASAN: slab-use-after-free in __mutex_lock_common
kernel/locking/mutex.c:587 [inline]
BUG: KASAN: slab-use-after-free in __mutex_lock+0x8f/0xc30
kernel/locking/mutex.c:752
Read of size 8 at addr ffff888106cbbca8 by task kworker/u5:2/309</description><pubDate>Thu, 23 May 2024 07:19:21 +0000</pubDate></item><item><title>CVE-2024-36013 | Bluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36013</link><description>In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()

Extend a critical section to prevent chan from early freeing.
Also make the l2cap_connect() return type void. Nothing is using the
returned value but it is ugly to return a potentially freed pointer.
Making it void will help with backports because earlier kernels did use
the return value. Now the compile will break for kernels where this
patch is not a complete fix.

Call stack summary:

[use]
l2cap_bredr_sig_cmd
  l2cap_connect
  ┌ mutex_lock(&amp;amp;conn-&gt;chan_lock);
  │ chan = pchan-&gt;ops-&gt;new_connection(pchan); &lt;- alloc chan
  │ __l2cap_chan_add(conn, chan);
  │   l2cap_chan_hold(chan);
  │   list_add(&amp;amp;chan-&gt;list, &amp;amp;conn-&gt;chan_l);   ... (1)
  └ mutex_unlock(&amp;amp;conn-&gt;chan_lock);
    chan-&gt;conf_state              ... (4) &lt;- use after free

[free]
l2cap_conn_del
┌ mutex_lock(&amp;amp;conn-&gt;chan_lock);
│ foreach chan in conn-&gt;chan_l:            ... (2)
│   l2cap_chan_put(chan);
│     l2cap_chan_destroy
│       kfree(chan)               ... (3) &lt;- chan freed
└ mutex_unlock(&amp;amp;conn-&gt;chan_lock);

==================================================================
BUG: KASAN: slab-use-after-free in instrument_atomic_read
include/linux/instrumented.h:68 [inline]
BUG: KASAN: slab-use-after-free in _test_bit
include/asm-generic/bitops/instrumented-non-atomic.h:141 [inline]
BUG: KASAN: slab-use-after-free in l2cap_connect+0xa67/0x11a0
net/bluetooth/l2cap_core.c:4260
Read of size 8 at addr ffff88810bf040a0 by task kworker/u3:1/311</description><pubDate>Thu, 23 May 2024 07:19:21 +0000</pubDate></item><item><title>CVE-2024-5241 | Huashi Private Cloud CDN Live Streaming Acceleration Server ipconfig_new.php os command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5241</link><description>A vulnerability was found in Huashi Private Cloud CDN Live Streaming Acceleration Server up to 20240520. It has been classified as critical. Affected is an unknown function of the file /manager/ipconfig_new.php. The manipulation of the argument dev leads to os command injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265992.</description><pubDate>Thu, 23 May 2024 07:01:47 +0000</pubDate></item><item><title>CVE-2024-2038 | Visual Website Collaboration, Feedback &amp;amp; Project Management – Atarim &amp;lt;= 3.22.6 - Hardcoded Credentials</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2038</link><description>The Visual Website Collaboration, Feedback &amp; Project Management – Atarim plugin for WordPress is vulnerable to unauthorized access in all versions up to, and including, 3.22.6. This is due to the use of hardcoded credentials to authenticate all the incoming API requests. This makes it possible for unauthenticated attackers to modify plugin settings, delete posts, modify post titles, and upload images.</description><pubDate>Thu, 23 May 2024 06:51:35 +0000</pubDate></item><item><title>CVE-2024-3648 | ShareThis Share Buttons &amp;lt;= 2.3.0 - Authenticated (Contributor+) Stored Cross-Site Scripting via sharethis-inline-buttons Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3648</link><description>The ShareThis Share Buttons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'sharethis-inline-button' shortcode in all versions up to, and including, 2.3.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 06:51:35 +0000</pubDate></item><item><title>CVE-2024-4043 | WP Ultimate Post Grid &amp;lt;= 3.9.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via wpupg-text Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4043</link><description>The WP Ultimate Post Grid plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'wpupg-text' shortcode in all versions up to, and including, 3.9.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 06:51:36 +0000</pubDate></item><item><title>CVE-2024-4835 | Improper Neutralization of Input During Web Page Generation (&amp;#x27;Cross-site Scripting&amp;#x27;) in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4835</link><description>A XSS condition exists within GitLab in versions 15.11 before 16.10.6, 16.11 before 16.11.3, and 17.0 before 17.0.1. By leveraging this condition, an attacker can craft a malicious page to exfiltrate sensitive user information.</description><pubDate>Thu, 23 May 2024 06:41:45 +0000</pubDate></item><item><title>CVE-2024-5240 | Campcodes Complete Web-Based School Management System unread_msg.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5240</link><description>A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0 and classified as critical. This issue affects some unknown processing of the file /view/unread_msg.php. The manipulation of the argument my_index leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265991.</description><pubDate>Thu, 23 May 2024 06:41:46 +0000</pubDate></item><item><title>CVE-2024-2220 | Button contact VR &amp;lt;= 4.7 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2220</link><description>The Button contact VR WordPress plugin through 4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Thu, 23 May 2024 06:29:10 +0000</pubDate></item><item><title>CVE-2024-3594 | IDonate &amp;lt;= 1.9.0 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3594</link><description>The IDonate  WordPress plugin through 1.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Thu, 23 May 2024 06:29:11 +0000</pubDate></item><item><title>CVE-2024-3917 | Pet Manager &amp;lt;= 1.4 - Reflected XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3917</link><description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description><pubDate>Thu, 23 May 2024 06:29:11 +0000</pubDate></item><item><title>CVE-2024-3918 | Pet Manager &amp;lt;= 1.4 - Contributor+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3918</link><description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape some of its Pet settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks.</description><pubDate>Thu, 23 May 2024 06:29:11 +0000</pubDate></item><item><title>CVE-2024-3920 | Flattr &amp;lt;= 1.2.2 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3920</link><description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Thu, 23 May 2024 06:29:12 +0000</pubDate></item><item><title>CVE-2024-4388 | CAS &amp;lt;= 1.0.0 - Unauthenticated Arbitrary File Access</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4388</link><description>This  does not validate a path generated with user input when downloading files, allowing unauthenticated user to download arbitrary files from the server</description><pubDate>Thu, 23 May 2024 06:29:12 +0000</pubDate></item><item><title>CVE-2024-4399 | CAS &amp;lt;= 1.0.0 - Unauthenticated SSRF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4399</link><description>The  does not validate a parameter before making a request to it, which could allow unauthenticated users to perform SSRF attack</description><pubDate>Thu, 23 May 2024 06:29:12 +0000</pubDate></item><item><title>CVE-2024-5239 | Campcodes Complete Web-Based School Management System timetable_update_form.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5239</link><description>A vulnerability has been found in Campcodes Complete Web-Based School Management System 1.0 and classified as critical. This vulnerability affects unknown code of the file /view/timetable_update_form.php. The manipulation of the argument grade leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-265990 is the identifier assigned to this vulnerability.</description><pubDate>Thu, 23 May 2024 06:29:13 +0000</pubDate></item><item><title>CVE-2024-3626 | Email Subscribers by Icegram Express – Email Marketing, Newsletters, Automation for WordPress &amp;amp; WooCommerce &amp;lt;= 5.7.17 - Missing Authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3626</link><description>The Email Subscribers by Icegram Express – Email Marketing, Newsletters, Automation for WordPress &amp; WooCommerce plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the get_template_content function in all versions up to, and including, 5.7.17. This makes it possible for authenticated attackers, with subscriber access and above, to obtain the contents of private and password-protected posts.</description><pubDate>Thu, 23 May 2024 05:40:40 +0000</pubDate></item><item><title>CVE-2024-3711 | Brizy – Page Builder &amp;lt;= 2.4.43 - Missing Authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3711</link><description>The Brizy – Page Builder plugin for WordPress is vulnerable to unauthorized plugin setting update due to a missing capability check on the functions action_request_disable, action_change_template, and action_request_enable in all versions up to, and including, 2.4.43. This makes it possible for authenticated attackers, with contributor access or above, to enable/disable the Brizy editor and modify the template used.</description><pubDate>Thu, 23 May 2024 05:40:40 +0000</pubDate></item><item><title>CVE-2024-4347 | WP Fastest Cache &amp;lt;= 1.2.6 - Authenticated (Administrator+) Arbitrary File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4347</link><description>The WP Fastest Cache plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 1.2.6 via the specificDeleteCache function. This makes it possible for authenticated attackers to delete arbitrary files on the server, which can include wp-config.php files of the affected site or other sites in a shared hosting environment.</description><pubDate>Thu, 23 May 2024 05:40:41 +0000</pubDate></item><item><title>CVE-2024-5177 | Hash Elements &amp;lt;= 1.3.8 - Authenticated (Contributor+) Stored Cross-Site Scripting via url Parameter in Multiple Widgets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5177</link><description>The Hash Elements plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'url' parameter within multiple widgets in all versions up to, and including, 1.3.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 05:40:41 +0000</pubDate></item><item><title>CVE-2024-5237 | Campcodes Complete Web-Based School Management System timetable_grade_wise.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5237</link><description>A vulnerability, which was classified as critical, has been found in Campcodes Complete Web-Based School Management System 1.0. Affected by this issue is some unknown functionality of the file /view/timetable_grade_wise.php. The manipulation of the argument grade leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265988.</description><pubDate>Thu, 23 May 2024 05:40:41 +0000</pubDate></item><item><title>CVE-2024-5238 | Campcodes Complete Web-Based School Management System timetable_insert_form.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5238</link><description>A vulnerability, which was classified as critical, was found in Campcodes Complete Web-Based School Management System 1.0. This affects an unknown part of the file /view/timetable_insert_form.php. The manipulation of the argument grade leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265989 was assigned to this vulnerability.</description><pubDate>Thu, 23 May 2024 05:40:42 +0000</pubDate></item><item><title>CVE-2024-5235 | Campcodes Complete Web-Based School Management System teacher_salary_invoice.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5235</link><description>A vulnerability classified as critical has been found in Campcodes Complete Web-Based School Management System 1.0. Affected is an unknown function of the file /view/teacher_salary_invoice.php. The manipulation of the argument teacher_id leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-265986 is the identifier assigned to this vulnerability.</description><pubDate>Thu, 23 May 2024 05:13:40 +0000</pubDate></item><item><title>CVE-2024-5236 | Campcodes Complete Web-Based School Management System teacher_salary_invoice1.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5236</link><description>A vulnerability classified as critical was found in Campcodes Complete Web-Based School Management System 1.0. Affected by this vulnerability is an unknown functionality of the file /view/teacher_salary_invoice1.php. The manipulation of the argument date leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265987.</description><pubDate>Thu, 23 May 2024 05:13:40 +0000</pubDate></item><item><title>CVE-2023-6325 | RomethemeForm For Elementor &amp;lt;= 1.1.5 - Missing Authorization via export_entries, rtformnewform, and rtformupdate</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6325</link><description>The RomethemeForm For Elementor plugin for WordPress is vulnerable to unauthorized access and modification of data due to a missing capability check on the export_entries, rtformnewform, and rtformupdate functions in all versions up to, and including, 1.1.5. This makes it possible for unauthenticated attackers to export arbitrary form submissions, create new forms, or update any post title or certain metadata.</description><pubDate>Thu, 23 May 2024 04:44:48 +0000</pubDate></item><item><title>CVE-2024-4662 | Oxygen Builder &amp;lt;= 4.8.2 - Authenticated (Contributor+) Remote Code Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4662</link><description>The Oxygen Builder plugin for WordPress is vulnerable to Remote Code Execution in all versions up to, and including, 4.8.2 via post metadata. This is due to the plugin storing custom data in post metadata without an underscore prefix. This makes it possible for lower privileged users, such as contributors, to inject arbitrary PHP code via the WordPress user interface and gain elevated privileges.</description><pubDate>Thu, 23 May 2024 04:44:48 +0000</pubDate></item><item><title>CVE-2024-5233 | Campcodes Complete Web-Based School Management System teacher_salary_details3.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5233</link><description>A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file /view/teacher_salary_details3.php. The manipulation of the argument index leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265984.</description><pubDate>Thu, 23 May 2024 04:44:49 +0000</pubDate></item><item><title>CVE-2024-5234 | Campcodes Complete Web-Based School Management System teacher_salary_history1.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5234</link><description>A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file /view/teacher_salary_history1.php. The manipulation of the argument index leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265985 was assigned to this vulnerability.</description><pubDate>Thu, 23 May 2024 04:44:49 +0000</pubDate></item><item><title>CVE-2024-4431 | LA-Studio Element Kit for Elementor &amp;lt;= 1.3.7.6 - Authenticated (Contributor+) Stored Cross-Site Scripting via id Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4431</link><description>The LA-Studio Element Kit for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘id’ parameter in all versions up to, and including, 1.3.7.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 03:39:18 +0000</pubDate></item><item><title>CVE-2024-5232 | Campcodes Complete Web-Based School Management System teacher_salary_details2.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5232</link><description>A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been classified as critical. This affects an unknown part of the file /view/teacher_salary_details2.php. The manipulation of the argument index leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265983.</description><pubDate>Thu, 23 May 2024 03:39:18 +0000</pubDate></item><item><title>CVE-2024-5231 | Campcodes Complete Web-Based School Management System teacher_salary_details.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5231</link><description>A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file /view/teacher_salary_details.php. The manipulation of the argument index leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-265982 is the identifier assigned to this vulnerability.</description><pubDate>Thu, 23 May 2024 03:14:11 +0000</pubDate></item><item><title>CVE-2024-4895 | wpDataTables – WordPress Data Table, Dynamic Tables &amp;amp; Table Charts Plugin &amp;lt;= 3.4.2.12 - Unauthenticated Stored Cross-Site Scripting via CSV Import</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4895</link><description>The wpDataTables – WordPress Data Table, Dynamic Tables &amp; Table Charts Plugin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the CSV import functionality in all versions up to, and including, 3.4.2.12 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 02:45:33 +0000</pubDate></item><item><title>CVE-2023-6844 | iframe &amp;lt;= 5.0 - Authenticated(Contributor+) Stored Cross-Site Scripting via shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6844</link><description>The iframe plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcode(s) in all versions up to and including 5.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 02:34:04 +0000</pubDate></item><item><title>CVE-2024-1855 | WPCafe &amp;lt;= 2.2.23 - Unauthenticated Blind Server-Side Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1855</link><description>The WPCafe – Restaurant Menu, Online Ordering for WooCommerce, Pickup / Delivery and Table Reservation plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 2.2.23 via the wpc_check_for_submission function. This makes it possible for unauthenticated attackers to make web requests to arbitrary locations originating from the web application.</description><pubDate>Thu, 23 May 2024 02:34:04 +0000</pubDate></item><item><title>CVE-2024-3065 | PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode &amp;lt;= 1.7 -  Authenticated (Admin+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3065</link><description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to, and including, 1.7 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Thu, 23 May 2024 02:34:05 +0000</pubDate></item><item><title>CVE-2024-3201 | WP DSGVO Tools (GDPR) &amp;lt;= 3.1.32 - Authenticated (Contributor+) Stored Cross-Site Scripting via Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3201</link><description>The WP DSGVO Tools (GDPR) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'pp_link' shortcode in all versions up to, and including, 3.1.32 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 02:34:05 +0000</pubDate></item><item><title>CVE-2024-4486 | Awesome Contact Form7 for Elementor &amp;lt;= 2.9 - Authenticated (Contributor+) Stored Cross-Site Scripting via AEP Contact Form 7 Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4486</link><description>The Awesome Contact Form7 for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'AEP Contact Form 7' widget in all versions up to, and including, 2.9 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 02:34:06 +0000</pubDate></item><item><title>CVE-2024-4783 | jQuery T(-) Countdown Widget &amp;lt;= 2.3.25 - Authenticated (Contributor+) Stored Cross-Site Scripting via tminus Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4783</link><description>The jQuery T(-) Countdown Widget plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's tminus shortcode in all versions up to, and including, 2.3.25 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 23 May 2024 02:34:06 +0000</pubDate></item><item><title>CVE-2024-4978 | Malicious Code in Justice AV Solutions (JAVS) Viewer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4978</link><description>Justice AV Solutions Viewer Setup 8.3.7.250-1 contains a malicious binary when executed and is signed with an unexpected authenticode signature. A remote, privileged threat actor may exploit this vulnerability to execute of unauthorized PowerShell commands.</description><pubDate>Thu, 23 May 2024 02:34:06 +0000</pubDate></item><item><title>CVE-2024-5230 | EnvaySoft FleetCart information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5230</link><description>A vulnerability has been found in EnvaySoft FleetCart up to 4.1.1 and classified as problematic. Affected by this vulnerability is an unknown functionality. The manipulation of the argument razorpayKeyId leads to information disclosure. The attack can be launched remotely. It is recommended to upgrade the affected component. The identifier VDB-265981 was assigned to this vulnerability.</description><pubDate>Thu, 23 May 2024 02:34:07 +0000</pubDate></item><item><title>CVE-2024-3708 | maliciously crafted http request could cause lighttpd crash, information leak, or other non-deterministic behavior</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3708</link><description>A condition exists in lighttpd version prior to 1.4.51 whereby a remote attacker can craft an http request which could result in multiple outcomes:
1.) cause lighttpd to access freed memory in which case the process lighttpd is running in could be terminated or other non-deterministic behavior could result
2.) a memory information disclosure event could result which could be used to determine the state of memory which could then be used to theoretically bypass ALSR protections

This CVE will be updated with more details on July 9th, 2024 after affected parties have had time to remediate.</description><pubDate>Thu, 23 May 2024 01:10:10 +0000</pubDate></item><item><title>CVE-2023-46806 | An SQL Injection vulnerability in a web component of EPMM versions before 12.1.0.0 allows an authenticated user with appropriate privilege t...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-46806</link><description>An SQL Injection vulnerability in a web component of EPMM versions before 12.1.0.0 allows an authenticated user with appropriate privilege to access or modify data in the underlying database.</description><pubDate>Wed, 22 May 2024 23:11:21 +0000</pubDate></item><item><title>CVE-2023-46807 | An SQL Injection vulnerability in web component of EPMM before 12.1.0.0 allows an authenticated user with appropriate privilege to access or...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-46807</link><description>An SQL Injection vulnerability in web component of EPMM before 12.1.0.0 allows an authenticated user with appropriate privilege to access or modify data in the underlying database.</description><pubDate>Wed, 22 May 2024 23:11:22 +0000</pubDate></item><item><title>CVE-2024-22026 | A local privilege escalation vulnerability in EPMM before 12.1.0.0 allows an authenticated local user to bypass shell restriction and execut...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22026</link><description>A local privilege escalation vulnerability in EPMM before 12.1.0.0 allows an authenticated local user to bypass shell restriction and execute arbitrary commands on the appliance.</description><pubDate>Wed, 22 May 2024 23:11:22 +0000</pubDate></item><item><title>CVE-2024-29849 | Veeam Backup Enterprise Manager allows unauthenticated users to log in as any user to enterprise manager web interface.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29849</link><description>Veeam Backup Enterprise Manager allows unauthenticated users to log in as any user to enterprise manager web interface.</description><pubDate>Wed, 22 May 2024 23:11:22 +0000</pubDate></item><item><title>CVE-2024-29850 | Veeam Backup Enterprise Manager allows account takeover via NTLM relay.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29850</link><description>Veeam Backup Enterprise Manager allows account takeover via NTLM relay.</description><pubDate>Wed, 22 May 2024 23:11:23 +0000</pubDate></item><item><title>CVE-2024-29851 | Veeam Backup Enterprise Manager allows high-privileged users to steal NTLM hash of Enterprise manager service account.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29851</link><description>Veeam Backup Enterprise Manager allows high-privileged users to steal NTLM hash of Enterprise manager service account.</description><pubDate>Wed, 22 May 2024 23:11:23 +0000</pubDate></item><item><title>CVE-2024-29852 | Veeam Backup Enterprise Manager allows high-privileged users to read backup session logs.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29852</link><description>Veeam Backup Enterprise Manager allows high-privileged users to read backup session logs.</description><pubDate>Wed, 22 May 2024 23:11:23 +0000</pubDate></item><item><title>CVE-2024-29853 | An authentication bypass vulnerability in Veeam Agent for Microsoft Windows allows for local privilege escalation.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29853</link><description>An authentication bypass vulnerability in Veeam Agent for Microsoft Windows allows for local privilege escalation.</description><pubDate>Wed, 22 May 2024 23:11:24 +0000</pubDate></item><item><title>CVE-2024-4267 | Remote Code Execution in parisneo/lollms-webui</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4267</link><description>A remote code execution (RCE) vulnerability exists in the parisneo/lollms-webui, specifically within the 'open_file' module, version 9.5. The vulnerability arises due to improper neutralization of special elements used in a command within the 'open_file' function. An attacker can exploit this vulnerability by crafting a malicious file path that, when processed by the 'open_file' function, executes arbitrary system commands or reads sensitive file content. This issue is present in the code where subprocess.Popen is used unsafely to open files based on user-supplied paths without adequate validation, leading to potential command injection.</description><pubDate>Wed, 22 May 2024 19:40:10 +0000</pubDate></item><item><title>CVE-2024-27264 | IBM Performance Tools for i privilege escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27264</link><description>IBM Performance Tools for i 7.2, 7.3, 7.4, and 7.5 could allow a local user to gain elevated privileges due to an unqualified library call.  A malicious actor could cause user-controlled code to run with administrator privilege.  IBM X-Force ID:  284563.</description><pubDate>Wed, 22 May 2024 19:30:13 +0000</pubDate></item><item><title>CVE-2023-51636 | Avira Prime Link Following Local Privilege Escalation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51636</link><description>Avira Prime Link Following Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of Avira Prime. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.

The specific flaw exists within the Avira Spotlight Service. By creating a symbolic link, an attacker can abuse the service to delete a file. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-21600.</description><pubDate>Wed, 22 May 2024 19:20:33 +0000</pubDate></item><item><title>CVE-2023-51637 | Sante PACS Server PG Patient Query SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51637</link><description>Sante PACS Server PG Patient Query SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Sante PACS Server PG. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the implementation of the DICOM service, which listens on TCP port 11122 by default. When parsing the NAME element of the PATIENT record, the process does not properly validate a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of NETWORK SERVICE. Was ZDI-CAN-21579.</description><pubDate>Wed, 22 May 2024 19:20:33 +0000</pubDate></item><item><title>CVE-2024-31894 | IBM App Connect Enterprise information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31894</link><description>IBM App Connect Enterprise 12.0.1.0 through 12.0.12.1 could allow an authenticated user to obtain sensitive user information using an expired access token.  IBM X-Force ID:  288175.</description><pubDate>Wed, 22 May 2024 19:20:34 +0000</pubDate></item><item><title>CVE-2024-31895 | IBM App Connect Enterprise information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31895</link><description>IBM App Connect Enterprise 12.0.1.0 through 12.0.12.1 could allow an authenticated user to obtain sensitive user information using an expired access token.  IBM X-Force ID:  288176.</description><pubDate>Wed, 22 May 2024 19:20:34 +0000</pubDate></item><item><title>CVE-2024-4453 | GStreamer EXIF Metadata Parsing Integer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4453</link><description>GStreamer EXIF Metadata Parsing Integer Overflow Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of GStreamer. Interaction with this library is required to exploit this vulnerability but attack vectors may vary depending on the implementation.

The specific flaw exists within the parsing of EXIF metadata. The issue results from the lack of proper validation of user-supplied data, which can result in an integer overflow before allocating a buffer. An attacker can leverage this vulnerability to execute code in the context of the current process.
. Was ZDI-CAN-23896.</description><pubDate>Wed, 22 May 2024 19:20:35 +0000</pubDate></item><item><title>CVE-2024-4454 | WithSecure Elements Endpoint Protection Link Following Local Privilege Escalation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4454</link><description>WithSecure Elements Endpoint Protection Link Following Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of WithSecure Elements Endpoint Protection. User interaction on the part of an administrator is required to exploit this vulnerability.

The specific flaw exists within the WithSecure plugin hosting service. By creating a symbolic link, an attacker can abuse the service to create a file. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-23035.</description><pubDate>Wed, 22 May 2024 19:20:35 +0000</pubDate></item><item><title>CVE-2024-25737 | A Server-Side Request Forgery (SSRF) vulnerability in the /Cover/Show route (showAction in CoverController.php) in Open Library Foundation V...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25737</link><description>A Server-Side Request Forgery (SSRF) vulnerability in the /Cover/Show route (showAction in CoverController.php) in Open Library Foundation VuFind 2.4 through 9.1 before 9.1.1 allows remote attackers to access internal HTTP servers and perform Cross-Site Scripting (XSS) attacks by proxying arbitrary URLs via the proxy GET parameter.</description><pubDate>Wed, 22 May 2024 19:20:36 +0000</pubDate></item><item><title>CVE-2024-31893 | IBM App Connect Enterprise information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31893</link><description>IBM App Connect Enterprise 12.0.1.0 through 12.0.12.1 could allow an authenticated user to obtain sensitive calendar information using an expired access token.  IBM X-Force ID:  288174.</description><pubDate>Wed, 22 May 2024 19:20:36 +0000</pubDate></item><item><title>CVE-2024-35627 | tileserver-gl up to v4.4.10 was discovered to contain a cross-site scripting (XSS) vulnerability via the component /data/v3/?key.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35627</link><description>tileserver-gl up to v4.4.10 was discovered to contain a cross-site scripting (XSS) vulnerability via the component /data/v3/?key.</description><pubDate>Wed, 22 May 2024 19:20:37 +0000</pubDate></item><item><title>CVE-2024-25738 | A Server-Side Request Forgery (SSRF) vulnerability in the /Upgrade/FixConfig route in Open Library Foundation VuFind 2.0 through 9.1 before ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25738</link><description>A Server-Side Request Forgery (SSRF) vulnerability in the /Upgrade/FixConfig route in Open Library Foundation VuFind 2.0 through 9.1 before 9.1.1 allows a remote attacker to overwrite local configuration files to gain access to the administrator panel and achieve Remote Code Execution. A mitigating factor is that it requires the allow_url_include PHP runtime setting to be on, which is off in default installations. It also requires the /Upgrade route to be exposed, which is exposed by default after installing VuFind, and is recommended to be disabled by setting autoConfigure to false in config.ini.</description><pubDate>Wed, 22 May 2024 19:09:45 +0000</pubDate></item><item><title>CVE-2024-31904 | IBM App Connect Enterprise denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31904</link><description>IBM App Connect Enterprise 11.0.0.1 through 11.0.0.25 and 12.0.1.0 through 12.0.12.0 integration nodes could allow an authenticated user to cause a denial of service due to an uncaught exception.  IBM X-Force ID:  289647.</description><pubDate>Wed, 22 May 2024 18:44:24 +0000</pubDate></item><item><title>CVE-2024-21791 | SQL Injection in ADAudit Plus</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21791</link><description>Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL Injection in lockout history option. 
Note: Non-admin users cannot exploit this vulnerability.</description><pubDate>Wed, 22 May 2024 18:20:50 +0000</pubDate></item><item><title>CVE-2024-20360 | A vulnerability in the web-based management interface of Cisco Firepower Management Center (FMC) Software could allow an authenticated, remo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20360</link><description>A vulnerability in the web-based management interface of Cisco Firepower Management Center (FMC) Software could allow an authenticated, remote attacker to conduct SQL injection attacks on an affected system. This vulnerability exists because the web-based management interface does not adequately validate user input. An attacker could exploit this vulnerability by authenticating to the application and sending crafted SQL queries to an affected system. A successful exploit could allow the attacker to obtain any data from the database, execute arbitrary commands on the underlying operating system, and elevate privileges to root. To exploit this vulnerability, an attacker would need at least Read Only user credentials.</description><pubDate>Wed, 22 May 2024 17:57:00 +0000</pubDate></item><item><title>CVE-2024-31617 | OpenLiteSpeed before 1.8.1 mishandles chunked encoding.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31617</link><description>OpenLiteSpeed before 1.8.1 mishandles chunked encoding.</description><pubDate>Wed, 22 May 2024 17:57:01 +0000</pubDate></item><item><title>CVE-2024-29421 | xmedcon 0.23.0 and fixed in v.0.24.0 is vulnerable to Buffer Overflow via libs/dicom/basic.c which allows an attacker to execute arbitrary c...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29421</link><description>xmedcon 0.23.0 and fixed in v.0.24.0 is vulnerable to Buffer Overflow via libs/dicom/basic.c which allows an attacker to execute arbitrary code.</description><pubDate>Wed, 22 May 2024 17:37:08 +0000</pubDate></item><item><title>CVE-2024-4563 | The Progress MOVEit Automation Configuration Export Function Uses a Cryptographic Method with Insufficient Bit Length</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4563</link><description>The Progress MOVEit Automation configuration export function prior to 2024.0.1 uses a cryptographic method with insufficient bit length.</description><pubDate>Wed, 22 May 2024 17:09:50 +0000</pubDate></item><item><title>CVE-2023-20239 | A vulnerability in the web-based management interface of Cisco Firepower Management Center (FMC) Software could allow an authenticated, remo...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-20239</link><description>A vulnerability in the web-based management interface of Cisco Firepower Management Center (FMC) Software could allow an authenticated, remote attacker to conduct SQL injection attacks on an affected system. This vulnerability exists because the web-based management interface does not adequately validate user input. An attacker could exploit this vulnerability by authenticating to the application and sending crafted SQL queries to an affected system. A successful exploit could allow the attacker to obtain any data from the database, execute arbitrary commands on the underlying operating system, and elevate privileges to root. To exploit this vulnerability, an attacker would need at least Read Only user credentials.</description><pubDate>Wed, 22 May 2024 17:09:50 +0000</pubDate></item><item><title>CVE-2024-20261 | A vulnerability in the file policy feature that is used to inspect encrypted archive files of Cisco Firepower Threat Defense (FTD) Software ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20261</link><description>A vulnerability in the file policy feature that is used to inspect encrypted archive files of Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to bypass a configured file policy to block an encrypted archive file. This vulnerability exists because of a logic error when a specific class of encrypted archive files is inspected. An attacker could exploit this vulnerability by sending a crafted, encrypted archive file through the affected device. A successful exploit could allow the attacker to send an encrypted archive file, which could contain malware and should have been blocked and dropped at the Cisco FTD device.</description><pubDate>Wed, 22 May 2024 17:09:51 +0000</pubDate></item><item><title>CVE-2024-20293 | A vulnerability in the activation of an access control list (ACL) on Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Th...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20293</link><description>A vulnerability in the activation of an access control list (ACL) on Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to bypass the protection that is offered by a configured ACL on an affected device. This vulnerability is due to a logic error that occurs when an ACL changes from inactive to active in the running configuration of an affected device. An attacker could exploit this vulnerability by sending traffic through the affected device that should be denied by the configured ACL. The reverse condition is also true—traffic that should be permitted could be denied by the configured ACL. A successful exploit could allow the attacker to bypass configured ACL protections on the affected device, allowing the attacker to access trusted networks that the device might be protecting. Note: This vulnerability applies to both IPv4 and IPv6 traffic as well as dual-stack ACL configurations in which both IPv4 and IPv6 ACLs are configured on an interface.</description><pubDate>Wed, 22 May 2024 17:09:51 +0000</pubDate></item><item><title>CVE-2024-20355 | A vulnerability in the implementation of SAML 2.0 single sign-on (SSO) for remote access VPN services in Cisco Adaptive Security Appliance (...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20355</link><description>A vulnerability in the implementation of SAML 2.0 single sign-on (SSO) for remote access VPN services in Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Threat Defense (FTD) Software could allow an authenticated, remote attacker to successfully establish a VPN session on an affected device. This vulnerability is due to improper separation of authorization domains when using SAML authentication. An attacker could exploit this vulnerability by using valid credentials to successfully authenticate using their designated connection profile (tunnel group), intercepting the SAML SSO token that is sent back from the Cisco ASA device, and then submitting the same SAML SSO token to a different tunnel group for authentication. A successful exploit could allow the attacker to establish a remote access VPN session using a connection profile that they are not authorized to use and connect to secured networks behind the affected device that they are not authorized to access. For successful exploitation, the attacker must have valid remote access VPN user credentials.</description><pubDate>Wed, 22 May 2024 17:09:51 +0000</pubDate></item><item><title>CVE-2024-20361 | A vulnerability in the Object Groups for Access Control Lists (ACLs) feature of Cisco Firepower Management Center (FMC) Software could allow...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20361</link><description>A vulnerability in the Object Groups for Access Control Lists (ACLs) feature of Cisco Firepower Management Center (FMC) Software could allow an unauthenticated, remote attacker to bypass configured access controls on managed devices that are running Cisco Firepower Threat Defense (FTD) Software. This vulnerability is due to the incorrect deployment of the Object Groups for ACLs feature from Cisco FMC Software to managed FTD devices in high-availability setups. After an affected device is rebooted following Object Groups for ACLs deployment, an attacker can exploit this vulnerability by sending traffic through the affected device. A successful exploit could allow the attacker to bypass configured access controls and successfully send traffic to devices that are expected to be protected by the affected device.</description><pubDate>Wed, 22 May 2024 17:09:52 +0000</pubDate></item><item><title>CVE-2024-20363 | Multiple Cisco products are affected by a vulnerability in the Snort Intrusion Prevention System (IPS) rule engine that could allow an unaut...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20363</link><description>Multiple Cisco products are affected by a vulnerability in the Snort Intrusion Prevention System (IPS) rule engine that could allow an unauthenticated, remote attacker to bypass the configured rules on an affected system. This vulnerability is due to incorrect HTTP packet handling. An attacker could exploit this vulnerability by sending crafted HTTP packets through an affected device. A successful exploit could allow the attacker to bypass configured IPS rules and allow uninspected traffic onto the network.</description><pubDate>Wed, 22 May 2024 17:09:52 +0000</pubDate></item><item><title>CVE-2024-36077 | Qlik Sense Enterprise for Windows before 14.187.4 allows a remote attacker to elevate their privilege due to improper validation. The attack...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36077</link><description>Qlik Sense Enterprise for Windows before 14.187.4 allows a remote attacker to elevate their privilege due to improper validation. The attacker can elevate their privilege to the internal system role, which allows them to execute commands on the server. This affects February 2024 Patch 3 (14.173.3 through 14.173.7), November 2023 Patch 8 (14.159.4 through 14.159.13), August 2023 Patch 13 (14.139.3 through 14.139.20), May 2023 Patch 15 (14.129.3 through 14.129.22), February 2023 Patch 13 (14.113.1 through 14.113.18), November 2022 Patch 13 (14.97.2 through 14.97.18), August 2022 Patch 16 (14.78.3 through 14.78.23), and May 2022 Patch 17 (14.67.7 through 14.67.31). This has been fixed in May 2024 (14.187.4), February 2024 Patch 4 (14.173.8), November 2023 Patch 9 (14.159.14), August 2023 Patch 14 (14.139.21), May 2023 Patch 16 (14.129.23), February 2023 Patch 14 (14.113.19), November 2022 Patch 14 (14.97.19), August 2022 Patch 17 (14.78.25), and May 2022 Patch 18 (14.67.34).</description><pubDate>Wed, 22 May 2024 16:53:55 +0000</pubDate></item><item><title>CVE-2024-5166 | Insecure Direct Object Reference In Looker</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5166</link><description>An Insecure Direct Object Reference in Google Cloud's Looker allowed metadata exposure across authenticated Looker users sharing the same LookML model.</description><pubDate>Wed, 22 May 2024 16:32:19 +0000</pubDate></item><item><title>CVE-2024-34448 | Ghost before 5.82.0 allows CSV Injection during a member CSV export.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34448</link><description>Ghost before 5.82.0 allows CSV Injection during a member CSV export.</description><pubDate>Wed, 22 May 2024 16:10:48 +0000</pubDate></item><item><title>CVE-2024-29392 | Silverpeas Core 6.3 is vulnerable to Cross Site Scripting (XSS) via ClipboardSessionController.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29392</link><description>Silverpeas Core 6.3 is vulnerable to Cross Site Scripting (XSS) via ClipboardSessionController.</description><pubDate>Wed, 22 May 2024 16:10:49 +0000</pubDate></item><item><title>CVE-2024-35362 | Ecshop 3.6 is vulnerable to Cross Site Scripting (XSS) via ecshop/article_cat.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35362</link><description>Ecshop 3.6 is vulnerable to Cross Site Scripting (XSS) via ecshop/article_cat.php.</description><pubDate>Wed, 22 May 2024 15:52:47 +0000</pubDate></item><item><title>CVE-2024-33227 | An issue in the component ddcdrv.sys of Nicomsoft WinI2C/DDC v3.7.4.0 allows attackers to escalate privileges and execute arbitrary code via...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33227</link><description>An issue in the component ddcdrv.sys of Nicomsoft WinI2C/DDC v3.7.4.0 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:33:08 +0000</pubDate></item><item><title>CVE-2024-33228 | An issue in the component segwindrvx64.sys of Insyde Software Corp SEG Windows Driver v100.00.07.02 allows attackers to escalate privileges ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33228</link><description>An issue in the component segwindrvx64.sys of Insyde Software Corp SEG Windows Driver v100.00.07.02 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:33:08 +0000</pubDate></item><item><title>CVE-2024-33222 | An issue in the component ATSZIO64.sys of ASUSTeK Computer Inc ASUS ATSZIO Driver v0.2.1.7 allows attackers to escalate privileges and execu...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33222</link><description>An issue in the component ATSZIO64.sys of ASUSTeK Computer Inc ASUS ATSZIO Driver v0.2.1.7 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:47 +0000</pubDate></item><item><title>CVE-2024-33223 | An issue in the component IOMap64.sys of ASUSTeK Computer Inc ASUS GPU TweakII v1.4.5.2 allows attackers to escalate privileges and execute ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33223</link><description>An issue in the component IOMap64.sys of ASUSTeK Computer Inc ASUS GPU TweakII v1.4.5.2 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:47 +0000</pubDate></item><item><title>CVE-2024-33224 | An issue in the component rtkio64.sys of Realtek Semiconductor Corp Realtek lO Driver v1.008.0823.2017 allows attackers to escalate privileg...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33224</link><description>An issue in the component rtkio64.sys of Realtek Semiconductor Corp Realtek lO Driver v1.008.0823.2017 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:48 +0000</pubDate></item><item><title>CVE-2024-33225 | An issue in the component RTKVHD64.sys of Realtek Semiconductor Corp Realtek(r) High Definition Audio Function Driver v6.0.9549.1 allows att...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33225</link><description>An issue in the component RTKVHD64.sys of Realtek Semiconductor Corp Realtek(r) High Definition Audio Function Driver v6.0.9549.1 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:48 +0000</pubDate></item><item><title>CVE-2024-33226 | An issue in the component Access64.sys of Wistron Corporation TBT Force Power Control v1.0.0.0 allows attackers to escalate privileges and e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33226</link><description>An issue in the component Access64.sys of Wistron Corporation TBT Force Power Control v1.0.0.0 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:48 +0000</pubDate></item><item><title>CVE-2024-5157 | Use after free in Scheduling in Google Chrome prior to 125.0.6422.76 allowed a remote attacker to execute arbitrary code inside a sandbox vi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5157</link><description>Use after free in Scheduling in Google Chrome prior to 125.0.6422.76 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 22 May 2024 15:22:49 +0000</pubDate></item><item><title>CVE-2024-5158 | Type Confusion in V8 in Google Chrome prior to 125.0.6422.76 allowed a remote attacker to potentially perform arbitrary read/write via a cra...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5158</link><description>Type Confusion in V8 in Google Chrome prior to 125.0.6422.76 allowed a remote attacker to potentially perform arbitrary read/write via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 22 May 2024 15:22:49 +0000</pubDate></item><item><title>CVE-2024-5159 | Heap buffer overflow in ANGLE in Google Chrome prior to 125.0.6422.76 allowed a remote attacker to perform an out of bounds memory read via ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5159</link><description>Heap buffer overflow in ANGLE in Google Chrome prior to 125.0.6422.76 allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 22 May 2024 15:22:49 +0000</pubDate></item><item><title>CVE-2024-5160 | Heap buffer overflow in Dawn in Google Chrome prior to 125.0.6422.76 allowed a remote attacker to perform an out of bounds memory write via ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5160</link><description>Heap buffer overflow in Dawn in Google Chrome prior to 125.0.6422.76 allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 22 May 2024 15:22:50 +0000</pubDate></item><item><title>CVE-2024-33218 | An issue in the component AsUpIO64.sys of ASUSTeK Computer Inc ASUS USB 3.0 Boost Storage Driver 5.30.20.0 allows attackers to escalate priv...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33218</link><description>An issue in the component AsUpIO64.sys of ASUSTeK Computer Inc ASUS USB 3.0 Boost Storage Driver 5.30.20.0 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:50 +0000</pubDate></item><item><title>CVE-2024-33219 | An issue in the component AsIO64.sys of ASUSTeK Computer Inc ASUS SABERTOOTH X99 Driver v1.0.1.0 allows attackers to escalate privileges and...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33219</link><description>An issue in the component AsIO64.sys of ASUSTeK Computer Inc ASUS SABERTOOTH X99 Driver v1.0.1.0 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:51 +0000</pubDate></item><item><title>CVE-2024-33220 | An issue in the component AslO3_64.sys of ASUSTeK Computer Inc AISuite3 v3.03.36 3.03.36 allows attackers to escalate privileges and execute...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33220</link><description>An issue in the component AslO3_64.sys of ASUSTeK Computer Inc AISuite3 v3.03.36 3.03.36 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:51 +0000</pubDate></item><item><title>CVE-2024-33221 | An issue in the component AsusBSItf.sys of ASUSTeK Computer Inc ASUS BIOS Flash Driver v3.2.12.0 allows attackers to escalate privileges and...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33221</link><description>An issue in the component AsusBSItf.sys of ASUSTeK Computer Inc ASUS BIOS Flash Driver v3.2.12.0 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests.</description><pubDate>Wed, 22 May 2024 15:22:51 +0000</pubDate></item><item><title>CVE-2024-3926 | Element Pack Elementor Addons (Header Footer, Template Library, Dynamic Grid &amp;amp; Carousel, Remote Arrows) &amp;lt;= 5.6.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via custom_attributes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3926</link><description>The Element Pack Elementor Addons (Header Footer, Template Library, Dynamic Grid &amp; Carousel, Remote Arrows) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the custom_attributes value in widgets in all versions up to, and including, 5.6.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 14:40:42 +0000</pubDate></item><item><title>CVE-2024-35409 | WeBid 1.1.2 is vulnerable to SQL Injection via admin/tax.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35409</link><description>WeBid 1.1.2 is vulnerable to SQL Injection via admin/tax.php.</description><pubDate>Wed, 22 May 2024 14:18:37 +0000</pubDate></item><item><title>CVE-2024-35475 | A Cross-Site Request Forgery (CSRF) vulnerability was discovered in OpenKM Community Edition on or before version 6.3.12. The vulnerability ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35475</link><description>A Cross-Site Request Forgery (CSRF) vulnerability was discovered in OpenKM Community Edition on or before version 6.3.12. The vulnerability exists in /admin/DatabaseQuery, which allows an attacker to manipulate a victim with administrative privileges to execute arbitrary SQL commands.</description><pubDate>Wed, 22 May 2024 13:59:14 +0000</pubDate></item><item><title>CVE-2024-35550 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=rev.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35550</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=rev.</description><pubDate>Wed, 22 May 2024 13:49:26 +0000</pubDate></item><item><title>CVE-2024-35551 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=add.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35551</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=add.</description><pubDate>Wed, 22 May 2024 13:49:26 +0000</pubDate></item><item><title>CVE-2024-35552 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=del&amp;dataType=logo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35552</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=del&amp;amp;dataType=logo&amp;amp;dataTypeCN.</description><pubDate>Wed, 22 May 2024 13:49:26 +0000</pubDate></item><item><title>CVE-2024-35553 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=add&amp;nohrefStr=clo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35553</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=add&amp;amp;nohrefStr=close.</description><pubDate>Wed, 22 May 2024 13:49:27 +0000</pubDate></item><item><title>CVE-2024-35554 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=del&amp;dataType=newsW...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35554</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=del&amp;amp;dataType=newsWeb&amp;amp;dataTypeCN.</description><pubDate>Wed, 22 May 2024 13:49:27 +0000</pubDate></item><item><title>CVE-2024-35555 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/share_switch.php?mudi=switch&amp;dataType=ne...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35555</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/share_switch.php?mudi=switch&amp;amp;dataType=newsWeb&amp;amp;fieldName=state&amp;amp;fieldName2=state&amp;amp;tabName=infoWeb&amp;amp;dataID=40.</description><pubDate>Wed, 22 May 2024 13:49:27 +0000</pubDate></item><item><title>CVE-2024-35556 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/vpsSys_deal.php?mudi=infoSet.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35556</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/vpsSys_deal.php?mudi=infoSet.</description><pubDate>Wed, 22 May 2024 13:49:28 +0000</pubDate></item><item><title>CVE-2024-35557 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/vpsApi_deal.php?mudi=rev&amp;nohrefStr=close...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35557</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/vpsApi_deal.php?mudi=rev&amp;amp;nohrefStr=close.</description><pubDate>Wed, 22 May 2024 13:49:28 +0000</pubDate></item><item><title>CVE-2024-35558 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=rev&amp;nohrefStr=close.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35558</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=rev&amp;amp;nohrefStr=close.</description><pubDate>Wed, 22 May 2024 13:49:29 +0000</pubDate></item><item><title>CVE-2024-35559 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=rev&amp;nohrefStr=clo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35559</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=rev&amp;amp;nohrefStr=close.</description><pubDate>Wed, 22 May 2024 13:49:29 +0000</pubDate></item><item><title>CVE-2024-35560 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=del&amp;dataType=&amp;dataTypeC...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35560</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=del&amp;amp;dataType=&amp;amp;dataTypeCN.</description><pubDate>Wed, 22 May 2024 13:49:29 +0000</pubDate></item><item><title>CVE-2024-35561 | idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=add&amp;nohrefStr=close.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35561</link><description>idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=add&amp;amp;nohrefStr=close.</description><pubDate>Wed, 22 May 2024 13:49:30 +0000</pubDate></item><item><title>CVE-2024-4261 | Responsive Contact Form Builder &amp;amp; Lead Generation Plugin &amp;lt;= 1.9.1 - Authenticated (Subscriber+) Arbitrary Shortcode Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4261</link><description>The Responsive Contact Form Builder &amp; Lead Generation Plugin plugin for WordPress is vulnerable to arbitrary shortcode execution in all versions up to, and including, 1.9.1. This is due to the software allowing users to execute an action that does not properly validate a value before running do_shortcode. This makes it possible for authenticated attackers, with subscriber-level access and above, to execute arbitrary shortcodes.</description><pubDate>Wed, 22 May 2024 12:57:48 +0000</pubDate></item><item><title>CVE-2024-5196 | Arris VAP2500 tools_command.php command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5196</link><description>A vulnerability classified as critical has been found in Arris VAP2500 08.50. This affects an unknown part of the file /tools_command.php. The manipulation of the argument cmb_header/txt_command leads to command injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265833 was assigned to this vulnerability.</description><pubDate>Wed, 22 May 2024 12:38:27 +0000</pubDate></item><item><title>CVE-2024-36010 | igb: Fix string truncation warnings in igb_set_fw_version</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36010</link><description>In the Linux kernel, the following vulnerability has been resolved:

igb: Fix string truncation warnings in igb_set_fw_version

Commit 1978d3ead82c ("intel: fix string truncation warnings")
fixes '-Wformat-truncation=' warnings in igb_main.c by using kasprintf.

drivers/net/ethernet/intel/igb/igb_main.c:3092:53: warning：‘%d’ directive output may be truncated writing between 1 and 5 bytes into a region of size between 1 and 13 [-Wformat-truncation=]
 3092 |                                  "%d.%d, 0x%08x, %d.%d.%d",
      |                                                     ^~
drivers/net/ethernet/intel/igb/igb_main.c:3092:34: note：directive argument in the range [0, 65535]
 3092 |                                  "%d.%d, 0x%08x, %d.%d.%d",
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
drivers/net/ethernet/intel/igb/igb_main.c:3092:34: note：directive argument in the range [0, 65535]
drivers/net/ethernet/intel/igb/igb_main.c:3090:25: note：‘snprintf’ output between 23 and 43 bytes into a destination of size 32

kasprintf() returns a pointer to dynamically allocated memory
which can be NULL upon failure.

Fix this warning by using a larger space for adapter-&gt;fw_version,
and then fall back and continue to use snprintf.</description><pubDate>Wed, 22 May 2024 11:50:09 +0000</pubDate></item><item><title>CVE-2024-5194 | Arris VAP2500 assoc_table.php command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5194</link><description>A vulnerability was found in Arris VAP2500 08.50. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /assoc_table.php. The manipulation of the argument id leads to command injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265831.</description><pubDate>Wed, 22 May 2024 11:20:21 +0000</pubDate></item><item><title>CVE-2024-5195 | Arris VAP2500 diag_s.php command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5195</link><description>A vulnerability was found in Arris VAP2500 08.50. It has been rated as critical. Affected by this issue is some unknown functionality of the file /diag_s.php. The manipulation of the argument customer_info leads to command injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265832.</description><pubDate>Wed, 22 May 2024 11:20:21 +0000</pubDate></item><item><title>CVE-2024-5193 | Ritlabs TinyWeb Server Request crlf injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5193</link><description>A vulnerability was found in Ritlabs TinyWeb Server 1.94. It has been classified as problematic. Affected is an unknown function of the component Request Handler. The manipulation with the input %0D%0A leads to crlf injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-265830 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Wed, 22 May 2024 10:41:56 +0000</pubDate></item><item><title>CVE-2024-4262 | Piotnet Addons For Elementor &amp;lt;= 2.4.28 - Authenticated (Contributor+) Stored Cross-Site Scripting via Multiple Widget Attributes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4262</link><description>The Piotnet Addons For Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple widgets in all versions up to, and including, 2.4.28 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 09:36:47 +0000</pubDate></item><item><title>CVE-2024-4153 | User Limit Bypass in lunary-ai/lunary</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4153</link><description>A vulnerability in lunary-ai/lunary version 1.2.2 allows attackers to bypass user creation limits and potentially evade payment requirements. The issue arises from an undefined behavior when handling input to the API, specifically through a POST request to the /v1/users endpoint. By crafting a request with a new user's email and assigning them an 'admin' role, attackers can invite additional users beyond the set limit. This vulnerability could be exploited to add an unlimited number of users without adhering to the intended restrictions.</description><pubDate>Wed, 22 May 2024 09:26:26 +0000</pubDate></item><item><title>CVE-2024-2036 | ApplyOnline – Application Form Builder and Manager &amp;lt;= 2.6 - Missing Authorization to Sensitive Information Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2036</link><description>The ApplyOnline – Application Form Builder and Manager plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the aol_modal_box AJAX action in all versions up to, and including, 2.6. This makes it possible for authenticated attackers, with subscriber access or higher, to view Application submissions.</description><pubDate>Wed, 22 May 2024 08:42:00 +0000</pubDate></item><item><title>CVE-2024-3495 | Country State City Dropdown CF7 &amp;lt;= 2.7.2 - Unauthenticated SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3495</link><description>The Country State City Dropdown CF7 plugin for WordPress is vulnerable to SQL Injection via the ‘cnt’ and 'sid' parameters in versions up to, and including, 2.7.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Wed, 22 May 2024 08:42:01 +0000</pubDate></item><item><title>CVE-2024-4362 | SiteOrigin Widgets Bundle &amp;lt;= 1.60.0 -  - Authenticated (Contributor+) Stored Cross-Site Scripting via &amp;#x27;siteorigin_widget&amp;#x27; Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4362</link><description>The SiteOrigin Widgets Bundle plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'siteorigin_widget' shortcode in all versions up to, and including, 1.60.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 08:42:01 +0000</pubDate></item><item><title>CVE-2024-4896 | WPB Elementor Addons &amp;lt;= 1.0.9 - Authenticated (Contributor+) Stored Cross-Site Scripting via url Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4896</link><description>The WPB Elementor Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘url’ parameter in all versions up to, and including, 1.0.9 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 08:42:02 +0000</pubDate></item><item><title>CVE-2024-5025 | MemberPress &amp;lt;= 1.11.29 - Authenticated (Contributor+) Stored Cross-Site Scripting via arglist Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5025</link><description>The Memberpress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘arglist’ parameter in all versions up to, and including, 1.11.29 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 08:42:02 +0000</pubDate></item><item><title>CVE-2024-5031 | MemberPress &amp;lt;= 1.11.29 - Authenticated (Contributor+) Blind Server-Side Request Forgery via mepr-user-file Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5031</link><description>The Memberpress plugin for WordPress is vulnerable to Blind Server-Side Request Forgery in all versions up to, and including, 1.11.29 via the 'mepr-user-file' shortcode. This makes it possible for authenticated attackers, with Contributor-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.</description><pubDate>Wed, 22 May 2024 08:42:03 +0000</pubDate></item><item><title>CVE-2021-47474 | comedi: vmk80xx: fix bulk-buffer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47474</link><description>In the Linux kernel, the following vulnerability has been resolved:

comedi: vmk80xx: fix bulk-buffer overflow

The driver is using endpoint-sized buffers but must not assume that the
tx and rx buffers are of equal size or a malicious device could overflow
the slab-allocated receive buffer when doing bulk transfers.</description><pubDate>Wed, 22 May 2024 08:30:34 +0000</pubDate></item><item><title>CVE-2021-47475 | comedi: vmk80xx: fix transfer-buffer overflows</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47475</link><description>In the Linux kernel, the following vulnerability has been resolved:

comedi: vmk80xx: fix transfer-buffer overflows

The driver uses endpoint-sized USB transfer buffers but up until
recently had no sanity checks on the sizes.

Commit e1f13c879a7c ("staging: comedi: check validity of wMaxPacketSize
of usb endpoints found") inadvertently fixed NULL-pointer dereferences
when accessing the transfer buffers in case a malicious device has a
zero wMaxPacketSize.

Make sure to allocate buffers large enough to handle also the other
accesses that are done without a size check (e.g. byte 18 in
vmk80xx_cnt_insn_read() for the VMK8061_MODEL) to avoid writing beyond
the buffers, for example, when doing descriptor fuzzing.

The original driver was for a low-speed device with 8-byte buffers.
Support was later added for a device that uses bulk transfers and is
presumably a full-speed device with a maximum 64-byte wMaxPacketSize.</description><pubDate>Wed, 22 May 2024 08:30:35 +0000</pubDate></item><item><title>CVE-2021-47476 | comedi: ni_usb6501: fix NULL-deref in command paths</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47476</link><description>In the Linux kernel, the following vulnerability has been resolved:

comedi: ni_usb6501: fix NULL-deref in command paths

The driver uses endpoint-sized USB transfer buffers but had no sanity
checks on the sizes. This can lead to zero-size-pointer dereferences or
overflowed transfer buffers in ni6501_port_command() and
ni6501_counter_command() if a (malicious) device has smaller max-packet
sizes than expected (or when doing descriptor fuzz testing).

Add the missing sanity checks to probe().</description><pubDate>Wed, 22 May 2024 08:30:35 +0000</pubDate></item><item><title>CVE-2021-47477 | comedi: dt9812: fix DMA buffers on stack</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47477</link><description>In the Linux kernel, the following vulnerability has been resolved:

comedi: dt9812: fix DMA buffers on stack

USB transfer buffers are typically mapped for DMA and must not be
allocated on the stack or transfers will fail.

Allocate proper transfer buffers in the various command helpers and
return an error on short transfers instead of acting on random stack
data.

Note that this also fixes a stack info leak on systems where DMA is not
used as 32 bytes are always sent to the device regardless of how short
the command is.</description><pubDate>Wed, 22 May 2024 08:30:35 +0000</pubDate></item><item><title>CVE-2021-47478 | isofs: Fix out of bound access for corrupted isofs image</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47478</link><description>In the Linux kernel, the following vulnerability has been resolved:

isofs: Fix out of bound access for corrupted isofs image

When isofs image is suitably corrupted isofs_read_inode() can read data
beyond the end of buffer. Sanity-check the directory entry length before
using it.</description><pubDate>Wed, 22 May 2024 08:30:36 +0000</pubDate></item><item><title>CVE-2021-47479 | staging: rtl8712: fix use-after-free in rtl8712_dl_fw</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47479</link><description>In the Linux kernel, the following vulnerability has been resolved:

staging: rtl8712: fix use-after-free in rtl8712_dl_fw

Syzbot reported use-after-free in rtl8712_dl_fw(). The problem was in
race condition between r871xu_dev_remove() -&gt;ndo_open() callback.

It's easy to see from crash log, that driver accesses released firmware
in -&gt;ndo_open() callback. It may happen, since driver was releasing
firmware _before_ unregistering netdev. Fix it by moving
unregister_netdev() before cleaning up resources.

Call Trace:
...
 rtl871x_open_fw drivers/staging/rtl8712/hal_init.c:83 [inline]
 rtl8712_dl_fw+0xd95/0xe10 drivers/staging/rtl8712/hal_init.c:170
 rtl8712_hal_init drivers/staging/rtl8712/hal_init.c:330 [inline]
 rtl871x_hal_init+0xae/0x180 drivers/staging/rtl8712/hal_init.c:394
 netdev_open+0xe6/0x6c0 drivers/staging/rtl8712/os_intfs.c:380
 __dev_open+0x2bc/0x4d0 net/core/dev.c:1484

Freed by task 1306:
...
 release_firmware+0x1b/0x30 drivers/base/firmware_loader/main.c:1053
 r871xu_dev_remove+0xcc/0x2c0 drivers/staging/rtl8712/usb_intf.c:599
 usb_unbind_interface+0x1d8/0x8d0 drivers/usb/core/driver.c:458</description><pubDate>Wed, 22 May 2024 08:30:36 +0000</pubDate></item><item><title>CVE-2021-47480 | scsi: core: Put LLD module refcnt after SCSI device is released</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47480</link><description>In the Linux kernel, the following vulnerability has been resolved:

scsi: core: Put LLD module refcnt after SCSI device is released

SCSI host release is triggered when SCSI device is freed. We have to make
sure that the low-level device driver module won't be unloaded before SCSI
host instance is released because shost-&gt;hostt is required in the release
handler.

Make sure to put LLD module refcnt after SCSI device is released.

Fixes a kernel panic of 'BUG: unable to handle page fault for address'
reported by Changhui and Yi.</description><pubDate>Wed, 22 May 2024 08:30:36 +0000</pubDate></item><item><title>CVE-2021-47481 | RDMA/mlx5: Initialize the ODP xarray when creating an ODP MR</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47481</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/mlx5: Initialize the ODP xarray when creating an ODP MR

Normally the zero fill would hide the missing initialization, but an
errant set to desc_size in reg_create() causes a crash:

  BUG: unable to handle page fault for address: 0000000800000000
  PGD 0 P4D 0
  Oops: 0000 [#1] SMP PTI
  CPU: 5 PID: 890 Comm: ib_write_bw Not tainted 5.15.0-rc4+ #47
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
  RIP: 0010:mlx5_ib_dereg_mr+0x14/0x3b0 [mlx5_ib]
  Code: 48 63 cd 4c 89 f7 48 89 0c 24 e8 37 30 03 e1 48 8b 0c 24 eb a0 90 0f 1f 44 00 00 41 56 41 55 41 54 55 53 48 89 fb 48 83 ec 30 &lt;48&gt; 8b 2f 65 48 8b 04 25 28 00 00 00 48 89 44 24 28 31 c0 8b 87 c8
  RSP: 0018:ffff88811afa3a60 EFLAGS: 00010286
  RAX: 000000000000001c RBX: 0000000800000000 RCX: 0000000000000000
  RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000800000000
  RBP: 0000000800000000 R08: 0000000000000000 R09: c0000000fffff7ff
  R10: ffff88811afa38f8 R11: ffff88811afa38f0 R12: ffffffffa02c7ac0
  R13: 0000000000000000 R14: ffff88811afa3cd8 R15: ffff88810772fa00
  FS:  00007f47b9080740(0000) GS:ffff88852cd40000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 0000000800000000 CR3: 000000010761e003 CR4: 0000000000370ea0
  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
  Call Trace:
   mlx5_ib_free_odp_mr+0x95/0xc0 [mlx5_ib]
   mlx5_ib_dereg_mr+0x128/0x3b0 [mlx5_ib]
   ib_dereg_mr_user+0x45/0xb0 [ib_core]
   ? xas_load+0x8/0x80
   destroy_hw_idr_uobject+0x1a/0x50 [ib_uverbs]
   uverbs_destroy_uobject+0x2f/0x150 [ib_uverbs]
   uobj_destroy+0x3c/0x70 [ib_uverbs]
   ib_uverbs_cmd_verbs+0x467/0xb00 [ib_uverbs]
   ? uverbs_finalize_object+0x60/0x60 [ib_uverbs]
   ? ttwu_queue_wakelist+0xa9/0xe0
   ? pty_write+0x85/0x90
   ? file_tty_write.isra.33+0x214/0x330
   ? process_echoes+0x60/0x60
   ib_uverbs_ioctl+0xa7/0x110 [ib_uverbs]
   __x64_sys_ioctl+0x10d/0x8e0
   ? vfs_write+0x17f/0x260
   do_syscall_64+0x3c/0x80
   entry_SYSCALL_64_after_hwframe+0x44/0xae

Add the missing xarray initialization and remove the desc_size set.</description><pubDate>Wed, 22 May 2024 08:30:37 +0000</pubDate></item><item><title>CVE-2021-47482 | net: batman-adv: fix error handling</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47482</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: batman-adv: fix error handling

Syzbot reported ODEBUG warning in batadv_nc_mesh_free(). The problem was
in wrong error handling in batadv_mesh_init().

Before this patch batadv_mesh_init() was calling batadv_mesh_free() in case
of any batadv_*_init() calls failure. This approach may work well, when
there is some kind of indicator, which can tell which parts of batadv are
initialized; but there isn't any.

All written above lead to cleaning up uninitialized fields. Even if we hide
ODEBUG warning by initializing bat_priv-&gt;nc.work, syzbot was able to hit
GPF in batadv_nc_purge_paths(), because hash pointer in still NULL. [1]

To fix these bugs we can unwind batadv_*_init() calls one by one.
It is good approach for 2 reasons: 1) It fixes bugs on error handling
path 2) It improves the performance, since we won't call unneeded
batadv_*_free() functions.

So, this patch makes all batadv_*_init() clean up all allocated memory
before returning with an error to no call correspoing batadv_*_free()
and open-codes batadv_mesh_free() with proper order to avoid touching
uninitialized fields.</description><pubDate>Wed, 22 May 2024 08:30:37 +0000</pubDate></item><item><title>CVE-2021-47483 | regmap: Fix possible double-free in regcache_rbtree_exit()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47483</link><description>In the Linux kernel, the following vulnerability has been resolved:

regmap: Fix possible double-free in regcache_rbtree_exit()

In regcache_rbtree_insert_to_block(), when 'present' realloc failed,
the 'blk' which is supposed to assign to 'rbnode-&gt;block' will be freed,
so 'rbnode-&gt;block' points a freed memory, in the error handling path of
regcache_rbtree_init(), 'rbnode-&gt;block' will be freed again in
regcache_rbtree_exit(), KASAN will report double-free as follows:

BUG: KASAN: double-free or invalid-free in kfree+0xce/0x390
Call Trace:
 slab_free_freelist_hook+0x10d/0x240
 kfree+0xce/0x390
 regcache_rbtree_exit+0x15d/0x1a0
 regcache_rbtree_init+0x224/0x2c0
 regcache_init+0x88d/0x1310
 __regmap_init+0x3151/0x4a80
 __devm_regmap_init+0x7d/0x100
 madera_spi_probe+0x10f/0x333 [madera_spi]
 spi_probe+0x183/0x210
 really_probe+0x285/0xc30

To fix this, moving up the assignment of rbnode-&gt;block to immediately after
the reallocation has succeeded so that the data structure stays valid even
if the second reallocation fails.</description><pubDate>Wed, 22 May 2024 08:30:37 +0000</pubDate></item><item><title>CVE-2021-47484 | octeontx2-af: Fix possible null pointer dereference.</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47484</link><description>In the Linux kernel, the following vulnerability has been resolved:

octeontx2-af: Fix possible null pointer dereference.

This patch fixes possible null pointer dereference in files
"rvu_debugfs.c" and "rvu_nix.c"</description><pubDate>Wed, 22 May 2024 08:30:38 +0000</pubDate></item><item><title>CVE-2021-47485 | IB/qib: Protect from buffer overflow in struct qib_user_sdma_pkt fields</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47485</link><description>In the Linux kernel, the following vulnerability has been resolved:

IB/qib: Protect from buffer overflow in struct qib_user_sdma_pkt fields

Overflowing either addrlimit or bytes_togo can allow userspace to trigger
a buffer overflow of kernel memory. Check for overflows in all the places
doing math on user controlled buffers.</description><pubDate>Wed, 22 May 2024 08:30:38 +0000</pubDate></item><item><title>CVE-2021-47486 | riscv, bpf: Fix potential NULL dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47486</link><description>In the Linux kernel, the following vulnerability has been resolved:

riscv, bpf: Fix potential NULL dereference

The bpf_jit_binary_free() function requires a non-NULL argument. When
the RISC-V BPF JIT fails to converge in NR_JIT_ITERATIONS steps,
jit_data-&gt;header will be NULL, which triggers a NULL
dereference. Avoid this by checking the argument, prior calling the
function.</description><pubDate>Wed, 22 May 2024 08:30:39 +0000</pubDate></item><item><title>CVE-2021-47487 | drm/amdgpu: fix out of bounds write</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47487</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: fix out of bounds write

Size can be any value and is user controlled resulting in overwriting the
40 byte array wr_buf with an arbitrary length of data from buf.</description><pubDate>Wed, 22 May 2024 08:30:39 +0000</pubDate></item><item><title>CVE-2021-47488 | cgroup: Fix memory leak caused by missing cgroup_bpf_offline</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47488</link><description>In the Linux kernel, the following vulnerability has been resolved:

cgroup: Fix memory leak caused by missing cgroup_bpf_offline

When enabling CONFIG_CGROUP_BPF, kmemleak can be observed by running
the command as below:

    $mount -t cgroup -o none,name=foo cgroup cgroup/
    $umount cgroup/

unreferenced object 0xc3585c40 (size 64):
  comm "mount", pid 425, jiffies 4294959825 (age 31.990s)
  hex dump (first 32 bytes):
    01 00 00 80 84 8c 28 c0 00 00 00 00 00 00 00 00  ......(.........
    00 00 00 00 00 00 00 00 6c 43 a0 c3 00 00 00 00  ........lC......
  backtrace:
    [] cgroup_bpf_inherit+0x44/0x24c
    [&lt;1f03679c&gt;] cgroup_setup_root+0x174/0x37c
    [] cgroup1_get_tree+0x2c0/0x4a0
    [] vfs_get_tree+0x24/0x108
    [] path_mount+0x384/0x988
    [] do_mount+0x64/0x9c
    [&lt;208c9cfe&gt;] sys_mount+0xfc/0x1f4
    [&lt;06dd06e0&gt;] ret_fast_syscall+0x0/0x48
    [] 0xbeb4daa8

This is because that since the commit 2b0d3d3e4fcf ("percpu_ref: reduce
memory footprint of percpu_ref in fast path") root_cgrp-&gt;bpf.refcnt.data
is allocated by the function percpu_ref_init in cgroup_bpf_inherit which
is called by cgroup_setup_root when mounting, but not freed along with
root_cgrp when umounting. Adding cgroup_bpf_offline which calls
percpu_ref_kill to cgroup_kill_sb can free root_cgrp-&gt;bpf.refcnt.data in
umount path.

This patch also fixes the commit 4bfc0bb2c60e ("bpf: decouple the lifetime
of cgroup_bpf from cgroup itself"). A cgroup_bpf_offline is needed to do a
cleanup that frees the resources which are allocated by cgroup_bpf_inherit
in cgroup_setup_root.

And inside cgroup_bpf_offline, cgroup_get() is at the beginning and
cgroup_put is at the end of cgroup_bpf_release which is called by
cgroup_bpf_offline. So cgroup_bpf_offline can keep the balance of
cgroup's refcount.</description><pubDate>Wed, 22 May 2024 08:30:39 +0000</pubDate></item><item><title>CVE-2021-47489 | drm/amdgpu: Fix even more out of bound writes from debugfs</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47489</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix even more out of bound writes from debugfs

CVE-2021-42327 was fixed by:

commit f23750b5b3d98653b31d4469592935ef6364ad67
Author: Thelford Williams 
Date:   Wed Oct 13 16:04:13 2021 -0400

    drm/amdgpu: fix out of bounds write

but amdgpu_dm_debugfs.c contains more of the same issue so fix the
remaining ones.

v2:
	* Add missing fix in dp_max_bpc_write (Harry Wentland)</description><pubDate>Wed, 22 May 2024 08:30:40 +0000</pubDate></item><item><title>CVE-2021-47490 | drm/ttm: fix memleak in ttm_transfered_destroy</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47490</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/ttm: fix memleak in ttm_transfered_destroy

We need to cleanup the fences for ghost objects as well.

Bug: https://bugzilla.kernel.org/show_bug.cgi?id=214029
Bug: https://bugzilla.kernel.org/show_bug.cgi?id=214447</description><pubDate>Wed, 22 May 2024 08:30:40 +0000</pubDate></item><item><title>CVE-2021-47491 | mm: khugepaged: skip huge page collapse for special files</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47491</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm: khugepaged: skip huge page collapse for special files

The read-only THP for filesystems will collapse THP for files opened
readonly and mapped with VM_EXEC.  The intended usecase is to avoid TLB
misses for large text segments.  But it doesn't restrict the file types
so a THP could be collapsed for a non-regular file, for example, block
device, if it is opened readonly and mapped with EXEC permission.  This
may cause bugs, like [1] and [2].

This is definitely not the intended usecase, so just collapse THP for
regular files in order to close the attack surface.

[shy828301@gmail.com: fix vm_file check [3]]</description><pubDate>Wed, 22 May 2024 08:30:41 +0000</pubDate></item><item><title>CVE-2021-47492 | mm, thp: bail out early in collapse_file for writeback page</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47492</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm, thp: bail out early in collapse_file for writeback page

Currently collapse_file does not explicitly check PG_writeback, instead,
page_has_private and try_to_release_page are used to filter writeback
pages.  This does not work for xfs with blocksize equal to or larger
than pagesize, because in such case xfs has no page-&gt;private.

This makes collapse_file bail out early for writeback page.  Otherwise,
xfs end_page_writeback will panic as follows.

  page:fffffe00201bcc80 refcount:0 mapcount:0 mapping:ffff0003f88c86a8 index:0x0 pfn:0x84ef32
  aops:xfs_address_space_operations [xfs] ino:30000b7 dentry name:"libtest.so"
  flags: 0x57fffe0000008027(locked|referenced|uptodate|active|writeback)
  raw: 57fffe0000008027 ffff80001b48bc28 ffff80001b48bc28 ffff0003f88c86a8
  raw: 0000000000000000 0000000000000000 00000000ffffffff ffff0000c3e9a000
  page dumped because: VM_BUG_ON_PAGE(((unsigned int) page_ref_count(page) + 127u &lt;= 127u))
  page-&gt;mem_cgroup:ffff0000c3e9a000
  ------------[ cut here ]------------
  kernel BUG at include/linux/mm.h:1212!
  Internal error: Oops - BUG: 0 [#1] SMP
  Modules linked in:
  BUG: Bad page state in process khugepaged  pfn:84ef32
   xfs(E)
  page:fffffe00201bcc80 refcount:0 mapcount:0 mapping:0 index:0x0 pfn:0x84ef32
   libcrc32c(E) rfkill(E) aes_ce_blk(E) crypto_simd(E) ...
  CPU: 25 PID: 0 Comm: swapper/25 Kdump: loaded Tainted: ...
  pstate: 60400005 (nZCv daif +PAN -UAO -TCO BTYPE=--)
  Call trace:
    end_page_writeback+0x1c0/0x214
    iomap_finish_page_writeback+0x13c/0x204
    iomap_finish_ioend+0xe8/0x19c
    iomap_writepage_end_bio+0x38/0x50
    bio_endio+0x168/0x1ec
    blk_update_request+0x278/0x3f0
    blk_mq_end_request+0x34/0x15c
    virtblk_request_done+0x38/0x74 [virtio_blk]
    blk_done_softirq+0xc4/0x110
    __do_softirq+0x128/0x38c
    __irq_exit_rcu+0x118/0x150
    irq_exit+0x1c/0x30
    __handle_domain_irq+0x8c/0xf0
    gic_handle_irq+0x84/0x108
    el1_irq+0xcc/0x180
    arch_cpu_idle+0x18/0x40
    default_idle_call+0x4c/0x1a0
    cpuidle_idle_call+0x168/0x1e0
    do_idle+0xb4/0x104
    cpu_startup_entry+0x30/0x9c
    secondary_start_kernel+0x104/0x180
  Code: d4210000 b0006161 910c8021 94013f4d (d4210000)
  ---[ end trace 4a88c6a074082f8c ]---
  Kernel panic - not syncing: Oops - BUG: Fatal exception in interrupt</description><pubDate>Wed, 22 May 2024 08:30:41 +0000</pubDate></item><item><title>CVE-2021-47493 | ocfs2: fix race between searching chunks and release journal_head from buffer_head</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47493</link><description>In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix race between searching chunks and release journal_head from buffer_head

Encountered a race between ocfs2_test_bg_bit_allocatable() and
jbd2_journal_put_journal_head() resulting in the below vmcore.

  PID: 106879  TASK: ffff880244ba9c00  CPU: 2   COMMAND: "loop3"
  Call trace:
    panic
    oops_end
    no_context
    __bad_area_nosemaphore
    bad_area_nosemaphore
    __do_page_fault
    do_page_fault
    page_fault
      [exception RIP: ocfs2_block_group_find_clear_bits+316]
    ocfs2_block_group_find_clear_bits [ocfs2]
    ocfs2_cluster_group_search [ocfs2]
    ocfs2_search_chain [ocfs2]
    ocfs2_claim_suballoc_bits [ocfs2]
    __ocfs2_claim_clusters [ocfs2]
    ocfs2_claim_clusters [ocfs2]
    ocfs2_local_alloc_slide_window [ocfs2]
    ocfs2_reserve_local_alloc_bits [ocfs2]
    ocfs2_reserve_clusters_with_limit [ocfs2]
    ocfs2_reserve_clusters [ocfs2]
    ocfs2_lock_refcount_allocators [ocfs2]
    ocfs2_make_clusters_writable [ocfs2]
    ocfs2_replace_cow [ocfs2]
    ocfs2_refcount_cow [ocfs2]
    ocfs2_file_write_iter [ocfs2]
    lo_rw_aio
    loop_queue_work
    kthread_worker_fn
    kthread
    ret_from_fork

When ocfs2_test_bg_bit_allocatable() called bh2jh(bg_bh), the
bg_bh-&gt;b_private NULL as jbd2_journal_put_journal_head() raced and
released the jounal head from the buffer head.  Needed to take bit lock
for the bit 'BH_JournalHead' to fix this race.</description><pubDate>Wed, 22 May 2024 08:30:41 +0000</pubDate></item><item><title>CVE-2021-47494 | cfg80211: fix management registrations locking</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47494</link><description>In the Linux kernel, the following vulnerability has been resolved:

cfg80211: fix management registrations locking

The management registrations locking was broken, the list was
locked for each wdev, but cfg80211_mgmt_registrations_update()
iterated it without holding all the correct spinlocks, causing
list corruption.

Rather than trying to fix it with fine-grained locking, just
move the lock to the wiphy/rdev (still need the list on each
wdev), we already need to hold the wdev lock to change it, so
there's no contention on the lock in any case. This trivially
fixes the bug since we hold one wdev's lock already, and now
will hold the lock that protects all lists.</description><pubDate>Wed, 22 May 2024 08:30:42 +0000</pubDate></item><item><title>CVE-2021-47495 | usbnet: sanity check for maxpacket</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47495</link><description>In the Linux kernel, the following vulnerability has been resolved:

usbnet: sanity check for maxpacket

maxpacket of 0 makes no sense and oopses as we need to divide
by it. Give up.

V2: fixed typo in log and stylistic issues</description><pubDate>Wed, 22 May 2024 08:30:42 +0000</pubDate></item><item><title>CVE-2021-47496 | net/tls: Fix flipped sign in tls_err_abort() calls</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47496</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/tls: Fix flipped sign in tls_err_abort() calls

sk-&gt;sk_err appears to expect a positive value, a convention that ktls
doesn't always follow and that leads to memory corruption in other code.
For instance,

    [kworker]
    tls_encrypt_done(..., err=)
      tls_err_abort(.., err)
        sk-&gt;sk_err = err;

    [task]
    splice_from_pipe_feed
      ...
        tls_sw_do_sendpage
          if (sk-&gt;sk_err) {
            ret = -sk-&gt;sk_err;  // ret is positive

    splice_from_pipe_feed (continued)
      ret = actor(...)  // ret is still positive and interpreted as bytes
                        // written, resulting in underflow of buf-&gt;len and
                        // sd-&gt;len, leading to huge buf-&gt;offset and bogus
                        // addresses computed in later calls to actor()

Fix all tls_err_abort() callers to pass a negative error code
consistently and centralize the error-prone sign flip there, throwing in
a warning to catch future misuse and uninlining the function so it
really does only warn once.</description><pubDate>Wed, 22 May 2024 08:30:42 +0000</pubDate></item><item><title>CVE-2021-47497 | nvmem: Fix shift-out-of-bound (UBSAN) with byte size cells</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47497</link><description>In the Linux kernel, the following vulnerability has been resolved:

nvmem: Fix shift-out-of-bound (UBSAN) with byte size cells

If a cell has 'nbits' equal to a multiple of BITS_PER_BYTE the logic

 *p &amp;= GENMASK((cell-&gt;nbits%BITS_PER_BYTE) - 1, 0);

will become undefined behavior because nbits modulo BITS_PER_BYTE is 0, and we
subtract one from that making a large number that is then shifted more than the
number of bits that fit into an unsigned long.

UBSAN reports this problem:

 UBSAN: shift-out-of-bounds in drivers/nvmem/core.c:1386:8
 shift exponent 64 is too large for 64-bit type 'unsigned long'
 CPU: 6 PID: 7 Comm: kworker/u16:0 Not tainted 5.15.0-rc3+ #9
 Hardware name: Google Lazor (rev3+) with KB Backlight (DT)
 Workqueue: events_unbound deferred_probe_work_func
 Call trace:
  dump_backtrace+0x0/0x170
  show_stack+0x24/0x30
  dump_stack_lvl+0x64/0x7c
  dump_stack+0x18/0x38
  ubsan_epilogue+0x10/0x54
  __ubsan_handle_shift_out_of_bounds+0x180/0x194
  __nvmem_cell_read+0x1ec/0x21c
  nvmem_cell_read+0x58/0x94
  nvmem_cell_read_variable_common+0x4c/0xb0
  nvmem_cell_read_variable_le_u32+0x40/0x100
  a6xx_gpu_init+0x170/0x2f4
  adreno_bind+0x174/0x284
  component_bind_all+0xf0/0x264
  msm_drm_bind+0x1d8/0x7a0
  try_to_bring_up_master+0x164/0x1ac
  __component_add+0xbc/0x13c
  component_add+0x20/0x2c
  dp_display_probe+0x340/0x384
  platform_probe+0xc0/0x100
  really_probe+0x110/0x304
  __driver_probe_device+0xb8/0x120
  driver_probe_device+0x4c/0xfc
  __device_attach_driver+0xb0/0x128
  bus_for_each_drv+0x90/0xdc
  __device_attach+0xc8/0x174
  device_initial_probe+0x20/0x2c
  bus_probe_device+0x40/0xa4
  deferred_probe_work_func+0x7c/0xb8
  process_one_work+0x128/0x21c
  process_scheduled_works+0x40/0x54
  worker_thread+0x1ec/0x2a8
  kthread+0x138/0x158
  ret_from_fork+0x10/0x20

Fix it by making sure there are any bits to mask out.</description><pubDate>Wed, 22 May 2024 08:30:43 +0000</pubDate></item><item><title>CVE-2021-47498 | dm rq: don&amp;#x27;t queue request to blk-mq during DM suspend</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47498</link><description>In the Linux kernel, the following vulnerability has been resolved:

dm rq: don't queue request to blk-mq during DM suspend

DM uses blk-mq's quiesce/unquiesce to stop/start device mapper queue.

But blk-mq's unquiesce may come from outside events, such as elevator
switch, updating nr_requests or others, and request may come during
suspend, so simply ask for blk-mq to requeue it.

Fixes one kernel panic issue when running updating nr_requests and
dm-mpath suspend/resume stress test.</description><pubDate>Wed, 22 May 2024 08:30:43 +0000</pubDate></item><item><title>CVE-2023-6487 | LuckyWP Table of Contents &amp;lt;= 2.1.4 - Authenticated(Administrator+) Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6487</link><description>The LuckyWP Table of Contents plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘Header Title' field in all versions up to and including 2.1.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Wed, 22 May 2024 07:43:03 +0000</pubDate></item><item><title>CVE-2024-0632 | Automatic Translator with Google Translate &amp;lt;= 1.5.4 - Authenticated (Administrator+) Stored Cross-Site Scripting via Custom Font</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0632</link><description>The Automatic Translator with Google Translate plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the custom font setting in all versions up to, and including, 1.5.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Wed, 22 May 2024 07:43:04 +0000</pubDate></item><item><title>CVE-2024-2119 | LuckyWP Table of Contents &amp;lt;= 2.1.4 - Reflected Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2119</link><description>The LuckyWP Table of Contents plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the attrs parameter in all versions up to, and including, 2.1.4 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Wed, 22 May 2024 07:43:04 +0000</pubDate></item><item><title>CVE-2024-2163 | Ninja Beaver Add-ons for Beaver Builder &amp;lt;= 2.4.5 -  Authenticated (Contributor+) Stored Cross-Site Scripting via Widgets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2163</link><description>The Ninja Beaver Add-ons for Beaver Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all versions up to, and including, 2.4.5 due to insufficient input sanitization and output escaping on user supplied attributes such as urls. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 07:43:04 +0000</pubDate></item><item><title>CVE-2024-2953 | LuckyWP Table of Contents &amp;lt;= 2.1.4 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2953</link><description>The LuckyWP Table of Contents plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple parameters in versions up to, and including, 2.1.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers with Contributor permissions and above to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 07:43:05 +0000</pubDate></item><item><title>CVE-2024-32988 | 'OfferBox' App for Android versions 2.0.0 to 2.3.17 and 'OfferBox' App for iOS versions 2.1.7 to 2.6.14 use a hard-coded secret key for JWT....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-32988</link><description>'OfferBox' App for Android versions 2.0.0 to 2.3.17 and 'OfferBox' App for iOS versions 2.1.7 to 2.6.14 use a hard-coded secret key for JWT. Secret key for JWT may be retrieved if the application binary is reverse-engineered.</description><pubDate>Wed, 22 May 2024 07:43:05 +0000</pubDate></item><item><title>CVE-2024-3666 | Opal Estate Pro – Property Management and Submission &amp;lt;= 1.7.6 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3666</link><description>The Opal Estate Pro – Property Management and Submission plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the agent latitude and longitude parameters in all versions up to, and including, 1.7.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 07:43:06 +0000</pubDate></item><item><title>CVE-2024-3671 | Print-O-Matic &amp;lt;= 2.1.10 - Authenticated (Contributor+) Stored Cross-Site Scripting via Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3671</link><description>The Print-O-Matic plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'print-me' shortcode in all versions up to, and including, 2.1.10 due to insufficient input sanitization and output escaping on user supplied attributes such as 'tag'. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 07:43:06 +0000</pubDate></item><item><title>CVE-2024-4157 | Contact Form Plugin by Fluent Forms for Quiz, Survey, and Drag &amp;amp; Drop WP Form Builder &amp;lt;= 5.1.15 - PHP Object Injection via extractDynamicValues</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4157</link><description>The Contact Form Plugin by Fluent Forms for Quiz, Survey, and Drag &amp; Drop WP Form Builder plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 5.1.15 via deserialization of untrusted input in the extractDynamicValues function. This makes it possible for authenticated attackers, with contributor-level access and above, to inject a PHP Object. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code. Successful exploitation requires the attacker to have "View Form" and "Manage Form" permissions, which must be explicitly set by an administrator. However, this requirement can be bypassed when this vulnerability is chained with CVE-2024-2771.</description><pubDate>Wed, 22 May 2024 07:43:07 +0000</pubDate></item><item><title>CVE-2024-5147 | WPZOOM Addons for Elementor (Templates, Widgets) &amp;lt;= 1.1.37 - Unauthenticated Local File Inclusion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5147</link><description>The WPZOOM Addons for Elementor (Templates, Widgets) plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.1.37 via the 'grid_style' parameter. This makes it possible for unauthenticated attackers to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description><pubDate>Wed, 22 May 2024 07:43:07 +0000</pubDate></item><item><title>CVE-2024-1446 | NextScripts: Social Networks Auto-Poster &amp;lt;= 4.4.3 - Cross-Site Request Forgery to Arbitrary Post Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1446</link><description>The NextScripts: Social Networks Auto-Poster plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 4.4.3. This is due to missing or incorrect nonce validation on the nxssnap-reposter page. This makes it possible for unauthenticated attackers to delete arbitrary posts or pages via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 22 May 2024 07:07:47 +0000</pubDate></item><item><title>CVE-2024-1762 | NextScripts: Social Networks Auto-Poster &amp;lt;= 4.4.3 - Unauthenticated Stored Cross-Site Scripting via User Agent</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1762</link><description>The NextScripts: Social Networks Auto-Poster plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the HTTP_USER_AGENT header in all versions up to, and including, 4.4.3 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This requires the victim to select view "All Cron Events" in order for the injection to fire.</description><pubDate>Wed, 22 May 2024 07:07:47 +0000</pubDate></item><item><title>CVE-2024-2088 | NextScripts: Social Networks Auto-Poster &amp;lt;= 4.4.3 - Authenticated(Subscriber+) Sensitive Information Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2088</link><description>The NextScripts: Social Networks Auto-Poster plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 4.4.3 via the 'nxs_getExpSettings' function. This makes it possible for authenticated attackers, with subscriber access and above, to extract sensitive data including social network API keys and secrets.</description><pubDate>Wed, 22 May 2024 07:07:47 +0000</pubDate></item><item><title>CVE-2024-3198 | WP Font Awesome Share Icons &amp;lt;= 1.1.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3198</link><description>The WP Font Awesome Share Icons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 
'wpfai_social' shortcode in all versions up to, and including, 1.1.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 07:07:48 +0000</pubDate></item><item><title>CVE-2024-3663 | WP Scraper &amp;lt;= 5.7 - Missing Authorization to Arbitrary Page/Post Creation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3663</link><description>The WP Scraper plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on the wp_scraper_multi_scrape_action() function in all versions up to, and including, 5.7. This makes it possible for authenticated attackers, with subscriber-level access and above, to create arbitrary pages and posts.</description><pubDate>Wed, 22 May 2024 07:07:48 +0000</pubDate></item><item><title>CVE-2024-3927 | Element Pack Elementor Addons (Header Footer, Template Library, Dynamic Grid &amp;amp; Carousel, Remote Arrows) &amp;lt;= 5.6.3 - Form Submission Admin Email Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3927</link><description>The Element Pack Elementor Addons (Header Footer, Template Library, Dynamic Grid &amp; Carousel, Remote Arrows) plugin for WordPress is vulnerable to Form Submission Admin Email Bypass  in all versions up to, and including, 5.6.3. This is due to the plugin not properly checking for all variations of an administrators emails. This makes it possible for unauthenticated attackers to bypass the restriction using a +value when submitting the contact form.</description><pubDate>Wed, 22 May 2024 07:07:48 +0000</pubDate></item><item><title>CVE-2021-47433 | btrfs: fix abort logic in btrfs_replace_file_extents</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47433</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix abort logic in btrfs_replace_file_extents

Error injection testing uncovered a case where we'd end up with a
corrupt file system with a missing extent in the middle of a file.  This
occurs because the if statement to decide if we should abort is wrong.

The only way we would abort in this case is if we got a ret !=
-EOPNOTSUPP and we called from the file clone code.  However the
prealloc code uses this path too.  Instead we need to abort if there is
an error, and the only error we _don't_ abort on is -EOPNOTSUPP and only
if we came from the clone file code.</description><pubDate>Wed, 22 May 2024 06:31:14 +0000</pubDate></item><item><title>CVE-2021-47434 | xhci: Fix command ring pointer corruption while aborting a command</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47434</link><description>In the Linux kernel, the following vulnerability has been resolved:

xhci: Fix command ring pointer corruption while aborting a command

The command ring pointer is located at [6:63] bits of the command
ring control register (CRCR). All the control bits like command stop,
abort are located at [0:3] bits. While aborting a command, we read the
CRCR and set the abort bit and write to the CRCR. The read will always
give command ring pointer as all zeros. So we essentially write only
the control bits. Since we split the 64 bit write into two 32 bit writes,
there is a possibility of xHC command ring stopped before the upper
dword (all zeros) is written. If that happens, xHC updates the upper
dword of its internal command ring pointer with all zeros. Next time,
when the command ring is restarted, we see xHC memory access failures.
Fix this issue by only writing to the lower dword of CRCR where all
control bits are located.</description><pubDate>Wed, 22 May 2024 06:31:14 +0000</pubDate></item><item><title>CVE-2021-47435 | dm: fix mempool NULL pointer race when completing IO</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47435</link><description>In the Linux kernel, the following vulnerability has been resolved:

dm: fix mempool NULL pointer race when completing IO

dm_io_dec_pending() calls end_io_acct() first and will then dec md
in-flight pending count. But if a task is swapping DM table at same
time this can result in a crash due to mempool-&gt;elements being NULL:

task1                             task2
do_resume
 -&gt;do_suspend
  -&gt;dm_wait_for_completion
                                  bio_endio
				   -&gt;clone_endio
				    -&gt;dm_io_dec_pending
				     -&gt;end_io_acct
				      -&gt;wakeup task1
 -&gt;dm_swap_table
  -&gt;__bind
   -&gt;__bind_mempools
    -&gt;bioset_exit
     -&gt;mempool_exit
                                     -&gt;free_io

[ 67.330330] Unable to handle kernel NULL pointer dereference at
virtual address 0000000000000000
......
[ 67.330494] pstate: 80400085 (Nzcv daIf +PAN -UAO)
[ 67.330510] pc : mempool_free+0x70/0xa0
[ 67.330515] lr : mempool_free+0x4c/0xa0
[ 67.330520] sp : ffffff8008013b20
[ 67.330524] x29: ffffff8008013b20 x28: 0000000000000004
[ 67.330530] x27: ffffffa8c2ff40a0 x26: 00000000ffff1cc8
[ 67.330535] x25: 0000000000000000 x24: ffffffdada34c800
[ 67.330541] x23: 0000000000000000 x22: ffffffdada34c800
[ 67.330547] x21: 00000000ffff1cc8 x20: ffffffd9a1304d80
[ 67.330552] x19: ffffffdada34c970 x18: 000000b312625d9c
[ 67.330558] x17: 00000000002dcfbf x16: 00000000000006dd
[ 67.330563] x15: 000000000093b41e x14: 0000000000000010
[ 67.330569] x13: 0000000000007f7a x12: 0000000034155555
[ 67.330574] x11: 0000000000000001 x10: 0000000000000001
[ 67.330579] x9 : 0000000000000000 x8 : 0000000000000000
[ 67.330585] x7 : 0000000000000000 x6 : ffffff80148b5c1a
[ 67.330590] x5 : ffffff8008013ae0 x4 : 0000000000000001
[ 67.330596] x3 : ffffff80080139c8 x2 : ffffff801083bab8
[ 67.330601] x1 : 0000000000000000 x0 : ffffffdada34c970
[ 67.330609] Call trace:
[ 67.330616] mempool_free+0x70/0xa0
[ 67.330627] bio_put+0xf8/0x110
[ 67.330638] dec_pending+0x13c/0x230
[ 67.330644] clone_endio+0x90/0x180
[ 67.330649] bio_endio+0x198/0x1b8
[ 67.330655] dec_pending+0x190/0x230
[ 67.330660] clone_endio+0x90/0x180
[ 67.330665] bio_endio+0x198/0x1b8
[ 67.330673] blk_update_request+0x214/0x428
[ 67.330683] scsi_end_request+0x2c/0x300
[ 67.330688] scsi_io_completion+0xa0/0x710
[ 67.330695] scsi_finish_command+0xd8/0x110
[ 67.330700] scsi_softirq_done+0x114/0x148
[ 67.330708] blk_done_softirq+0x74/0xd0
[ 67.330716] __do_softirq+0x18c/0x374
[ 67.330724] irq_exit+0xb4/0xb8
[ 67.330732] __handle_domain_irq+0x84/0xc0
[ 67.330737] gic_handle_irq+0x148/0x1b0
[ 67.330744] el1_irq+0xe8/0x190
[ 67.330753] lpm_cpuidle_enter+0x4f8/0x538
[ 67.330759] cpuidle_enter_state+0x1fc/0x398
[ 67.330764] cpuidle_enter+0x18/0x20
[ 67.330772] do_idle+0x1b4/0x290
[ 67.330778] cpu_startup_entry+0x20/0x28
[ 67.330786] secondary_start_kernel+0x160/0x170

Fix this by:
1) Establishing pointers to 'struct dm_io' members in
dm_io_dec_pending() so that they may be passed into end_io_acct()
_after_ free_io() is called.
2) Moving end_io_acct() after free_io().</description><pubDate>Wed, 22 May 2024 06:31:15 +0000</pubDate></item><item><title>CVE-2021-47436 | usb: musb: dsps: Fix the probe error path</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47436</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: musb: dsps: Fix the probe error path

Commit 7c75bde329d7 ("usb: musb: musb_dsps: request_irq() after
initializing musb") has inverted the calls to
dsps_setup_optional_vbus_irq() and dsps_create_musb_pdev() without
updating correctly the error path. dsps_create_musb_pdev() allocates and
registers a new platform device which must be unregistered and freed
with platform_device_unregister(), and this is missing upon
dsps_setup_optional_vbus_irq() error.

While on the master branch it seems not to trigger any issue, I observed
a kernel crash because of a NULL pointer dereference with a v5.10.70
stable kernel where the patch mentioned above was backported. With this
kernel version, -EPROBE_DEFER is returned the first time
dsps_setup_optional_vbus_irq() is called which triggers the probe to
error out without unregistering the platform device. Unfortunately, on
the Beagle Bone Black Wireless, the platform device still living in the
system is being used by the USB Ethernet gadget driver, which during the
boot phase triggers the crash.

My limited knowledge of the musb world prevents me to revert this commit
which was sent to silence a robot warning which, as far as I understand,
does not make sense. The goal of this patch was to prevent an IRQ to
fire before the platform device being registered. I think this cannot
ever happen due to the fact that enabling the interrupts is done by the
-&gt;enable() callback of the platform musb device, and this platform
device must be already registered in order for the core or any other
user to use this callback.

Hence, I decided to fix the error path, which might prevent future
errors on mainline kernels while also fixing older ones.</description><pubDate>Wed, 22 May 2024 06:31:15 +0000</pubDate></item><item><title>CVE-2021-47437 | iio: adis16475: fix deadlock on frequency set</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47437</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adis16475: fix deadlock on frequency set

With commit 39c024b51b560
("iio: adis16475: improve sync scale mode handling"), two deadlocks were
introduced:
 1) The call to 'adis_write_reg_16()' was not changed to it's unlocked
    version.
 2) The lock was not being released on the success path of the function.

This change fixes both these issues.</description><pubDate>Wed, 22 May 2024 06:31:15 +0000</pubDate></item><item><title>CVE-2021-47438 | net/mlx5e: Fix memory leak in mlx5_core_destroy_cq() error path</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47438</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Fix memory leak in mlx5_core_destroy_cq() error path

Prior to this patch in case mlx5_core_destroy_cq() failed it returns
without completing all destroy operations and that leads to memory leak.
Instead, complete the destroy flow before return error.

Also move mlx5_debug_cq_remove() to the beginning of mlx5_core_destroy_cq()
to be symmetrical with mlx5_core_create_cq().

kmemleak complains on:

unreferenced object 0xc000000038625100 (size 64):
  comm "ethtool", pid 28301, jiffies 4298062946 (age 785.380s)
  hex dump (first 32 bytes):
    60 01 48 94 00 00 00 c0 b8 05 34 c3 00 00 00 c0  `.H.......4.....
    02 00 00 00 00 00 00 00 00 db 7d c1 00 00 00 c0  ..........}.....
  backtrace:
    [&lt;000000009e8643cb&gt;] add_res_tree+0xd0/0x270 [mlx5_core]
    [&lt;00000000e7cb8e6c&gt;] mlx5_debug_cq_add+0x5c/0xc0 [mlx5_core]
    [&lt;000000002a12918f&gt;] mlx5_core_create_cq+0x1d0/0x2d0 [mlx5_core]
    [&lt;00000000cef0a696&gt;] mlx5e_create_cq+0x210/0x3f0 [mlx5_core]
    [&lt;000000009c642c26&gt;] mlx5e_open_cq+0xb4/0x130 [mlx5_core]
    [&lt;0000000058dfa578&gt;] mlx5e_ptp_open+0x7f4/0xe10 [mlx5_core]
    [&lt;0000000081839561&gt;] mlx5e_open_channels+0x9cc/0x13e0 [mlx5_core]
    [&lt;0000000009cf05d4&gt;] mlx5e_switch_priv_channels+0xa4/0x230
[mlx5_core]
    [&lt;0000000042bbedd8&gt;] mlx5e_safe_switch_params+0x14c/0x300
[mlx5_core]
    [&lt;0000000004bc9db8&gt;] set_pflag_tx_port_ts+0x9c/0x160 [mlx5_core]
    [&lt;00000000a0553443&gt;] mlx5e_set_priv_flags+0xd0/0x1b0 [mlx5_core]
    [&lt;00000000a8f3d84b&gt;] ethnl_set_privflags+0x234/0x2d0
    [&lt;00000000fd27f27c&gt;] genl_family_rcv_msg_doit+0x108/0x1d0
    [&lt;00000000f495e2bb&gt;] genl_family_rcv_msg+0xe4/0x1f0
    [&lt;00000000646c5c2c&gt;] genl_rcv_msg+0x78/0x120
    [&lt;00000000d53e384e&gt;] netlink_rcv_skb+0x74/0x1a0</description><pubDate>Wed, 22 May 2024 06:31:16 +0000</pubDate></item><item><title>CVE-2021-47439 | net: dsa: microchip: Added the condition for scheduling ksz_mib_read_work</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47439</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: dsa: microchip: Added the condition for scheduling ksz_mib_read_work

When the ksz module is installed and removed using rmmod, kernel crashes
with null pointer dereferrence error. During rmmod, ksz_switch_remove
function tries to cancel the mib_read_workqueue using
cancel_delayed_work_sync routine and unregister switch from dsa.

During dsa_unregister_switch it calls ksz_mac_link_down, which in turn
reschedules the workqueue since mib_interval is non-zero.
Due to which queue executed after mib_interval and it tries to access
dp-&gt;slave. But the slave is unregistered in the ksz_switch_remove
function. Hence kernel crashes.

To avoid this crash, before canceling the workqueue, resetted the
mib_interval to 0.

v1 -&gt; v2:
-Removed the if condition in ksz_mib_read_work</description><pubDate>Wed, 22 May 2024 06:31:16 +0000</pubDate></item><item><title>CVE-2021-47440 | net: encx24j600: check error in devm_regmap_init_encx24j600</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47440</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: encx24j600: check error in devm_regmap_init_encx24j600

devm_regmap_init may return error which caused by like out of memory,
this will results in null pointer dereference later when reading
or writing register:

general protection fault in encx24j600_spi_probe
KASAN: null-ptr-deref in range [0x0000000000000090-0x0000000000000097]
CPU: 0 PID: 286 Comm: spi-encx24j600- Not tainted 5.15.0-rc2-00142-g9978db750e31-dirty #11 9c53a778c1306b1b02359f3c2bbedc0222cba652
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
RIP: 0010:regcache_cache_bypass drivers/base/regmap/regcache.c:540
Code: 54 41 89 f4 55 53 48 89 fb 48 83 ec 08 e8 26 94 a8 fe 48 8d bb a0 00 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 &lt;80&gt; 3c 02 00 0f 85 4a 03 00 00 4c 8d ab b0 00 00 00 48 8b ab a0 00
RSP: 0018:ffffc900010476b8 EFLAGS: 00010207
RAX: dffffc0000000000 RBX: fffffffffffffff4 RCX: 0000000000000000
RDX: 0000000000000012 RSI: ffff888002de0000 RDI: 0000000000000094
RBP: ffff888013c9a000 R08: 0000000000000000 R09: fffffbfff3f9cc6a
R10: ffffc900010476e8 R11: fffffbfff3f9cc69 R12: 0000000000000001
R13: 000000000000000a R14: ffff888013c9af54 R15: ffff888013c9ad08
FS:  00007ffa984ab580(0000) GS:ffff88801fe00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000055a6384136c8 CR3: 000000003bbe6003 CR4: 0000000000770ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 encx24j600_spi_probe drivers/net/ethernet/microchip/encx24j600.c:459
 spi_probe drivers/spi/spi.c:397
 really_probe drivers/base/dd.c:517
 __driver_probe_device drivers/base/dd.c:751
 driver_probe_device drivers/base/dd.c:782
 __device_attach_driver drivers/base/dd.c:899
 bus_for_each_drv drivers/base/bus.c:427
 __device_attach drivers/base/dd.c:971
 bus_probe_device drivers/base/bus.c:487
 device_add drivers/base/core.c:3364
 __spi_add_device drivers/spi/spi.c:599
 spi_add_device drivers/spi/spi.c:641
 spi_new_device drivers/spi/spi.c:717
 new_device_store+0x18c/0x1f1 [spi_stub 4e02719357f1ff33f5a43d00630982840568e85e]
 dev_attr_store drivers/base/core.c:2074
 sysfs_kf_write fs/sysfs/file.c:139
 kernfs_fop_write_iter fs/kernfs/file.c:300
 new_sync_write fs/read_write.c:508 (discriminator 4)
 vfs_write fs/read_write.c:594
 ksys_write fs/read_write.c:648
 do_syscall_64 arch/x86/entry/common.c:50
 entry_SYSCALL_64_after_hwframe arch/x86/entry/entry_64.S:113

Add error check in devm_regmap_init_encx24j600 to avoid this situation.</description><pubDate>Wed, 22 May 2024 06:31:17 +0000</pubDate></item><item><title>CVE-2021-47441 | mlxsw: thermal: Fix out-of-bounds memory accesses</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47441</link><description>In the Linux kernel, the following vulnerability has been resolved:

mlxsw: thermal: Fix out-of-bounds memory accesses

Currently, mlxsw allows cooling states to be set above the maximum
cooling state supported by the driver:

 # cat /sys/class/thermal/thermal_zone2/cdev0/type
 mlxsw_fan
 # cat /sys/class/thermal/thermal_zone2/cdev0/max_state
 10
 # echo 18 &gt; /sys/class/thermal/thermal_zone2/cdev0/cur_state
 # echo $?
 0

This results in out-of-bounds memory accesses when thermal state
transition statistics are enabled (CONFIG_THERMAL_STATISTICS=y), as the
transition table is accessed with a too large index (state) [1].

According to the thermal maintainer, it is the responsibility of the
driver to reject such operations [2].

Therefore, return an error when the state to be set exceeds the maximum
cooling state supported by the driver.

To avoid dead code, as suggested by the thermal maintainer [3],
partially revert commit a421ce088ac8 ("mlxsw: core: Extend cooling
device with cooling levels") that tried to interpret these invalid
cooling states (above the maximum) in a special way. The cooling levels
array is not removed in order to prevent the fans going below 20% PWM,
which would cause them to get stuck at 0% PWM.

[1]
BUG: KASAN: slab-out-of-bounds in thermal_cooling_device_stats_update+0x271/0x290
Read of size 4 at addr ffff8881052f7bf8 by task kworker/0:0/5

CPU: 0 PID: 5 Comm: kworker/0:0 Not tainted 5.15.0-rc3-custom-45935-gce1adf704b14 #122
Hardware name: Mellanox Technologies Ltd. "MSN2410-CB2FO"/"SA000874", BIOS 4.6.5 03/08/2016
Workqueue: events_freezable_power_ thermal_zone_device_check
Call Trace:
 dump_stack_lvl+0x8b/0xb3
 print_address_description.constprop.0+0x1f/0x140
 kasan_report.cold+0x7f/0x11b
 thermal_cooling_device_stats_update+0x271/0x290
 __thermal_cdev_update+0x15e/0x4e0
 thermal_cdev_update+0x9f/0xe0
 step_wise_throttle+0x770/0xee0
 thermal_zone_device_update+0x3f6/0xdf0
 process_one_work+0xa42/0x1770
 worker_thread+0x62f/0x13e0
 kthread+0x3ee/0x4e0
 ret_from_fork+0x1f/0x30

Allocated by task 1:
 kasan_save_stack+0x1b/0x40
 __kasan_kmalloc+0x7c/0x90
 thermal_cooling_device_setup_sysfs+0x153/0x2c0
 __thermal_cooling_device_register.part.0+0x25b/0x9c0
 thermal_cooling_device_register+0xb3/0x100
 mlxsw_thermal_init+0x5c5/0x7e0
 __mlxsw_core_bus_device_register+0xcb3/0x19c0
 mlxsw_core_bus_device_register+0x56/0xb0
 mlxsw_pci_probe+0x54f/0x710
 local_pci_probe+0xc6/0x170
 pci_device_probe+0x2b2/0x4d0
 really_probe+0x293/0xd10
 __driver_probe_device+0x2af/0x440
 driver_probe_device+0x51/0x1e0
 __driver_attach+0x21b/0x530
 bus_for_each_dev+0x14c/0x1d0
 bus_add_driver+0x3ac/0x650
 driver_register+0x241/0x3d0
 mlxsw_sp_module_init+0xa2/0x174
 do_one_initcall+0xee/0x5f0
 kernel_init_freeable+0x45a/0x4de
 kernel_init+0x1f/0x210
 ret_from_fork+0x1f/0x30

The buggy address belongs to the object at ffff8881052f7800
 which belongs to the cache kmalloc-1k of size 1024
The buggy address is located 1016 bytes inside of
 1024-byte region [ffff8881052f7800, ffff8881052f7c00)
The buggy address belongs to the page:
page:0000000052355272 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1052f0
head:0000000052355272 order:3 compound_mapcount:0 compound_pincount:0
flags: 0x200000000010200(slab|head|node=0|zone=2)
raw: 0200000000010200 ffffea0005034800 0000000300000003 ffff888100041dc0
raw: 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000
page dumped because: kasan: bad access detected

Memory state around the buggy address:
 ffff8881052f7a80: 00 00 00 00 00 00 04 fc fc fc fc fc fc fc fc fc
 ffff8881052f7b00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
&gt;ffff8881052f7b80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                                                                ^
 ffff8881052f7c00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
 ffff8881052f7c80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc

[2] https://lore.kernel.org/linux-pm/9aca37cb-1629-5c67-
---truncated---</description><pubDate>Wed, 22 May 2024 06:31:17 +0000</pubDate></item><item><title>CVE-2021-47442 | NFC: digital: fix possible memory leak in digital_in_send_sdd_req()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47442</link><description>In the Linux kernel, the following vulnerability has been resolved:

NFC: digital: fix possible memory leak in digital_in_send_sdd_req()

'skb' is allocated in digital_in_send_sdd_req(), but not free when
digital_in_send_cmd() failed, which will cause memory leak. Fix it
by freeing 'skb' if digital_in_send_cmd() return failed.</description><pubDate>Wed, 22 May 2024 06:31:17 +0000</pubDate></item><item><title>CVE-2021-47443 | NFC: digital: fix possible memory leak in digital_tg_listen_mdaa()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47443</link><description>In the Linux kernel, the following vulnerability has been resolved:

NFC: digital: fix possible memory leak in digital_tg_listen_mdaa()

'params' is allocated in digital_tg_listen_mdaa(), but not free when
digital_send_cmd() failed, which will cause memory leak. Fix it by
freeing 'params' if digital_send_cmd() return failed.</description><pubDate>Wed, 22 May 2024 06:31:18 +0000</pubDate></item><item><title>CVE-2021-47444 | drm/edid: In connector_bad_edid() cap num_of_ext by num_blocks read</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47444</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/edid: In connector_bad_edid() cap num_of_ext by num_blocks read

In commit e11f5bd8228f ("drm: Add support for DP 1.4 Compliance edid
corruption test") the function connector_bad_edid() started assuming
that the memory for the EDID passed to it was big enough to hold
`edid[0x7e] + 1` blocks of data (1 extra for the base block). It
completely ignored the fact that the function was passed `num_blocks`
which indicated how much memory had been allocated for the EDID.

Let's fix this by adding a bounds check.

This is important for handling the case where there's an error in the
first block of the EDID. In that case we will call
connector_bad_edid() without having re-allocated memory based on
`edid[0x7e]`.</description><pubDate>Wed, 22 May 2024 06:31:18 +0000</pubDate></item><item><title>CVE-2021-47445 | drm/msm: Fix null pointer dereference on pointer edp</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47445</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm: Fix null pointer dereference on pointer edp

The initialization of pointer dev dereferences pointer edp before
edp is null checked, so there is a potential null pointer deference
issue. Fix this by only dereferencing edp after edp has been null
checked.

Addresses-Coverity: ("Dereference before null check")</description><pubDate>Wed, 22 May 2024 06:31:19 +0000</pubDate></item><item><title>CVE-2021-47446 | drm/msm/a4xx: fix error handling in a4xx_gpu_init()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47446</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm/a4xx: fix error handling in a4xx_gpu_init()

This code returns 1 on error instead of a negative error.  It leads to
an Oops in the caller.  A second problem is that the check for
"if (ret != -ENODATA)" cannot be true because "ret" is set to 1.</description><pubDate>Wed, 22 May 2024 06:31:19 +0000</pubDate></item><item><title>CVE-2021-47447 | drm/msm/a3xx: fix error handling in a3xx_gpu_init()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47447</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm/a3xx: fix error handling in a3xx_gpu_init()

These error paths returned 1 on failure, instead of a negative error
code.  This would lead to an Oops in the caller.  A second problem is
that the check for "if (ret != -ENODATA)" did not work because "ret" was
set to 1.</description><pubDate>Wed, 22 May 2024 06:31:19 +0000</pubDate></item><item><title>CVE-2021-47448 | mptcp: fix possible stall on recvmsg()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47448</link><description>In the Linux kernel, the following vulnerability has been resolved:

mptcp: fix possible stall on recvmsg()

recvmsg() can enter an infinite loop if the caller provides the
MSG_WAITALL, the data present in the receive queue is not sufficient to
fulfill the request, and no more data is received by the peer.

When the above happens, mptcp_wait_data() will always return with
no wait, as the MPTCP_DATA_READY flag checked by such function is
set and never cleared in such code path.

Leveraging the above syzbot was able to trigger an RCU stall:

rcu: INFO: rcu_preempt self-detected stall on CPU
rcu:    0-...!: (10499 ticks this GP) idle=0af/1/0x4000000000000000 softirq=10678/10678 fqs=1
        (t=10500 jiffies g=13089 q=109)
rcu: rcu_preempt kthread starved for 10497 jiffies! g13089 f0x0 RCU_GP_WAIT_FQS(5) -&gt;state=0x0 -&gt;cpu=1
rcu:    Unless rcu_preempt kthread gets sufficient CPU time, OOM is now expected behavior.
rcu: RCU grace-period kthread stack dump:
task:rcu_preempt     state:R  running task     stack:28696 pid:   14 ppid:     2 flags:0x00004000
Call Trace:
 context_switch kernel/sched/core.c:4955 [inline]
 __schedule+0x940/0x26f0 kernel/sched/core.c:6236
 schedule+0xd3/0x270 kernel/sched/core.c:6315
 schedule_timeout+0x14a/0x2a0 kernel/time/timer.c:1881
 rcu_gp_fqs_loop+0x186/0x810 kernel/rcu/tree.c:1955
 rcu_gp_kthread+0x1de/0x320 kernel/rcu/tree.c:2128
 kthread+0x405/0x4f0 kernel/kthread.c:327
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295
rcu: Stack dump where RCU GP kthread last ran:
Sending NMI from CPU 0 to CPUs 1:
NMI backtrace for cpu 1
CPU: 1 PID: 8510 Comm: syz-executor827 Not tainted 5.15.0-rc2-next-20210920-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:bytes_is_nonzero mm/kasan/generic.c:84 [inline]
RIP: 0010:memory_is_nonzero mm/kasan/generic.c:102 [inline]
RIP: 0010:memory_is_poisoned_n mm/kasan/generic.c:128 [inline]
RIP: 0010:memory_is_poisoned mm/kasan/generic.c:159 [inline]
RIP: 0010:check_region_inline mm/kasan/generic.c:180 [inline]
RIP: 0010:kasan_check_range+0xc8/0x180 mm/kasan/generic.c:189
Code: 38 00 74 ed 48 8d 50 08 eb 09 48 83 c0 01 48 39 d0 74 7a 80 38 00 74 f2 48 89 c2 b8 01 00 00 00 48 85 d2 75 56 5b 5d 41 5c c3 &lt;48&gt; 85 d2 74 5e 48 01 ea eb 09 48 83 c0 01 48 39 d0 74 50 80 38 00
RSP: 0018:ffffc9000cd676c8 EFLAGS: 00000283
RAX: ffffed100e9a110e RBX: ffffed100e9a110f RCX: ffffffff88ea062a
RDX: 0000000000000001 RSI: 0000000000000008 RDI: ffff888074d08870
RBP: ffffed100e9a110e R08: 0000000000000001 R09: ffff888074d08877
R10: ffffed100e9a110e R11: 0000000000000000 R12: ffff888074d08000
R13: ffff888074d08000 R14: ffff888074d08088 R15: ffff888074d08000
FS:  0000555556d8e300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
S:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020000180 CR3: 0000000068909000 CR4: 00000000001506e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 instrument_atomic_read_write include/linux/instrumented.h:101 [inline]
 test_and_clear_bit include/asm-generic/bitops/instrumented-atomic.h:83 [inline]
 mptcp_release_cb+0x14a/0x210 net/mptcp/protocol.c:3016
 release_sock+0xb4/0x1b0 net/core/sock.c:3204
 mptcp_wait_data net/mptcp/protocol.c:1770 [inline]
 mptcp_recvmsg+0xfd1/0x27b0 net/mptcp/protocol.c:2080
 inet6_recvmsg+0x11b/0x5e0 net/ipv6/af_inet6.c:659
 sock_recvmsg_nosec net/socket.c:944 [inline]
 ____sys_recvmsg+0x527/0x600 net/socket.c:2626
 ___sys_recvmsg+0x127/0x200 net/socket.c:2670
 do_recvmmsg+0x24d/0x6d0 net/socket.c:2764
 __sys_recvmmsg net/socket.c:2843 [inline]
 __do_sys_recvmmsg net/socket.c:2866 [inline]
 __se_sys_recvmmsg net/socket.c:2859 [inline]
 __x64_sys_recvmmsg+0x20b/0x260 net/socket.c:2859
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7fc200d2
---truncated---</description><pubDate>Wed, 22 May 2024 06:31:20 +0000</pubDate></item><item><title>CVE-2021-47449 | ice: fix locking for Tx timestamp tracking flush</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47449</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: fix locking for Tx timestamp tracking flush

Commit 4dd0d5c33c3e ("ice: add lock around Tx timestamp tracker flush")
added a lock around the Tx timestamp tracker flow which is used to
cleanup any left over SKBs and prepare for device removal.

This lock is problematic because it is being held around a call to
ice_clear_phy_tstamp. The clear function takes a mutex to send a PHY
write command to firmware. This could lead to a deadlock if the mutex
actually sleeps, and causes the following warning on a kernel with
preemption debugging enabled:

[  715.419426] BUG: sleeping function called from invalid context at kernel/locking/mutex.c:573
[  715.427900] in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 3100, name: rmmod
[  715.435652] INFO: lockdep is turned off.
[  715.439591] Preemption disabled at:
[  715.439594] [&lt;0000000000000000&gt;] 0x0
[  715.446678] CPU: 52 PID: 3100 Comm: rmmod Tainted: G        W  OE     5.15.0-rc4+ #42 bdd7ec3018e725f159ca0d372ce8c2c0e784891c
[  715.458058] Hardware name: Intel Corporation S2600STQ/S2600STQ, BIOS SE5C620.86B.02.01.0010.010620200716 01/06/2020
[  715.468483] Call Trace:
[  715.470940]  dump_stack_lvl+0x6a/0x9a
[  715.474613]  ___might_sleep.cold+0x224/0x26a
[  715.478895]  __mutex_lock+0xb3/0x1440
[  715.482569]  ? stack_depot_save+0x378/0x500
[  715.486763]  ? ice_sq_send_cmd+0x78/0x14c0 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.494979]  ? kfree+0xc1/0x520
[  715.498128]  ? mutex_lock_io_nested+0x12a0/0x12a0
[  715.502837]  ? kasan_set_free_info+0x20/0x30
[  715.507110]  ? __kasan_slab_free+0x10b/0x140
[  715.511385]  ? slab_free_freelist_hook+0xc7/0x220
[  715.516092]  ? kfree+0xc1/0x520
[  715.519235]  ? ice_deinit_lag+0x16c/0x220 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.527359]  ? ice_remove+0x1cf/0x6a0 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.535133]  ? pci_device_remove+0xab/0x1d0
[  715.539318]  ? __device_release_driver+0x35b/0x690
[  715.544110]  ? driver_detach+0x214/0x2f0
[  715.548035]  ? bus_remove_driver+0x11d/0x2f0
[  715.552309]  ? pci_unregister_driver+0x26/0x250
[  715.556840]  ? ice_module_exit+0xc/0x2f [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.564799]  ? __do_sys_delete_module.constprop.0+0x2d8/0x4e0
[  715.570554]  ? do_syscall_64+0x3b/0x90
[  715.574303]  ? entry_SYSCALL_64_after_hwframe+0x44/0xae
[  715.579529]  ? start_flush_work+0x542/0x8f0
[  715.583719]  ? ice_sq_send_cmd+0x78/0x14c0 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.591923]  ice_sq_send_cmd+0x78/0x14c0 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.599960]  ? wait_for_completion_io+0x250/0x250
[  715.604662]  ? lock_acquire+0x196/0x200
[  715.608504]  ? do_raw_spin_trylock+0xa5/0x160
[  715.612864]  ice_sbq_rw_reg+0x1e6/0x2f0 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.620813]  ? ice_reset+0x130/0x130 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.628497]  ? __debug_check_no_obj_freed+0x1e8/0x3c0
[  715.633550]  ? trace_hardirqs_on+0x1c/0x130
[  715.637748]  ice_write_phy_reg_e810+0x70/0xf0 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.646220]  ? do_raw_spin_trylock+0xa5/0x160
[  715.650581]  ? ice_ptp_release+0x910/0x910 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.658797]  ? ice_ptp_release+0x255/0x910 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.667013]  ice_clear_phy_tstamp+0x2c/0x110 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.675403]  ice_ptp_release+0x408/0x910 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.683440]  ice_remove+0x560/0x6a0 [ice 9a7e1ec00971c89ecd3fe0d4dc7da2b3786a421d]
[  715.691037]  ? _raw_spin_unlock_irqrestore+0x46/0x73
[  715.696005]  pci_device_remove+0xab/0x1d0
[  715.700018]  __device_release_driver+0x35b/0x690
[  715.704637]  driver_detach+0x214/0x2f0
[  715.708389]  bus_remove_driver+0x11d/0x2f0
[  715.712489]  pci_unregister_driver+0x26/0x250
[  71
---truncated---</description><pubDate>Wed, 22 May 2024 06:31:20 +0000</pubDate></item><item><title>CVE-2021-47450 | KVM: arm64: Fix host stage-2 PGD refcount</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47450</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: arm64: Fix host stage-2 PGD refcount

The KVM page-table library refcounts the pages of concatenated stage-2
PGDs individually. However, when running KVM in protected mode, the
host's stage-2 PGD is currently managed by EL2 as a single high-order
compound page, which can cause the refcount of the tail pages to reach 0
when they shouldn't, hence corrupting the page-table.

Fix this by introducing a new hyp_split_page() helper in the EL2 page
allocator (matching the kernel's split_page() function), and make use of
it from host_s2_zalloc_pages_exact().</description><pubDate>Wed, 22 May 2024 06:31:21 +0000</pubDate></item><item><title>CVE-2021-47451 | netfilter: xt_IDLETIMER: fix panic that occurs when timer_type has garbage value</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47451</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: xt_IDLETIMER: fix panic that occurs when timer_type has garbage value

Currently, when the rule related to IDLETIMER is added, idletimer_tg timer
structure is initialized by kmalloc on executing idletimer_tg_create
function. However, in this process timer-&gt;timer_type is not defined to
a specific value. Thus, timer-&gt;timer_type has garbage value and it occurs
kernel panic. So, this commit fixes the panic by initializing
timer-&gt;timer_type using kzalloc instead of kmalloc.

Test commands:
    # iptables -A OUTPUT -j IDLETIMER --timeout 1 --label test
    $ cat /sys/class/xt_idletimer/timers/test
      Killed

Splat looks like:
    BUG: KASAN: user-memory-access in alarm_expires_remaining+0x49/0x70
    Read of size 8 at addr 0000002e8c7bc4c8 by task cat/917
    CPU: 12 PID: 917 Comm: cat Not tainted 5.14.0+ #3 79940a339f71eb14fc81aee1757a20d5bf13eb0e
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    Call Trace:
     dump_stack_lvl+0x6e/0x9c
     kasan_report.cold+0x112/0x117
     ? alarm_expires_remaining+0x49/0x70
     __asan_load8+0x86/0xb0
     alarm_expires_remaining+0x49/0x70
     idletimer_tg_show+0xe5/0x19b [xt_IDLETIMER 11219304af9316a21bee5ba9d58f76a6b9bccc6d]
     dev_attr_show+0x3c/0x60
     sysfs_kf_seq_show+0x11d/0x1f0
     ? device_remove_bin_file+0x20/0x20
     kernfs_seq_show+0xa4/0xb0
     seq_read_iter+0x29c/0x750
     kernfs_fop_read_iter+0x25a/0x2c0
     ? __fsnotify_parent+0x3d1/0x570
     ? iov_iter_init+0x70/0x90
     new_sync_read+0x2a7/0x3d0
     ? __x64_sys_llseek+0x230/0x230
     ? rw_verify_area+0x81/0x150
     vfs_read+0x17b/0x240
     ksys_read+0xd9/0x180
     ? vfs_write+0x460/0x460
     ? do_syscall_64+0x16/0xc0
     ? lockdep_hardirqs_on+0x79/0x120
     __x64_sys_read+0x43/0x50
     do_syscall_64+0x3b/0xc0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f0cdc819142
    Code: c0 e9 c2 fe ff ff 50 48 8d 3d 3a ca 0a 00 e8 f5 19 02 00 0f 1f 44 00 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 0f 05 &lt;48&gt; 3d 00 f0 ff ff 77 56 c3 0f 1f 44 00 00 48 83 ec 28 48 89 54 24
    RSP: 002b:00007fff28eee5b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
    RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007f0cdc819142
    RDX: 0000000000020000 RSI: 00007f0cdc032000 RDI: 0000000000000003
    RBP: 00007f0cdc032000 R08: 00007f0cdc031010 R09: 0000000000000000
    R10: 0000000000000022 R11: 0000000000000246 R12: 00005607e9ee31f0
    R13: 0000000000000003 R14: 0000000000020000 R15: 0000000000020000</description><pubDate>Wed, 22 May 2024 06:31:21 +0000</pubDate></item><item><title>CVE-2021-47452 | netfilter: nf_tables: skip netdev events generated on netns removal</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47452</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: skip netdev events generated on netns removal

syzbot reported following (harmless) WARN:

 WARNING: CPU: 1 PID: 2648 at net/netfilter/core.c:468
  nft_netdev_unregister_hooks net/netfilter/nf_tables_api.c:230 [inline]
  nf_tables_unregister_hook include/net/netfilter/nf_tables.h:1090 [inline]
  __nft_release_basechain+0x138/0x640 net/netfilter/nf_tables_api.c:9524
  nft_netdev_event net/netfilter/nft_chain_filter.c:351 [inline]
  nf_tables_netdev_event+0x521/0x8a0 net/netfilter/nft_chain_filter.c:382

reproducer:
unshare -n bash -c 'ip link add br0 type bridge; nft add table netdev t ; \
 nft add chain netdev t ingress \{ type filter hook ingress device "br0" \
 priority 0\; policy drop\; \}'

Problem is that when netns device exit hooks create the UNREGISTER
event, the .pre_exit hook for nf_tables core has already removed the
base hook.  Notifier attempts to do this again.

The need to do base hook unregister unconditionally was needed in the past,
because notifier was last stage where reg-&gt;dev dereference was safe.

Now that nf_tables does the hook removal in .pre_exit, this isn't
needed anymore.</description><pubDate>Wed, 22 May 2024 06:31:21 +0000</pubDate></item><item><title>CVE-2021-47453 | ice: Avoid crash from unnecessary IDA free</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47453</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: Avoid crash from unnecessary IDA free

In the remove path, there is an attempt to free the aux_idx IDA whether
it was allocated or not.  This can potentially cause a crash when
unloading the driver on systems that do not initialize support for RDMA.
But, this free cannot be gated by the status bit for RDMA, since it is
allocated if the driver detects support for RDMA at probe time, but the
driver can enter into a state where RDMA is not supported after the IDA
has been allocated at probe time and this would lead to a memory leak.

Initialize aux_idx to an invalid value and check for a valid value when
unloading to determine if an IDA free is necessary.</description><pubDate>Wed, 22 May 2024 06:31:22 +0000</pubDate></item><item><title>CVE-2021-47454 | powerpc/smp: do not decrement idle task preempt count in CPU offline</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47454</link><description>In the Linux kernel, the following vulnerability has been resolved:

powerpc/smp: do not decrement idle task preempt count in CPU offline

With PREEMPT_COUNT=y, when a CPU is offlined and then onlined again, we
get:

BUG: scheduling while atomic: swapper/1/0/0x00000000
no locks held by swapper/1/0.
CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.15.0-rc2+ #100
Call Trace:
 dump_stack_lvl+0xac/0x108
 __schedule_bug+0xac/0xe0
 __schedule+0xcf8/0x10d0
 schedule_idle+0x3c/0x70
 do_idle+0x2d8/0x4a0
 cpu_startup_entry+0x38/0x40
 start_secondary+0x2ec/0x3a0
 start_secondary_prolog+0x10/0x14

This is because powerpc's arch_cpu_idle_dead() decrements the idle task's
preempt count, for reasons explained in commit a7c2bb8279d2 ("powerpc:
Re-enable preemption before cpu_die()"), specifically "start_secondary()
expects a preempt_count() of 0."

However, since commit 2c669ef6979c ("powerpc/preempt: Don't touch the idle
task's preempt_count during hotplug") and commit f1a0a376ca0c ("sched/core:
Initialize the idle task with preemption disabled"), that justification no
longer holds.

The idle task isn't supposed to re-enable preemption, so remove the
vestigial preempt_enable() from the CPU offline path.

Tested with pseries and powernv in qemu, and pseries on PowerVM.</description><pubDate>Wed, 22 May 2024 06:31:22 +0000</pubDate></item><item><title>CVE-2021-47455 | ptp: Fix possible memory leak in ptp_clock_register()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47455</link><description>In the Linux kernel, the following vulnerability has been resolved:

ptp: Fix possible memory leak in ptp_clock_register()

I got memory leak as follows when doing fault injection test:

unreferenced object 0xffff88800906c618 (size 8):
  comm "i2c-idt82p33931", pid 4421, jiffies 4294948083 (age 13.188s)
  hex dump (first 8 bytes):
    70 74 70 30 00 00 00 00                          ptp0....
  backtrace:
    [&lt;00000000312ed458&gt;] __kmalloc_track_caller+0x19f/0x3a0
    [&lt;0000000079f6e2ff&gt;] kvasprintf+0xb5/0x150
    [&lt;0000000026aae54f&gt;] kvasprintf_const+0x60/0x190
    [&lt;00000000f323a5f7&gt;] kobject_set_name_vargs+0x56/0x150
    [&lt;000000004e35abdd&gt;] dev_set_name+0xc0/0x100
    [&lt;00000000f20cfe25&gt;] ptp_clock_register+0x9f4/0xd30 [ptp]
    [&lt;000000008bb9f0de&gt;] idt82p33_probe.cold+0x8b6/0x1561 [ptp_idt82p33]

When posix_clock_register() returns an error, the name allocated
in dev_set_name() will be leaked, the put_device() should be used
to give up the device reference, then the name will be freed in
kobject_cleanup() and other memory will be freed in ptp_clock_release().</description><pubDate>Wed, 22 May 2024 06:31:23 +0000</pubDate></item><item><title>CVE-2021-47456 | can: peak_pci: peak_pci_remove(): fix UAF</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47456</link><description>In the Linux kernel, the following vulnerability has been resolved:

can: peak_pci: peak_pci_remove(): fix UAF

When remove the module peek_pci, referencing 'chan' again after
releasing 'dev' will cause UAF.

Fix this by releasing 'dev' later.

The following log reveals it:

[   35.961814 ] BUG: KASAN: use-after-free in peak_pci_remove+0x16f/0x270 [peak_pci]
[   35.963414 ] Read of size 8 at addr ffff888136998ee8 by task modprobe/5537
[   35.965513 ] Call Trace:
[   35.965718 ]  dump_stack_lvl+0xa8/0xd1
[   35.966028 ]  print_address_description+0x87/0x3b0
[   35.966420 ]  kasan_report+0x172/0x1c0
[   35.966725 ]  ? peak_pci_remove+0x16f/0x270 [peak_pci]
[   35.967137 ]  ? trace_irq_enable_rcuidle+0x10/0x170
[   35.967529 ]  ? peak_pci_remove+0x16f/0x270 [peak_pci]
[   35.967945 ]  __asan_report_load8_noabort+0x14/0x20
[   35.968346 ]  peak_pci_remove+0x16f/0x270 [peak_pci]
[   35.968752 ]  pci_device_remove+0xa9/0x250</description><pubDate>Wed, 22 May 2024 06:31:23 +0000</pubDate></item><item><title>CVE-2021-47457 | can: isotp: isotp_sendmsg(): add result check for wait_event_interruptible()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47457</link><description>In the Linux kernel, the following vulnerability has been resolved:

can: isotp: isotp_sendmsg(): add result check for wait_event_interruptible()

Using wait_event_interruptible() to wait for complete transmission,
but do not check the result of wait_event_interruptible() which can be
interrupted. It will result in TX buffer has multiple accessors and
the later process interferes with the previous process.

Following is one of the problems reported by syzbot.

=============================================================
WARNING: CPU: 0 PID: 0 at net/can/isotp.c:840 isotp_tx_timer_handler+0x2e0/0x4c0
CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.13.0-rc7+ #68
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04/01/2014
RIP: 0010:isotp_tx_timer_handler+0x2e0/0x4c0
Call Trace:
 
 ? isotp_setsockopt+0x390/0x390
 __hrtimer_run_queues+0xb8/0x610
 hrtimer_run_softirq+0x91/0xd0
 ? rcu_read_lock_sched_held+0x4d/0x80
 __do_softirq+0xe8/0x553
 irq_exit_rcu+0xf8/0x100
 sysvec_apic_timer_interrupt+0x9e/0xc0
 
 asm_sysvec_apic_timer_interrupt+0x12/0x20

Add result check for wait_event_interruptible() in isotp_sendmsg()
to avoid multiple accessers for tx buffer.</description><pubDate>Wed, 22 May 2024 06:31:23 +0000</pubDate></item><item><title>CVE-2021-47458 | ocfs2: mount fails with buffer overflow in strlen</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47458</link><description>In the Linux kernel, the following vulnerability has been resolved:

ocfs2: mount fails with buffer overflow in strlen

Starting with kernel 5.11 built with CONFIG_FORTIFY_SOURCE mouting an
ocfs2 filesystem with either o2cb or pcmk cluster stack fails with the
trace below.  Problem seems to be that strings for cluster stack and
cluster name are not guaranteed to be null terminated in the disk
representation, while strlcpy assumes that the source string is always
null terminated.  This causes a read outside of the source string
triggering the buffer overflow detection.

  detected buffer overflow in strlen
  ------------[ cut here ]------------
  kernel BUG at lib/string.c:1149!
  invalid opcode: 0000 [#1] SMP PTI
  CPU: 1 PID: 910 Comm: mount.ocfs2 Not tainted 5.14.0-1-amd64 #1
    Debian 5.14.6-2
  RIP: 0010:fortify_panic+0xf/0x11
  ...
  Call Trace:
   ocfs2_initialize_super.isra.0.cold+0xc/0x18 [ocfs2]
   ocfs2_fill_super+0x359/0x19b0 [ocfs2]
   mount_bdev+0x185/0x1b0
   legacy_get_tree+0x27/0x40
   vfs_get_tree+0x25/0xb0
   path_mount+0x454/0xa20
   __x64_sys_mount+0x103/0x140
   do_syscall_64+0x3b/0xc0
   entry_SYSCALL_64_after_hwframe+0x44/0xae</description><pubDate>Wed, 22 May 2024 06:31:24 +0000</pubDate></item><item><title>CVE-2021-47459 | can: j1939: j1939_netdev_start(): fix UAF for rx_kref of j1939_priv</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47459</link><description>In the Linux kernel, the following vulnerability has been resolved:

can: j1939: j1939_netdev_start(): fix UAF for rx_kref of j1939_priv

It will trigger UAF for rx_kref of j1939_priv as following.

        cpu0                                    cpu1
j1939_sk_bind(socket0, ndev0, ...)
j1939_netdev_start
                                        j1939_sk_bind(socket1, ndev0, ...)
                                        j1939_netdev_start
j1939_priv_set
                                        j1939_priv_get_by_ndev_locked
j1939_jsk_add
.....
j1939_netdev_stop
kref_put_lock(&amp;amp;priv-&gt;rx_kref, ...)
                                        kref_get(&amp;amp;priv-&gt;rx_kref, ...)
                                        REFCOUNT_WARN("addition on 0;...")

====================================================
refcount_t: addition on 0; use-after-free.
WARNING: CPU: 1 PID: 20874 at lib/refcount.c:25 refcount_warn_saturate+0x169/0x1e0
RIP: 0010:refcount_warn_saturate+0x169/0x1e0
Call Trace:
 j1939_netdev_start+0x68b/0x920
 j1939_sk_bind+0x426/0xeb0
 ? security_socket_bind+0x83/0xb0

The rx_kref's kref_get() and kref_put() should use j1939_netdev_lock to
protect.</description><pubDate>Wed, 22 May 2024 06:31:24 +0000</pubDate></item><item><title>CVE-2021-47460 | ocfs2: fix data corruption after conversion from inline format</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47460</link><description>In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix data corruption after conversion from inline format

Commit 6dbf7bb55598 ("fs: Don't invalidate page buffers in
block_write_full_page()") uncovered a latent bug in ocfs2 conversion
from inline inode format to a normal inode format.

The code in ocfs2_convert_inline_data_to_extents() attempts to zero out
the whole cluster allocated for file data by grabbing, zeroing, and
dirtying all pages covering this cluster.  However these pages are
beyond i_size, thus writeback code generally ignores these dirty pages
and no blocks were ever actually zeroed on the disk.

This oversight was fixed by commit 693c241a5f6a ("ocfs2: No need to zero
pages past i_size.") for standard ocfs2 write path, inline conversion
path was apparently forgotten; the commit log also has a reasoning why
the zeroing actually is not needed.

After commit 6dbf7bb55598, things became worse as writeback code stopped
invalidating buffers on pages beyond i_size and thus these pages end up
with clean PageDirty bit but with buffers attached to these pages being
still dirty.  So when a file is converted from inline format, then
writeback triggers, and then the file is grown so that these pages
become valid, the invalid dirtiness state is preserved,
mark_buffer_dirty() does nothing on these pages (buffers are already
dirty) but page is never written back because it is clean.  So data
written to these pages is lost once pages are reclaimed.

Simple reproducer for the problem is:

  xfs_io -f -c "pwrite 0 2000" -c "pwrite 2000 2000" -c "fsync" \
    -c "pwrite 4000 2000" ocfs2_file

After unmounting and mounting the fs again, you can observe that end of
'ocfs2_file' has lost its contents.

Fix the problem by not doing the pointless zeroing during conversion
from inline format similarly as in the standard write path.

[akpm@linux-foundation.org: fix whitespace, per Joseph]</description><pubDate>Wed, 22 May 2024 06:31:25 +0000</pubDate></item><item><title>CVE-2021-47461 | userfaultfd: fix a race between writeprotect and exit_mmap()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47461</link><description>In the Linux kernel, the following vulnerability has been resolved:

userfaultfd: fix a race between writeprotect and exit_mmap()

A race is possible when a process exits, its VMAs are removed by
exit_mmap() and at the same time userfaultfd_writeprotect() is called.

The race was detected by KASAN on a development kernel, but it appears
to be possible on vanilla kernels as well.

Use mmget_not_zero() to prevent the race as done in other userfaultfd
operations.</description><pubDate>Wed, 22 May 2024 06:31:25 +0000</pubDate></item><item><title>CVE-2021-47462 | mm/mempolicy: do not allow illegal MPOL_F_NUMA_BALANCING | MPOL_LOCAL in mbind()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47462</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm/mempolicy: do not allow illegal MPOL_F_NUMA_BALANCING | MPOL_LOCAL in mbind()

syzbot reported access to unitialized memory in mbind() [1]

Issue came with commit bda420b98505 ("numa balancing: migrate on fault
among multiple bound nodes")

This commit added a new bit in MPOL_MODE_FLAGS, but only checked valid
combination (MPOL_F_NUMA_BALANCING can only be used with MPOL_BIND) in
do_set_mempolicy()

This patch moves the check in sanitize_mpol_flags() so that it is also
used by mbind()

  [1]
  BUG: KMSAN: uninit-value in __mpol_equal+0x567/0x590 mm/mempolicy.c:2260
   __mpol_equal+0x567/0x590 mm/mempolicy.c:2260
   mpol_equal include/linux/mempolicy.h:105 [inline]
   vma_merge+0x4a1/0x1e60 mm/mmap.c:1190
   mbind_range+0xcc8/0x1e80 mm/mempolicy.c:811
   do_mbind+0xf42/0x15f0 mm/mempolicy.c:1333
   kernel_mbind mm/mempolicy.c:1483 [inline]
   __do_sys_mbind mm/mempolicy.c:1490 [inline]
   __se_sys_mbind+0x437/0xb80 mm/mempolicy.c:1486
   __x64_sys_mbind+0x19d/0x200 mm/mempolicy.c:1486
   do_syscall_x64 arch/x86/entry/common.c:51 [inline]
   do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
   entry_SYSCALL_64_after_hwframe+0x44/0xae

  Uninit was created at:
   slab_alloc_node mm/slub.c:3221 [inline]
   slab_alloc mm/slub.c:3230 [inline]
   kmem_cache_alloc+0x751/0xff0 mm/slub.c:3235
   mpol_new mm/mempolicy.c:293 [inline]
   do_mbind+0x912/0x15f0 mm/mempolicy.c:1289
   kernel_mbind mm/mempolicy.c:1483 [inline]
   __do_sys_mbind mm/mempolicy.c:1490 [inline]
   __se_sys_mbind+0x437/0xb80 mm/mempolicy.c:1486
   __x64_sys_mbind+0x19d/0x200 mm/mempolicy.c:1486
   do_syscall_x64 arch/x86/entry/common.c:51 [inline]
   do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
   entry_SYSCALL_64_after_hwframe+0x44/0xae
  =====================================================
  Kernel panic - not syncing: panic_on_kmsan set ...
  CPU: 0 PID: 15049 Comm: syz-executor.0 Tainted: G    B             5.15.0-rc2-syzkaller #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
  Call Trace:
   __dump_stack lib/dump_stack.c:88 [inline]
   dump_stack_lvl+0x1ff/0x28e lib/dump_stack.c:106
   dump_stack+0x25/0x28 lib/dump_stack.c:113
   panic+0x44f/0xdeb kernel/panic.c:232
   kmsan_report+0x2ee/0x300 mm/kmsan/report.c:186
   __msan_warning+0xd7/0x150 mm/kmsan/instrumentation.c:208
   __mpol_equal+0x567/0x590 mm/mempolicy.c:2260
   mpol_equal include/linux/mempolicy.h:105 [inline]
   vma_merge+0x4a1/0x1e60 mm/mmap.c:1190
   mbind_range+0xcc8/0x1e80 mm/mempolicy.c:811
   do_mbind+0xf42/0x15f0 mm/mempolicy.c:1333
   kernel_mbind mm/mempolicy.c:1483 [inline]
   __do_sys_mbind mm/mempolicy.c:1490 [inline]
   __se_sys_mbind+0x437/0xb80 mm/mempolicy.c:1486
   __x64_sys_mbind+0x19d/0x200 mm/mempolicy.c:1486
   do_syscall_x64 arch/x86/entry/common.c:51 [inline]
   do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
   entry_SYSCALL_64_after_hwframe+0x44/0xae</description><pubDate>Wed, 22 May 2024 06:31:25 +0000</pubDate></item><item><title>CVE-2021-47463 | mm/secretmem: fix NULL page-&amp;gt;mapping dereference in page_is_secretmem()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47463</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm/secretmem: fix NULL page-&gt;mapping dereference in page_is_secretmem()

Check for a NULL page-&gt;mapping before dereferencing the mapping in
page_is_secretmem(), as the page's mapping can be nullified while gup()
is running, e.g.  by reclaim or truncation.

  BUG: kernel NULL pointer dereference, address: 0000000000000068
  #PF: supervisor read access in kernel mode
  #PF: error_code(0x0000) - not-present page
  PGD 0 P4D 0
  Oops: 0000 [#1] PREEMPT SMP NOPTI
  CPU: 6 PID: 4173897 Comm: CPU 3/KVM Tainted: G        W
  RIP: 0010:internal_get_user_pages_fast+0x621/0x9d0
  Code: &lt;48&gt; 81 7a 68 80 08 04 bc 0f 85 21 ff ff 8 89 c7 be
  RSP: 0018:ffffaa90087679b0 EFLAGS: 00010046
  RAX: ffffe3f37905b900 RBX: 00007f2dd561e000 RCX: ffffe3f37905b934
  RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffe3f37905b900
  ...
  CR2: 0000000000000068 CR3: 00000004c5898003 CR4: 00000000001726e0
  Call Trace:
   get_user_pages_fast_only+0x13/0x20
   hva_to_pfn+0xa9/0x3e0
   try_async_pf+0xa1/0x270
   direct_page_fault+0x113/0xad0
   kvm_mmu_page_fault+0x69/0x680
   vmx_handle_exit+0xe1/0x5d0
   kvm_arch_vcpu_ioctl_run+0xd81/0x1c70
   kvm_vcpu_ioctl+0x267/0x670
   __x64_sys_ioctl+0x83/0xa0
   do_syscall_64+0x56/0x80
   entry_SYSCALL_64_after_hwframe+0x44/0xae</description><pubDate>Wed, 22 May 2024 06:31:26 +0000</pubDate></item><item><title>CVE-2021-47464 | audit: fix possible null-pointer dereference in audit_filter_rules</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47464</link><description>In the Linux kernel, the following vulnerability has been resolved:

audit: fix possible null-pointer dereference in audit_filter_rules

Fix  possible null-pointer dereference in audit_filter_rules.

audit_filter_rules() error: we previously assumed 'ctx' could be null</description><pubDate>Wed, 22 May 2024 06:31:26 +0000</pubDate></item><item><title>CVE-2021-47465 | KVM: PPC: Book3S HV: Fix stack handling in idle_kvm_start_guest()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47465</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: PPC: Book3S HV: Fix stack handling in idle_kvm_start_guest()

In commit 10d91611f426 ("powerpc/64s: Reimplement book3s idle code in
C") kvm_start_guest() became idle_kvm_start_guest(). The old code
allocated a stack frame on the emergency stack, but didn't use the
frame to store anything, and also didn't store anything in its caller's
frame.

idle_kvm_start_guest() on the other hand is written more like a normal C
function, it creates a frame on entry, and also stores CR/LR into its
callers frame (per the ABI). The problem is that there is no caller
frame on the emergency stack.

The emergency stack for a given CPU is allocated with:

  paca_ptrs[i]-&gt;emergency_sp = alloc_stack(limit, i) + THREAD_SIZE;

So emergency_sp actually points to the first address above the emergency
stack allocation for a given CPU, we must not store above it without
first decrementing it to create a frame. This is different to the
regular kernel stack, paca-&gt;kstack, which is initialised to point at an
initial frame that is ready to use.

idle_kvm_start_guest() stores the backchain, CR and LR all of which
write outside the allocation for the emergency stack. It then creates a
stack frame and saves the non-volatile registers. Unfortunately the
frame it creates is not large enough to fit the non-volatiles, and so
the saving of the non-volatile registers also writes outside the
emergency stack allocation.

The end result is that we corrupt whatever is at 0-24 bytes, and 112-248
bytes above the emergency stack allocation.

In practice this has gone unnoticed because the memory immediately above
the emergency stack happens to be used for other stack allocations,
either another CPUs mc_emergency_sp or an IRQ stack. See the order of
calls to irqstack_early_init() and emergency_stack_init().

The low addresses of another stack are the top of that stack, and so are
only used if that stack is under extreme pressue, which essentially
never happens in practice - and if it did there's a high likelyhood we'd
crash due to that stack overflowing.

Still, we shouldn't be corrupting someone else's stack, and it is purely
luck that we aren't corrupting something else.

To fix it we save CR/LR into the caller's frame using the existing r1 on
entry, we then create a SWITCH_FRAME_SIZE frame (which has space for
pt_regs) on the emergency stack with the backchain pointing to the
existing stack, and then finally we switch to the new frame on the
emergency stack.</description><pubDate>Wed, 22 May 2024 06:31:27 +0000</pubDate></item><item><title>CVE-2021-47466 | mm, slub: fix potential memoryleak in kmem_cache_open()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47466</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm, slub: fix potential memoryleak in kmem_cache_open()

In error path, the random_seq of slub cache might be leaked.  Fix this
by using __kmem_cache_release() to release all the relevant resources.</description><pubDate>Wed, 22 May 2024 06:31:27 +0000</pubDate></item><item><title>CVE-2021-47467 | kunit: fix reference count leak in kfree_at_end</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47467</link><description>In the Linux kernel, the following vulnerability has been resolved:

kunit: fix reference count leak in kfree_at_end

The reference counting issue happens in the normal path of
kfree_at_end(). When kunit_alloc_and_get_resource() is invoked, the
function forgets to handle the returned resource object, whose refcount
increased inside, causing a refcount leak.

Fix this issue by calling kunit_alloc_resource() instead of
kunit_alloc_and_get_resource().

Fixed the following when applying:
Shuah Khan 

CHECK: Alignment should match open parenthesis
+	kunit_alloc_resource(test, NULL, kfree_res_free, GFP_KERNEL,
 				     (void *)to_free);</description><pubDate>Wed, 22 May 2024 06:31:27 +0000</pubDate></item><item><title>CVE-2021-47468 | isdn: mISDN: Fix sleeping function called from invalid context</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47468</link><description>In the Linux kernel, the following vulnerability has been resolved:

isdn: mISDN: Fix sleeping function called from invalid context

The driver can call card-&gt;isac.release() function from an atomic
context.

Fix this by calling this function after releasing the lock.

The following log reveals it:

[   44.168226 ] BUG: sleeping function called from invalid context at kernel/workqueue.c:3018
[   44.168941 ] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 5475, name: modprobe
[   44.169574 ] INFO: lockdep is turned off.
[   44.169899 ] irq event stamp: 0
[   44.170160 ] hardirqs last  enabled at (0): [&lt;0000000000000000&gt;] 0x0
[   44.170627 ] hardirqs last disabled at (0): [] copy_process+0x132d/0x3e00
[   44.171240 ] softirqs last  enabled at (0): [] copy_process+0x135a/0x3e00
[   44.171852 ] softirqs last disabled at (0): [&lt;0000000000000000&gt;] 0x0
[   44.172318 ] Preemption disabled at:
[   44.172320 ] [] nj_release+0x69/0x500 [netjet]
[   44.174441 ] Call Trace:
[   44.174630 ]  dump_stack_lvl+0xa8/0xd1
[   44.174912 ]  dump_stack+0x15/0x17
[   44.175166 ]  ___might_sleep+0x3a2/0x510
[   44.175459 ]  ? nj_release+0x69/0x500 [netjet]
[   44.175791 ]  __might_sleep+0x82/0xe0
[   44.176063 ]  ? start_flush_work+0x20/0x7b0
[   44.176375 ]  start_flush_work+0x33/0x7b0
[   44.176672 ]  ? trace_irq_enable_rcuidle+0x85/0x170
[   44.177034 ]  ? kasan_quarantine_put+0xaa/0x1f0
[   44.177372 ]  ? kasan_quarantine_put+0xaa/0x1f0
[   44.177711 ]  __flush_work+0x11a/0x1a0
[   44.177991 ]  ? flush_work+0x20/0x20
[   44.178257 ]  ? lock_release+0x13c/0x8f0
[   44.178550 ]  ? __kasan_check_write+0x14/0x20
[   44.178872 ]  ? do_raw_spin_lock+0x148/0x360
[   44.179187 ]  ? read_lock_is_recursive+0x20/0x20
[   44.179530 ]  ? __kasan_check_read+0x11/0x20
[   44.179846 ]  ? do_raw_spin_unlock+0x55/0x900
[   44.180168 ]  ? ____kasan_slab_free+0x116/0x140
[   44.180505 ]  ? _raw_spin_unlock_irqrestore+0x41/0x60
[   44.180878 ]  ? skb_queue_purge+0x1a3/0x1c0
[   44.181189 ]  ? kfree+0x13e/0x290
[   44.181438 ]  flush_work+0x17/0x20
[   44.181695 ]  mISDN_freedchannel+0xe8/0x100
[   44.182006 ]  isac_release+0x210/0x260 [mISDNipac]
[   44.182366 ]  nj_release+0xf6/0x500 [netjet]
[   44.182685 ]  nj_remove+0x48/0x70 [netjet]
[   44.182989 ]  pci_device_remove+0xa9/0x250</description><pubDate>Wed, 22 May 2024 06:31:28 +0000</pubDate></item><item><title>CVE-2021-47469 | spi: Fix deadlock when adding SPI controllers on SPI buses</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47469</link><description>In the Linux kernel, the following vulnerability has been resolved:

spi: Fix deadlock when adding SPI controllers on SPI buses

Currently we have a global spi_add_lock which we take when adding new
devices so that we can check that we're not trying to reuse a chip
select that's already controlled.  This means that if the SPI device is
itself a SPI controller and triggers the instantiation of further SPI
devices we trigger a deadlock as we try to register and instantiate
those devices while in the process of doing so for the parent controller
and hence already holding the global spi_add_lock.  Since we only care
about concurrency within a single SPI bus move the lock to be per
controller, avoiding the deadlock.

This can be easily triggered in the case of spi-mux.</description><pubDate>Wed, 22 May 2024 06:31:28 +0000</pubDate></item><item><title>CVE-2021-47470 | mm, slub: fix potential use-after-free in slab_debugfs_fops</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47470</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm, slub: fix potential use-after-free in slab_debugfs_fops

When sysfs_slab_add failed, we shouldn't call debugfs_slab_add() for s
because s will be freed soon.  And slab_debugfs_fops will use s later
leading to a use-after-free.</description><pubDate>Wed, 22 May 2024 06:31:29 +0000</pubDate></item><item><title>CVE-2021-47471 | drm: mxsfb: Fix NULL pointer dereference crash on unload</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47471</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm: mxsfb: Fix NULL pointer dereference crash on unload

The mxsfb-&gt;crtc.funcs may already be NULL when unloading the driver,
in which case calling mxsfb_irq_disable() via drm_irq_uninstall() from
mxsfb_unload() leads to NULL pointer dereference.

Since all we care about is masking the IRQ and mxsfb-&gt;base is still
valid, just use that to clear and mask the IRQ.</description><pubDate>Wed, 22 May 2024 06:31:29 +0000</pubDate></item><item><title>CVE-2021-47472 | net: mdiobus: Fix memory leak in __mdiobus_register</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47472</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: mdiobus: Fix memory leak in __mdiobus_register

Once device_register() failed, we should call put_device() to
decrement reference count for cleanup. Or it will cause memory
leak.

BUG: memory leak
unreferenced object 0xffff888114032e00 (size 256):
  comm "kworker/1:3", pid 2960, jiffies 4294943572 (age 15.920s)
  hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 08 2e 03 14 81 88 ff ff  ................
    08 2e 03 14 81 88 ff ff 90 76 65 82 ff ff ff ff  .........ve.....
  backtrace:
    [] kmalloc include/linux/slab.h:591 [inline]
    [] kzalloc include/linux/slab.h:721 [inline]
    [] device_private_init drivers/base/core.c:3203 [inline]
    [] device_add+0x89b/0xdf0 drivers/base/core.c:3253
    [] __mdiobus_register+0xc3/0x450 drivers/net/phy/mdio_bus.c:537
    [] __devm_mdiobus_register+0x75/0xf0 drivers/net/phy/mdio_devres.c:87
    [] ax88772_init_mdio drivers/net/usb/asix_devices.c:676 [inline]
    [] ax88772_bind+0x330/0x480 drivers/net/usb/asix_devices.c:786
    [] usbnet_probe+0x3ff/0xdf0 drivers/net/usb/usbnet.c:1745
    [] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396
    [] call_driver_probe drivers/base/dd.c:517 [inline]
    [] really_probe.part.0+0xe7/0x380 drivers/base/dd.c:596
    [] really_probe drivers/base/dd.c:558 [inline]
    [] __driver_probe_device+0x10c/0x1e0 drivers/base/dd.c:751
    [] driver_probe_device+0x2a/0x120 drivers/base/dd.c:781
    [] __device_attach_driver+0xf6/0x140 drivers/base/dd.c:898
    [] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:427
    [] __device_attach+0x122/0x260 drivers/base/dd.c:969
    [] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:487
    [] device_add+0x5fb/0xdf0 drivers/base/core.c:3359
    [] usb_set_configuration+0x9d9/0xb90 drivers/usb/core/message.c:2170
    [] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238

BUG: memory leak
unreferenced object 0xffff888116f06900 (size 32):
  comm "kworker/0:2", pid 2670, jiffies 4294944448 (age 7.160s)
  hex dump (first 32 bytes):
    75 73 62 2d 30 30 31 3a 30 30 33 00 00 00 00 00  usb-001:003.....
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  backtrace:
    [] kstrdup+0x36/0x70 mm/util.c:60
    [] kstrdup_const+0x53/0x80 mm/util.c:83
    [] kvasprintf_const+0xc2/0x110 lib/kasprintf.c:48
    [] kobject_set_name_vargs+0x3b/0xe0 lib/kobject.c:289
    [] dev_set_name+0x63/0x90 drivers/base/core.c:3147
    [] __mdiobus_register+0xbb/0x450 drivers/net/phy/mdio_bus.c:535
    [] __devm_mdiobus_register+0x75/0xf0 drivers/net/phy/mdio_devres.c:87
    [] ax88772_init_mdio drivers/net/usb/asix_devices.c:676 [inline]
    [] ax88772_bind+0x330/0x480 drivers/net/usb/asix_devices.c:786
    [] usbnet_probe+0x3ff/0xdf0 drivers/net/usb/usbnet.c:1745
    [] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396
    [] call_driver_probe drivers/base/dd.c:517 [inline]
    [] really_probe.part.0+0xe7/0x380 drivers/base/dd.c:596
    [] really_probe drivers/base/dd.c:558 [inline]
    [] __driver_probe_device+0x10c/0x1e0 drivers/base/dd.c:751
    [] driver_probe_device+0x2a/0x120 drivers/base/dd.c:781
    [] __device_attach_driver+0xf6/0x140 drivers/base/dd.c:898
    [] bus_for_each
---truncated---</description><pubDate>Wed, 22 May 2024 06:31:29 +0000</pubDate></item><item><title>CVE-2021-47473 | scsi: qla2xxx: Fix a memory leak in an error path of qla2x00_process_els()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-47473</link><description>In the Linux kernel, the following vulnerability has been resolved:

scsi: qla2xxx: Fix a memory leak in an error path of qla2x00_process_els()

Commit 8c0eb596baa5 ("[SCSI] qla2xxx: Fix a memory leak in an error path of
qla2x00_process_els()"), intended to change:

        bsg_job-&gt;request-&gt;msgcode == FC_BSG_HST_ELS_NOLOGIN


        bsg_job-&gt;request-&gt;msgcode != FC_BSG_RPT_ELS

but changed it to:

        bsg_job-&gt;request-&gt;msgcode == FC_BSG_RPT_ELS

instead.

Change the == to a != to avoid leaking the fcport structure or freeing
unallocated memory.</description><pubDate>Wed, 22 May 2024 06:31:30 +0000</pubDate></item><item><title>CVE-2020-35165 | Dell BSAFE Crypto-C Micro Edition, versions before 4.1.5, and Dell BSAFE Micro Edition Suite, versions before 4.6, contain an Observable Tim...</title><link>https://www.cve.org/CVERecord?id=CVE-2020-35165</link><description>Dell BSAFE Crypto-C Micro Edition, versions before 4.1.5, and Dell BSAFE Micro Edition Suite, versions before 4.6, contain an Observable Timing Discrepancy Vulnerability.</description><pubDate>Wed, 22 May 2024 06:10:49 +0000</pubDate></item><item><title>CVE-2024-3066 | Elegant Addons for elementor &amp;lt;= 1.0.8 - Authenticated (Contributor+) Stored Cross-Site Scripting via HTML tags</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3066</link><description>The Elegant Addons for elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all versions up to, and including, 1.0.8 due to insufficient input sanitization and output escaping on user supplied tag attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 05:42:26 +0000</pubDate></item><item><title>CVE-2024-3611 | Toolbar Extras for Elementor &amp;amp; More – WordPress Admin Bar Enhanced &amp;lt;= 1.4.9 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3611</link><description>The Toolbar Extras for Elementor &amp; More – WordPress Admin Bar Enhanced plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'tbex-version' shortcode in all versions up to, and including, 1.4.9 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 05:42:26 +0000</pubDate></item><item><title>CVE-2024-4443 | Business Directory Plugin – Easy Listing Directories for WordPress &amp;lt;= 6.4.2 - Unauthenticated SQL Injection via listingfields Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4443</link><description>The Business Directory Plugin – Easy Listing Directories for WordPress plugin for WordPress is vulnerable to time-based SQL Injection via the ‘listingfields’ parameter in all versions up to, and including, 6.4.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Wed, 22 May 2024 05:42:27 +0000</pubDate></item><item><title>CVE-2024-4971 | LearnPress – WordPress LMS Plugin &amp;lt;= 4.2.6.6 - Authenticated (Contributor+) Stored Cross-Site Scripting via id Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4971</link><description>The LearnPress – WordPress LMS Plugin plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘id’ parameter in all versions up to, and including, 4.2.6.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Wed, 22 May 2024 05:42:27 +0000</pubDate></item><item><title>CVE-2024-5092 | Elegant Addons for elementor &amp;lt;= 1.0.8 - Authenticated (Contributor+) Stored Cross-Site Scripting via Switcher, Slider, and Iconbox Widgets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5092</link><description>The Elegant Addons for elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Switcher, Slider, and Iconbox widgets in all versions up to, and including, 1.0.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 05:42:27 +0000</pubDate></item><item><title>CVE-2024-31340 | TP-Link Tether versions prior to 4.5.13 and TP-Link Tapo versions prior to 3.3.6 do not properly validate certificates, which may allow a re...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31340</link><description>TP-Link Tether versions prior to 4.5.13 and TP-Link Tapo versions prior to 3.3.6 do not properly validate certificates, which may allow a remote unauthenticated attacker to eavesdrop on an encrypted communication via a man-in-the-middle attack.</description><pubDate>Wed, 22 May 2024 05:32:30 +0000</pubDate></item><item><title>CVE-2024-35162 | Path traversal vulnerability exists in Download Plugins and Themes from Dashboard versions prior to 1.8.6. If this vulnerability is exploite...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35162</link><description>Path traversal vulnerability exists in Download Plugins and Themes from Dashboard versions prior to 1.8.6. If this vulnerability is exploited, a remote authenticated attacker with "switch_themes" privilege may obtain arbitrary files on the server.</description><pubDate>Wed, 22 May 2024 05:32:30 +0000</pubDate></item><item><title>CVE-2024-30419 | Cross-site scripting vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ve...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30419</link><description>Cross-site scripting vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ver.3.0.32, Ver.2.11.x series versions prior to Ver.2.11.61, Ver.2.10.x series versions prior to Ver.2.10.53, and Ver.2.9 and earlier versions. If this vulnerability is exploited, a user with a contributor or higher privilege who can log in to the product may execute an arbitrary script on the web browser of the user who accessed the website using the product.</description><pubDate>Wed, 22 May 2024 04:47:23 +0000</pubDate></item><item><title>CVE-2024-30420 | Server-side request forgery (SSRF) vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12 and Ver.3.0.x series ver...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30420</link><description>Server-side request forgery (SSRF) vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12 and Ver.3.0.x series versions prior to Ver.3.0.32. If this vulnerability is exploited, a user with an administrator or higher privilege who can log in to the product may obtain arbitrary files on the server and information on the internal server that is not disclosed to the public.</description><pubDate>Wed, 22 May 2024 04:47:24 +0000</pubDate></item><item><title>CVE-2024-31394 | Directory traversal vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ver...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31394</link><description>Directory traversal vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ver.3.0.32, Ver.2.11.x series versions prior to Ver.2.11.61, Ver.2.10.x series versions prior to Ver.2.10.53, and Ver.2.9 and earlier versions. If this vulnerability is exploited, a user with an editor or higher privilege who can log in to the product may obtain arbitrary files on the server.</description><pubDate>Wed, 22 May 2024 04:47:24 +0000</pubDate></item><item><title>CVE-2024-31395 | Cross-site scripting vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ve...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31395</link><description>Cross-site scripting vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ver.3.0.32, Ver.2.11.x series versions prior to Ver.2.11.61, Ver.2.10.x series versions prior to Ver.2.10.53, and Ver.2.9 and earlier versions. If this vulnerability is exploited, a user with an editor or higher privilege who can log in to the product may execute an arbitrary script on the web browser of the user who accessed the schedule management page.</description><pubDate>Wed, 22 May 2024 04:47:25 +0000</pubDate></item><item><title>CVE-2024-31396 | Code injection vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12 and Ver.3.0.x series versions prior to Ver.3...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31396</link><description>Code injection vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12 and Ver.3.0.x series versions prior to Ver.3.0.32. If this vulnerability is exploited, a user with an administrator or higher privilege who can log in to the product may execute an arbitrary command on the server.</description><pubDate>Wed, 22 May 2024 04:47:25 +0000</pubDate></item><item><title>CVE-2024-4980 | WPKoi Templates for Elementor &amp;lt;= 2.5.9 - Authenticated (Contributor+) Stored Cross-Site Scripting via Multiple Parameters</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4980</link><description>The WPKoi Templates for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via 'id', 'mixColor', 'backgroundColor', 'saveInCookies', and 'autoMatchOsTheme' parameters in all versions up to, and including, 2.5.9 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 22 May 2024 04:37:25 +0000</pubDate></item><item><title>CVE-2024-0451 | AI ChatBot &amp;lt;= 5.3.4 - Missing Authorization via openai_file_list_callback</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0451</link><description>The AI ChatBot plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the openai_file_list_callback function in all versions up to, and including, 5.3.4. This makes it possible for authenticated attackers, with subscriber-level access and above, to list files existing in a linked OpenAI account.</description><pubDate>Wed, 22 May 2024 03:30:53 +0000</pubDate></item><item><title>CVE-2024-0452 | AI ChatBot &amp;lt;= 5.3.4 - Missing Authorization via openai_file_upload_callback</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0452</link><description>The AI ChatBot plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the openai_file_upload_callback function in all versions up to, and including, 5.3.4. This makes it possible for authenticated attackers, with subscriber-level access and above, to upload files to a linked OpenAI account.</description><pubDate>Wed, 22 May 2024 03:30:54 +0000</pubDate></item><item><title>CVE-2024-0453 | AI ChatBot &amp;lt;= 5.3.4 - Missing Authorization via openai_file_delete_callback</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0453</link><description>The AI ChatBot plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the openai_file_delete_callback function in all versions up to, and including, 5.3.4. This makes it possible for authenticated attackers, with subscriber-level access and above, to delete files from a linked OpenAI account.</description><pubDate>Wed, 22 May 2024 03:30:54 +0000</pubDate></item></channel></rss>