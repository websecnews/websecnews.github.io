<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Wed, 21 Aug 2024 20:33:34 +0000</lastBuildDate><item><title>CVE-2024-6386 | WPML Multilingual CMS &amp;lt;= 4.6.12 - Authenticated(Contributor+) Remote Code Execution via Twig Server-Side Template Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6386</link><description>The WPML plugin for WordPress is vulnerable to Remote Code Execution in all versions up to, and including, 4.6.12 via the Twig Server-Side Template Injection. This is due to missing input validation and sanitization on the render function. This makes it possible for authenticated attackers, with Contributor-level access and above, to execute code on the server.</description><pubDate>Wed, 21 Aug 2024 20:33:36 +0000</pubDate></item><item><title>CVE-2024-7964 | Use after free in Passwords in Google Chrome on Android prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corrupt...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7964</link><description>Use after free in Passwords in Google Chrome on Android prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 21 Aug 2024 20:33:36 +0000</pubDate></item><item><title>CVE-2024-7965 | Inappropriate implementation in V8 in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corruption ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7965</link><description>Inappropriate implementation in V8 in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 21 Aug 2024 20:33:37 +0000</pubDate></item><item><title>CVE-2024-7966 | Out of bounds memory access in Skia in Google Chrome prior to 128.0.6613.84 allowed a remote attacker who had compromised the renderer proce...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7966</link><description>Out of bounds memory access in Skia in Google Chrome prior to 128.0.6613.84 allowed a remote attacker who had compromised the renderer process to perform out of bounds memory access via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 21 Aug 2024 20:33:37 +0000</pubDate></item><item><title>CVE-2024-7967 | Heap buffer overflow in Fonts in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corruption via a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7967</link><description>Heap buffer overflow in Fonts in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 21 Aug 2024 20:33:37 +0000</pubDate></item><item><title>CVE-2024-7968 | Use after free in Autofill in Google Chrome prior to 128.0.6613.84 allowed a remote attacker who had convinced the user to engage in specifi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7968</link><description>Use after free in Autofill in Google Chrome prior to 128.0.6613.84 allowed a remote attacker who had convinced the user to engage in specific UI interactions to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 21 Aug 2024 20:33:38 +0000</pubDate></item><item><title>CVE-2024-7969 | Type Confusion in V8 in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corruption via a crafted ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7969</link><description>Type Confusion in V8 in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 21 Aug 2024 20:33:38 +0000</pubDate></item><item><title>CVE-2024-7971 | Type confusion in V8 in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to exploit heap corruption via a crafted HTML page. (...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7971</link><description>Type confusion in V8 in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 21 Aug 2024 20:33:38 +0000</pubDate></item><item><title>CVE-2024-7972 | Inappropriate implementation in V8 in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially perform out of bounds me...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7972</link><description>Inappropriate implementation in V8 in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:39 +0000</pubDate></item><item><title>CVE-2024-7973 | Heap buffer overflow in PDFium in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to perform an out of bounds memory read via...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7973</link><description>Heap buffer overflow in PDFium in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to perform an out of bounds memory read via a crafted PDF file. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:39 +0000</pubDate></item><item><title>CVE-2024-7974 | Insufficient data validation in V8 API in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corrupt...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7974</link><description>Insufficient data validation in V8 API in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to potentially exploit heap corruption via a crafted Chrome Extension. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:39 +0000</pubDate></item><item><title>CVE-2024-7975 | Inappropriate implementation in Permissions in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofing via a c...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7975</link><description>Inappropriate implementation in Permissions in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:40 +0000</pubDate></item><item><title>CVE-2024-7976 | Inappropriate implementation in FedCM in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofing via a crafted...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7976</link><description>Inappropriate implementation in FedCM in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:40 +0000</pubDate></item><item><title>CVE-2024-7977 | Insufficient data validation in Installer in Google Chrome on Windows prior to 128.0.6613.84 allowed a local attacker to perform privilege e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7977</link><description>Insufficient data validation in Installer in Google Chrome on Windows prior to 128.0.6613.84 allowed a local attacker to perform privilege escalation via a malicious file. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:40 +0000</pubDate></item><item><title>CVE-2024-7978 | Insufficient policy enforcement in Data Transfer in Google Chrome prior to 128.0.6613.84 allowed a remote attacker who convinced a user to e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7978</link><description>Insufficient policy enforcement in Data Transfer in Google Chrome prior to 128.0.6613.84 allowed a remote attacker who convinced a user to engage in specific UI gestures to leak cross-origin data via a crafted HTML page. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:41 +0000</pubDate></item><item><title>CVE-2024-7979 | Insufficient data validation in Installer in Google Chrome on Windows prior to 128.0.6613.84 allowed a local attacker to perform privilege e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7979</link><description>Insufficient data validation in Installer in Google Chrome on Windows prior to 128.0.6613.84 allowed a local attacker to perform privilege escalation via a crafted symbolic link. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:41 +0000</pubDate></item><item><title>CVE-2024-7980 | Insufficient data validation in Installer in Google Chrome on Windows prior to 128.0.6613.84 allowed a local attacker to perform privilege e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7980</link><description>Insufficient data validation in Installer in Google Chrome on Windows prior to 128.0.6613.84 allowed a local attacker to perform privilege escalation via a crafted symbolic link. (Chromium security severity: Medium)</description><pubDate>Wed, 21 Aug 2024 20:33:42 +0000</pubDate></item><item><title>CVE-2024-7981 | Inappropriate implementation in Views in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofing via a crafted...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7981</link><description>Inappropriate implementation in Views in Google Chrome prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Low)</description><pubDate>Wed, 21 Aug 2024 20:33:42 +0000</pubDate></item><item><title>CVE-2024-8033 | Inappropriate implementation in WebApp Installs in Google Chrome on Windows prior to 128.0.6613.84 allowed an attacker who convinced a user ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8033</link><description>Inappropriate implementation in WebApp Installs in Google Chrome on Windows prior to 128.0.6613.84 allowed an attacker who convinced a user to install a malicious application to perform UI spoofing via a crafted HTML page. (Chromium security severity: Low)</description><pubDate>Wed, 21 Aug 2024 20:33:42 +0000</pubDate></item><item><title>CVE-2024-8034 | Inappropriate implementation in Custom Tabs in Google Chrome on Android prior to 128.0.6613.84 allowed a remote attacker to perform UI spoof...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8034</link><description>Inappropriate implementation in Custom Tabs in Google Chrome on Android prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Low)</description><pubDate>Wed, 21 Aug 2024 20:33:43 +0000</pubDate></item><item><title>CVE-2024-8035 | Inappropriate implementation in Extensions in Google Chrome on Windows prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8035</link><description>Inappropriate implementation in Extensions in Google Chrome on Windows prior to 128.0.6613.84 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Low)</description><pubDate>Wed, 21 Aug 2024 20:33:43 +0000</pubDate></item><item><title>CVE-2024-20417 | Cisco Identity Services Engine REST API Blind SQL Injection Vulnerabities</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20417</link><description>Multiple vulnerabilities in the REST API of Cisco Identity Services Engine (ISE) could allow an authenticated, remote attacker to conduct blind SQL injection attacks.

These vulnerabilities are due to insufficient validation of user-supplied input in REST API calls. An attacker could exploit these vulnerabilities by sending crafted input to an affected device. A successful exploit could allow the attacker to view or modify data on the affected device.</description><pubDate>Wed, 21 Aug 2024 19:27:55 +0000</pubDate></item><item><title>CVE-2024-20466 | Cisco Identity Services Engine Sensitive Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20466</link><description>A vulnerability in the web-based management interface of Cisco Identity Services Engine (ISE) could allow an authenticated, remote attacker to obtain sensitive information from an affected device.

This vulnerability is due to improper enforcement of administrative privilege levels for high-value sensitive data. An attacker with read-only Administrator privileges for the web-based management interface on an affected device could exploit this vulnerability by browsing to a page that contains sensitive data. A successful exploit could allow the attacker to collect sensitive information regarding the configuration of the system.</description><pubDate>Wed, 21 Aug 2024 19:27:55 +0000</pubDate></item><item><title>CVE-2024-20486 | Cisco Identity Services Engine Cross-Site Request Forgery Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20486</link><description>A vulnerability in the web-based management interface of Cisco Identity Services Engine (ISE) could allow an unauthenticated, remote attacker to conduct a cross-site request forgery (CSRF) attack and perform arbitrary actions on an affected device.

This vulnerability is due to insufficient CSRF protections for the web-based management interface of an affected device. An attacker could exploit this vulnerability by persuading a user of the interface to follow a crafted link. A successful exploit could allow the attacker to perform arbitrary actions on the affected device with the privileges of the targeted user.</description><pubDate>Wed, 21 Aug 2024 19:27:55 +0000</pubDate></item><item><title>CVE-2024-41572 | Learning with Texts (LWT) 2.0.3 is vulnerable to Cross Site Scripting (XSS). The application has a specific function that does not filter sp...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41572</link><description>Learning with Texts (LWT) 2.0.3 is vulnerable to Cross Site Scripting (XSS). The application has a specific function that does not filter special characters in URL parameters. Remote attackers can inject JavaScript code without authorization.</description><pubDate>Wed, 21 Aug 2024 19:18:21 +0000</pubDate></item><item><title>CVE-2024-20488 | Cisco Unified Communications Manager Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20488</link><description>A vulnerability in the web-based management interface of Cisco Unified Communications Manager (Unified CM) and Cisco Unified Communications Manager Session Management Edition (Unified CM SME) could allow an unauthenticated, remote attacker to conduct a cross-site scripting (XSS) attack against a user of the interface.

This vulnerability exists because the web-based management interface does not properly validate user-supplied input. An attacker could exploit this vulnerability by persuading a user of the interface to click a crafted link. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.</description><pubDate>Wed, 21 Aug 2024 18:39:37 +0000</pubDate></item><item><title>CVE-2024-42777 | An Unrestricted file upload vulnerability was found in "/music/ajax.php?action=signup" of Kashipara Music Management System v1.0, which allo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42777</link><description>An Unrestricted file upload vulnerability was found in "/music/ajax.php?action=signup" of Kashipara Music Management System v1.0, which allows attackers to execute arbitrary code via uploading a crafted PHP file.</description><pubDate>Wed, 21 Aug 2024 18:23:17 +0000</pubDate></item><item><title>CVE-2024-42778 | An Unrestricted file upload vulnerability was found in "/music/ajax.php?action=save_playlist" in Kashipara Music Management System v1.0. Thi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42778</link><description>An Unrestricted file upload vulnerability was found in "/music/ajax.php?action=save_playlist" in Kashipara Music Management System v1.0. This allows attackers to execute arbitrary code via uploading a crafted PHP file.</description><pubDate>Wed, 21 Aug 2024 18:23:18 +0000</pubDate></item><item><title>CVE-2024-42782 | A SQL injection vulnerability in "/music/ajax.php?action=find_music" in Kashipara Music Management System v1.0 allows an attacker to execute...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42782</link><description>A SQL injection vulnerability in "/music/ajax.php?action=find_music" in Kashipara Music Management System v1.0 allows an attacker to execute arbitrary SQL commands via the "search" parameter.</description><pubDate>Wed, 21 Aug 2024 18:23:18 +0000</pubDate></item><item><title>CVE-2024-42779 | An Unrestricted file upload vulnerability was found in "/music/ajax.php?action=save_music" in Kashipara Music Management System v1.0. This a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42779</link><description>An Unrestricted file upload vulnerability was found in "/music/ajax.php?action=save_music" in Kashipara Music Management System v1.0. This allows attackers to execute arbitrary code via uploading a crafted PHP file.</description><pubDate>Wed, 21 Aug 2024 17:47:32 +0000</pubDate></item><item><title>CVE-2024-42780 | An Unrestricted file upload vulnerability was found in "/music/ajax.php?action=save_genre" in Kashipara Music Management System v1.0. This a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42780</link><description>An Unrestricted file upload vulnerability was found in "/music/ajax.php?action=save_genre" in Kashipara Music Management System v1.0. This allows attackers to execute arbitrary code via uploading a crafted PHP file.</description><pubDate>Wed, 21 Aug 2024 17:47:32 +0000</pubDate></item><item><title>CVE-2024-42781 | A SQL injection vulnerability in "/music/ajax.php?action=login" of Kashipara Music Management System v1.0 allows remote attackers to execute...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42781</link><description>A SQL injection vulnerability in "/music/ajax.php?action=login" of Kashipara Music Management System v1.0 allows remote attackers to execute arbitrary SQL commands and bypass Login via the email parameter.</description><pubDate>Wed, 21 Aug 2024 17:47:32 +0000</pubDate></item><item><title>CVE-2024-42784 | A SQL injection vulnerability in "/music/controller.php?page=view_music" in Kashipara Music Management System v1.0 allows an attacker to exe...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42784</link><description>A SQL injection vulnerability in "/music/controller.php?page=view_music" in Kashipara Music Management System v1.0 allows an attacker to execute arbitrary SQL commands via the "id" parameter.</description><pubDate>Wed, 21 Aug 2024 17:47:33 +0000</pubDate></item><item><title>CVE-2024-42783 | Kashipara Music Management System v1.0 is vulnerable to SQL Injection via /music/manage_playlist_items.php. An attacker can execute arbitrar...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42783</link><description>Kashipara Music Management System v1.0 is vulnerable to SQL Injection via /music/manage_playlist_items.php. An attacker can execute arbitrary SQL commands via the "pid" parameter.</description><pubDate>Wed, 21 Aug 2024 17:37:57 +0000</pubDate></item><item><title>CVE-2023-29929 | Buffer Overflow vulnerability found in Kemptechnologies Loadmaster before v.7.2.60.0 allows a remote attacker to casue a denial of service v...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-29929</link><description>Buffer Overflow vulnerability found in Kemptechnologies Loadmaster before v.7.2.60.0 allows a remote attacker to casue a denial of service via the libkemplink.so, isreverse library.</description><pubDate>Wed, 21 Aug 2024 17:27:53 +0000</pubDate></item><item><title>CVE-2024-42785 | A SQL injection vulnerability in /music/index.php?page=view_playlist in Kashipara Music Management System v1.0 allows an attacker to execute...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42785</link><description>A SQL injection vulnerability in /music/index.php?page=view_playlist in Kashipara Music Management System v1.0 allows an attacker to execute arbitrary SQL commands via the "id" parameter.</description><pubDate>Wed, 21 Aug 2024 17:27:54 +0000</pubDate></item><item><title>CVE-2024-42786 | A SQL injection vulnerability in "/music/view_user.php" in Kashipara Music Management System v1.0 allows an attacker to execute arbitrary SQ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42786</link><description>A SQL injection vulnerability in "/music/view_user.php" in Kashipara Music Management System v1.0 allows an attacker to execute arbitrary SQL commands via the "id" parameter of View User Profile Page.</description><pubDate>Wed, 21 Aug 2024 17:27:54 +0000</pubDate></item><item><title>CVE-2024-20375 | A vulnerability in the SIP call processing function of Cisco Unified Communications Manager (Unified CM) and Cisco Unified Communications Ma...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20375</link><description>A vulnerability in the SIP call processing function of Cisco Unified Communications Manager (Unified CM) and Cisco Unified Communications Manager Session Management Edition (Unified CM SME) could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device.
&#13; This vulnerability is due to improper parsing of SIP messages. An attacker could exploit this vulnerability by sending a crafted SIP message to an affected Cisco Unified CM or Cisco Unified CM SME device. A successful exploit could allow the attacker to cause the device to reload, resulting in a DoS condition that interrupts the communications of reliant voice and video devices.</description><pubDate>Wed, 21 Aug 2024 17:10:37 +0000</pubDate></item><item><title>CVE-2024-42550 | A cross-site scripting (XSS) vulnerability in the component /email/welcome.php of Mini Inventory and Sales Management System commit 18aa3d a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42550</link><description>A cross-site scripting (XSS) vulnerability in the component /email/welcome.php of Mini Inventory and Sales Management System commit 18aa3d allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Title parameter.</description><pubDate>Wed, 21 Aug 2024 17:10:38 +0000</pubDate></item><item><title>CVE-2024-43022 | An issue in the downloader.php component of TOSEI online store management system v4.02, v4.03, and v4.04 allows attackers to execute a direc...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43022</link><description>An issue in the downloader.php component of TOSEI online store management system v4.02, v4.03, and v4.04 allows attackers to execute a directory traversal.</description><pubDate>Wed, 21 Aug 2024 17:10:38 +0000</pubDate></item><item><title>CVE-2024-40453 | squirrellyjs squirrelly v9.0.0 and fixed in v.9.0.1 was discovered to contain a code injection vulnerability via the component options.varNa...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-40453</link><description>squirrellyjs squirrelly v9.0.0 and fixed in v.9.0.1 was discovered to contain a code injection vulnerability via the component options.varName.</description><pubDate>Wed, 21 Aug 2024 17:10:39 +0000</pubDate></item><item><title>CVE-2024-33656 | Memory Leak in SmmComuptrace Module</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33656</link><description>The DXE module SmmComputrace contains a vulnerability that allows local attackers to leak stack or global memory. This could lead to privilege escalation, arbitrary code execution, and bypassing OS security mechanisms</description><pubDate>Wed, 21 Aug 2024 16:28:17 +0000</pubDate></item><item><title>CVE-2024-33657 | Smm Callout in SmmComputrace Module</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33657</link><description>This SMM vulnerability affects certain modules, allowing privileged attackers to execute arbitrary code, manipulate stack memory, and leak information from SMRAM to kernel space, potentially leading to denial-of-service attacks.</description><pubDate>Wed, 21 Aug 2024 16:28:17 +0000</pubDate></item><item><title>CVE-2024-5723 | Centreon updateServiceHost SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5723</link><description>Centreon updateServiceHost SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.

The specific flaw exists within the updateServiceHost function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the apache user. Was ZDI-CAN-23294.</description><pubDate>Wed, 21 Aug 2024 16:28:17 +0000</pubDate></item><item><title>CVE-2024-5725 | Centreon initCurveList SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5725</link><description>Centreon initCurveList SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.

The specific flaw exists within the initCurveList function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the apache user. Was ZDI-CAN-22683.</description><pubDate>Wed, 21 Aug 2024 16:28:18 +0000</pubDate></item><item><title>CVE-2024-5762 | Zen Cart findPluginAdminPage Local File Inclusion Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5762</link><description>Zen Cart findPluginAdminPage Local File Inclusion Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Zen Cart. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the findPluginAdminPage function. The issue results from the lack of proper validation of user-supplied data prior to passing it to a PHP include function. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the service account. Was ZDI-CAN-21408.</description><pubDate>Wed, 21 Aug 2024 16:28:18 +0000</pubDate></item><item><title>CVE-2024-5928 | VIPRE Advanced Security PMAgent Link Following Local Privilege Escalation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5928</link><description>VIPRE Advanced Security PMAgent Link Following Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of VIPRE Advanced Security. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.

The specific flaw exists within the Patch Management Agent. By creating a symbolic link, an attacker can abuse the agent to delete a file. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-22315.</description><pubDate>Wed, 21 Aug 2024 16:28:18 +0000</pubDate></item><item><title>CVE-2024-5929 | VIPRE Advanced Security PMAgent Uncontrolled Search Path Element Local Privilege Escalation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5929</link><description>VIPRE Advanced Security PMAgent Uncontrolled Search Path Element Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of VIPRE Advanced Security. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.

The specific flaw exists within the Patch Management Agent. The issue results from loading a file from an unsecured location. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-22316.</description><pubDate>Wed, 21 Aug 2024 16:28:19 +0000</pubDate></item><item><title>CVE-2024-5930 | VIPRE Advanced Security Incorrect Permission Assignment Local Privilege Escalation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5930</link><description>VIPRE Advanced Security Incorrect Permission Assignment Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of VIPRE Advanced Security. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.

The specific flaw exists within the Anti Malware Service. The issue results from incorrect permissions on a file. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-22345.</description><pubDate>Wed, 21 Aug 2024 16:28:19 +0000</pubDate></item><item><title>CVE-2024-6141 | Windscribe Directory Traversal Local Privilege Escalation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6141</link><description>Windscribe Directory Traversal Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of Windscribe. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.

The specific flaw exists within the Windscribe Service. The issue results from the lack of proper validation of a user-supplied path prior to using it in file operations. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-23441.</description><pubDate>Wed, 21 Aug 2024 16:28:20 +0000</pubDate></item><item><title>CVE-2024-7448 | Magnet Forensics AXIOM Command Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7448</link><description>Magnet Forensics AXIOM Command Injection Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Magnet Forensics AXIOM. User interaction is required to exploit this vulnerability in that the target must acquire data from a malicious mobile device.

The specific flaw exists within the Android device image acquisition functionality. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of the current user. Was ZDI-CAN-23964.</description><pubDate>Wed, 21 Aug 2024 16:28:20 +0000</pubDate></item><item><title>CVE-2024-21690 | This High severity Reflected XSS and CSRF (Cross-Site Request Forgery) vulnerability was introduced in versions 7.19.0, 7.20.0, 8.0.0, 8.1.0...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21690</link><description>This High severity Reflected XSS and CSRF (Cross-Site Request Forgery) vulnerability was introduced in versions 7.19.0, 7.20.0, 8.0.0, 8.1.0, 8.2.0, 8.3.0, 8.4.0, 8.5.0, 8.6.0, 8.7.1, 8.8.0, and 8.9.0 of Confluence Data Center and Server. 
	
	This Reflected XSS and CSRF (Cross-Site Request Forgery) vulnerability, with a CVSS Score of 7.1, allows an unauthenticated attacker to execute arbitrary HTML or JavaScript code on a victims browser and force a end user to execute unwanted actions on a web application in which they're currently authenticated which has high impact to confidentiality, low impact to integrity, no impact to availability, and requires user interaction. 
	
	Atlassian recommends that Confluence Data Center and Server customers upgrade to latest version, if you are unable to do so, upgrade your instance to one of the specified supported fixed versions:
		
		* Confluence Data Center and Server 7.19: Upgrade to a release greater than or equal to 7.19.26
		
		* Confluence Data Center and Server 8.5: Upgrade to a release greater than or equal to 8.5.14
		
		* Confluence Data Center and Server 9.0: Upgrade to a release greater than or equal to 9.0.1
		
		
	
	See the release notes (https://confluence.atlassian.com/doc/confluence-release-notes-327.html). You can download the latest version of Confluence Data Center and Server from the download center (https://www.atlassian.com/software/confluence/download-archives). 
	
	This vulnerability was reported via our Bug Bounty program.</description><pubDate>Wed, 21 Aug 2024 16:28:21 +0000</pubDate></item><item><title>CVE-2024-39344 | An issue was discovered in the Docusign API package 8.142.14 for Salesforce. The Apttus_DocuApi__DocusignAuthentication__mdt object is insta...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39344</link><description>An issue was discovered in the Docusign API package 8.142.14 for Salesforce. The Apttus_DocuApi__DocusignAuthentication__mdt object is installed via the marketplace from this package and stores some configuration information in a manner that could be compromised. With the default settings when installed for all users, the object can be accessible and (via its fields) could disclose some keys. These disclosed components can be combined to create a valid session via the Docusign API. This will generally lead to a complete compromise of the Docusign account because the session is for an administrator service account and may have permission to re-authenticate as specific users with the same authorization flow.</description><pubDate>Wed, 21 Aug 2024 16:28:21 +0000</pubDate></item><item><title>CVE-2024-6811 | IrfanView WSQ File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6811</link><description>IrfanView WSQ File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of IrfanView. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of WSQ files. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24192.</description><pubDate>Wed, 21 Aug 2024 16:28:21 +0000</pubDate></item><item><title>CVE-2024-6812 | IrfanView WSQ File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6812</link><description>IrfanView WSQ File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of IrfanView. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of WSQ files. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-23273.</description><pubDate>Wed, 21 Aug 2024 16:28:22 +0000</pubDate></item><item><title>CVE-2024-6813 | NETGEAR ProSAFE Network Management System getSortString SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6813</link><description>NETGEAR ProSAFE Network Management System getSortString SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of NETGEAR ProSAFE Network Management System. Authentication is required to exploit this vulnerability.

The specific flaw exists within the getSortString method. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-23207.</description><pubDate>Wed, 21 Aug 2024 16:28:22 +0000</pubDate></item><item><title>CVE-2024-6814 | NETGEAR ProSAFE Network Management System getFilterString SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6814</link><description>NETGEAR ProSAFE Network Management System getFilterString SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of NETGEAR ProSAFE Network Management System. Authentication is required to exploit this vulnerability.

The specific flaw exists within the getFilterString method. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-23399.</description><pubDate>Wed, 21 Aug 2024 16:28:23 +0000</pubDate></item><item><title>CVE-2024-7600 | Logsign Unified SecOps Platform Directory Traversal Arbitrary File Deletion Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7600</link><description>Logsign Unified SecOps Platform Directory Traversal Arbitrary File Deletion Vulnerability. This vulnerability allows remote attackers to delete arbitrary files on affected installations of Logsign Unified SecOps Platform. Authentication is required to exploit this vulnerability.

The specific flaw exists within the HTTP API service, which listens on TCP port 443 by default. The issue results from the lack of proper validation of a user-supplied path prior to using it in file operations. An attacker can leverage this vulnerability to delete files in the context of root. Was ZDI-CAN-25025.</description><pubDate>Wed, 21 Aug 2024 16:28:23 +0000</pubDate></item><item><title>CVE-2024-7601 | Logsign Unified SecOps Platform Directory data_export_delete_all Traversal Arbitrary File Deletion Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7601</link><description>Logsign Unified SecOps Platform Directory data_export_delete_all Traversal Arbitrary File Deletion Vulnerability. This vulnerability allows remote attackers to delete arbitrary files on affected installations of Logsign Unified SecOps Platform. Authentication is required to exploit this vulnerability.

The specific flaw exists within the HTTP API service, which listens on TCP port 443 by default. The issue results from the lack of proper validation of a user-supplied path prior to using it in file operations. An attacker can leverage this vulnerability to delete files in the context of root. Was ZDI-CAN-25026.</description><pubDate>Wed, 21 Aug 2024 16:28:23 +0000</pubDate></item><item><title>CVE-2024-7602 | Logsign Unified SecOps Platform Directory Traversal Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7602</link><description>Logsign Unified SecOps Platform Directory Traversal Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Logsign Unified SecOps Platform. Authentication is required to exploit this vulnerability.

The specific flaw exists within the HTTP API service, which listens on TCP port 443 by default. The issue results from the lack of proper validation of a user-supplied path prior to using it in file operations. An attacker can leverage this vulnerability to disclose information in the context of root. Was ZDI-CAN-25027.</description><pubDate>Wed, 21 Aug 2024 16:28:24 +0000</pubDate></item><item><title>CVE-2024-7603 | Logsign Unified SecOps Platform Directory Traversal Arbitrary Directory Deletion Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7603</link><description>Logsign Unified SecOps Platform Directory Traversal Arbitrary Directory Deletion Vulnerability. This vulnerability allows remote attackers to delete arbitrary directories on affected installations of Logsign Unified SecOps Platform. Authentication is required to exploit this vulnerability.

The specific flaw exists within the HTTP API service, which listens on TCP port 443 by default. The issue results from the lack of proper validation of a user-supplied path prior to using it in file operations. An attacker can leverage this vulnerability to delete directories in the context of root. Was ZDI-CAN-25028.</description><pubDate>Wed, 21 Aug 2024 16:28:24 +0000</pubDate></item><item><title>CVE-2024-7604 | Logsign Unified SecOps Platform Incorrect Authorization Authentication Bypass Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7604</link><description>Logsign Unified SecOps Platform Incorrect Authorization Authentication Bypass Vulnerability. This vulnerability allows local attackers to bypass authentication on affected installations of Logsign Unified SecOps Platform. Authentication is required to exploit this vulnerability.

The specific flaw exists within the HTTP API service, which listens on TCP port 443 by default. The issue results from the lack of proper validation of the user's license expiration date. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-25029.</description><pubDate>Wed, 21 Aug 2024 16:28:24 +0000</pubDate></item><item><title>CVE-2024-7722 | Foxit PDF Reader Doc Object Use-After-Free Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7722</link><description>Foxit PDF Reader Doc Object Use-After-Free Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-23702.</description><pubDate>Wed, 21 Aug 2024 16:28:25 +0000</pubDate></item><item><title>CVE-2024-7723 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7723</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-23736.</description><pubDate>Wed, 21 Aug 2024 16:28:25 +0000</pubDate></item><item><title>CVE-2024-7724 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7724</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-23900.</description><pubDate>Wed, 21 Aug 2024 16:28:25 +0000</pubDate></item><item><title>CVE-2024-7725 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7725</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-23928.</description><pubDate>Wed, 21 Aug 2024 16:28:26 +0000</pubDate></item><item><title>CVE-2024-7795 | Autel MaxiCharger AC Elite Business C50 AppAuthenExchangeRandomNum Stack-Based Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7795</link><description>Autel MaxiCharger AC Elite Business C50 AppAuthenExchangeRandomNum Stack-Based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Autel MaxiCharger AC Elite Business C50 EV chargers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the handling of the AppAuthenExchangeRandomNum BLE command. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of the device. Was ZDI-CAN-23384.</description><pubDate>Wed, 21 Aug 2024 16:28:26 +0000</pubDate></item><item><title>CVE-2024-43027 | DrayTek Vigor 3900 before v1.5.1.5_Beta, DrayTek Vigor 2960 before v1.5.1.5_Beta and DrayTek Vigor 300B before v1.5.1.5_Beta were discovered...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43027</link><description>DrayTek Vigor 3900 before v1.5.1.5_Beta, DrayTek Vigor 2960 before v1.5.1.5_Beta and DrayTek Vigor 300B before v1.5.1.5_Beta were discovered to contain a command injection vulnerability via the action parameter at cgi-bin/mainfunction.cgi.</description><pubDate>Wed, 21 Aug 2024 15:59:50 +0000</pubDate></item><item><title>CVE-2024-41937 | Apache Airflow: Stored XSS Vulnerability on provider link</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41937</link><description>Apache Airflow, versions before 2.10.0, have a vulnerability that allows the developer of a malicious provider to execute a cross-site scripting attack when clicking on a provider documentation link. This would require the provider to be installed on the web server and the user to click the provider link.
Users should upgrade to 2.10.0 or later, which fixes this vulnerability.</description><pubDate>Wed, 21 Aug 2024 15:40:17 +0000</pubDate></item><item><title>CVE-2022-26327 | Stored cross-site scripting (XSS) has been discovered in OpenText™ Performance Center</title><link>https://www.cve.org/CVERecord?id=CVE-2022-26327</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in OpenText Performance Center on Windows allows Retrieve Embedded Sensitive Data.This issue affects Performance Center: 12.63.</description><pubDate>Wed, 21 Aug 2024 15:30:07 +0000</pubDate></item><item><title>CVE-2022-26328 | User enumeration vulnerability has been discovered in OpenText™ Performance Center</title><link>https://www.cve.org/CVERecord?id=CVE-2022-26328</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in OpenText Performance Center on Windows allows Cross-Site Scripting (XSS).This issue affects Performance Center: 12.63.</description><pubDate>Wed, 21 Aug 2024 15:30:07 +0000</pubDate></item><item><title>CVE-2024-43410 | Russh has an OOM Denial of Service due to allocation of untrusted amount</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43410</link><description>Russh is a Rust SSH client &amp; server library. Allocating an untrusted amount of memory allows any unauthenticated user to OOM a russh server. An SSH packet consists of a 4-byte big-endian length, followed by a byte stream of this length.
After parsing and potentially decrypting the 4-byte length, russh allocates enough memory for this bytestream, as a performance optimization to avoid reallocations later. But this length is entirely untrusted and can be set to any value by the client, causing this much memory to be allocated, which will cause the process to OOM within a few such requests. This vulnerability is fixed in 0.44.1.</description><pubDate>Wed, 21 Aug 2024 15:30:08 +0000</pubDate></item><item><title>CVE-2024-43411 | CKEditor4 has a low risk cross-site scripting (XSS) vulnerability from domain takeover</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43411</link><description>CKEditor4 is an open source what-you-see-is-what-you-get HTML editor. A theoretical vulnerability has been identified in CKEditor 4.22 (and above). In a highly unlikely scenario where an attacker gains control over the https://cke4.ckeditor.com domain, they could potentially execute an attack on CKEditor 4 instances. The issue impacts only editor instances with enabled version notifications. Please note that this feature is disabled by default in all CKEditor 4 LTS versions. Therefore, if you use CKEditor 4 LTS, it is highly unlikely that you are affected by this vulnerability. If you are unsure, please contact us. The fix is available in version 4.25.0-lts.</description><pubDate>Wed, 21 Aug 2024 15:30:09 +0000</pubDate></item><item><title>CVE-2024-43407 | Code Snippet GeSHi plugin has reflected cross-site scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43407</link><description>CKEditor4 is an open source what-you-see-is-what-you-get HTML editor. A potential vulnerability has been discovered in CKEditor 4 Code Snippet GeSHi plugin. The vulnerability allowed a reflected XSS attack by exploiting a flaw in the GeSHi syntax highlighter library hosted by the victim. The GeSHi library was included as a vendor dependency in CKEditor 4 source files. In a specific scenario, an attacker could craft a malicious script that could be executed by sending a request to the GeSHi library hosted on a PHP web server. The GeSHi library is no longer actively maintained. Due to the lack of ongoing support and updates, potential security vulnerabilities have been identified with its continued use. To mitigate these risks and enhance the overall security of the CKEditor 4, we have decided to completely remove the GeSHi library as a dependency. This change aims to maintain a secure environment and reduce the risk of any security incidents related to outdated or unsupported software. The fix is be available in version 4.25.0-lts.</description><pubDate>Wed, 21 Aug 2024 15:16:22 +0000</pubDate></item><item><title>CVE-2024-43371 | Potential access to sensitive URLs via CKAN extensions (SSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43371</link><description>CKAN is an open-source data management system for powering data hubs and data portals. There are a number of CKAN plugins, including XLoader, DataPusher, Resource proxy and ckanext-archiver, that work by downloading the contents of local or remote files in order to perform some actions with their contents (e.g. pushing to the DataStore, streaming contents or saving a local copy). All of them use the resource URL, and there are currently no checks to limit what URLs can be requested. This means that a malicious (or unaware) user can create a resource with a URL pointing to a place where they should not have access in order for one of the previous tools to retrieve it (known as a Server Side Request Forgery). Users wanting to protect against these kinds of attacks can use one or a combination of the following approaches: (1) Use a separate HTTP proxy like Squid that can be used to allow / disallow IPs, domains etc as needed, and make CKAN extensions aware of this setting via the ckan.download_proxy config option. (2) Implement custom firewall rules to prevent access to restricted resources. (3) Use custom validators on the resource url field to block/allow certain domains or IPs. All latest versions of the plugins listed above support the ckan.download_proxy settings. Support for this setting in the Resource Proxy plugin was included in CKAN 2.10.5 and 2.11.0.</description><pubDate>Wed, 21 Aug 2024 14:56:18 +0000</pubDate></item><item><title>CVE-2024-41674 | CKAN may leak Solr credentials via error message in package_search action</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41674</link><description>CKAN is an open-source data management system for powering data hubs and data portals. If there were connection issues with the Solr server, the internal Solr URL (potentially including credentials) could be leaked to package_search calls as part of the returned error message. This has been patched in CKAN 2.10.5 and 2.11.0.</description><pubDate>Wed, 21 Aug 2024 14:36:43 +0000</pubDate></item><item><title>CVE-2024-41675 | CKAN has a Cross-site Scripting vector in the Datatables view plugin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41675</link><description>CKAN is an open-source data management system for powering data hubs and data portals. The Datatables view plugin did not properly escape record data coming from the DataStore, leading to a potential XSS vector. Sites running CKAN &gt;= 2.7.0 with the datatables_view plugin activated. This is a plugin included in CKAN core, that not activated by default but it is widely used to preview tabular data. This vulnerability has been fixed in CKAN 2.10.5 and 2.11.0.</description><pubDate>Wed, 21 Aug 2024 14:36:44 +0000</pubDate></item><item><title>CVE-2024-7885 | Undertow: improper state management in proxy protocol parsing causes information leakage</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7885</link><description>A vulnerability was found in Undertow where the ProxyProtocolReadListener reuses the same StringBuilder instance across multiple requests. This issue occurs when the parseProxyProtocolV1 method processes multiple requests on the same HTTP connection. As a result, different requests may share the same StringBuilder instance, potentially leading to information leakage between requests or responses. In some cases, a value from a previous request or response may be erroneously reused, which could lead to unintended data exposure. This issue primarily results in errors and connection termination but creates a risk of data leakage in multi-request environments.</description><pubDate>Wed, 21 Aug 2024 14:22:55 +0000</pubDate></item><item><title>CVE-2024-28000 | WordPress LiteSpeed Cache plugin &amp;lt;= 6.3.0.1 - Unauthenticated Privilege Escalation vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28000</link><description>Incorrect Privilege Assignment vulnerability in LiteSpeed Technologies LiteSpeed Cache allows Privilege Escalation.This issue affects LiteSpeed Cache: from n/a through 6.3.0.1.</description><pubDate>Wed, 21 Aug 2024 14:00:02 +0000</pubDate></item><item><title>CVE-2024-8007 | Rhosp-director: rhosp director disables tls verification for registry mirrors</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8007</link><description>A flaw was found in the Red Hat OpenStack Platform (RHOSP) director. This vulnerability allows an attacker to deploy potentially compromised container images via disabling TLS certificate verification for registry mirrors, which could enable a man-in-the-middle (MITM) attack.</description><pubDate>Wed, 21 Aug 2024 13:50:15 +0000</pubDate></item><item><title>CVE-2020-11846 | Improper handling of token allows access to restricted resource in Privileged Access Manager</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11846</link><description>A vulnerability found in OpenText Privileged Access Manager that issues a token. on successful issuance of the token, a cookie gets set that allows unrestricted access to all the application resources. This issue affects Privileged Access Manager before 3.7.0.1.</description><pubDate>Wed, 21 Aug 2024 13:40:28 +0000</pubDate></item><item><title>CVE-2020-11847 | Vulnerability in sshrelay in privileged access manager provides full system access.</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11847</link><description>SSH authenticated user when access the PAM server can execute an OS command to gain the full system access using bash. This issue affects Privileged Access Manager before 3.7.0.1.</description><pubDate>Wed, 21 Aug 2024 13:40:29 +0000</pubDate></item><item><title>CVE-2020-11850 | Cross site scripting vulnerability in Self Service Password Reset</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11850</link><description>Improper Input Validation vulnerability in OpenText Self Service Password Reset allows Cross-Site Scripting (XSS). This issue affects Self Service Password Reset before 4.5.0.2 and 4.4.0.6</description><pubDate>Wed, 21 Aug 2024 13:10:36 +0000</pubDate></item><item><title>CVE-2024-37008 | Stack-based Overflow Vulnerability in Revit Software</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37008</link><description>A maliciously crafted DWG file, when parsed in Revit, can force a stack-based buffer overflow. A malicious actor can leverage this vulnerability to execute arbitrary code in the context of the current process.</description><pubDate>Wed, 21 Aug 2024 10:24:06 +0000</pubDate></item><item><title>CVE-2023-22576 | Dell Repository Manager version 3.4.2 and earlier, contain a Local Privilege Escalation Vulnerability in Installation module. A local low pr...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-22576</link><description>Dell Repository Manager version 3.4.2 and earlier, contain a Local Privilege Escalation Vulnerability in Installation module. A local low privileged attacker may potentially exploit this vulnerability leading to the execution of arbitrary executable on the operating system with high privileges using the existing vulnerability in operating system. Exploitation may lead to unavailability of the service.</description><pubDate>Wed, 21 Aug 2024 09:50:41 +0000</pubDate></item><item><title>CVE-2023-49198 | Apache SeaTunnel Web: Arbitrary file read vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49198</link><description>Mysql security vulnerability in Apache SeaTunnel.

Attackers can read files on the MySQL server by modifying the information in the MySQL URL

 allowLoadLocalInfile=true&amp;amp;allowUrlInLocalInfile=true&amp;amp;allowLoadLocalInfileInPath=/&amp;amp;maxAllowedPacket=655360
This issue affects Apache SeaTunnel: 1.0.0.

Users are recommended to upgrade to version [1.0.1], which fixes the issue.</description><pubDate>Wed, 21 Aug 2024 09:50:41 +0000</pubDate></item><item><title>CVE-2024-5335 | Ultimate Store Kit Elementor Addons, Woocommerce Builder, EDD Builder, Elementor Store Builder, Product Grid, Product Table, Woocommerce Slider &amp;lt;= 1.6.4 - Unauthenticated PHP Object Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5335</link><description>The Ultimate Store Kit Elementor Addons, Woocommerce Builder, EDD Builder, Elementor Store Builder, Product Grid, Product Table, Woocommerce Slider plugin is vulnerable to PHP Object Injection via deserialization of untrusted input via the _ultimate_store_kit_compare_products cookie in versions up to , and including, 1.6.4. This makes it possible for an unauthenticated attacker to inject a PHP Object.

No POP chain is present in the vulnerable plugin. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker or above to delete arbitrary files, retrieve sensitive data, or execute code.</description><pubDate>Wed, 21 Aug 2024 08:35:14 +0000</pubDate></item><item><title>CVE-2024-6339 | Phlox PRO &amp;lt;= 5.16.4 - Reflected Cross-Site Scripting via Search Parameters</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6339</link><description>The Phlox PRO theme for WordPress is vulnerable to Reflected Cross-Site Scripting via search parameters in all versions up to, and including, 5.16.4 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Wed, 21 Aug 2024 07:45:06 +0000</pubDate></item><item><title>CVE-2022-48867 | dmaengine: idxd: Prevent use after free on completion memory</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48867</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: idxd: Prevent use after free on completion memory

On driver unload any pending descriptors are flushed at the
time the interrupt is freed:
idxd_dmaengine_drv_remove() -&gt;
	drv_disable_wq() -&gt;
		idxd_wq_free_irq() -&gt;
			idxd_flush_pending_descs().

If there are any descriptors present that need to be flushed this
flow triggers a "not present" page fault as below:

 BUG: unable to handle page fault for address: ff391c97c70c9040
 #PF: supervisor read access in kernel mode
 #PF: error_code(0x0000) - not-present page

The address that triggers the fault is the address of the
descriptor that was freed moments earlier via:
drv_disable_wq()-&gt;idxd_wq_free_resources()

Fix the use after free by freeing the descriptors after any possible
usage. This is done after idxd_wq_reset() to ensure that the memory
remains accessible during possible completion writes by the device.</description><pubDate>Wed, 21 Aug 2024 06:29:21 +0000</pubDate></item><item><title>CVE-2022-48868 | dmaengine: idxd: Let probe fail when workqueue cannot be enabled</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48868</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: idxd: Let probe fail when workqueue cannot be enabled

The workqueue is enabled when the appropriate driver is loaded and
disabled when the driver is removed. When the driver is removed it
assumes that the workqueue was enabled successfully and proceeds to
free allocations made during workqueue enabling.

Failure during workqueue enabling does not prevent the driver from
being loaded. This is because the error path within drv_enable_wq()
returns success unless a second failure is encountered
during the error path. By returning success it is possible to load
the driver even if the workqueue cannot be enabled and
allocations that do not exist are attempted to be freed during
driver remove.

Some examples of problematic flows:
(a)

 idxd_dmaengine_drv_probe() -&gt; drv_enable_wq() -&gt; idxd_wq_request_irq():
 In above flow, if idxd_wq_request_irq() fails then
 idxd_wq_unmap_portal() is called on error exit path, but
 drv_enable_wq() returns 0 because idxd_wq_disable() succeeds. The
 driver is thus loaded successfully.

 idxd_dmaengine_drv_remove()-&gt;drv_disable_wq()-&gt;idxd_wq_unmap_portal()
 Above flow on driver unload triggers the WARN in devm_iounmap() because
 the device resource has already been removed during error path of
 drv_enable_wq().

(b)

 idxd_dmaengine_drv_probe() -&gt; drv_enable_wq() -&gt; idxd_wq_request_irq():
 In above flow, if idxd_wq_request_irq() fails then
 idxd_wq_init_percpu_ref() is never called to initialize the percpu
 counter, yet the driver loads successfully because drv_enable_wq()
 returns 0.

 idxd_dmaengine_drv_remove()-&gt;__idxd_wq_quiesce()-&gt;percpu_ref_kill():
 Above flow on driver unload triggers a BUG when attempting to drop the
 initial ref of the uninitialized percpu ref:
 BUG: kernel NULL pointer dereference, address: 0000000000000010

Fix the drv_enable_wq() error path by returning the original error that
indicates failure of workqueue enabling. This ensures that the probe
fails when an error is encountered and the driver remove paths are only
attempted when the workqueue was enabled successfully.</description><pubDate>Wed, 21 Aug 2024 06:29:22 +0000</pubDate></item><item><title>CVE-2022-48869 | USB: gadgetfs: Fix race between mounting and unmounting</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48869</link><description>In the Linux kernel, the following vulnerability has been resolved:

USB: gadgetfs: Fix race between mounting and unmounting

The syzbot fuzzer and Gerald Lee have identified a use-after-free bug
in the gadgetfs driver, involving processes concurrently mounting and
unmounting the gadgetfs filesystem.  In particular, gadgetfs_fill_super()
can race with gadgetfs_kill_sb(), causing the latter to deallocate
the_device while the former is using it.  The output from KASAN says,
in part:

BUG: KASAN: use-after-free in instrument_atomic_read_write include/linux/instrumented.h:102 [inline]
BUG: KASAN: use-after-free in atomic_fetch_sub_release include/linux/atomic/atomic-instrumented.h:176 [inline]
BUG: KASAN: use-after-free in __refcount_sub_and_test include/linux/refcount.h:272 [inline]
BUG: KASAN: use-after-free in __refcount_dec_and_test include/linux/refcount.h:315 [inline]
BUG: KASAN: use-after-free in refcount_dec_and_test include/linux/refcount.h:333 [inline]
BUG: KASAN: use-after-free in put_dev drivers/usb/gadget/legacy/inode.c:159 [inline]
BUG: KASAN: use-after-free in gadgetfs_kill_sb+0x33/0x100 drivers/usb/gadget/legacy/inode.c:2086
Write of size 4 at addr ffff8880276d7840 by task syz-executor126/18689

CPU: 0 PID: 18689 Comm: syz-executor126 Not tainted 6.1.0-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
Call Trace:
 
...
 atomic_fetch_sub_release include/linux/atomic/atomic-instrumented.h:176 [inline]
 __refcount_sub_and_test include/linux/refcount.h:272 [inline]
 __refcount_dec_and_test include/linux/refcount.h:315 [inline]
 refcount_dec_and_test include/linux/refcount.h:333 [inline]
 put_dev drivers/usb/gadget/legacy/inode.c:159 [inline]
 gadgetfs_kill_sb+0x33/0x100 drivers/usb/gadget/legacy/inode.c:2086
 deactivate_locked_super+0xa7/0xf0 fs/super.c:332
 vfs_get_super fs/super.c:1190 [inline]
 get_tree_single+0xd0/0x160 fs/super.c:1207
 vfs_get_tree+0x88/0x270 fs/super.c:1531
 vfs_fsconfig_locked fs/fsopen.c:232 [inline]

The simplest solution is to ensure that gadgetfs_fill_super() and
gadgetfs_kill_sb() are serialized by making them both acquire a new
mutex.</description><pubDate>Wed, 21 Aug 2024 06:29:22 +0000</pubDate></item><item><title>CVE-2022-48870 | tty: fix possible null-ptr-defer in spk_ttyio_release</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48870</link><description>In the Linux kernel, the following vulnerability has been resolved:

tty: fix possible null-ptr-defer in spk_ttyio_release

Run the following tests on the qemu platform:

syzkaller:~# modprobe speakup_audptr
 input: Speakup as /devices/virtual/input/input4
 initialized device: /dev/synth, node (MAJOR 10, MINOR 125)
 speakup 3.1.6: initialized
 synth name on entry is: (null)
 synth probe

spk_ttyio_initialise_ldisc failed because tty_kopen_exclusive returned
failed (errno -16), then remove the module, we will get a null-ptr-defer
problem, as follow:

syzkaller:~# modprobe -r speakup_audptr
 releasing synth audptr
 BUG: kernel NULL pointer dereference, address: 0000000000000080
 #PF: supervisor write access in kernel mode
 #PF: error_code(0x0002) - not-present page
 PGD 0 P4D 0
 Oops: 0002 [#1] PREEMPT SMP PTI
 CPU: 2 PID: 204 Comm: modprobe Not tainted 6.1.0-rc6-dirty #1
 RIP: 0010:mutex_lock+0x14/0x30
 Call Trace:
 
  spk_ttyio_release+0x19/0x70 [speakup]
  synth_release.part.6+0xac/0xc0 [speakup]
  synth_remove+0x56/0x60 [speakup]
  __x64_sys_delete_module+0x156/0x250
  ? fpregs_assert_state_consistent+0x1d/0x50
  do_syscall_64+0x37/0x90
  entry_SYSCALL_64_after_hwframe+0x63/0xcd
 
 Modules linked in: speakup_audptr(-) speakup
 Dumping ftrace buffer:

in_synth-&gt;dev was not initialized during modprobe, so we add check
for in_synth-&gt;dev to fix this bug.</description><pubDate>Wed, 21 Aug 2024 06:29:22 +0000</pubDate></item><item><title>CVE-2022-48871 | tty: serial: qcom-geni-serial: fix slab-out-of-bounds on RX FIFO buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48871</link><description>In the Linux kernel, the following vulnerability has been resolved:

tty: serial: qcom-geni-serial: fix slab-out-of-bounds on RX FIFO buffer

Driver's probe allocates memory for RX FIFO (port-&gt;rx_fifo) based on
default RX FIFO depth, e.g. 16.  Later during serial startup the
qcom_geni_serial_port_setup() updates the RX FIFO depth
(port-&gt;rx_fifo_depth) to match real device capabilities, e.g. to 32.

The RX UART handle code will read "port-&gt;rx_fifo_depth" number of words
into "port-&gt;rx_fifo" buffer, thus exceeding the bounds.  This can be
observed in certain configurations with Qualcomm Bluetooth HCI UART
device and KASAN:

  Bluetooth: hci0: QCA Product ID   :0x00000010
  Bluetooth: hci0: QCA SOC Version  :0x400a0200
  Bluetooth: hci0: QCA ROM Version  :0x00000200
  Bluetooth: hci0: QCA Patch Version:0x00000d2b
  Bluetooth: hci0: QCA controller version 0x02000200
  Bluetooth: hci0: QCA Downloading qca/htbtfw20.tlv
  bluetooth hci0: Direct firmware load for qca/htbtfw20.tlv failed with error -2
  Bluetooth: hci0: QCA Failed to request file: qca/htbtfw20.tlv (-2)
  Bluetooth: hci0: QCA Failed to download patch (-2)
  ==================================================================
  BUG: KASAN: slab-out-of-bounds in handle_rx_uart+0xa8/0x18c
  Write of size 4 at addr ffff279347d578c0 by task swapper/0/0

  CPU: 0 PID: 0 Comm: swapper/0 Not tainted 6.1.0-rt5-00350-gb2450b7e00be-dirty #26
  Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)
  Call trace:
   dump_backtrace.part.0+0xe0/0xf0
   show_stack+0x18/0x40
   dump_stack_lvl+0x8c/0xb8
   print_report+0x188/0x488
   kasan_report+0xb4/0x100
   __asan_store4+0x80/0xa4
   handle_rx_uart+0xa8/0x18c
   qcom_geni_serial_handle_rx+0x84/0x9c
   qcom_geni_serial_isr+0x24c/0x760
   __handle_irq_event_percpu+0x108/0x500
   handle_irq_event+0x6c/0x110
   handle_fasteoi_irq+0x138/0x2cc
   generic_handle_domain_irq+0x48/0x64

If the RX FIFO depth changes after probe, be sure to resize the buffer.</description><pubDate>Wed, 21 Aug 2024 06:29:23 +0000</pubDate></item><item><title>CVE-2022-48872 | misc: fastrpc: Fix use-after-free race condition for maps</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48872</link><description>In the Linux kernel, the following vulnerability has been resolved:

misc: fastrpc: Fix use-after-free race condition for maps

It is possible that in between calling fastrpc_map_get() until
map-&gt;fl-&gt;lock is taken in fastrpc_free_map(), another thread can call
fastrpc_map_lookup() and get a reference to a map that is about to be
deleted.

Rewrite fastrpc_map_get() to only increase the reference count of a map
if it's non-zero. Propagate this to callers so they can know if a map is
about to be deleted.

Fixes this warning:
refcount_t: addition on 0; use-after-free.
WARNING: CPU: 5 PID: 10100 at lib/refcount.c:25 refcount_warn_saturate
...
Call trace:
 refcount_warn_saturate
 [fastrpc_map_get inlined]
 [fastrpc_map_lookup inlined]
 fastrpc_map_create
 fastrpc_internal_invoke
 fastrpc_device_ioctl
 __arm64_sys_ioctl
 invoke_syscall</description><pubDate>Wed, 21 Aug 2024 06:29:23 +0000</pubDate></item><item><title>CVE-2022-48873 | misc: fastrpc: Don&amp;#x27;t remove map on creater_process and device_release</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48873</link><description>In the Linux kernel, the following vulnerability has been resolved:

misc: fastrpc: Don't remove map on creater_process and device_release

Do not remove the map from the list on error path in
fastrpc_init_create_process, instead call fastrpc_map_put, to avoid
use-after-free. Do not remove it on fastrpc_device_release either,
call fastrpc_map_put instead.

The fastrpc_free_map is the only proper place to remove the map.
This is called only after the reference count is 0.</description><pubDate>Wed, 21 Aug 2024 06:29:23 +0000</pubDate></item><item><title>CVE-2022-48874 | misc: fastrpc: Fix use-after-free and race in fastrpc_map_find</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48874</link><description>In the Linux kernel, the following vulnerability has been resolved:

misc: fastrpc: Fix use-after-free and race in fastrpc_map_find

Currently, there is a race window between the point when the mutex is
unlocked in fastrpc_map_lookup and the reference count increasing
(fastrpc_map_get) in fastrpc_map_find, which can also lead to
use-after-free.

So lets merge fastrpc_map_find into fastrpc_map_lookup which allows us
to both protect the maps list by also taking the &amp;amp;fl-&gt;lock spinlock and
the reference count, since the spinlock will be released only after.
Add take_ref argument to make this suitable for all callers.</description><pubDate>Wed, 21 Aug 2024 06:29:24 +0000</pubDate></item><item><title>CVE-2022-48875 | wifi: mac80211: sdata can be NULL during AMPDU start</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48875</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: sdata can be NULL during AMPDU start

ieee80211_tx_ba_session_handle_start() may get NULL for sdata when a
deauthentication is ongoing.

Here a trace triggering the race with the hostapd test
multi_ap_fronthaul_on_ap:

(gdb) list *drv_ampdu_action+0x46
0x8b16 is in drv_ampdu_action (net/mac80211/driver-ops.c:396).
391             int ret = -EOPNOTSUPP;
392
393             might_sleep();
394
395             sdata = get_bss_sdata(sdata);
396             if (!check_sdata_in_driver(sdata))
397                     return -EIO;
398
399             trace_drv_ampdu_action(local, sdata, params);
400

wlan0: moving STA 02:00:00:00:03:00 to state 3
wlan0: associated
wlan0: deauthenticating from 02:00:00:00:03:00 by local choice (Reason: 3=DEAUTH_LEAVING)
wlan3.sta1: Open BA session requested for 02:00:00:00:00:00 tid 0
wlan3.sta1: dropped frame to 02:00:00:00:00:00 (unauthorized port)
wlan0: moving STA 02:00:00:00:03:00 to state 2
wlan0: moving STA 02:00:00:00:03:00 to state 1
wlan0: Removed STA 02:00:00:00:03:00
wlan0: Destroyed STA 02:00:00:00:03:00
BUG: unable to handle page fault for address: fffffffffffffb48
PGD 11814067 P4D 11814067 PUD 11816067 PMD 0
Oops: 0000 [#1] PREEMPT SMP PTI
CPU: 2 PID: 133397 Comm: kworker/u16:1 Tainted: G        W          6.1.0-rc8-wt+ #59
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-20220807_005459-localhost 04/01/2014
Workqueue: phy3 ieee80211_ba_session_work [mac80211]
RIP: 0010:drv_ampdu_action+0x46/0x280 [mac80211]
Code: 53 48 89 f3 be 89 01 00 00 e8 d6 43 bf ef e8 21 46 81 f0 83 bb a0 1b 00 00 04 75 0e 48 8b 9b 28 0d 00 00 48 81 eb 10 0e 00 00 &lt;8b&gt; 93 58 09 00 00 f6 c2 20 0f 84 3b 01 00 00 8b 05 dd 1c 0f 00 85
RSP: 0018:ffffc900025ebd20 EFLAGS: 00010287
RAX: 0000000000000000 RBX: fffffffffffff1f0 RCX: ffff888102228240
RDX: 0000000080000000 RSI: ffffffff918c5de0 RDI: ffff888102228b40
RBP: ffffc900025ebd40 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000001 R11: 0000000000000000 R12: ffff888118c18ec0
R13: 0000000000000000 R14: ffffc900025ebd60 R15: ffff888018b7efb8
FS:  0000000000000000(0000) GS:ffff88817a600000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: fffffffffffffb48 CR3: 0000000105228006 CR4: 0000000000170ee0
Call Trace:
 
 ieee80211_tx_ba_session_handle_start+0xd0/0x190 [mac80211]
 ieee80211_ba_session_work+0xff/0x2e0 [mac80211]
 process_one_work+0x29f/0x620
 worker_thread+0x4d/0x3d0
 ? process_one_work+0x620/0x620
 kthread+0xfb/0x120
 ? kthread_complete_and_exit+0x20/0x20
 ret_from_fork+0x22/0x30</description><pubDate>Wed, 21 Aug 2024 06:29:24 +0000</pubDate></item><item><title>CVE-2022-48876 | wifi: mac80211: fix initialization of rx-&amp;gt;link and rx-&amp;gt;link_sta</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48876</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: fix initialization of rx-&gt;link and rx-&gt;link_sta

There are some codepaths that do not initialize rx-&gt;link_sta properly. This
causes a crash in places which assume that rx-&gt;link_sta is valid if rx-&gt;sta
is valid.
One known instance is triggered by __ieee80211_rx_h_amsdu being called from
fast-rx. It results in a crash like this one:

 BUG: kernel NULL pointer dereference, address: 00000000000000a8
 #PF: supervisor write access in kernel mode
 #PF: error_code(0x0002) - not-present page PGD 0 P4D 0
 Oops: 0002 [#1] PREEMPT SMP PTI
 CPU: 1 PID: 506 Comm: mt76-usb-rx phy Tainted: G            E      6.1.0-debian64x+1.7 #3
 Hardware name: ZOTAC ZBOX-ID92/ZBOX-IQ01/ZBOX-ID92/ZBOX-IQ01, BIOS B220P007 05/21/2014
 RIP: 0010:ieee80211_deliver_skb+0x62/0x1f0 [mac80211]
 Code: 00 48 89 04 24 e8 9e a7 c3 df 89 c0 48 03 1c c5 a0 ea 39 a1 4c 01 6b 08 48 ff 03 48
       83 7d 28 00 74 11 48 8b 45 30 48 63 55 44 &lt;48&gt; 83 84 d0 a8 00 00 00 01 41 8b 86 c0
       11 00 00 8d 50 fd 83 fa 01
 RSP: 0018:ffff999040803b10 EFLAGS: 00010286
 RAX: 0000000000000000 RBX: ffffb9903f496480 RCX: 0000000000000000
 RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
 RBP: ffff999040803ce0 R08: 0000000000000000 R09: 0000000000000000
 R10: 0000000000000000 R11: 0000000000000000 R12: ffff8d21828ac900
 R13: 000000000000004a R14: ffff8d2198ed89c0 R15: ffff8d2198ed8000
 FS:  0000000000000000(0000) GS:ffff8d24afe80000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 00000000000000a8 CR3: 0000000429810002 CR4: 00000000001706e0
 Call Trace:
  
  __ieee80211_rx_h_amsdu+0x1b5/0x240 [mac80211]
  ? ieee80211_prepare_and_rx_handle+0xcdd/0x1320 [mac80211]
  ? __local_bh_enable_ip+0x3b/0xa0
  ieee80211_prepare_and_rx_handle+0xcdd/0x1320 [mac80211]
  ? prepare_transfer+0x109/0x1a0 [xhci_hcd]
  ieee80211_rx_list+0xa80/0xda0 [mac80211]
  mt76_rx_complete+0x207/0x2e0 [mt76]
  mt76_rx_poll_complete+0x357/0x5a0 [mt76]
  mt76u_rx_worker+0x4f5/0x600 [mt76_usb]
  ? mt76_get_min_avg_rssi+0x140/0x140 [mt76]
  __mt76_worker_fn+0x50/0x80 [mt76]
  kthread+0xed/0x120
  ? kthread_complete_and_exit+0x20/0x20
  ret_from_fork+0x22/0x30

Since the initialization of rx-&gt;link and rx-&gt;link_sta is rather convoluted
and duplicated in many places, clean it up by using a helper function to
set it.

[remove unnecessary rx-&gt;sta-&gt;sta.mlo check]</description><pubDate>Wed, 21 Aug 2024 06:29:24 +0000</pubDate></item><item><title>CVE-2022-48877 | f2fs: let&amp;#x27;s avoid panic if extent_tree is not created</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48877</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: let's avoid panic if extent_tree is not created

This patch avoids the below panic.

pc : __lookup_extent_tree+0xd8/0x760
lr : f2fs_do_write_data_page+0x104/0x87c
sp : ffffffc010cbb3c0
x29: ffffffc010cbb3e0 x28: 0000000000000000
x27: ffffff8803e7f020 x26: ffffff8803e7ed40
x25: ffffff8803e7f020 x24: ffffffc010cbb460
x23: ffffffc010cbb480 x22: 0000000000000000
x21: 0000000000000000 x20: ffffffff22e90900
x19: 0000000000000000 x18: ffffffc010c5d080
x17: 0000000000000000 x16: 0000000000000020
x15: ffffffdb1acdbb88 x14: ffffff888759e2b0
x13: 0000000000000000 x12: ffffff802da49000
x11: 000000000a001200 x10: ffffff8803e7ed40
x9 : ffffff8023195800 x8 : ffffff802da49078
x7 : 0000000000000001 x6 : 0000000000000000
x5 : 0000000000000006 x4 : ffffffc010cbba28
x3 : 0000000000000000 x2 : ffffffc010cbb480
x1 : 0000000000000000 x0 : ffffff8803e7ed40
Call trace:
 __lookup_extent_tree+0xd8/0x760
 f2fs_do_write_data_page+0x104/0x87c
 f2fs_write_single_data_page+0x420/0xb60
 f2fs_write_cache_pages+0x418/0xb1c
 __f2fs_write_data_pages+0x428/0x58c
 f2fs_write_data_pages+0x30/0x40
 do_writepages+0x88/0x190
 __writeback_single_inode+0x48/0x448
 writeback_sb_inodes+0x468/0x9e8
 __writeback_inodes_wb+0xb8/0x2a4
 wb_writeback+0x33c/0x740
 wb_do_writeback+0x2b4/0x400
 wb_workfn+0xe4/0x34c
 process_one_work+0x24c/0x5bc
 worker_thread+0x3e8/0xa50
 kthread+0x150/0x1b4</description><pubDate>Wed, 21 Aug 2024 06:29:25 +0000</pubDate></item><item><title>CVE-2022-48878 | Bluetooth: hci_qca: Fix driver shutdown on closed serdev</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48878</link><description>In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: hci_qca: Fix driver shutdown on closed serdev

The driver shutdown callback (which sends EDL_SOC_RESET to the device
over serdev) should not be invoked when HCI device is not open (e.g. if
hci_dev_open_sync() failed), because the serdev and its TTY are not open
either.  Also skip this step if device is powered off
(qca_power_shutdown()).

The shutdown callback causes use-after-free during system reboot with
Qualcomm Atheros Bluetooth:

  Unable to handle kernel paging request at virtual address
  0072662f67726fd7
  ...
  CPU: 6 PID: 1 Comm: systemd-shutdow Tainted: G        W
  6.1.0-rt5-00325-g8a5f56bcfcca #8
  Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)
  Call trace:
   tty_driver_flush_buffer+0x4/0x30
   serdev_device_write_flush+0x24/0x34
   qca_serdev_shutdown+0x80/0x130 [hci_uart]
   device_shutdown+0x15c/0x260
   kernel_restart+0x48/0xac

KASAN report:

  BUG: KASAN: use-after-free in tty_driver_flush_buffer+0x1c/0x50
  Read of size 8 at addr ffff16270c2e0018 by task systemd-shutdow/1

  CPU: 7 PID: 1 Comm: systemd-shutdow Not tainted
  6.1.0-next-20221220-00014-gb85aaf97fb01-dirty #28
  Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)
  Call trace:
   dump_backtrace.part.0+0xdc/0xf0
   show_stack+0x18/0x30
   dump_stack_lvl+0x68/0x84
   print_report+0x188/0x488
   kasan_report+0xa4/0xf0
   __asan_load8+0x80/0xac
   tty_driver_flush_buffer+0x1c/0x50
   ttyport_write_flush+0x34/0x44
   serdev_device_write_flush+0x48/0x60
   qca_serdev_shutdown+0x124/0x274
   device_shutdown+0x1e8/0x350
   kernel_restart+0x48/0xb0
   __do_sys_reboot+0x244/0x2d0
   __arm64_sys_reboot+0x54/0x70
   invoke_syscall+0x60/0x190
   el0_svc_common.constprop.0+0x7c/0x160
   do_el0_svc+0x44/0xf0
   el0_svc+0x2c/0x6c
   el0t_64_sync_handler+0xbc/0x140
   el0t_64_sync+0x190/0x194</description><pubDate>Wed, 21 Aug 2024 06:29:25 +0000</pubDate></item><item><title>CVE-2022-48879 | efi: fix NULL-deref in init error path</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48879</link><description>In the Linux kernel, the following vulnerability has been resolved:

efi: fix NULL-deref in init error path

In cases where runtime services are not supported or have been disabled,
the runtime services workqueue will never have been allocated.

Do not try to destroy the workqueue unconditionally in the unlikely
event that EFI initialisation fails to avoid dereferencing a NULL
pointer.</description><pubDate>Wed, 21 Aug 2024 06:29:25 +0000</pubDate></item><item><title>CVE-2022-48880 | platform/surface: aggregator: Add missing call to ssam_request_sync_free()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48880</link><description>In the Linux kernel, the following vulnerability has been resolved:

platform/surface: aggregator: Add missing call to ssam_request_sync_free()

Although rare, ssam_request_sync_init() can fail. In that case, the
request should be freed via ssam_request_sync_free(). Currently it is
leaked instead. Fix this.</description><pubDate>Wed, 21 Aug 2024 06:29:26 +0000</pubDate></item><item><title>CVE-2022-48881 | platform/x86/amd: Fix refcount leak in amd_pmc_probe</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48881</link><description>In the Linux kernel, the following vulnerability has been resolved:

platform/x86/amd: Fix refcount leak in amd_pmc_probe

pci_get_domain_bus_and_slot() takes reference, the caller should release
the reference by calling pci_dev_put() after use. Call pci_dev_put() in
the error path to fix this.</description><pubDate>Wed, 21 Aug 2024 06:29:26 +0000</pubDate></item><item><title>CVE-2022-48882 | net/mlx5e: Fix macsec possible null dereference when updating MAC security entity (SecY)</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48882</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Fix macsec possible null dereference when updating MAC security entity (SecY)

Upon updating MAC security entity (SecY) in hw offload path, the macsec
security association (SA) initialization routine is called. In case of
extended packet number (epn) is enabled the salt and ssci attributes are
retrieved using the MACsec driver rx_sa context which is unavailable when
updating a SecY property such as encoding-sa hence the null dereference.
Fix by using the provided SA to set those attributes.</description><pubDate>Wed, 21 Aug 2024 06:29:26 +0000</pubDate></item><item><title>CVE-2022-48883 | net/mlx5e: IPoIB, Block PKEY interfaces with less rx queues than parent</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48883</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: IPoIB, Block PKEY interfaces with less rx queues than parent

A user is able to configure an arbitrary number of rx queues when
creating an interface via netlink. This doesn't work for child PKEY
interfaces because the child interface uses the parent receive channels.

Although the child shares the parent's receive channels, the number of
rx queues is important for the channel_stats array: the parent's rx
channel index is used to access the child's channel_stats. So the array
has to be at least as large as the parent's rx queue size for the
counting to work correctly and to prevent out of bound accesses.

This patch checks for the mentioned scenario and returns an error when
trying to create the interface. The error is propagated to the user.</description><pubDate>Wed, 21 Aug 2024 06:29:27 +0000</pubDate></item><item><title>CVE-2022-48884 | net/mlx5: Fix command stats access after free</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48884</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix command stats access after free

Command may fail while driver is reloading and can't accept FW commands
till command interface is reinitialized. Such command failure is being
logged to command stats. This results in NULL pointer access as command
stats structure is being freed and reallocated during mlx5 devlink
reload (see kernel log below).

Fix it by making command stats statically allocated on driver probe.

Kernel log:
[ 2394.808802] BUG: unable to handle kernel paging request at 000000000002a9c0
[ 2394.810610] PGD 0 P4D 0
[ 2394.811811] Oops: 0002 [#1] SMP NOPTI
...
[ 2394.815482] RIP: 0010:native_queued_spin_lock_slowpath+0x183/0x1d0
...
[ 2394.829505] Call Trace:
[ 2394.830667]  _raw_spin_lock_irq+0x23/0x26
[ 2394.831858]  cmd_status_err+0x55/0x110 [mlx5_core]
[ 2394.833020]  mlx5_access_reg+0xe7/0x150 [mlx5_core]
[ 2394.834175]  mlx5_query_port_ptys+0x78/0xa0 [mlx5_core]
[ 2394.835337]  mlx5e_ethtool_get_link_ksettings+0x74/0x590 [mlx5_core]
[ 2394.836454]  ? kmem_cache_alloc_trace+0x140/0x1c0
[ 2394.837562]  __rh_call_get_link_ksettings+0x33/0x100
[ 2394.838663]  ? __rtnl_unlock+0x25/0x50
[ 2394.839755]  __ethtool_get_link_ksettings+0x72/0x150
[ 2394.840862]  duplex_show+0x6e/0xc0
[ 2394.841963]  dev_attr_show+0x1c/0x40
[ 2394.843048]  sysfs_kf_seq_show+0x9b/0x100
[ 2394.844123]  seq_read+0x153/0x410
[ 2394.845187]  vfs_read+0x91/0x140
[ 2394.846226]  ksys_read+0x4f/0xb0
[ 2394.847234]  do_syscall_64+0x5b/0x1a0
[ 2394.848228]  entry_SYSCALL_64_after_hwframe+0x65/0xca</description><pubDate>Wed, 21 Aug 2024 06:29:27 +0000</pubDate></item><item><title>CVE-2022-48885 | ice: Fix potential memory leak in ice_gnss_tty_write()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48885</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: Fix potential memory leak in ice_gnss_tty_write()

The ice_gnss_tty_write() return directly if the write_buf alloc failed,
leaking the cmd_buf.

Fix by free cmd_buf if write_buf alloc failed.</description><pubDate>Wed, 21 Aug 2024 06:29:27 +0000</pubDate></item><item><title>CVE-2022-48886 | ice: Add check for kzalloc</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48886</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: Add check for kzalloc

Add the check for the return value of kzalloc in order to avoid
NULL pointer dereference.
Moreover, use the goto-label to share the clean code.</description><pubDate>Wed, 21 Aug 2024 06:29:28 +0000</pubDate></item><item><title>CVE-2022-48887 | drm/vmwgfx: Remove rcu locks from user resources</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48887</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/vmwgfx: Remove rcu locks from user resources

User resource lookups used rcu to avoid two extra atomics. Unfortunately
the rcu paths were buggy and it was easy to make the driver crash by
submitting command buffers from two different threads. Because the
lookups never show up in performance profiles replace them with a
regular spin lock which fixes the races in accesses to those shared
resources.

Fixes kernel oops'es in IGT's vmwgfx execution_buffer stress test and
seen crashes with apps using shared resources.</description><pubDate>Wed, 21 Aug 2024 06:29:28 +0000</pubDate></item><item><title>CVE-2022-48888 | drm/msm/dpu: Fix memory leak in msm_mdss_parse_data_bus_icc_path</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48888</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm/dpu: Fix memory leak in msm_mdss_parse_data_bus_icc_path

of_icc_get() alloc resources for path1, we should release it when not
need anymore. Early return when IS_ERR_OR_NULL(path0) may leak path1.
Defer getting path1 to fix this.

Patchwork: https://patchwork.freedesktop.org/patch/514264/</description><pubDate>Wed, 21 Aug 2024 06:29:29 +0000</pubDate></item><item><title>CVE-2022-48889 | ASoC: Intel: sof-nau8825: fix module alias overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48889</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: Intel: sof-nau8825: fix module alias overflow

The maximum name length for a platform_device_id entry is 20 characters
including the trailing NUL byte. The sof_nau8825.c file exceeds that,
which causes an obscure error message:

sound/soc/intel/boards/snd-soc-sof_nau8825.mod.c:35:45: error: illegal character encoding in string literal [-Werror,-Winvalid-source-encoding]
MODULE_ALIAS("platform:adl_max98373_nau8825&lt;u&gt;");
                                                   ^~~~
include/linux/module.h:168:49: note: expanded from macro 'MODULE_ALIAS'
                                                ^~~~~~
include/linux/module.h:165:56: note: expanded from macro 'MODULE_INFO'
                                                       ^~~~
include/linux/moduleparam.h:26:47: note: expanded from macro '__MODULE_INFO'
                = __MODULE_INFO_PREFIX __stringify(tag) "=" info

I could not figure out how to make the module handling robust enough
to handle this better, but as a quick fix, using slightly shorter
names that are still unique avoids the build issue.</description><pubDate>Wed, 21 Aug 2024 06:29:29 +0000</pubDate></item><item><title>CVE-2022-48890 | scsi: storvsc: Fix swiotlb bounce buffer leak in confidential VM</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48890</link><description>In the Linux kernel, the following vulnerability has been resolved:

scsi: storvsc: Fix swiotlb bounce buffer leak in confidential VM

storvsc_queuecommand() maps the scatter/gather list using scsi_dma_map(),
which in a confidential VM allocates swiotlb bounce buffers. If the I/O
submission fails in storvsc_do_io(), the I/O is typically retried by higher
level code, but the bounce buffer memory is never freed.  The mostly like
cause of I/O submission failure is a full VMBus channel ring buffer, which
is not uncommon under high I/O loads.  Eventually enough bounce buffer
memory leaks that the confidential VM can't do any I/O. The same problem
can arise in a non-confidential VM with kernel boot parameter
swiotlb=force.

Fix this by doing scsi_dma_unmap() in the case of an I/O submission
error, which frees the bounce buffer memory.</description><pubDate>Wed, 21 Aug 2024 06:29:29 +0000</pubDate></item><item><title>CVE-2022-48891 | regulator: da9211: Use irq handler when ready</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48891</link><description>In the Linux kernel, the following vulnerability has been resolved:

regulator: da9211: Use irq handler when ready

If the system does not come from reset (like when it is kexec()), the
regulator might have an IRQ waiting for us.

If we enable the IRQ handler before its structures are ready, we crash.

This patch fixes:

[    1.141839] Unable to handle kernel read from unreadable memory at virtual address 0000000000000078
[    1.316096] Call trace:
[    1.316101]  blocking_notifier_call_chain+0x20/0xa8
[    1.322757] cpu cpu0: dummy supplies not allowed for exclusive requests
[    1.327823]  regulator_notifier_call_chain+0x1c/0x2c
[    1.327825]  da9211_irq_handler+0x68/0xf8
[    1.327829]  irq_thread+0x11c/0x234
[    1.327833]  kthread+0x13c/0x154</description><pubDate>Wed, 21 Aug 2024 06:29:30 +0000</pubDate></item><item><title>CVE-2022-48892 | sched/core: Fix use-after-free bug in dup_user_cpus_ptr()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48892</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched/core: Fix use-after-free bug in dup_user_cpus_ptr()

Since commit 07ec77a1d4e8 ("sched: Allow task CPU affinity to be
restricted on asymmetric systems"), the setting and clearing of
user_cpus_ptr are done under pi_lock for arm64 architecture. However,
dup_user_cpus_ptr() accesses user_cpus_ptr without any lock
protection. Since sched_setaffinity() can be invoked from another
process, the process being modified may be undergoing fork() at
the same time.  When racing with the clearing of user_cpus_ptr in
__set_cpus_allowed_ptr_locked(), it can lead to user-after-free and
possibly double-free in arm64 kernel.

Commit 8f9ea86fdf99 ("sched: Always preserve the user requested
cpumask") fixes this problem as user_cpus_ptr, once set, will never
be cleared in a task's lifetime. However, this bug was re-introduced
in commit 851a723e45d1 ("sched: Always clear user_cpus_ptr in
do_set_cpus_allowed()") which allows the clearing of user_cpus_ptr in
do_set_cpus_allowed(). This time, it will affect all arches.

Fix this bug by always clearing the user_cpus_ptr of the newly
cloned/forked task before the copying process starts and check the
user_cpus_ptr state of the source task under pi_lock.

Note to stable, this patch won't be applicable to stable releases.
Just copy the new dup_user_cpus_ptr() function over.</description><pubDate>Wed, 21 Aug 2024 06:29:30 +0000</pubDate></item><item><title>CVE-2022-48893 | drm/i915/gt: Cleanup partial engine discovery failures</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48893</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/i915/gt: Cleanup partial engine discovery failures

If we abort driver initialisation in the middle of gt/engine discovery,
some engines will be fully setup and some not. Those incompletely setup
engines only have 'engine-&gt;release == NULL' and so will leak any of the
common objects allocated.

v2:
 - Drop the destroy_pinned_context() helper for now.  It's not really
   worth it with just a single callsite at the moment.  (Janusz)</description><pubDate>Wed, 21 Aug 2024 06:29:30 +0000</pubDate></item><item><title>CVE-2022-48894 | iommu/arm-smmu-v3: Don&amp;#x27;t unregister on shutdown</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48894</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/arm-smmu-v3: Don't unregister on shutdown

Similar to SMMUv2, this driver calls iommu_device_unregister() from the
shutdown path, which removes the IOMMU groups with no coordination
whatsoever with their users - shutdown methods are optional in device
drivers. This can lead to NULL pointer dereferences in those drivers'
DMA API calls, or worse.

Instead of calling the full arm_smmu_device_remove() from
arm_smmu_device_shutdown(), let's pick only the relevant function call -
arm_smmu_device_disable() - more or less the reverse of
arm_smmu_device_reset() - and call just that from the shutdown path.</description><pubDate>Wed, 21 Aug 2024 06:29:31 +0000</pubDate></item><item><title>CVE-2022-48895 | iommu/arm-smmu: Don&amp;#x27;t unregister on shutdown</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48895</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/arm-smmu: Don't unregister on shutdown

Michael Walle says he noticed the following stack trace while performing
a shutdown with "reboot -f". He suggests he got "lucky" and just hit the
correct spot for the reboot while there was a packet transmission in
flight.

Unable to handle kernel NULL pointer dereference at virtual address 0000000000000098
CPU: 0 PID: 23 Comm: kworker/0:1 Not tainted 6.1.0-rc5-00088-gf3600ff8e322 #1930
Hardware name: Kontron KBox A-230-LS (DT)
pc : iommu_get_dma_domain+0x14/0x20
lr : iommu_dma_map_page+0x9c/0x254
Call trace:
 iommu_get_dma_domain+0x14/0x20
 dma_map_page_attrs+0x1ec/0x250
 enetc_start_xmit+0x14c/0x10b0
 enetc_xmit+0x60/0xdc
 dev_hard_start_xmit+0xb8/0x210
 sch_direct_xmit+0x11c/0x420
 __dev_queue_xmit+0x354/0xb20
 ip6_finish_output2+0x280/0x5b0
 __ip6_finish_output+0x15c/0x270
 ip6_output+0x78/0x15c
 NF_HOOK.constprop.0+0x50/0xd0
 mld_sendpack+0x1bc/0x320
 mld_ifc_work+0x1d8/0x4dc
 process_one_work+0x1e8/0x460
 worker_thread+0x178/0x534
 kthread+0xe0/0xe4
 ret_from_fork+0x10/0x20
Code: d503201f f9416800 d503233f d50323bf (f9404c00)
---[ end trace 0000000000000000 ]---
Kernel panic - not syncing: Oops: Fatal exception in interrupt

This appears to be reproducible when the board has a fixed IP address,
is ping flooded from another host, and "reboot -f" is used.

The following is one more manifestation of the issue:

$ reboot -f
kvm: exiting hardware virtualization
cfg80211: failed to load regulatory.db
arm-smmu 5000000.iommu: disabling translation
sdhci-esdhc 2140000.mmc: Removing from iommu group 11
sdhci-esdhc 2150000.mmc: Removing from iommu group 12
fsl-edma 22c0000.dma-controller: Removing from iommu group 17
dwc3 3100000.usb: Removing from iommu group 9
dwc3 3110000.usb: Removing from iommu group 10
ahci-qoriq 3200000.sata: Removing from iommu group 2
fsl-qdma 8380000.dma-controller: Removing from iommu group 20
platform f080000.display: Removing from iommu group 0
etnaviv-gpu f0c0000.gpu: Removing from iommu group 1
etnaviv etnaviv: Removing from iommu group 1
caam_jr 8010000.jr: Removing from iommu group 13
caam_jr 8020000.jr: Removing from iommu group 14
caam_jr 8030000.jr: Removing from iommu group 15
caam_jr 8040000.jr: Removing from iommu group 16
fsl_enetc 0000:00:00.0: Removing from iommu group 4
arm-smmu 5000000.iommu: Blocked unknown Stream ID 0x429; boot with "arm-smmu.disable_bypass=0" to allow, but this may have security implications
arm-smmu 5000000.iommu:         GFSR 0x80000002, GFSYNR0 0x00000002, GFSYNR1 0x00000429, GFSYNR2 0x00000000
fsl_enetc 0000:00:00.1: Removing from iommu group 5
arm-smmu 5000000.iommu: Blocked unknown Stream ID 0x429; boot with "arm-smmu.disable_bypass=0" to allow, but this may have security implications
arm-smmu 5000000.iommu:         GFSR 0x80000002, GFSYNR0 0x00000002, GFSYNR1 0x00000429, GFSYNR2 0x00000000
arm-smmu 5000000.iommu: Blocked unknown Stream ID 0x429; boot with "arm-smmu.disable_bypass=0" to allow, but this may have security implications
arm-smmu 5000000.iommu:         GFSR 0x80000002, GFSYNR0 0x00000000, GFSYNR1 0x00000429, GFSYNR2 0x00000000
fsl_enetc 0000:00:00.2: Removing from iommu group 6
fsl_enetc_mdio 0000:00:00.3: Removing from iommu group 8
mscc_felix 0000:00:00.5: Removing from iommu group 3
fsl_enetc 0000:00:00.6: Removing from iommu group 7
pcieport 0001:00:00.0: Removing from iommu group 18
arm-smmu 5000000.iommu: Blocked unknown Stream ID 0x429; boot with "arm-smmu.disable_bypass=0" to allow, but this may have security implications
arm-smmu 5000000.iommu:         GFSR 0x00000002, GFSYNR0 0x00000000, GFSYNR1 0x00000429, GFSYNR2 0x00000000
pcieport 0002:00:00.0: Removing from iommu group 19
Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a8
pc : iommu_get_dma_domain+0x14/0x20
lr : iommu_dma_unmap_page+0x38/0xe0
Call trace:
 iommu_get_dma_domain+0x14/0x20
 dma_unmap_page_attrs+0x38/0x1d0
 en
---truncated---</description><pubDate>Wed, 21 Aug 2024 06:29:31 +0000</pubDate></item><item><title>CVE-2022-48896 | ixgbe: fix pci device refcount leak</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48896</link><description>In the Linux kernel, the following vulnerability has been resolved:

ixgbe: fix pci device refcount leak

As the comment of pci_get_domain_bus_and_slot() says, it
returns a PCI device with refcount incremented, when finish
using it, the caller must decrement the reference count by
calling pci_dev_put().

In ixgbe_get_first_secondary_devfn() and ixgbe_x550em_a_has_mii(),
pci_dev_put() is called to avoid leak.</description><pubDate>Wed, 21 Aug 2024 06:29:31 +0000</pubDate></item><item><title>CVE-2022-48897 | arm64/mm: fix incorrect file_map_count for invalid pmd</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48897</link><description>In the Linux kernel, the following vulnerability has been resolved:

arm64/mm: fix incorrect file_map_count for invalid pmd

The page table check trigger BUG_ON() unexpectedly when split hugepage:

 ------------[ cut here ]------------
 kernel BUG at mm/page_table_check.c:119!
 Internal error: Oops - BUG: 00000000f2000800 [#1] SMP
 Dumping ftrace buffer:
    (ftrace buffer empty)
 Modules linked in:
 CPU: 7 PID: 210 Comm: transhuge-stres Not tainted 6.1.0-rc3+ #748
 Hardware name: linux,dummy-virt (DT)
 pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : page_table_check_set.isra.0+0x398/0x468
 lr : page_table_check_set.isra.0+0x1c0/0x468
[...]
 Call trace:
  page_table_check_set.isra.0+0x398/0x468
  __page_table_check_pte_set+0x160/0x1c0
  __split_huge_pmd_locked+0x900/0x1648
  __split_huge_pmd+0x28c/0x3b8
  unmap_page_range+0x428/0x858
  unmap_single_vma+0xf4/0x1c8
  zap_page_range+0x2b0/0x410
  madvise_vma_behavior+0xc44/0xe78
  do_madvise+0x280/0x698
  __arm64_sys_madvise+0x90/0xe8
  invoke_syscall.constprop.0+0xdc/0x1d8
  do_el0_svc+0xf4/0x3f8
  el0_svc+0x58/0x120
  el0t_64_sync_handler+0xb8/0xc0
  el0t_64_sync+0x19c/0x1a0
[...]

On arm64, pmd_leaf() will return true even if the pmd is invalid due to
pmd_present_invalid() check. So in pmdp_invalidate() the file_map_count
will not only decrease once but also increase once. Then in set_pte_at(),
the file_map_count increase again, and so trigger BUG_ON() unexpectedly.

Add !pmd_present_invalid() check in pmd_user_accessible_page() to fix the
problem.</description><pubDate>Wed, 21 Aug 2024 06:29:32 +0000</pubDate></item><item><title>CVE-2022-48898 | drm/msm/dp: do not complete dp_aux_cmd_fifo_tx() if irq is not for aux transfer</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48898</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm/dp: do not complete dp_aux_cmd_fifo_tx() if irq is not for aux transfer

There are 3 possible interrupt sources are handled by DP controller,
HPDstatus, Controller state changes and Aux read/write transaction.
At every irq, DP controller have to check isr status of every interrupt
sources and service the interrupt if its isr status bits shows interrupts
are pending. There is potential race condition may happen at current aux
isr handler implementation since it is always complete dp_aux_cmd_fifo_tx()
even irq is not for aux read or write transaction. This may cause aux read
transaction return premature if host aux data read is in the middle of
waiting for sink to complete transferring data to host while irq happen.
This will cause host's receiving buffer contains unexpected data. This
patch fixes this problem by checking aux isr and return immediately at
aux isr handler if there are no any isr status bits set.

Current there is a bug report regrading eDP edid corruption happen during
system booting up. After lengthy debugging to found that VIDEO_READY
interrupt was continuously firing during system booting up which cause
dp_aux_isr() to complete dp_aux_cmd_fifo_tx() prematurely to retrieve data
from aux hardware buffer which is not yet contains complete data transfer
from sink. This cause edid corruption.

Follows are the signature at kernel logs when problem happen,
EDID has corrupt header
panel-simple-dp-aux aux-aea0000.edp: Couldn't identify panel via EDID

Changes in v2:
-- do complete if (ret == IRQ_HANDLED) ay dp-aux_isr()
-- add more commit text

Changes in v3:
-- add Stephen suggested
-- dp_aux_isr() return IRQ_XXX back to caller
-- dp_ctrl_isr() return IRQ_XXX back to caller

Changes in v4:
-- split into two patches

Changes in v5:
-- delete empty line between tags

Changes in v6:
-- remove extra "that" and fixed line more than 75 char at commit text

Patchwork: https://patchwork.freedesktop.org/patch/516121/</description><pubDate>Wed, 21 Aug 2024 06:29:32 +0000</pubDate></item><item><title>CVE-2022-48899 | drm/virtio: Fix GEM handle creation UAF</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48899</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/virtio: Fix GEM handle creation UAF

Userspace can guess the handle value and try to race GEM object creation
with handle close, resulting in a use-after-free if we dereference the
object after dropping the handle's reference.  For that reason, dropping
the handle's reference must be done *after* we are done dereferencing
the object.</description><pubDate>Wed, 21 Aug 2024 06:29:32 +0000</pubDate></item><item><title>CVE-2023-52893 | gsmi: fix null-deref in gsmi_get_variable</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52893</link><description>In the Linux kernel, the following vulnerability has been resolved:

gsmi: fix null-deref in gsmi_get_variable

We can get EFI variables without fetching the attribute, so we must
allow for that in gsmi.

commit 859748255b43 ("efi: pstore: Omit efivars caching EFI varstore
access layer") added a new get_variable call with attr=NULL, which
triggers panic in gsmi.</description><pubDate>Wed, 21 Aug 2024 06:29:33 +0000</pubDate></item><item><title>CVE-2023-52894 | usb: gadget: f_ncm: fix potential NULL ptr deref in ncm_bitrate()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52894</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: f_ncm: fix potential NULL ptr deref in ncm_bitrate()

In Google internal bug 265639009 we've received an (as yet) unreproducible
crash report from an aarch64 GKI 5.10.149-android13 running device.

AFAICT the source code is at:
  https://android.googlesource.com/kernel/common/+/refs/tags/ASB-2022-12-05_13-5.10

The call stack is:
  ncm_close() -&gt; ncm_notify() -&gt; ncm_do_notify()
with the crash at:
  ncm_do_notify+0x98/0x270
Code: 79000d0b b9000a6c f940012a f9400269 (b9405d4b)

Which I believe disassembles to (I don't know ARM assembly, but it looks sane enough to me...):

  // halfword (16-bit) store presumably to event-&gt;wLength (at offset 6 of struct usb_cdc_notification)
  0B 0D 00 79    strh w11, [x8, #6]

  // word (32-bit) store presumably to req-&gt;Length (at offset 8 of struct usb_request)
  6C 0A 00 B9    str  w12, [x19, #8]

  // x10 (NULL) was read here from offset 0 of valid pointer x9
  // IMHO we're reading 'cdev-&gt;gadget' and getting NULL
  // gadget is indeed at offset 0 of struct usb_composite_dev
  2A 01 40 F9    ldr  x10, [x9]

  // loading req-&gt;buf pointer, which is at offset 0 of struct usb_request
  69 02 40 F9    ldr  x9, [x19]

  // x10 is null, crash, appears to be attempt to read cdev-&gt;gadget-&gt;max_speed
  4B 5D 40 B9    ldr  w11, [x10, #0x5c]

which seems to line up with ncm_do_notify() case NCM_NOTIFY_SPEED code fragment:

  event-&gt;wLength = cpu_to_le16(8);
  req-&gt;length = NCM_STATUS_BYTECOUNT;

  /* SPEED_CHANGE data is up/down speeds in bits/sec */
  data = req-&gt;buf + sizeof *event;
  data[0] = cpu_to_le32(ncm_bitrate(cdev-&gt;gadget));

My analysis of registers and NULL ptr deref crash offset
  (Unable to handle kernel NULL pointer dereference at virtual address 000000000000005c)
heavily suggests that the crash is due to 'cdev-&gt;gadget' being NULL when executing:
  data[0] = cpu_to_le32(ncm_bitrate(cdev-&gt;gadget));
which calls:
  ncm_bitrate(NULL)
which then calls:
  gadget_is_superspeed(NULL)
which reads
  ((struct usb_gadget *)NULL)-&gt;max_speed
and hits a panic.

AFAICT, if I'm counting right, the offset of max_speed is indeed 0x5C.
(remember there's a GKI KABI reservation of 16 bytes in struct work_struct)

It's not at all clear to me how this is all supposed to work...
but returning 0 seems much better than panic-ing...</description><pubDate>Wed, 21 Aug 2024 06:29:33 +0000</pubDate></item><item><title>CVE-2023-52895 | io_uring/poll: don&amp;#x27;t reissue in case of poll race on multishot request</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52895</link><description>In the Linux kernel, the following vulnerability has been resolved:

io_uring/poll: don't reissue in case of poll race on multishot request

A previous commit fixed a poll race that can occur, but it's only
applicable for multishot requests. For a multishot request, we can safely
ignore a spurious wakeup, as we never leave the waitqueue to begin with.

A blunt reissue of a multishot armed request can cause us to leak a
buffer, if they are ring provided. While this seems like a bug in itself,
it's not really defined behavior to reissue a multishot request directly.
It's less efficient to do so as well, and not required to rearm anything
like it is for singleshot poll requests.</description><pubDate>Wed, 21 Aug 2024 06:29:33 +0000</pubDate></item><item><title>CVE-2023-52896 | btrfs: fix race between quota rescan and disable leading to NULL pointer deref</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52896</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix race between quota rescan and disable leading to NULL pointer deref

If we have one task trying to start the quota rescan worker while another
one is trying to disable quotas, we can end up hitting a race that results
in the quota rescan worker doing a NULL pointer dereference. The steps for
this are the following:

1) Quotas are enabled;

2) Task A calls the quota rescan ioctl and enters btrfs_qgroup_rescan().
   It calls qgroup_rescan_init() which returns 0 (success) and then joins a
   transaction and commits it;

3) Task B calls the quota disable ioctl and enters btrfs_quota_disable().
   It clears the bit BTRFS_FS_QUOTA_ENABLED from fs_info-&gt;flags and calls
   btrfs_qgroup_wait_for_completion(), which returns immediately since the
   rescan worker is not yet running.
   Then it starts a transaction and locks fs_info-&gt;qgroup_ioctl_lock;

4) Task A queues the rescan worker, by calling btrfs_queue_work();

5) The rescan worker starts, and calls rescan_should_stop() at the start
   of its while loop, which results in 0 iterations of the loop, since
   the flag BTRFS_FS_QUOTA_ENABLED was cleared from fs_info-&gt;flags by
   task B at step 3);

6) Task B sets fs_info-&gt;quota_root to NULL;

7) The rescan worker tries to start a transaction and uses
   fs_info-&gt;quota_root as the root argument for btrfs_start_transaction().
   This results in a NULL pointer dereference down the call chain of
   btrfs_start_transaction(). The stack trace is something like the one
   reported in Link tag below:

   general protection fault, probably for non-canonical address 0xdffffc0000000041: 0000 [#1] PREEMPT SMP KASAN
   KASAN: null-ptr-deref in range [0x0000000000000208-0x000000000000020f]
   CPU: 1 PID: 34 Comm: kworker/u4:2 Not tainted 6.1.0-syzkaller-13872-gb6bb9676f216 #0
   Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
   Workqueue: btrfs-qgroup-rescan btrfs_work_helper
   RIP: 0010:start_transaction+0x48/0x10f0 fs/btrfs/transaction.c:564
   Code: 48 89 fb 48 (...)
   RSP: 0018:ffffc90000ab7ab0 EFLAGS: 00010206
   RAX: 0000000000000041 RBX: 0000000000000208 RCX: ffff88801779ba80
   RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000000
   RBP: dffffc0000000000 R08: 0000000000000001 R09: fffff52000156f5d
   R10: fffff52000156f5d R11: 1ffff92000156f5c R12: 0000000000000000
   R13: 0000000000000001 R14: 0000000000000001 R15: 0000000000000003
   FS:  0000000000000000(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000
   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
   CR2: 00007f2bea75b718 CR3: 000000001d0cc000 CR4: 00000000003506e0
   DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
   DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
   Call Trace:
    
    btrfs_qgroup_rescan_worker+0x3bb/0x6a0 fs/btrfs/qgroup.c:3402
    btrfs_work_helper+0x312/0x850 fs/btrfs/async-thread.c:280
    process_one_work+0x877/0xdb0 kernel/workqueue.c:2289
    worker_thread+0xb14/0x1330 kernel/workqueue.c:2436
    kthread+0x266/0x300 kernel/kthread.c:376
    ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308
    
   Modules linked in:

So fix this by having the rescan worker function not attempt to start a
transaction if it didn't do any rescan work.</description><pubDate>Wed, 21 Aug 2024 06:29:34 +0000</pubDate></item><item><title>CVE-2023-52897 | btrfs: qgroup: do not warn on record without old_roots populated</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52897</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: qgroup: do not warn on record without old_roots populated

[BUG]
There are some reports from the mailing list that since v6.1 kernel, the
WARN_ON() inside btrfs_qgroup_account_extent() gets triggered during
rescan:

  WARNING: CPU: 3 PID: 6424 at fs/btrfs/qgroup.c:2756 btrfs_qgroup_account_extents+0x1ae/0x260 [btrfs]
  CPU: 3 PID: 6424 Comm: snapperd Tainted: P           OE      6.1.2-1-default #1 openSUSE Tumbleweed 05c7a1b1b61d5627475528f71f50444637b5aad7
  RIP: 0010:btrfs_qgroup_account_extents+0x1ae/0x260 [btrfs]
  Call Trace:
   
  btrfs_commit_transaction+0x30c/0xb40 [btrfs c39c9c546c241c593f03bd6d5f39ea1b676250f6]
   ? start_transaction+0xc3/0x5b0 [btrfs c39c9c546c241c593f03bd6d5f39ea1b676250f6]
  btrfs_qgroup_rescan+0x42/0xc0 [btrfs c39c9c546c241c593f03bd6d5f39ea1b676250f6]
   btrfs_ioctl+0x1ab9/0x25c0 [btrfs c39c9c546c241c593f03bd6d5f39ea1b676250f6]
   ? __rseq_handle_notify_resume+0xa9/0x4a0
   ? mntput_no_expire+0x4a/0x240
   ? __seccomp_filter+0x319/0x4d0
   __x64_sys_ioctl+0x90/0xd0
   do_syscall_64+0x5b/0x80
   ? syscall_exit_to_user_mode+0x17/0x40
   ? do_syscall_64+0x67/0x80
  entry_SYSCALL_64_after_hwframe+0x63/0xcd
  RIP: 0033:0x7fd9b790d9bf
   

[CAUSE]
Since commit e15e9f43c7ca ("btrfs: introduce
BTRFS_QGROUP_RUNTIME_FLAG_NO_ACCOUNTING to skip qgroup accounting"), if
our qgroup is already in inconsistent state, we will no longer do the
time-consuming backref walk.

This can leave some qgroup records without a valid old_roots ulist.
Normally this is fine, as btrfs_qgroup_account_extents() would also skip
those records if we have NO_ACCOUNTING flag set.

But there is a small window, if we have NO_ACCOUNTING flag set, and
inserted some qgroup_record without a old_roots ulist, but then the user
triggered a qgroup rescan.

During btrfs_qgroup_rescan(), we firstly clear NO_ACCOUNTING flag, then
commit current transaction.

And since we have a qgroup_record with old_roots = NULL, we trigger the
WARN_ON() during btrfs_qgroup_account_extents().

[FIX]
Unfortunately due to the introduction of NO_ACCOUNTING flag, the
assumption that every qgroup_record would have its old_roots populated
is no longer correct.

Fix the false alerts and drop the WARN_ON().</description><pubDate>Wed, 21 Aug 2024 06:29:34 +0000</pubDate></item><item><title>CVE-2023-52898 | xhci: Fix null pointer dereference when host dies</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52898</link><description>In the Linux kernel, the following vulnerability has been resolved:

xhci: Fix null pointer dereference when host dies

Make sure xhci_free_dev() and xhci_kill_endpoint_urbs() do not race
and cause null pointer dereference when host suddenly dies.

Usb core may call xhci_free_dev() which frees the xhci-&gt;devs[slot_id]
virt device at the same time that xhci_kill_endpoint_urbs() tries to
loop through all the device's endpoints, checking if there are any
cancelled urbs left to give back.

hold the xhci spinlock while freeing the virt device</description><pubDate>Wed, 21 Aug 2024 06:29:34 +0000</pubDate></item><item><title>CVE-2023-52899 | Add exception protection processing for vd in axi_chan_handle_err function</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52899</link><description>In the Linux kernel, the following vulnerability has been resolved:

Add exception protection processing for vd in axi_chan_handle_err function

Since there is no protection for vd, a kernel panic will be
triggered here in exceptional cases.

You can refer to the processing of axi_chan_block_xfer_complete function

The triggered kernel panic is as follows:

[   67.848444] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000060
[   67.848447] Mem abort info:
[   67.848449]   ESR = 0x96000004
[   67.848451]   EC = 0x25: DABT (current EL), IL = 32 bits
[   67.848454]   SET = 0, FnV = 0
[   67.848456]   EA = 0, S1PTW = 0
[   67.848458] Data abort info:
[   67.848460]   ISV = 0, ISS = 0x00000004
[   67.848462]   CM = 0, WnR = 0
[   67.848465] user pgtable: 4k pages, 48-bit VAs, pgdp=00000800c4c0b000
[   67.848468] [0000000000000060] pgd=0000000000000000, p4d=0000000000000000
[   67.848472] Internal error: Oops: 96000004 [#1] SMP
[   67.848475] Modules linked in: dmatest
[   67.848479] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.10.100-emu_x2rc+ #11
[   67.848483] pstate: 62000085 (nZCv daIf -PAN -UAO +TCO BTYPE=--)
[   67.848487] pc : axi_chan_handle_err+0xc4/0x230
[   67.848491] lr : axi_chan_handle_err+0x30/0x230
[   67.848493] sp : ffff0803fe55ae50
[   67.848495] x29: ffff0803fe55ae50 x28: ffff800011212200
[   67.848500] x27: ffff0800c42c0080 x26: ffff0800c097c080
[   67.848504] x25: ffff800010d33880 x24: ffff80001139d850
[   67.848508] x23: ffff0800c097c168 x22: 0000000000000000
[   67.848512] x21: 0000000000000080 x20: 0000000000002000
[   67.848517] x19: ffff0800c097c080 x18: 0000000000000000
[   67.848521] x17: 0000000000000000 x16: 0000000000000000
[   67.848525] x15: 0000000000000000 x14: 0000000000000000
[   67.848529] x13: 0000000000000000 x12: 0000000000000040
[   67.848533] x11: ffff0800c0400248 x10: ffff0800c040024a
[   67.848538] x9 : ffff800010576cd4 x8 : ffff0800c0400270
[   67.848542] x7 : 0000000000000000 x6 : ffff0800c04003e0
[   67.848546] x5 : ffff0800c0400248 x4 : ffff0800c4294480
[   67.848550] x3 : dead000000000100 x2 : dead000000000122
[   67.848555] x1 : 0000000000000100 x0 : ffff0800c097c168
[   67.848559] Call trace:
[   67.848562]  axi_chan_handle_err+0xc4/0x230
[   67.848566]  dw_axi_dma_interrupt+0xf4/0x590
[   67.848569]  __handle_irq_event_percpu+0x60/0x220
[   67.848573]  handle_irq_event+0x64/0x120
[   67.848576]  handle_fasteoi_irq+0xc4/0x220
[   67.848580]  __handle_domain_irq+0x80/0xe0
[   67.848583]  gic_handle_irq+0xc0/0x138
[   67.848585]  el1_irq+0xc8/0x180
[   67.848588]  arch_cpu_idle+0x14/0x2c
[   67.848591]  default_idle_call+0x40/0x16c
[   67.848594]  do_idle+0x1f0/0x250
[   67.848597]  cpu_startup_entry+0x2c/0x60
[   67.848600]  rest_init+0xc0/0xcc
[   67.848603]  arch_call_rest_init+0x14/0x1c
[   67.848606]  start_kernel+0x4cc/0x500
[   67.848610] Code: eb0002ff 9a9f12d6 f2fbd5a2 f2fbd5a3 (a94602c1)
[   67.848613] ---[ end trace 585a97036f88203a ]---</description><pubDate>Wed, 21 Aug 2024 06:29:35 +0000</pubDate></item><item><title>CVE-2023-52900 | nilfs2: fix general protection fault in nilfs_btree_insert()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52900</link><description>In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix general protection fault in nilfs_btree_insert()

If nilfs2 reads a corrupted disk image and tries to reads a b-tree node
block by calling __nilfs_btree_get_block() against an invalid virtual
block address, it returns -ENOENT because conversion of the virtual block
address to a disk block address fails.  However, this return value is the
same as the internal code that b-tree lookup routines return to indicate
that the block being searched does not exist, so functions that operate on
that b-tree may misbehave.

When nilfs_btree_insert() receives this spurious 'not found' code from
nilfs_btree_do_lookup(), it misunderstands that the 'not found' check was
successful and continues the insert operation using incomplete lookup path
data, causing the following crash:

 general protection fault, probably for non-canonical address
 0xdffffc0000000005: 0000 [#1] PREEMPT SMP KASAN
 KASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]
 ...
 RIP: 0010:nilfs_btree_get_nonroot_node fs/nilfs2/btree.c:418 [inline]
 RIP: 0010:nilfs_btree_prepare_insert fs/nilfs2/btree.c:1077 [inline]
 RIP: 0010:nilfs_btree_insert+0x6d3/0x1c10 fs/nilfs2/btree.c:1238
 Code: bc 24 80 00 00 00 4c 89 f8 48 c1 e8 03 42 80 3c 28 00 74 08 4c 89
 ff e8 4b 02 92 fe 4d 8b 3f 49 83 c7 28 4c 89 f8 48 c1 e8 03 &lt;42&gt; 80 3c
 28 00 74 08 4c 89 ff e8 2e 02 92 fe 4d 8b 3f 49 83 c7 02
 ...
 Call Trace:
 
  nilfs_bmap_do_insert fs/nilfs2/bmap.c:121 [inline]
  nilfs_bmap_insert+0x20d/0x360 fs/nilfs2/bmap.c:147
  nilfs_get_block+0x414/0x8d0 fs/nilfs2/inode.c:101
  __block_write_begin_int+0x54c/0x1a80 fs/buffer.c:1991
  __block_write_begin fs/buffer.c:2041 [inline]
  block_write_begin+0x93/0x1e0 fs/buffer.c:2102
  nilfs_write_begin+0x9c/0x110 fs/nilfs2/inode.c:261
  generic_perform_write+0x2e4/0x5e0 mm/filemap.c:3772
  __generic_file_write_iter+0x176/0x400 mm/filemap.c:3900
  generic_file_write_iter+0xab/0x310 mm/filemap.c:3932
  call_write_iter include/linux/fs.h:2186 [inline]
  new_sync_write fs/read_write.c:491 [inline]
  vfs_write+0x7dc/0xc50 fs/read_write.c:584
  ksys_write+0x177/0x2a0 fs/read_write.c:637
  do_syscall_x64 arch/x86/entry/common.c:50 [inline]
  do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
  entry_SYSCALL_64_after_hwframe+0x63/0xcd
 ...
 

This patch fixes the root cause of this problem by replacing the error
code that __nilfs_btree_get_block() returns on block address conversion
failure from -ENOENT to another internal code -EINVAL which means that the
b-tree metadata is corrupted.

By returning -EINVAL, it propagates without glitches, and for all relevant
b-tree operations, functions in the upper bmap layer output an error
message indicating corrupted b-tree metadata via
nilfs_bmap_convert_error(), and code -EIO will be eventually returned as
it should be.</description><pubDate>Wed, 21 Aug 2024 06:29:35 +0000</pubDate></item><item><title>CVE-2023-52901 | usb: xhci: Check endpoint is valid before dereferencing it</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52901</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: xhci: Check endpoint is valid before dereferencing it

When the host controller is not responding, all URBs queued to all
endpoints need to be killed. This can cause a kernel panic if we
dereference an invalid endpoint.

Fix this by using xhci_get_virt_ep() helper to find the endpoint and
checking if the endpoint is valid before dereferencing it.

[233311.853271] xhci-hcd xhci-hcd.1.auto: xHCI host controller not responding, assume dead
[233311.853393] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000e8

[233311.853964] pc : xhci_hc_died+0x10c/0x270
[233311.853971] lr : xhci_hc_died+0x1ac/0x270

[233311.854077] Call trace:
[233311.854085]  xhci_hc_died+0x10c/0x270
[233311.854093]  xhci_stop_endpoint_command_watchdog+0x100/0x1a4
[233311.854105]  call_timer_fn+0x50/0x2d4
[233311.854112]  expire_timers+0xac/0x2e4
[233311.854118]  run_timer_softirq+0x300/0xabc
[233311.854127]  __do_softirq+0x148/0x528
[233311.854135]  irq_exit+0x194/0x1a8
[233311.854143]  __handle_domain_irq+0x164/0x1d0
[233311.854149]  gic_handle_irq.22273+0x10c/0x188
[233311.854156]  el1_irq+0xfc/0x1a8
[233311.854175]  lpm_cpuidle_enter+0x25c/0x418 [msm_pm]
[233311.854185]  cpuidle_enter_state+0x1f0/0x764
[233311.854194]  do_idle+0x594/0x6ac
[233311.854201]  cpu_startup_entry+0x7c/0x80
[233311.854209]  secondary_start_kernel+0x170/0x198</description><pubDate>Wed, 21 Aug 2024 06:29:35 +0000</pubDate></item><item><title>CVE-2023-52902 | nommu: fix memory leak in do_mmap() error path</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52902</link><description>In the Linux kernel, the following vulnerability has been resolved:

nommu: fix memory leak in do_mmap() error path

The preallocation of the maple tree nodes may leak if the error path to
"error_just_free" is taken.  Fix this by moving the freeing of the maple
tree nodes to a shared location for all error paths.</description><pubDate>Wed, 21 Aug 2024 06:29:36 +0000</pubDate></item><item><title>CVE-2023-52903 | io_uring: lock overflowing for IOPOLL</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52903</link><description>In the Linux kernel, the following vulnerability has been resolved:

io_uring: lock overflowing for IOPOLL

syzbot reports an issue with overflow filling for IOPOLL:

WARNING: CPU: 0 PID: 28 at io_uring/io_uring.c:734 io_cqring_event_overflow+0x1c0/0x230 io_uring/io_uring.c:734
CPU: 0 PID: 28 Comm: kworker/u4:1 Not tainted 6.2.0-rc3-syzkaller-16369-g358a161a6a9e #0
Workqueue: events_unbound io_ring_exit_work
Call trace:
 io_cqring_event_overflow+0x1c0/0x230 io_uring/io_uring.c:734
 io_req_cqe_overflow+0x5c/0x70 io_uring/io_uring.c:773
 io_fill_cqe_req io_uring/io_uring.h:168 [inline]
 io_do_iopoll+0x474/0x62c io_uring/rw.c:1065
 io_iopoll_try_reap_events+0x6c/0x108 io_uring/io_uring.c:1513
 io_uring_try_cancel_requests+0x13c/0x258 io_uring/io_uring.c:3056
 io_ring_exit_work+0xec/0x390 io_uring/io_uring.c:2869
 process_one_work+0x2d8/0x504 kernel/workqueue.c:2289
 worker_thread+0x340/0x610 kernel/workqueue.c:2436
 kthread+0x12c/0x158 kernel/kthread.c:376
 ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:863

There is no real problem for normal IOPOLL as flush is also called with
uring_lock taken, but it's getting more complicated for IOPOLL|SQPOLL,
for which __io_cqring_overflow_flush() happens from the CQ waiting path.</description><pubDate>Wed, 21 Aug 2024 06:29:36 +0000</pubDate></item><item><title>CVE-2023-52904 | ALSA: usb-audio: Fix possible NULL pointer dereference in snd_usb_pcm_has_fixed_rate()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52904</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: usb-audio: Fix possible NULL pointer dereference in snd_usb_pcm_has_fixed_rate()

The subs function argument may be NULL, so do not use it before the NULL check.</description><pubDate>Wed, 21 Aug 2024 06:29:37 +0000</pubDate></item><item><title>CVE-2023-52905 | octeontx2-pf: Fix resource leakage in VF driver unbind</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52905</link><description>In the Linux kernel, the following vulnerability has been resolved:

octeontx2-pf: Fix resource leakage in VF driver unbind

resources allocated like mcam entries to support the Ntuple feature
and hash tables for the tc feature are not getting freed in driver
unbind. This patch fixes the issue.</description><pubDate>Wed, 21 Aug 2024 06:29:37 +0000</pubDate></item><item><title>CVE-2023-52906 | net/sched: act_mpls: Fix warning during failed attribute validation</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52906</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/sched: act_mpls: Fix warning during failed attribute validation

The 'TCA_MPLS_LABEL' attribute is of 'NLA_U32' type, but has a
validation type of 'NLA_VALIDATE_FUNCTION'. This is an invalid
combination according to the comment above 'struct nla_policy':

"
Meaning of `validate' field, use via NLA_POLICY_VALIDATE_FN:
   NLA_BINARY           Validation function called for the attribute.
   All other            Unused - but note that it's a union
"

This can trigger the warning [1] in nla_get_range_unsigned() when
validation of the attribute fails. Despite being of 'NLA_U32' type, the
associated 'min'/'max' fields in the policy are negative as they are
aliased by the 'validate' field.

Fix by changing the attribute type to 'NLA_BINARY' which is consistent
with the above comment and all other users of NLA_POLICY_VALIDATE_FN().
As a result, move the length validation to the validation function.

No regressions in MPLS tests:

 # ./tdc.py -f tc-tests/actions/mpls.json
 [...]
 # echo $?
 0

[1]
WARNING: CPU: 0 PID: 17743 at lib/nlattr.c:118
nla_get_range_unsigned+0x1d8/0x1e0 lib/nlattr.c:117
Modules linked in:
CPU: 0 PID: 17743 Comm: syz-executor.0 Not tainted 6.1.0-rc8 #3
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
rel-1.13.0-48-gd9c812dda519-prebuilt.qemu.org 04/01/2014
RIP: 0010:nla_get_range_unsigned+0x1d8/0x1e0 lib/nlattr.c:117
[...]
Call Trace:
 
 __netlink_policy_dump_write_attr+0x23d/0x990 net/netlink/policy.c:310
 netlink_policy_dump_write_attr+0x22/0x30 net/netlink/policy.c:411
 netlink_ack_tlv_fill net/netlink/af_netlink.c:2454 [inline]
 netlink_ack+0x546/0x760 net/netlink/af_netlink.c:2506
 netlink_rcv_skb+0x1b7/0x240 net/netlink/af_netlink.c:2546
 rtnetlink_rcv+0x18/0x20 net/core/rtnetlink.c:6109
 netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]
 netlink_unicast+0x5e9/0x6b0 net/netlink/af_netlink.c:1345
 netlink_sendmsg+0x739/0x860 net/netlink/af_netlink.c:1921
 sock_sendmsg_nosec net/socket.c:714 [inline]
 sock_sendmsg net/socket.c:734 [inline]
 ____sys_sendmsg+0x38f/0x500 net/socket.c:2482
 ___sys_sendmsg net/socket.c:2536 [inline]
 __sys_sendmsg+0x197/0x230 net/socket.c:2565
 __do_sys_sendmsg net/socket.c:2574 [inline]
 __se_sys_sendmsg net/socket.c:2572 [inline]
 __x64_sys_sendmsg+0x42/0x50 net/socket.c:2572
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x2b/0x70 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd</description><pubDate>Wed, 21 Aug 2024 06:29:37 +0000</pubDate></item><item><title>CVE-2023-52907 | nfc: pn533: Wait for out_urb&amp;#x27;s completion in pn533_usb_send_frame()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52907</link><description>In the Linux kernel, the following vulnerability has been resolved:

nfc: pn533: Wait for out_urb's completion in pn533_usb_send_frame()

Fix a use-after-free that occurs in hcd when in_urb sent from
pn533_usb_send_frame() is completed earlier than out_urb. Its callback
frees the skb data in pn533_send_async_complete() that is used as a
transfer buffer of out_urb. Wait before sending in_urb until the
callback of out_urb is called. To modify the callback of out_urb alone,
separate the complete function of out_urb and ack_urb.

Found by a modified version of syzkaller.

BUG: KASAN: use-after-free in dummy_timer
Call Trace:
 memcpy (mm/kasan/shadow.c:65)
 dummy_perform_transfer (drivers/usb/gadget/udc/dummy_hcd.c:1352)
 transfer (drivers/usb/gadget/udc/dummy_hcd.c:1453)
 dummy_timer (drivers/usb/gadget/udc/dummy_hcd.c:1972)
 arch_static_branch (arch/x86/include/asm/jump_label.h:27)
 static_key_false (include/linux/jump_label.h:207)
 timer_expire_exit (include/trace/events/timer.h:127)
 call_timer_fn (kernel/time/timer.c:1475)
 expire_timers (kernel/time/timer.c:1519)
 __run_timers (kernel/time/timer.c:1790)
 run_timer_softirq (kernel/time/timer.c:1803)</description><pubDate>Wed, 21 Aug 2024 06:29:38 +0000</pubDate></item><item><title>CVE-2023-52908 | drm/amdgpu: Fix potential NULL dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52908</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix potential NULL dereference

Fix potential NULL dereference, in the case when "man", the resource manager
might be NULL, when/if we print debug information.</description><pubDate>Wed, 21 Aug 2024 06:29:38 +0000</pubDate></item><item><title>CVE-2023-52909 | nfsd: fix handling of cached open files in nfsd4_open codepath</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52909</link><description>In the Linux kernel, the following vulnerability has been resolved:

nfsd: fix handling of cached open files in nfsd4_open codepath

Commit fb70bf124b05 ("NFSD: Instantiate a struct file when creating a
regular NFSv4 file") added the ability to cache an open fd over a
compound. There are a couple of problems with the way this currently
works:

It's racy, as a newly-created nfsd_file can end up with its PENDING bit
cleared while the nf is hashed, and the nf_file pointer is still zeroed
out. Other tasks can find it in this state and they expect to see a
valid nf_file, and can oops if nf_file is NULL.

Also, there is no guarantee that we'll end up creating a new nfsd_file
if one is already in the hash. If an extant entry is in the hash with a
valid nf_file, nfs4_get_vfs_file will clobber its nf_file pointer with
the value of op_file and the old nf_file will leak.

Fix both issues by making a new nfsd_file_acquirei_opened variant that
takes an optional file pointer. If one is present when this is called,
we'll take a new reference to it instead of trying to open the file. If
the nfsd_file already has a valid nf_file, we'll just ignore the
optional file and pass the nfsd_file back as-is.

Also rework the tracepoints a bit to allow for an "opened" variant and
don't try to avoid counting acquisitions in the case where we already
have a cached open file.</description><pubDate>Wed, 21 Aug 2024 06:29:38 +0000</pubDate></item><item><title>CVE-2023-52910 | iommu/iova: Fix alloc iova overflows issue</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52910</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/iova: Fix alloc iova overflows issue

In __alloc_and_insert_iova_range, there is an issue that retry_pfn
overflows. The value of iovad-&gt;anchor.pfn_hi is ~0UL, then when
iovad-&gt;cached_node is iovad-&gt;anchor, curr_iova-&gt;pfn_hi + 1 will
overflow. As a result, if the retry logic is executed, low_pfn is
updated to 0, and then new_pfn &lt; low_pfn returns false to make the
allocation successful.

This issue occurs in the following two situations:
1. The first iova size exceeds the domain size. When initializing
iova domain, iovad-&gt;cached_node is assigned as iovad-&gt;anchor. For
example, the iova domain size is 10M, start_pfn is 0x1_F000_0000,
and the iova size allocated for the first time is 11M. The
following is the log information, new-&gt;pfn_lo is smaller than
iovad-&gt;cached_node.

Example log as follows:
[  223.798112][T1705487] sh: [name:iova&amp;]__alloc_and_insert_iova_range
start_pfn:0x1f0000,retry_pfn:0x0,size:0xb00,limit_pfn:0x1f0a00
[  223.799590][T1705487] sh: [name:iova&amp;]__alloc_and_insert_iova_range
success start_pfn:0x1f0000,new-&gt;pfn_lo:0x1efe00,new-&gt;pfn_hi:0x1f08ff

2. The node with the largest iova-&gt;pfn_lo value in the iova domain
is deleted, iovad-&gt;cached_node will be updated to iovad-&gt;anchor,
and then the alloc iova size exceeds the maximum iova size that can
be allocated in the domain.

After judging that retry_pfn is less than limit_pfn, call retry_pfn+1
to fix the overflow issue.</description><pubDate>Wed, 21 Aug 2024 06:29:39 +0000</pubDate></item><item><title>CVE-2023-52911 | drm/msm: another fix for the headless Adreno GPU</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52911</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm: another fix for the headless Adreno GPU

Fix another oops reproducible when rebooting the board with the Adreno
GPU working in the headless mode (e.g. iMX platforms).

Unable to handle kernel NULL pointer dereference at virtual address 00000000 when read
[00000000] *pgd=74936831, *pte=00000000, *ppte=00000000
Internal error: Oops: 17 [#1] ARM
CPU: 0 PID: 51 Comm: reboot Not tainted 6.2.0-rc1-dirty #11
Hardware name: Freescale i.MX53 (Device Tree Support)
PC is at msm_atomic_commit_tail+0x50/0x970
LR is at commit_tail+0x9c/0x188
pc : []    lr : []    psr: 600e0013
sp : e0851d30  ip : ee4eb7eb  fp : 00090acc
r10: 00000058  r9 : c2193014  r8 : c4310000
r7 : c4759380  r6 : 07bef61d  r5 : 00000000  r4 : 00000000
r3 : c44cc440  r2 : 00000000  r1 : 00000000  r0 : 00000000
Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
Control: 10c5387d  Table: 74910019  DAC: 00000051
Register r0 information: NULL pointer
Register r1 information: NULL pointer
Register r2 information: NULL pointer
Register r3 information: slab kmalloc-1k start c44cc400 pointer offset 64 size 1024
Register r4 information: NULL pointer
Register r5 information: NULL pointer
Register r6 information: non-paged memory
Register r7 information: slab kmalloc-128 start c4759380 pointer offset 0 size 128
Register r8 information: slab kmalloc-2k start c4310000 pointer offset 0 size 2048
Register r9 information: non-slab/vmalloc memory
Register r10 information: non-paged memory
Register r11 information: non-paged memory
Register r12 information: non-paged memory
Process reboot (pid: 51, stack limit = 0xc80046d9)
Stack: (0xe0851d30 to 0xe0852000)
1d20:                                     c4759380 fbd77200 000005ff 002b9c70
1d40: c4759380 c4759380 00000000 07bef61d 00000600 c0d6fe7c c2193014 00000058
1d60: 00090acc c067a214 00000000 c4759380 c4310000 00000000 c44cc854 c067a89c
1d80: 00000000 00000000 00000000 c4310468 00000000 c4759380 c4310000 c4310468
1da0: c4310470 c0643258 c4759380 00000000 00000000 c0c4ee24 00000000 c44cc810
1dc0: 00000000 c0c4ee24 00000000 c44cc810 00000000 0347d2a8 e0851e00 e0851e00
1de0: c4759380 c067ad20 c4310000 00000000 c44cc810 c27f8718 c44cc854 c067adb8
1e00: c4933000 00000002 00000001 00000000 00000000 c2130850 00000000 c2130854
1e20: c25fc488 00000000 c0ff162c 00000000 00000001 00000002 00000000 00000000
1e40: c43102c0 c43102c0 00000000 0347d2a8 c44cc810 c44cc814 c2133da8 c06d1a60
1e60: 00000000 00000000 00079028 c2012f24 fee1dead c4933000 00000058 c01431e4
1e80: 01234567 c0143a20 00000000 00000000 00000000 00000000 00000000 00000000
1ea0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
1ec0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
1ee0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
1f00: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
1f20: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
1f40: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
1f60: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
1f80: 00000000 00000000 00000000 0347d2a8 00000002 00000004 00000078 00000058
1fa0: c010028c c0100060 00000002 00000004 fee1dead 28121969 01234567 00079028
1fc0: 00000002 00000004 00000078 00000058 0002fdc5 00000000 00000000 00090acc
1fe0: 00000058 becc9c64 b6e97e05 b6e0e5f6 600e0030 fee1dead 00000000 00000000
 msm_atomic_commit_tail from commit_tail+0x9c/0x188
 commit_tail from drm_atomic_helper_commit+0x160/0x188
 drm_atomic_helper_commit from drm_atomic_commit+0xac/0xe0
 drm_atomic_commit from drm_atomic_helper_disable_all+0x1b0/0x1c0
 drm_atomic_helper_disable_all from drm_atomic_helper_shutdown+0x88/0x140
 drm_atomic_helper_shutdown from device_shutdown+0x16c/0x240
 device_shutdown from kernel_restart+0x38/0x90
 kernel_restart from __do_sys_reboot+0x
---truncated---</description><pubDate>Wed, 21 Aug 2024 06:29:39 +0000</pubDate></item><item><title>CVE-2023-52912 | drm/amdgpu: Fixed bug on error when unloading amdgpu</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52912</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fixed bug on error when unloading amdgpu

Fixed bug on error when unloading amdgpu.

The error message is as follows:
[  377.706202] kernel BUG at drivers/gpu/drm/drm_buddy.c:278!
[  377.706215] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
[  377.706222] CPU: 4 PID: 8610 Comm: modprobe Tainted: G          IOE      6.0.0-thomas #1
[  377.706231] Hardware name: ASUS System Product Name/PRIME Z390-A, BIOS 2004 11/02/2021
[  377.706238] RIP: 0010:drm_buddy_free_block+0x26/0x30 [drm_buddy]
[  377.706264] Code: 00 00 00 90 0f 1f 44 00 00 48 8b 0e 89 c8 25 00 0c 00 00 3d 00 04 00 00 75 10 48 8b 47 18 48 d3 e0 48 01 47 28 e9 fa fe ff ff &lt;0f&gt; 0b 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 41 54 55 48 89 f5 53
[  377.706282] RSP: 0018:ffffad2dc4683cb8 EFLAGS: 00010287
[  377.706289] RAX: 0000000000000000 RBX: ffff8b1743bd5138 RCX: 0000000000000000
[  377.706297] RDX: ffff8b1743bd5160 RSI: ffff8b1743bd5c78 RDI: ffff8b16d1b25f70
[  377.706304] RBP: ffff8b1743bd59e0 R08: 0000000000000001 R09: 0000000000000001
[  377.706311] R10: ffff8b16c8572400 R11: ffffad2dc4683cf0 R12: ffff8b16d1b25f70
[  377.706318] R13: ffff8b16d1b25fd0 R14: ffff8b1743bd59c0 R15: ffff8b16d1b25f70
[  377.706325] FS:  00007fec56c72c40(0000) GS:ffff8b1836500000(0000) knlGS:0000000000000000
[  377.706334] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  377.706340] CR2: 00007f9b88c1ba50 CR3: 0000000110450004 CR4: 00000000003706e0
[  377.706347] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[  377.706354] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[  377.706361] Call Trace:
[  377.706365]  
[  377.706369]  drm_buddy_free_list+0x2a/0x60 [drm_buddy]
[  377.706376]  amdgpu_vram_mgr_fini+0xea/0x180 [amdgpu]
[  377.706572]  amdgpu_ttm_fini+0x12e/0x1a0 [amdgpu]
[  377.706650]  amdgpu_bo_fini+0x22/0x90 [amdgpu]
[  377.706727]  gmc_v11_0_sw_fini+0x26/0x30 [amdgpu]
[  377.706821]  amdgpu_device_fini_sw+0xa1/0x3c0 [amdgpu]
[  377.706897]  amdgpu_driver_release_kms+0x12/0x30 [amdgpu]
[  377.706975]  drm_dev_release+0x20/0x40 [drm]
[  377.707006]  release_nodes+0x35/0xb0
[  377.707014]  devres_release_all+0x8b/0xc0
[  377.707020]  device_unbind_cleanup+0xe/0x70
[  377.707027]  device_release_driver_internal+0xee/0x160
[  377.707033]  driver_detach+0x44/0x90
[  377.707039]  bus_remove_driver+0x55/0xe0
[  377.707045]  pci_unregister_driver+0x3b/0x90
[  377.707052]  amdgpu_exit+0x11/0x6c [amdgpu]
[  377.707194]  __x64_sys_delete_module+0x142/0x2b0
[  377.707201]  ? fpregs_assert_state_consistent+0x22/0x50
[  377.707208]  ? exit_to_user_mode_prepare+0x3e/0x190
[  377.707215]  do_syscall_64+0x38/0x90
[  377.707221]  entry_SYSCALL_64_after_hwframe+0x63/0xcd</description><pubDate>Wed, 21 Aug 2024 06:29:39 +0000</pubDate></item><item><title>CVE-2023-52913 | drm/i915: Fix potential context UAFs</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52913</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/i915: Fix potential context UAFs

gem_context_register() makes the context visible to userspace, and which
point a separate thread can trigger the I915_GEM_CONTEXT_DESTROY ioctl.
So we need to ensure that nothing uses the ctx ptr after this.  And we
need to ensure that adding the ctx to the xarray is the *last* thing
that gem_context_register() does with the ctx pointer.

[tursulin: Stable and fixes tags add/tidy.]
(cherry picked from commit bed4b455cf5374e68879be56971c1da563bcd90c)</description><pubDate>Wed, 21 Aug 2024 06:29:40 +0000</pubDate></item><item><title>CVE-2023-52914 | io_uring/poll: add hash if ready poll request can&amp;#x27;t complete inline</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52914</link><description>In the Linux kernel, the following vulnerability has been resolved:

io_uring/poll: add hash if ready poll request can't complete inline

If we don't, then we may lose access to it completely, leading to a
request leak. This will eventually stall the ring exit process as
well.</description><pubDate>Wed, 21 Aug 2024 06:29:40 +0000</pubDate></item><item><title>CVE-2024-7013 | Stack-based buffer overflow in Control FPWIN Pro version 7.7.2.0 and all previous versions may allow attackers to execute arbitrary code via...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7013</link><description>Stack-based buffer overflow in Control FPWIN Pro version 7.7.2.0 and all previous versions may allow attackers to execute arbitrary code via a specially crafted project file.</description><pubDate>Wed, 21 Aug 2024 05:59:16 +0000</pubDate></item><item><title>CVE-2024-6508 | Openshift-console: oauth2 insufficient state parameter entropy</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6508</link><description>An insufficient entropy vulnerability was found in the Openshift Console. In the authorization code type and implicit grant type, the OAuth2 protocol is vulnerable to a Cross-Site Request Forgery (CSRF) attack if the state parameter is used inefficiently. This flaw allows logging into the victim’s current application account using a third-party account without any restrictions.</description><pubDate>Wed, 21 Aug 2024 05:59:17 +0000</pubDate></item><item><title>CVE-2024-5880 | Hide My Site &amp;lt;= 2.2 - Unauthenticated Information Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5880</link><description>The Hide My Site plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 2.2 due to the plugin not restricting access to the REST API when password protection is enabled. This makes it possible for unauthenticated attackers to gain unauthorized access to the site.</description><pubDate>Wed, 21 Aug 2024 05:39:33 +0000</pubDate></item><item><title>CVE-2024-6568 | Flamix: Bitrix24 and Contact Form 7 integrations &amp;lt;= 3.1.0 - Unauthenticated Full Path Disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6568</link><description>The Flamix: Bitrix24 and Contact Form 7 integrations plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 3.1.0. This is due the plugin utilizing mobiledetect without preventing direct access to the files. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.</description><pubDate>Wed, 21 Aug 2024 05:39:33 +0000</pubDate></item><item><title>CVE-2024-6767 | WordSurvey &amp;lt;= 3.2 - Authenticated (Administrator+) Stored Cross-Site Scripting via sounding_title Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6767</link><description>The WordSurvey plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘sounding_title’ parameter in all versions up to, and including, 3.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Wed, 21 Aug 2024 05:39:34 +0000</pubDate></item><item><title>CVE-2024-6883 | Event Espresso 4 Decaf – Event Registration Event Ticketing &amp;lt;= 5.0.22.decaf - Authenticated (Subscriber+) Missing Authorization to Limited Plugin Settings Modification</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6883</link><description>The Event Espresso 4 Decaf – Event Registration Event Ticketing plugin for WordPress is vulnerable to limited unauthorized plugin settings modification due to a missing capability check on the saveTimezoneString and some other functions in all versions up to, and including, 5.0.22.decaf. This makes it possible for authenticated attackers, with Subscriber-level access and above, to modify some of the plugin settings.</description><pubDate>Wed, 21 Aug 2024 05:39:34 +0000</pubDate></item><item><title>CVE-2024-7030 | Smart Online Order for Clover &amp;lt;= 1.5.6 - Missing Authorization to Authenticated (Subscriber+) Plugin Data Update</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7030</link><description>The Smart Online Order for Clover plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on several functions in all versions up to, and including, 1.5.6. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update product and category descriptions, category titles and images, and sort order.</description><pubDate>Wed, 21 Aug 2024 05:39:34 +0000</pubDate></item><item><title>CVE-2024-7032 | Smart Online Order for Clover &amp;lt;= 1.5.6 - Missing Authorization to Plugin Deactivation and Data Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7032</link><description>The Smart Online Order for Clover plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the 'moo_deactivateAndClean' function in all versions up to, and including, 1.5.6. This makes it possible for unauthenticated attackers to deactivate the plugin and drop all plugin tables from the database.</description><pubDate>Wed, 21 Aug 2024 05:39:35 +0000</pubDate></item><item><title>CVE-2024-7090 | LH Add Media From Url &amp;lt;= 1.23 - Reflected Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7090</link><description>The LH Add Media From Url plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘lh_add_media_from_url-file_url’ parameter in all versions up to, and including, 1.23 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Wed, 21 Aug 2024 05:39:35 +0000</pubDate></item><item><title>CVE-2024-7134 | LiquidPoll &amp;lt;= 3.3.78 - Unauthenticated Stored Cross-Site Scripting via form_data Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7134</link><description>The LiquidPoll – Polls, Surveys, NPS and Feedback Reviews plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘form_data’ parameter in all versions up to, and including, 3.3.78 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 21 Aug 2024 05:39:36 +0000</pubDate></item><item><title>CVE-2024-7390 | WP Testimonial Widget &amp;lt;= 3.0 - Missing Authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7390</link><description>The WP Testimonial Widget plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the fnSaveTestimonailOrder function in all versions up to, and including, 3.0. This makes it possible for unauthenticated attackers to change the order of testimonials.</description><pubDate>Wed, 21 Aug 2024 05:39:36 +0000</pubDate></item><item><title>CVE-2024-7629 | Responsive Video &amp;lt;= 1.0 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7629</link><description>The Responsive video plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's video settings function in all versions up to, and including, 1.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This requires responsive videos to be enabled for posts.</description><pubDate>Wed, 21 Aug 2024 05:39:36 +0000</pubDate></item><item><title>CVE-2024-7647 | OTA Sync Booking Engine Widget 1.2.7 - Cross-Site Request Forgery to Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7647</link><description>The OTA Sync Booking Engine Widget plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.2.7. This is due to missing or incorrect nonce validation on the otasync_widget_settings_fnc() function. This makes it possible for unauthenticated attackers to update the plugin's settings and inject malicious scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Wed, 21 Aug 2024 05:39:37 +0000</pubDate></item><item><title>CVE-2024-7651 | App Builder – Create Native Android &amp;amp; iOS Apps On The Flight &amp;lt;= 4.2.6 - Unauthenticated Limited SQL Injection via app-builder-search</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7651</link><description>The App Builder – Create Native Android &amp; iOS Apps On The Flight plugin for WordPress is vulnerable to limited SQL Injection via the ‘app-builder-search’ parameter in all versions up to, and including, 4.2.6 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Wed, 21 Aug 2024 05:39:37 +0000</pubDate></item><item><title>CVE-2024-7854 | Woo Inquiry &amp;lt;= 0.1 - Unauthenticated SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7854</link><description>The Woo Inquiry plugin for WordPress is vulnerable to SQL Injection in all versions up to, and including, 0.1 due to insufficient escaping on the user supplied parameter 'dbid' and lack of sufficient preparation on the existing SQL query. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Wed, 21 Aug 2024 05:39:37 +0000</pubDate></item><item><title>CVE-2024-7998 | In affected versions of Octopus Server OIDC cookies were using the wrong expiration time which could result in them using the maximum lifesp...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7998</link><description>In affected versions of Octopus Server OIDC cookies were using the wrong expiration time which could result in them using the maximum lifespan.</description><pubDate>Wed, 21 Aug 2024 05:39:38 +0000</pubDate></item><item><title>CVE-2024-42939 | A cross-site scripting (XSS) vulnerability in the component /index/index.html of YZNCMS v1.4.2 allows attackers to execute arbitrary web scr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42939</link><description>A cross-site scripting (XSS) vulnerability in the component /index/index.html of YZNCMS v1.4.2 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the configured remarks text field.</description><pubDate>Wed, 21 Aug 2024 04:42:57 +0000</pubDate></item><item><title>CVE-2024-38305 | Dell SupportAssist for Home PCs Installer exe version 4.0.3 contains a privilege escalation vulnerability in the installer. A local low-priv...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38305</link><description>Dell SupportAssist for Home PCs Installer exe version 4.0.3 contains a privilege escalation vulnerability in the installer. A local low-privileged authenticated attacker could potentially exploit this vulnerability, leading to the execution of arbitrary executables on the operating system with elevated privileges.</description><pubDate>Wed, 21 Aug 2024 02:45:59 +0000</pubDate></item><item><title>CVE-2024-43869 | perf: Fix event leak upon exec and file release</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43869</link><description>In the Linux kernel, the following vulnerability has been resolved:

perf: Fix event leak upon exec and file release

The perf pending task work is never waited upon the matching event
release. In the case of a child event, released via free_event()
directly, this can potentially result in a leaked event, such as in the
following scenario that doesn't even require a weak IRQ work
implementation to trigger:

schedule()
   prepare_task_switch()
=======&gt; 
      perf_event_overflow()
         event-&gt;pending_sigtrap = ...
         irq_work_queue(&amp;amp;event-&gt;pending_irq)
&lt;======= 
      perf_event_task_sched_out()
          event_sched_out()
              event-&gt;pending_sigtrap = 0;
              atomic_long_inc_not_zero(&amp;amp;event-&gt;refcount)
              task_work_add(&amp;amp;event-&gt;pending_task)
   finish_lock_switch()
=======&gt; 
   perf_pending_irq()
      //do nothing, rely on pending task work
&lt;======= 

begin_new_exec()
   perf_event_exit_task()
      perf_event_exit_event()
         // If is child event
         free_event()
            WARN(atomic_long_cmpxchg(&amp;amp;event-&gt;refcount, 1, 0) != 1)
            // event is leaked

Similar scenarios can also happen with perf_event_remove_on_exec() or
simply against concurrent perf_event_release().

Fix this with synchonizing against the possibly remaining pending task
work while freeing the event, just like is done with remaining pending
IRQ work. This means that the pending task callback neither need nor
should hold a reference to the event, preventing it from ever beeing
freed.</description><pubDate>Wed, 21 Aug 2024 01:16:04 +0000</pubDate></item><item><title>CVE-2024-43870 | perf: Fix event leak upon exit</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43870</link><description>In the Linux kernel, the following vulnerability has been resolved:

perf: Fix event leak upon exit

When a task is scheduled out, pending sigtrap deliveries are deferred
to the target task upon resume to userspace via task_work.

However failures while adding an event's callback to the task_work
engine are ignored. And since the last call for events exit happen
after task work is eventually closed, there is a small window during
which pending sigtrap can be queued though ignored, leaking the event
refcount addition such as in the following scenario:

    TASK A
    -----

    do_exit()
       exit_task_work(tsk);

       
       perf_event_overflow()
          event-&gt;pending_sigtrap = pending_id;
          irq_work_queue(&amp;amp;event-&gt;pending_irq);
       
    =========&gt; PREEMPTION: TASK A -&gt; TASK B
       event_sched_out()
          event-&gt;pending_sigtrap = 0;
          atomic_long_inc_not_zero(&amp;amp;event-&gt;refcount)
          // FAILS: task work has exited
          task_work_add(&amp;amp;event-&gt;pending_task)
       [...]
       
       perf_pending_irq()
          // early return: event-&gt;oncpu = -1
       
       [...]
    =========&gt; TASK B -&gt; TASK A
       perf_event_exit_task(tsk)
          perf_event_exit_event()
             free_event()
                WARN(atomic_long_cmpxchg(&amp;amp;event-&gt;refcount, 1, 0) != 1)
                // leak event due to unexpected refcount == 2

As a result the event is never released while the task exits.

Fix this with appropriate task_work_add()'s error handling.</description><pubDate>Wed, 21 Aug 2024 01:16:04 +0000</pubDate></item><item><title>CVE-2024-43871 | devres: Fix memory leakage caused by driver API devm_free_percpu()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43871</link><description>In the Linux kernel, the following vulnerability has been resolved:

devres: Fix memory leakage caused by driver API devm_free_percpu()

It will cause memory leakage when use driver API devm_free_percpu()
to free memory allocated by devm_alloc_percpu(), fixed by using
devres_release() instead of devres_destroy() within devm_free_percpu().</description><pubDate>Wed, 21 Aug 2024 01:16:05 +0000</pubDate></item><item><title>CVE-2024-43872 | RDMA/hns: Fix soft lockup under heavy CEQE load</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43872</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Fix soft lockup under heavy CEQE load

CEQEs are handled in interrupt handler currently. This may cause the
CPU core staying in interrupt context too long and lead to soft lockup
under heavy load.

Handle CEQEs in BH workqueue and set an upper limit for the number of
CEQE handled by a single call of work handler.</description><pubDate>Wed, 21 Aug 2024 01:16:05 +0000</pubDate></item><item><title>CVE-2024-43873 | vhost/vsock: always initialize seqpacket_allow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43873</link><description>In the Linux kernel, the following vulnerability has been resolved:

vhost/vsock: always initialize seqpacket_allow

There are two issues around seqpacket_allow:
1. seqpacket_allow is not initialized when socket is
   created. Thus if features are never set, it will be
   read uninitialized.
2. if VIRTIO_VSOCK_F_SEQPACKET is set and then cleared,
   then seqpacket_allow will not be cleared appropriately
   (existing apps I know about don't usually do this but
    it's legal and there's no way to be sure no one relies
    on this).

To fix:
	- initialize seqpacket_allow after allocation
	- set it unconditionally in set_features</description><pubDate>Wed, 21 Aug 2024 01:16:06 +0000</pubDate></item><item><title>CVE-2024-43874 | crypto: ccp - Fix null pointer dereference in __sev_snp_shutdown_locked</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43874</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: ccp - Fix null pointer dereference in __sev_snp_shutdown_locked

Fix a null pointer dereference induced by DEBUG_TEST_DRIVER_REMOVE.
Return from __sev_snp_shutdown_locked() if the psp_device or the
sev_device structs are not initialized. Without the fix, the driver will
produce the following splat:

   ccp 0000:55:00.5: enabling device (0000 -&gt; 0002)
   ccp 0000:55:00.5: sev enabled
   ccp 0000:55:00.5: psp enabled
   BUG: kernel NULL pointer dereference, address: 00000000000000f0
   #PF: supervisor read access in kernel mode
   #PF: error_code(0x0000) - not-present page
   PGD 0 P4D 0
   Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC NOPTI
   CPU: 262 PID: 1 Comm: swapper/0 Not tainted 6.9.0-rc1+ #29
   RIP: 0010:__sev_snp_shutdown_locked+0x2e/0x150
   Code: 00 55 48 89 e5 41 57 41 56 41 54 53 48 83 ec 10 41 89 f7 49 89 fe 65 48 8b 04 25 28 00 00 00 48 89 45 d8 48 8b 05 6a 5a 7f 06 &lt;4c&gt; 8b a0 f0 00 00 00 41 0f b6 9c 24 a2 00 00 00 48 83 fb 02 0f 83
   RSP: 0018:ffffb2ea4014b7b8 EFLAGS: 00010286
   RAX: 0000000000000000 RBX: ffff9e4acd2e0a28 RCX: 0000000000000000
   RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffb2ea4014b808
   RBP: ffffb2ea4014b7e8 R08: 0000000000000106 R09: 000000000003d9c0
   R10: 0000000000000001 R11: ffffffffa39ff070 R12: ffff9e49d40590c8
   R13: 0000000000000000 R14: ffffb2ea4014b808 R15: 0000000000000000
   FS:  0000000000000000(0000) GS:ffff9e58b1e00000(0000) knlGS:0000000000000000
   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
   CR2: 00000000000000f0 CR3: 0000000418a3e001 CR4: 0000000000770ef0
   PKRU: 55555554
   Call Trace:
    
    ? __die_body+0x6f/0xb0
    ? __die+0xcc/0xf0
    ? page_fault_oops+0x330/0x3a0
    ? save_trace+0x2a5/0x360
    ? do_user_addr_fault+0x583/0x630
    ? exc_page_fault+0x81/0x120
    ? asm_exc_page_fault+0x2b/0x30
    ? __sev_snp_shutdown_locked+0x2e/0x150
    __sev_firmware_shutdown+0x349/0x5b0
    ? pm_runtime_barrier+0x66/0xe0
    sev_dev_destroy+0x34/0xb0
    psp_dev_destroy+0x27/0x60
    sp_destroy+0x39/0x90
    sp_pci_remove+0x22/0x60
    pci_device_remove+0x4e/0x110
    really_probe+0x271/0x4e0
    __driver_probe_device+0x8f/0x160
    driver_probe_device+0x24/0x120
    __driver_attach+0xc7/0x280
    ? driver_attach+0x30/0x30
    bus_for_each_dev+0x10d/0x130
    driver_attach+0x22/0x30
    bus_add_driver+0x171/0x2b0
    ? unaccepted_memory_init_kdump+0x20/0x20
    driver_register+0x67/0x100
    __pci_register_driver+0x83/0x90
    sp_pci_init+0x22/0x30
    sp_mod_init+0x13/0x30
    do_one_initcall+0xb8/0x290
    ? sched_clock_noinstr+0xd/0x10
    ? local_clock_noinstr+0x3e/0x100
    ? stack_depot_save_flags+0x21e/0x6a0
    ? local_clock+0x1c/0x60
    ? stack_depot_save_flags+0x21e/0x6a0
    ? sched_clock_noinstr+0xd/0x10
    ? local_clock_noinstr+0x3e/0x100
    ? __lock_acquire+0xd90/0xe30
    ? sched_clock_noinstr+0xd/0x10
    ? local_clock_noinstr+0x3e/0x100
    ? __create_object+0x66/0x100
    ? local_clock+0x1c/0x60
    ? __create_object+0x66/0x100
    ? parameq+0x1b/0x90
    ? parse_one+0x6d/0x1d0
    ? parse_args+0xd7/0x1f0
    ? do_initcall_level+0x180/0x180
    do_initcall_level+0xb0/0x180
    do_initcalls+0x60/0xa0
    ? kernel_init+0x1f/0x1d0
    do_basic_setup+0x41/0x50
    kernel_init_freeable+0x1ac/0x230
    ? rest_init+0x1f0/0x1f0
    kernel_init+0x1f/0x1d0
    ? rest_init+0x1f0/0x1f0
    ret_from_fork+0x3d/0x50
    ? rest_init+0x1f0/0x1f0
    ret_from_fork_asm+0x11/0x20
    
   Modules linked in:
   CR2: 00000000000000f0
   ---[ end trace 0000000000000000 ]---
   RIP: 0010:__sev_snp_shutdown_locked+0x2e/0x150
   Code: 00 55 48 89 e5 41 57 41 56 41 54 53 48 83 ec 10 41 89 f7 49 89 fe 65 48 8b 04 25 28 00 00 00 48 89 45 d8 48 8b 05 6a 5a 7f 06 &lt;4c&gt; 8b a0 f0 00 00 00 41 0f b6 9c 24 a2 00 00 00 48 83 fb 02 0f 83
   RSP: 0018:ffffb2ea4014b7b8 EFLAGS: 00010286
   RAX: 0000000000000000 RBX: ffff9e4acd2e0a28 RCX: 0000000000000000
   RDX: 0000000
---truncated---</description><pubDate>Wed, 21 Aug 2024 01:16:06 +0000</pubDate></item><item><title>CVE-2024-43875 | PCI: endpoint: Clean up error handling in vpci_scan_bus()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43875</link><description>In the Linux kernel, the following vulnerability has been resolved:

PCI: endpoint: Clean up error handling in vpci_scan_bus()

Smatch complains about inconsistent NULL checking in vpci_scan_bus():

    drivers/pci/endpoint/functions/pci-epf-vntb.c:1024 vpci_scan_bus() error: we previously assumed 'vpci_bus' could be null (see line 1021)

Instead of printing an error message and then crashing we should return
an error code and clean up.

Also the NULL check is reversed so it prints an error for success
instead of failure.</description><pubDate>Wed, 21 Aug 2024 01:16:06 +0000</pubDate></item><item><title>CVE-2024-43876 | PCI: rcar: Demote WARN() to dev_warn_ratelimited() in rcar_pcie_wakeup()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43876</link><description>In the Linux kernel, the following vulnerability has been resolved:

PCI: rcar: Demote WARN() to dev_warn_ratelimited() in rcar_pcie_wakeup()

Avoid large backtrace, it is sufficient to warn the user that there has
been a link problem. Either the link has failed and the system is in need
of maintenance, or the link continues to work and user has been informed.
The message from the warning can be looked up in the sources.

This makes an actual link issue less verbose.

First of all, this controller has a limitation in that the controller
driver has to assist the hardware with transition to L1 link state by
writing L1IATN to PMCTRL register, the L1 and L0 link state switching
is not fully automatic on this controller.

In case of an ASMedia ASM1062 PCIe SATA controller which does not support
ASPM, on entry to suspend or during platform pm_test, the SATA controller
enters D3hot state and the link enters L1 state. If the SATA controller
wakes up before rcar_pcie_wakeup() was called and returns to D0, the link
returns to L0 before the controller driver even started its transition to
L1 link state. At this point, the SATA controller did send an PM_ENTER_L1
DLLP to the PCIe controller and the PCIe controller received it, and the
PCIe controller did set PMSR PMEL1RX bit.

Once rcar_pcie_wakeup() is called, if the link is already back in L0 state
and PMEL1RX bit is set, the controller driver has no way to determine if
it should perform the link transition to L1 state, or treat the link as if
it is in L0 state. Currently the driver attempts to perform the transition
to L1 link state unconditionally, which in this specific case fails with a
PMSR L1FAEG poll timeout, however the link still works as it is already
back in L0 state.

Reduce this warning verbosity. In case the link is really broken, the
rcar_pcie_config_access() would fail, otherwise it will succeed and any
system with this controller and ASM1062 can suspend without generating
a backtrace.</description><pubDate>Wed, 21 Aug 2024 01:16:07 +0000</pubDate></item><item><title>CVE-2024-43877 | media: pci: ivtv: Add check for DMA map result</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43877</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: pci: ivtv: Add check for DMA map result

In case DMA fails, 'dma-&gt;SG_length' is 0. This value is later used to
access 'dma-&gt;SGarray[dma-&gt;SG_length - 1]', which will cause out of
bounds access.

Add check to return early on invalid value. Adjust warnings accordingly.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 21 Aug 2024 01:16:07 +0000</pubDate></item><item><title>CVE-2024-43878 | xfrm: Fix input error path memory access</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43878</link><description>In the Linux kernel, the following vulnerability has been resolved:

xfrm: Fix input error path memory access

When there is a misconfiguration of input state slow path
KASAN report error. Fix this error.
west login:
[   52.987278] eth1: renamed from veth11
[   53.078814] eth1: renamed from veth21
[   53.181355] eth1: renamed from veth31
[   54.921702] ==================================================================
[   54.922602] BUG: KASAN: wild-memory-access in xfrmi_rcv_cb+0x2d/0x295
[   54.923393] Read of size 8 at addr 6b6b6b6b00000000 by task ping/512
[   54.924169]
[   54.924386] CPU: 0 PID: 512 Comm: ping Not tainted 6.9.0-08574-gcd29a4313a1b #25
[   54.925290] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
[   54.926401] Call Trace:
[   54.926731]  
[   54.927009]  dump_stack_lvl+0x2a/0x3b
[   54.927478]  kasan_report+0x84/0xa6
[   54.927930]  ? xfrmi_rcv_cb+0x2d/0x295
[   54.928410]  xfrmi_rcv_cb+0x2d/0x295
[   54.928872]  ? xfrm4_rcv_cb+0x3d/0x5e
[   54.929354]  xfrm4_rcv_cb+0x46/0x5e
[   54.929804]  xfrm_rcv_cb+0x7e/0xa1
[   54.930240]  xfrm_input+0x1b3a/0x1b96
[   54.930715]  ? xfrm_offload+0x41/0x41
[   54.931182]  ? raw_rcv+0x292/0x292
[   54.931617]  ? nf_conntrack_confirm+0xa2/0xa2
[   54.932158]  ? skb_sec_path+0xd/0x3f
[   54.932610]  ? xfrmi_input+0x90/0xce
[   54.933066]  xfrm4_esp_rcv+0x33/0x54
[   54.933521]  ip_protocol_deliver_rcu+0xd7/0x1b2
[   54.934089]  ip_local_deliver_finish+0x110/0x120
[   54.934659]  ? ip_protocol_deliver_rcu+0x1b2/0x1b2
[   54.935248]  NF_HOOK.constprop.0+0xf8/0x138
[   54.935767]  ? ip_sublist_rcv_finish+0x68/0x68
[   54.936317]  ? secure_tcpv6_ts_off+0x23/0x168
[   54.936859]  ? ip_protocol_deliver_rcu+0x1b2/0x1b2
[   54.937454]  ? __xfrm_policy_check2.constprop.0+0x18d/0x18d
[   54.938135]  NF_HOOK.constprop.0+0xf8/0x138
[   54.938663]  ? ip_sublist_rcv_finish+0x68/0x68
[   54.939220]  ? __xfrm_policy_check2.constprop.0+0x18d/0x18d
[   54.939904]  ? ip_local_deliver_finish+0x120/0x120
[   54.940497]  __netif_receive_skb_one_core+0xc9/0x107
[   54.941121]  ? __netif_receive_skb_list_core+0x1c2/0x1c2
[   54.941771]  ? blk_mq_start_stopped_hw_queues+0xc7/0xf9
[   54.942413]  ? blk_mq_start_stopped_hw_queue+0x38/0x38
[   54.943044]  ? virtqueue_get_buf_ctx+0x295/0x46b
[   54.943618]  process_backlog+0xb3/0x187
[   54.944102]  __napi_poll.constprop.0+0x57/0x1a7
[   54.944669]  net_rx_action+0x1cb/0x380
[   54.945150]  ? __napi_poll.constprop.0+0x1a7/0x1a7
[   54.945744]  ? vring_new_virtqueue+0x17a/0x17a
[   54.946300]  ? note_interrupt+0x2cd/0x367
[   54.946805]  handle_softirqs+0x13c/0x2c9
[   54.947300]  do_softirq+0x5f/0x7d
[   54.947727]  
[   54.948014]  
[   54.948300]  __local_bh_enable_ip+0x48/0x62
[   54.948832]  __neigh_event_send+0x3fd/0x4ca
[   54.949361]  neigh_resolve_output+0x1e/0x210
[   54.949896]  ip_finish_output2+0x4bf/0x4f0
[   54.950410]  ? __ip_finish_output+0x171/0x1b8
[   54.950956]  ip_send_skb+0x25/0x57
[   54.951390]  raw_sendmsg+0xf95/0x10c0
[   54.951850]  ? check_new_pages+0x45/0x71
[   54.952343]  ? raw_hash_sk+0x21b/0x21b
[   54.952815]  ? kernel_init_pages+0x42/0x51
[   54.953337]  ? prep_new_page+0x44/0x51
[   54.953811]  ? get_page_from_freelist+0x72b/0x915
[   54.954390]  ? signal_pending_state+0x77/0x77
[   54.954936]  ? preempt_count_sub+0x14/0xb3
[   54.955450]  ? __might_resched+0x8a/0x240
[   54.955951]  ? __might_sleep+0x25/0xa0
[   54.956424]  ? first_zones_zonelist+0x2c/0x43
[   54.956977]  ? __rcu_read_lock+0x2d/0x3a
[   54.957476]  ? __pte_offset_map+0x32/0xa4
[   54.957980]  ? __might_resched+0x8a/0x240
[   54.958483]  ? __might_sleep+0x25/0xa0
[   54.958963]  ? inet_send_prepare+0x54/0x54
[   54.959478]  ? sock_sendmsg_nosec+0x42/0x6c
[   54.960000]  sock_sendmsg_nosec+0x42/0x6c
[   54.960502]  __sys_sendto+0x15d/0x1cc
[   54.960966]  ? __x64_sys_getpeername+0x44/0x44
[   54.961522]  ? __handle_mm_fault+0x679/0xae4
[   54.962068]  ? find_vma+0x6b/0x
---truncated---</description><pubDate>Wed, 21 Aug 2024 01:16:07 +0000</pubDate></item><item><title>CVE-2024-43879 | wifi: cfg80211: handle 2x996 RU allocation in cfg80211_calculate_bitrate_he()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43879</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: cfg80211: handle 2x996 RU allocation in cfg80211_calculate_bitrate_he()

Currently NL80211_RATE_INFO_HE_RU_ALLOC_2x996 is not handled in
cfg80211_calculate_bitrate_he(), leading to below warning:

kernel: invalid HE MCS: bw:6, ru:6
kernel: WARNING: CPU: 0 PID: 2312 at net/wireless/util.c:1501 cfg80211_calculate_bitrate_he+0x22b/0x270 [cfg80211]

Fix it by handling 2x996 RU allocation in the same way as 160 MHz bandwidth.</description><pubDate>Wed, 21 Aug 2024 01:16:08 +0000</pubDate></item><item><title>CVE-2024-43880 | mlxsw: spectrum_acl_erp: Fix object nesting warning</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43880</link><description>In the Linux kernel, the following vulnerability has been resolved:

mlxsw: spectrum_acl_erp: Fix object nesting warning

ACLs in Spectrum-2 and newer ASICs can reside in the algorithmic TCAM
(A-TCAM) or in the ordinary circuit TCAM (C-TCAM). The former can
contain more ACLs (i.e., tc filters), but the number of masks in each
region (i.e., tc chain) is limited.

In order to mitigate the effects of the above limitation, the device
allows filters to share a single mask if their masks only differ in up
to 8 consecutive bits. For example, dst_ip/25 can be represented using
dst_ip/24 with a delta of 1 bit. The C-TCAM does not have a limit on the
number of masks being used (and therefore does not support mask
aggregation), but can contain a limited number of filters.

The driver uses the "objagg" library to perform the mask aggregation by
passing it objects that consist of the filter's mask and whether the
filter is to be inserted into the A-TCAM or the C-TCAM since filters in
different TCAMs cannot share a mask.

The set of created objects is dependent on the insertion order of the
filters and is not necessarily optimal. Therefore, the driver will
periodically ask the library to compute a more optimal set ("hints") by
looking at all the existing objects.

When the library asks the driver whether two objects can be aggregated
the driver only compares the provided masks and ignores the A-TCAM /
C-TCAM indication. This is the right thing to do since the goal is to
move as many filters as possible to the A-TCAM. The driver also forbids
two identical masks from being aggregated since this can only happen if
one was intentionally put in the C-TCAM to avoid a conflict in the
A-TCAM.

The above can result in the following set of hints:

H1: {mask X, A-TCAM} -&gt; H2: {mask Y, A-TCAM} // X is Y + delta
H3: {mask Y, C-TCAM} -&gt; H4: {mask Z, A-TCAM} // Y is Z + delta

After getting the hints from the library the driver will start migrating
filters from one region to another while consulting the computed hints
and instructing the device to perform a lookup in both regions during
the transition.

Assuming a filter with mask X is being migrated into the A-TCAM in the
new region, the hints lookup will return H1. Since H2 is the parent of
H1, the library will try to find the object associated with it and
create it if necessary in which case another hints lookup (recursive)
will be performed. This hints lookup for {mask Y, A-TCAM} will either
return H2 or H3 since the driver passes the library an object comparison
function that ignores the A-TCAM / C-TCAM indication.

This can eventually lead to nested objects which are not supported by
the library [1].

Fix by removing the object comparison function from both the driver and
the library as the driver was the only user. That way the lookup will
only return exact matches.

I do not have a reliable reproducer that can reproduce the issue in a
timely manner, but before the fix the issue would reproduce in several
minutes and with the fix it does not reproduce in over an hour.

Note that the current usefulness of the hints is limited because they
include the C-TCAM indication and represent aggregation that cannot
actually happen. This will be addressed in net-next.

[1]
WARNING: CPU: 0 PID: 153 at lib/objagg.c:170 objagg_obj_parent_assign+0xb5/0xd0
Modules linked in:
CPU: 0 PID: 153 Comm: kworker/0:18 Not tainted 6.9.0-rc6-custom-g70fbc2c1c38b #42
Hardware name: Mellanox Technologies Ltd. MSN3700C/VMOD0008, BIOS 5.11 10/10/2018
Workqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work
RIP: 0010:objagg_obj_parent_assign+0xb5/0xd0
[...]
Call Trace:
 
 __objagg_obj_get+0x2bb/0x580
 objagg_obj_get+0xe/0x80
 mlxsw_sp_acl_erp_mask_get+0xb5/0xf0
 mlxsw_sp_acl_atcam_entry_add+0xe8/0x3c0
 mlxsw_sp_acl_tcam_entry_create+0x5e/0xa0
 mlxsw_sp_acl_tcam_vchunk_migrate_one+0x16b/0x270
 mlxsw_sp_acl_tcam_vregion_rehash_work+0xbe/0x510
 process_one_work+0x151/0x370</description><pubDate>Wed, 21 Aug 2024 01:16:08 +0000</pubDate></item><item><title>CVE-2024-43881 | wifi: ath12k: change DMA direction while mapping reinjected packets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43881</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: ath12k: change DMA direction while mapping reinjected packets

For fragmented packets, ath12k reassembles each fragment as a normal
packet and then reinjects it into HW ring. In this case, the DMA
direction should be DMA_TO_DEVICE, not DMA_FROM_DEVICE. Otherwise,
an invalid payload may be reinjected into the HW and
subsequently delivered to the host.

Given that arbitrary memory can be allocated to the skb buffer,
knowledge about the data contained in the reinjected buffer is lacking.
Consequently, there’s a risk of private information being leaked.

Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.1.1-00209-QCAHKSWPL_SILICONZ-1</description><pubDate>Wed, 21 Aug 2024 01:16:08 +0000</pubDate></item><item><title>CVE-2024-43882 | exec: Fix ToCToU between perm check and set-uid/gid usage</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43882</link><description>In the Linux kernel, the following vulnerability has been resolved:

exec: Fix ToCToU between perm check and set-uid/gid usage

When opening a file for exec via do_filp_open(), permission checking is
done against the file's metadata at that moment, and on success, a file
pointer is passed back. Much later in the execve() code path, the file
metadata (specifically mode, uid, and gid) is used to determine if/how
to set the uid and gid. However, those values may have changed since the
permissions check, meaning the execution may gain unintended privileges.

For example, if a file could change permissions from executable and not
set-id:

---------x 1 root root 16048 Aug  7 13:16 target

to set-id and non-executable:

---S------ 1 root root 16048 Aug  7 13:16 target

it is possible to gain root privileges when execution should have been
disallowed.

While this race condition is rare in real-world scenarios, it has been
observed (and proven exploitable) when package managers are updating
the setuid bits of installed programs. Such files start with being
world-executable but then are adjusted to be group-exec with a set-uid
bit. For example, "chmod o-x,u+s target" makes "target" executable only
by uid "root" and gid "cdrom", while also becoming setuid-root:

-rwxr-xr-x 1 root cdrom 16048 Aug  7 13:16 target

becomes:

-rwsr-xr-- 1 root cdrom 16048 Aug  7 13:16 target

But racing the chmod means users without group "cdrom" membership can
get the permission to execute "target" just before the chmod, and when
the chmod finishes, the exec reaches brpm_fill_uid(), and performs the
setuid to root, violating the expressed authorization of "only cdrom
group members can setuid to root".

Re-check that we still have execute permissions in case the metadata
has changed. It would be better to keep a copy from the perm-check time,
but until we can do that refactoring, the least-bad option is to do a
full inode_permission() call (under inode lock). It is understood that
this is safe against dead-locks, but hardly optimal.</description><pubDate>Wed, 21 Aug 2024 01:16:09 +0000</pubDate></item><item><title>CVE-2024-43862 | net: wan: fsl_qmc_hdlc: Convert carrier_lock spinlock to a mutex</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43862</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: wan: fsl_qmc_hdlc: Convert carrier_lock spinlock to a mutex

The carrier_lock spinlock protects the carrier detection. While it is
held, framer_get_status() is called which in turn takes a mutex.
This is not correct and can lead to a deadlock.

A run with PROVE_LOCKING enabled detected the issue:
  [ BUG: Invalid wait context ]
  ...
  c204ddbc (&amp;amp;framer-&gt;mutex){+.+.}-{3:3}, at: framer_get_status+0x40/0x78
  other info that might help us debug this:
  context-{4:4}
  2 locks held by ifconfig/146:
  #0: c0926a38 (rtnl_mutex){+.+.}-{3:3}, at: devinet_ioctl+0x12c/0x664
  #1: c2006a40 (&amp;amp;qmc_hdlc-&gt;carrier_lock){....}-{2:2}, at: qmc_hdlc_framer_set_carrier+0x30/0x98

Avoid the spinlock usage and convert carrier_lock to a mutex.</description><pubDate>Tue, 20 Aug 2024 23:57:15 +0000</pubDate></item><item><title>CVE-2024-43863 | drm/vmwgfx: Fix a deadlock in dma buf fence polling</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43863</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/vmwgfx: Fix a deadlock in dma buf fence polling

Introduce a version of the fence ops that on release doesn't remove
the fence from the pending list, and thus doesn't require a lock to
fix poll-&gt;fence wait-&gt;fence unref deadlocks.

vmwgfx overwrites the wait callback to iterate over the list of all
fences and update their status, to do that it holds a lock to prevent
the list modifcations from other threads. The fence destroy callback
both deletes the fence and removes it from the list of pending
fences, for which it holds a lock.

dma buf polling cb unrefs a fence after it's been signaled: so the poll
calls the wait, which signals the fences, which are being destroyed.
The destruction tries to acquire the lock on the pending fences list
which it can never get because it's held by the wait from which it
was called.

Old bug, but not a lot of userspace apps were using dma-buf polling
interfaces. Fix those, in particular this fixes KDE stalls/deadlock.</description><pubDate>Tue, 20 Aug 2024 23:57:15 +0000</pubDate></item><item><title>CVE-2024-43864 | net/mlx5e: Fix CT entry update leaks of modify header context</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43864</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Fix CT entry update leaks of modify header context

The cited commit allocates a new modify header to replace the old
one when updating CT entry. But if failed to allocate a new one, eg.
exceed the max number firmware can support, modify header will be
an error pointer that will trigger a panic when deallocating it. And
the old modify header point is copied to old attr. When the old
attr is freed, the old modify header is lost.

Fix it by restoring the old attr to attr when failed to allocate a
new modify header context. So when the CT entry is freed, the right
modify header context will be freed. And the panic of accessing
error pointer is also fixed.</description><pubDate>Tue, 20 Aug 2024 23:57:16 +0000</pubDate></item><item><title>CVE-2024-43865 | s390/fpu: Re-add exception handling in load_fpu_state()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43865</link><description>In the Linux kernel, the following vulnerability has been resolved:

s390/fpu: Re-add exception handling in load_fpu_state()

With the recent rewrite of the fpu code exception handling for the
lfpc instruction within load_fpu_state() was erroneously removed.

Add it again to prevent that loading invalid floating point register
values cause an unhandled specification exception.</description><pubDate>Tue, 20 Aug 2024 23:57:16 +0000</pubDate></item><item><title>CVE-2024-43866 | net/mlx5: Always drain health in shutdown callback</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43866</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Always drain health in shutdown callback

There is no point in recovery during device shutdown. if health
work started need to wait for it to avoid races and NULL pointer
access.

Hence, drain health WQ on shutdown callback.</description><pubDate>Tue, 20 Aug 2024 23:57:17 +0000</pubDate></item><item><title>CVE-2024-43867 | drm/nouveau: prime: fix refcount underflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43867</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/nouveau: prime: fix refcount underflow

Calling nouveau_bo_ref() on a nouveau_bo without initializing it (and
hence the backing ttm_bo) leads to a refcount underflow.

Instead of calling nouveau_bo_ref() in the unwind path of
drm_gem_object_init(), clean things up manually.

(cherry picked from commit 1b93f3e89d03cfc576636e195466a0d728ad8de5)</description><pubDate>Tue, 20 Aug 2024 23:57:17 +0000</pubDate></item><item><title>CVE-2024-43868 | riscv/purgatory: align riscv_kernel_entry</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43868</link><description>In the Linux kernel, the following vulnerability has been resolved:

riscv/purgatory: align riscv_kernel_entry

When alignment handling is delegated to the kernel, everything must be
word-aligned in purgatory, since the trap handler is then set to the
kexec one. Without the alignment, hitting the exception would
ultimately crash. On other occasions, the kernel's handler would take
care of exceptions.
This has been tested on a JH7110 SoC with oreboot and its SBI delegating
unaligned access exceptions and the kernel configured to handle them.</description><pubDate>Tue, 20 Aug 2024 23:57:18 +0000</pubDate></item><item><title>CVE-2024-8022 | Genexis Tilgin Home Gateway cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8022</link><description>A vulnerability was found in Genexis Tilgin Home Gateway 322_AS0500-03_05_13_05. It has been rated as problematic. This issue affects some unknown processing of the file /vood/cgi-bin/vood_view.cgi?lang=EN&amp;amp;act=user/spec_conf&amp;amp;sessionId=86213915328111654515&amp;amp;user=A&amp;amp;message2user=Account%20updated. The manipulation of the argument Phone Number leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 20 Aug 2024 23:37:41 +0000</pubDate></item><item><title>CVE-2024-8023 | chillzhuang SpringBlade list sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8023</link><description>A vulnerability classified as critical has been found in chillzhuang SpringBlade 4.1.0. Affected is an unknown function of the file /api/blade-system/menu/list?updatexml. The manipulation leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 20 Aug 2024 23:37:42 +0000</pubDate></item><item><title>CVE-2024-22281 | Apache Helix Front (UI): Helix front hard-coded secret in the express-session</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22281</link><description>** UNSUPPORTED WHEN ASSIGNED ** The Apache Helix Front (UI) component contained a hard-coded secret, allowing an attacker to spoof sessions by generating their own fake cookies.

This issue affects Apache Helix Front (UI): all versions.

As this project is retired, we do not plan to release a version that fixes this issue. Users are recommended to find an alternative or restrict access to the instance to trusted users.

NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</description><pubDate>Tue, 20 Aug 2024 22:22:15 +0000</pubDate></item><item><title>CVE-2024-43861 | net: usb: qmi_wwan: fix memory leak for not ip packets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43861</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: usb: qmi_wwan: fix memory leak for not ip packets

Free the unused skb when not ip packets arrive.</description><pubDate>Tue, 20 Aug 2024 21:41:26 +0000</pubDate></item><item><title>CVE-2024-43403 | Kanister has a potential risk which can be leveraged to make a cluster-level privilege escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43403</link><description>Kanister is a data protection workflow management tool. The kanister has a deployment called default-kanister-operator, which is bound with a ClusterRole called edit via ClusterRoleBinding. The "edit" ClusterRole is one of Kubernetes default-created ClusterRole, and it has the create/patch/udpate verbs of daemonset resources, create verb of serviceaccount/token resources, and impersonate verb of serviceaccounts resources. A malicious user can leverage access the worker node which has this component to make a cluster-level privilege escalation.</description><pubDate>Tue, 20 Aug 2024 21:31:24 +0000</pubDate></item><item><title>CVE-2024-42361 | GHSL-2023-256: HertzBeat Authenticated (guest role) SQL injection in /api/monitor/{monitorId}/metric/{metricFull}</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42361</link><description>Hertzbeat is an open source, real-time monitoring system. Hertzbeat 1.6.0 and earlier declares a /api/monitor/{monitorId}/metric/{metricFull} endpoint to download job metrics. In the process, it executes a SQL query with user-controlled data, allowing for SQL injection.</description><pubDate>Tue, 20 Aug 2024 21:21:28 +0000</pubDate></item><item><title>CVE-2024-42362 | GHSL-2023-255: HertzBeat Authenticated (user role) RCE via unsafe deserialization in /api/monitors/import</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42362</link><description>Hertzbeat is an open source, real-time monitoring system. Hertzbeat has an authenticated (user role) RCE via unsafe deserialization in /api/monitors/import. This vulnerability is fixed in 1.6.0.</description><pubDate>Tue, 20 Aug 2024 21:21:29 +0000</pubDate></item><item><title>CVE-2024-43396 | Khoj Vulnerable to Stored Cross-site Scripting In Automate (Preview feature)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43396</link><description>Khoj is an application that creates personal AI agents. The Automation feature allows a user to insert arbitrary HTML inside the task instructions, resulting in a Stored XSS. The q parameter for the /api/automation endpoint does not get correctly sanitized when rendered on the page, resulting in the ability of users to inject arbitrary HTML/JS. This vulnerability is fixed in 1.15.0.</description><pubDate>Tue, 20 Aug 2024 20:39:35 +0000</pubDate></item><item><title>CVE-2024-41657 | GHSL-2024-035: Casdoor CORS misconfiguration</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41657</link><description>Casdoor is a UI-first Identity and Access Management (IAM) / Single-Sign-On (SSO) platform. In Casdoor 1.577.0 and earlier, a logic vulnerability exists in the beego filter CorsFilter that allows any website to make cross domain requests to Casdoor as the logged in user. Due to the a logic error in checking only for a prefix when authenticating the Origin header, any domain can create a valid subdomain with a valid subdomain prefix (Ex: localhost.example.com), allowing the website to make requests to Casdoor as the current signed-in user.</description><pubDate>Tue, 20 Aug 2024 20:28:19 +0000</pubDate></item><item><title>CVE-2024-41658 | GHSL-2024-036: Reflected XSS in QrCodePage.js</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41658</link><description>Casdoor is a UI-first Identity and Access Management (IAM) / Single-Sign-On (SSO) platform.  In Casdoor 1.577.0 and earlier, he purchase URL that is created to generate a WechatPay QR code is vulnerable to reflected XSS. When purchasing an item through casdoor, the product page allows you to pay via wechat pay. When using wechat pay, a QR code with the wechat pay link is displayed on the payment page, hosted on the domain of casdoor. This page takes a query parameter from the url successUrl, and redirects the user to that url after a successful purchase. Because the user has no reason to think that the payment page contains sensitive information, they may share it with other or can be social engineered into sending it to others. An attacker can then craft the casdoor link with a special url and send it back to the user, and once payment has gone though an XSS attack occurs.</description><pubDate>Tue, 20 Aug 2024 20:28:19 +0000</pubDate></item><item><title>CVE-2024-42363 | GHSL-2023-136_Samson</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42363</link><description>Prior to 3385, the user-controlled role parameter enters the application in the Kubernetes::RoleVerificationsController. The role parameter flows into the RoleConfigFile initializer and then into the Kubernetes::Util.parse_file method where it is unsafely deserialized using the YAML.load_stream method. This issue may lead to Remote Code Execution (RCE). This vulnerability is fixed in 3385.</description><pubDate>Tue, 20 Aug 2024 20:28:20 +0000</pubDate></item><item><title>CVE-2024-31842 | An issue was discovered in Italtel Embrace 1.6.4. The web application inserts the access token of an authenticated user inside GET requests....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31842</link><description>An issue was discovered in Italtel Embrace 1.6.4. The web application inserts the access token of an authenticated user inside GET requests. The query string for the URL could be saved in the browser's history, passed through Referers to other web sites, stored in web logs, or otherwise recorded in other sources. If the query string contains sensitive information such as session identifiers, then attackers can use this information to launch further attacks. Because the access token in sent in GET requests, this vulnerability could lead to complete account takeover.</description><pubDate>Tue, 20 Aug 2024 20:08:11 +0000</pubDate></item><item><title>CVE-2024-41659 | GHSL-2024-034: memos CORS Misconfiguration in server.go</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41659</link><description>memos is a privacy-first, lightweight note-taking service. A CORS misconfiguration exists in memos 0.20.1 and earlier where an arbitrary origin is reflected with Access-Control-Allow-Credentials set to true. This may allow an attacking website to make a cross-origin request, allowing the attacker to read private information or make privileged changes to the system as the vulnerable user account.</description><pubDate>Tue, 20 Aug 2024 20:08:12 +0000</pubDate></item><item><title>CVE-2024-41773 | IBM Global Configuration Management incorrect ownership assignment</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41773</link><description>IBM Global Configuration Management 7.0.2 and 7.0.3 could allow an authenticated user to archive a global baseline due to improper access controls.</description><pubDate>Tue, 20 Aug 2024 19:31:34 +0000</pubDate></item><item><title>CVE-2024-6800 | An XML signature wrapping vulnerability was present in GitHub Enterprise Server (GHES) when utilizing SAML authentication with specific iden...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6800</link><description>An XML signature wrapping vulnerability was present in GitHub Enterprise Server (GHES) when utilizing SAML authentication with specific identity providers. This vulnerability allowed an attacker with direct network access to GitHub Enterprise Server to forge a SAML response to provision and/or gain access to a user with site administrator privileges. Exploitation of this vulnerability would allow unauthorized access to the instance without requiring prior authentication. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.14 and was fixed in versions 3.13.3, 3.12.8, 3.11.14, and 3.10.16. This vulnerability was reported via the GitHub Bug Bounty program.</description><pubDate>Tue, 20 Aug 2024 19:31:34 +0000</pubDate></item><item><title>CVE-2024-6337 | Incorrect Authorization allows read access to issues in GitHub Enterprise Server</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6337</link><description>An Incorrect Authorization vulnerability was identified in GitHub Enterprise Server that allowed a GitHub App with only content: read and pull_request_write: write permissions to read issue content inside a private repository. This was only exploitable via user access token and installation access token was not impacted. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.14 and was fixed in versions 3.13.3, 3.12.8, 3.11.14 and 3.10.16. This vulnerability was reported via the GitHub Bug Bounty program.</description><pubDate>Tue, 20 Aug 2024 19:31:35 +0000</pubDate></item><item><title>CVE-2024-7711 | An Incorrect Authorization vulnerability was identified in GitHub Enterprise Server, allowing an attacker to update the title, assignees, an...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7711</link><description>An Incorrect Authorization vulnerability was identified in GitHub Enterprise Server, allowing an attacker to update the title, assignees, and labels of any issue inside a public repository. This was only exploitable inside a public repository. This vulnerability affected GitHub Enterprise Server versions before 3.14 and was fixed in versions 3.13.3, 3.12.8, and 3.11.14. Versions 3.10 of GitHub Enterprise Server are not affected. This vulnerability was reported via the GitHub Bug Bounty program.</description><pubDate>Tue, 20 Aug 2024 19:31:35 +0000</pubDate></item><item><title>CVE-2024-38175 | Azure Managed Instance for Apache Cassandra Elevation of Privilege Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38175</link><description>No english description</description><pubDate>Tue, 20 Aug 2024 18:32:46 +0000</pubDate></item><item><title>CVE-2024-42619 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/domain_management.php?id=0&amp;list=whit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42619</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/domain_management.php?id=0&amp;amp;list=whitelist&amp;amp;remove=pligg.com</description><pubDate>Tue, 20 Aug 2024 18:32:46 +0000</pubDate></item><item><title>CVE-2024-42612 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/domain_management.php?whitelist_add</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42612</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/domain_management.php?whitelist_add</description><pubDate>Tue, 20 Aug 2024 18:10:13 +0000</pubDate></item><item><title>CVE-2024-6322 | Access control for plugin data sources protected by the ReqActions json field of the plugin.json is bypassed if the user or service account ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6322</link><description>Access control for plugin data sources protected by the ReqActions json field of the plugin.json is bypassed if the user or service account is granted associated access to any other data source, as the ReqActions check was not scoped to each specific datasource. The account must have prior query access to the impacted datasource.</description><pubDate>Tue, 20 Aug 2024 18:10:13 +0000</pubDate></item><item><title>CVE-2024-35214 | Vulnerability in CylanceOPTICS Windows Installer Package Impacts CylanceOPTICS for Windows</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35214</link><description>A tampering vulnerability in the CylanceOPTICS Windows Installer Package of CylanceOPTICS for Windows version 3.2 and 3.3 could allow an attacker to potentially uninstall CylanceOPTICS from a system thereby leaving it with only the protection of CylancePROTECT.</description><pubDate>Tue, 20 Aug 2024 17:41:55 +0000</pubDate></item><item><title>CVE-2024-42919 | eScan Management Console 14.0.1400.2281 is vulnerable to Incorrect Access Control via acteScanAVReport.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42919</link><description>eScan Management Console 14.0.1400.2281 is vulnerable to Incorrect Access Control via acteScanAVReport.</description><pubDate>Tue, 20 Aug 2024 17:21:16 +0000</pubDate></item><item><title>CVE-2024-43408 | Discourse Placeholder Forms has a XSS stopped by CSP</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43408</link><description>Discourse Placeholder Forms will let you build dynamic documentation. Unsanitized and stored user input was injected in the html of the post. The vulnerability is fixed in commit a62f711d5600e4e5d86f342d52932cb6221672e7.</description><pubDate>Tue, 20 Aug 2024 16:40:47 +0000</pubDate></item><item><title>CVE-2024-27184 | [20240801] - Core - Inadequate validation of internal URLs</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27184</link><description>Inadequate validation of URLs could result into an invalid check whether an redirect URL is internal or not..</description><pubDate>Tue, 20 Aug 2024 16:26:25 +0000</pubDate></item><item><title>CVE-2024-27185 | [20240802] - Core - Cache Poisoning in Pagination</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27185</link><description>The pagination class includes arbitrary parameters in links, leading to cache poisoning attack vectors.</description><pubDate>Tue, 20 Aug 2024 16:26:26 +0000</pubDate></item><item><title>CVE-2024-27186 | [20240803] - Core - XSS in HTML Mail Templates</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27186</link><description>The mail template feature lacks an escaping mechanism, causing XSS vectors in multiple extensions.</description><pubDate>Tue, 20 Aug 2024 16:26:26 +0000</pubDate></item><item><title>CVE-2024-27187 | [20240804] - Core - Improper ACL for backend profile view</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27187</link><description>Improper Access Controls allows backend users to overwrite their username when disallowed.</description><pubDate>Tue, 20 Aug 2024 16:26:27 +0000</pubDate></item><item><title>CVE-2024-40743 | [20240805] - Core - XSS vectors in Outputfilter::strip* methods</title><link>https://www.cve.org/CVERecord?id=CVE-2024-40743</link><description>The stripImages and stripIframes methods didn't properly process inputs, leading to XSS vectors.</description><pubDate>Tue, 20 Aug 2024 16:26:27 +0000</pubDate></item><item><title>CVE-2024-42598 | SeaCMS 13.0 has a remote code execution vulnerability. The reason for this vulnerability is that although admin_editplayer.php imposes restr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42598</link><description>SeaCMS 13.0 has a remote code execution vulnerability. The reason for this vulnerability is that although admin_editplayer.php imposes restrictions on edited files, attackers can still bypass these restrictions and write code, allowing authenticated attackers to exploit the vulnerability to execute arbitrary commands and gain system privileges.</description><pubDate>Tue, 20 Aug 2024 15:49:47 +0000</pubDate></item><item><title>CVE-2024-30949 | An issue in newlib v.4.3.0 allows an attacker to execute arbitrary code via the time unit scaling in the _gettimeofday function.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30949</link><description>An issue in newlib v.4.3.0 allows an attacker to execute arbitrary code via the time unit scaling in the _gettimeofday function.</description><pubDate>Tue, 20 Aug 2024 15:29:42 +0000</pubDate></item><item><title>CVE-2024-42662 | An issue in apollocongif apollo v.2.2.0 allows a remote attacker to obtain sensitive information via a crafted request.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42662</link><description>An issue in apollocongif apollo v.2.2.0 allows a remote attacker to obtain sensitive information via a crafted request.</description><pubDate>Tue, 20 Aug 2024 15:29:43 +0000</pubDate></item><item><title>CVE-2024-43409 | Ghost&amp;#x27;s improper authentication allows access to member information and actions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43409</link><description>Ghost is a Node.js content management system. Improper authentication on some endpoints used for member actions would allow an attacker to perform member-only actions, and read member information. This security vulnerability is present in Ghost v4.46.0-v5.89.4. v5.89.5 contains a fix for this issue.</description><pubDate>Tue, 20 Aug 2024 15:29:43 +0000</pubDate></item><item><title>CVE-2024-43404 | Remote Code Execution Vulnerability in MEGABOT</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43404</link><description>MEGABOT is a fully customized Discord bot for learning and fun. The `/math` command and functionality of MEGABOT versions &lt; 1.5.0 contains a remote code execution vulnerability due to a Python `eval()`. The vulnerability allows an attacker to inject Python code into the `expression` parameter when using `/math` in any Discord channel. This vulnerability impacts any discord guild utilizing MEGABOT. This vulnerability was fixed in  release version 1.5.0.</description><pubDate>Tue, 20 Aug 2024 15:14:12 +0000</pubDate></item><item><title>CVE-2024-43406 | LF Edge eKuiper has a SQL Injection in sqlKvStore</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43406</link><description>LF Edge eKuiper is a lightweight IoT data analytics and stream processing engine running on resource-constraint edge devices. A user could utilize and exploit SQL Injection to allow the execution of malicious SQL query via Get method in sqlKvStore. This vulnerability is fixed in 1.14.2.</description><pubDate>Tue, 20 Aug 2024 15:14:12 +0000</pubDate></item><item><title>CVE-2024-43397 | Potential unauthorized access issue in apollo-portal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43397</link><description>Apollo is a configuration management system. A vulnerability exists in the synchronization configuration feature that allows users to craft specific requests to bypass permission checks. This exploit enables them to modify a namespace without the necessary permissions. The issue was addressed with an input parameter check which was released in version 2.3.0.</description><pubDate>Tue, 20 Aug 2024 15:14:13 +0000</pubDate></item><item><title>CVE-2024-35540 | A stored cross-site scripting (XSS) vulnerability in Typecho v1.3.0 allows attackers to execute arbitrary web scripts or HTML via a crafted ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35540</link><description>A stored cross-site scripting (XSS) vulnerability in Typecho v1.3.0 allows attackers to execute arbitrary web scripts or HTML via a crafted payload.</description><pubDate>Tue, 20 Aug 2024 14:54:56 +0000</pubDate></item><item><title>CVE-2024-42604 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_group.php?mode=delete&amp;group_id...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42604</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_group.php?mode=delete&amp;amp;group_id=3</description><pubDate>Tue, 20 Aug 2024 14:54:56 +0000</pubDate></item><item><title>CVE-2024-42606 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_log.php?clear=1</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42606</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_log.php?clear=1</description><pubDate>Tue, 20 Aug 2024 14:54:57 +0000</pubDate></item><item><title>CVE-2024-43376 | Umbraco CMS vulnerable to Generation of Error Message Containing Sensitive Information</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43376</link><description>Umbraco is an ASP.NET CMS. Some endpoints in the Management API can return stack trace information, even when Umbraco is not in debug mode. This vulnerability is fixed in 14.1.2.</description><pubDate>Tue, 20 Aug 2024 14:54:57 +0000</pubDate></item><item><title>CVE-2024-43377 | Umbraco CMS Improper Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43377</link><description>Umbraco CMS is an ASP.NET CMS. An authenticated user can access a few unintended endpoints. This issue is fixed in 14.1.2.</description><pubDate>Tue, 20 Aug 2024 14:54:57 +0000</pubDate></item><item><title>CVE-2024-39690 | Capsule tenant owner with &amp;quot;patch namespace&amp;quot; permission can hijack system namespaces</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39690</link><description>Capsule is a multi-tenancy and policy-based framework for Kubernetes. In Capsule v0.7.0 and earlier, the tenant-owner can patch any arbitrary namespace that has not been taken over by a tenant (i.e., namespaces without the ownerReference field), thereby gaining control of that namespace.</description><pubDate>Tue, 20 Aug 2024 14:45:08 +0000</pubDate></item><item><title>CVE-2024-42369 | A room with itself as a its predecessor will freeze matrix-js-sdk</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42369</link><description>matrix-js-sdk is a Matrix messaging protocol Client-Server SDK for JavaScript. A malicious homeserver can craft a room or room structure such that the predecessors form a cycle. The matrix-js-sdk's getRoomUpgradeHistory function will infinitely recurse in this case, causing the code to hang. This method is public but also called by the 'leaveRoomChain()' method, so leaving a room will also trigger the bug. This was patched in matrix-js-sdk 34.3.1.</description><pubDate>Tue, 20 Aug 2024 14:45:09 +0000</pubDate></item><item><title>CVE-2024-42603 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_backup.php?dobackup=clearall</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42603</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_backup.php?dobackup=clearall</description><pubDate>Tue, 20 Aug 2024 14:45:09 +0000</pubDate></item><item><title>CVE-2024-42605 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/edit_page.php?link_id=1</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42605</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/edit_page.php?link_id=1</description><pubDate>Tue, 20 Aug 2024 14:45:09 +0000</pubDate></item><item><title>CVE-2024-42607 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_backup.php?dobackup=database</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42607</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_backup.php?dobackup=database</description><pubDate>Tue, 20 Aug 2024 14:45:10 +0000</pubDate></item><item><title>CVE-2024-42611 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) via admin/admin_page.php?link_id=1&amp;mode=delete</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42611</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) via admin/admin_page.php?link_id=1&amp;amp;mode=delete</description><pubDate>Tue, 20 Aug 2024 14:45:10 +0000</pubDate></item><item><title>CVE-2024-42613 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_widgets.php?action=install&amp;wid...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42613</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_widgets.php?action=install&amp;amp;widget=akismet</description><pubDate>Tue, 20 Aug 2024 14:45:11 +0000</pubDate></item><item><title>CVE-2024-42616 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_widgets.php?action=remove&amp;widg...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42616</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_widgets.php?action=remove&amp;amp;widget=Statistics</description><pubDate>Tue, 20 Aug 2024 14:35:10 +0000</pubDate></item><item><title>CVE-2024-42617 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_config.php?action=save&amp;var_id=...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42617</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_config.php?action=save&amp;amp;var_id=32</description><pubDate>Tue, 20 Aug 2024 14:35:11 +0000</pubDate></item><item><title>CVE-2024-42621 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_editor.php</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42621</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_editor.php</description><pubDate>Tue, 20 Aug 2024 14:35:11 +0000</pubDate></item><item><title>CVE-2024-42609 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_backup.php?dobackup=avatars</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42609</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_backup.php?dobackup=avatars</description><pubDate>Tue, 20 Aug 2024 14:22:35 +0000</pubDate></item><item><title>CVE-2024-42610 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_backup.php?dobackup=files</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42610</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/admin_backup.php?dobackup=files</description><pubDate>Tue, 20 Aug 2024 14:22:36 +0000</pubDate></item><item><title>CVE-2024-42618 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /module.php?module=karma</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42618</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /module.php?module=karma</description><pubDate>Tue, 20 Aug 2024 14:22:36 +0000</pubDate></item><item><title>CVE-2024-8005 | demozx gf_cms JWT Authentication auth.go init hard-coded credentials</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8005</link><description>A vulnerability was found in demozx gf_cms 1.0/1.0.1. It has been classified as critical. This affects the function init of the file internal/logic/auth/auth.go of the component JWT Authentication. The manipulation leads to hard-coded credentials. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 1.0.2 is able to address this issue. The patch is named be702ada7cb6fdabc02689d90b38139c827458a5. It is recommended to upgrade the affected component.</description><pubDate>Tue, 20 Aug 2024 14:22:37 +0000</pubDate></item><item><title>CVE-2024-33872 | Keyfactor Command 10.5.x before 10.5.1 and 11.5.x before 11.5.1 allows SQL Injection which could result in code execution and escalation of ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33872</link><description>Keyfactor Command 10.5.x before 10.5.1 and 11.5.x before 11.5.1 allows SQL Injection which could result in code execution and escalation of privileges.</description><pubDate>Tue, 20 Aug 2024 14:01:18 +0000</pubDate></item><item><title>CVE-2024-34458 | Keyfactor Command 10.5.x before 10.5.1 and 11.5.x before 11.5.1 allows SQL Injection which could result in information disclosure.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34458</link><description>Keyfactor Command 10.5.x before 10.5.1 and 11.5.x before 11.5.1 allows SQL Injection which could result in information disclosure.</description><pubDate>Tue, 20 Aug 2024 14:01:19 +0000</pubDate></item><item><title>CVE-2024-42608 | Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/submit_page.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42608</link><description>Pligg CMS v2.0.2 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/submit_page.php.</description><pubDate>Tue, 20 Aug 2024 14:01:19 +0000</pubDate></item><item><title>CVE-2024-42006 | Keyfactor AWS Orchestrator through 2.0 allows Information Disclosure.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42006</link><description>Keyfactor AWS Orchestrator through 2.0 allows Information Disclosure.</description><pubDate>Tue, 20 Aug 2024 14:01:20 +0000</pubDate></item><item><title>CVE-2024-6377 | Reflected Cross-site Scripting (XSS) vulnerability affecting 3DSwymer from Release 3DEXPERIENCE R2022x through Release 3DEXPERIENCE R2024x</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6377</link><description>A reflected Cross-site Scripting (XSS) vulnerability affecting 3DSwymer from Release 3DEXPERIENCE R2022x through Release 3DEXPERIENCE R2024x allows an attacker to execute arbitrary script code in user's browser session.</description><pubDate>Tue, 20 Aug 2024 14:01:20 +0000</pubDate></item><item><title>CVE-2024-6378 | Reflected Cross-site Scripting (XSS) vulnerability affecting ENOVIA Collaborative Industry Innovator from Release 3DEXPERIENCE R2022x through Release 3DEXPERIENCE R2024x</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6378</link><description>A reflected Cross-site Scripting (XSS) vulnerability affecting ENOVIA Collaborative Industry Innovator from Release 3DEXPERIENCE R2022x through Release 3DEXPERIENCE R2024x allows an attacker to execute arbitrary script code in user's browser session.</description><pubDate>Tue, 20 Aug 2024 14:01:21 +0000</pubDate></item><item><title>CVE-2024-6379 | URL redirection to untrusted site (open redirect) vulnerability affecting 3DPassport in 3DSwymer from Release 3DEXPERIENCE R2022x through Release 3DEXPERIENCE R2024x</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6379</link><description>An URL redirection to untrusted site (open redirect) vulnerability affecting 3DPassport in 3DSwymer from Release 3DEXPERIENCE R2022x through Release 3DEXPERIENCE R2024x allows an attacker to redirect users to an arbitrary website via a crafted URL.</description><pubDate>Tue, 20 Aug 2024 14:01:21 +0000</pubDate></item><item><title>CVE-2024-39094 | Friendica 2024.03 is vulnerable to Cross Site Scripting (XSS) in settings/profile via the homepage, xmpp, and matrix parameters.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39094</link><description>Friendica 2024.03 is vulnerable to Cross Site Scripting (XSS) in settings/profile via the homepage, xmpp, and matrix parameters.</description><pubDate>Tue, 20 Aug 2024 13:51:20 +0000</pubDate></item><item><title>CVE-2024-8003 | Go-Tribe gotribe-admin Log routes.go InitRoutes deserialization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8003</link><description>A vulnerability was found in Go-Tribe gotribe-admin 1.0 and classified as problematic. Affected by this issue is the function InitRoutes of the file internal/app/routes/routes.go of the component Log Handler. The manipulation leads to deserialization. The patch is identified as 45ac90d6d1f82716f77dbcdf8e7309c229080e3c. It is recommended to apply a patch to fix this issue.</description><pubDate>Tue, 20 Aug 2024 13:41:18 +0000</pubDate></item><item><title>CVE-2024-42552 | Hotel Management System commit 91caab8 was discovered to contain a SQL injection vulnerability via the book_id parameter at admin_room_histo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42552</link><description>Hotel Management System commit 91caab8 was discovered to contain a SQL injection vulnerability via the book_id parameter at admin_room_history.php.</description><pubDate>Tue, 20 Aug 2024 13:19:04 +0000</pubDate></item><item><title>CVE-2024-42553 | A Cross-Site Request Forgery (CSRF) in the component admin_room_added.php of Hotel Management System commit 91caab8 allows attackers to esca...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42553</link><description>A Cross-Site Request Forgery (CSRF) in the component admin_room_added.php of Hotel Management System commit 91caab8 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:04 +0000</pubDate></item><item><title>CVE-2024-42554 | Hotel Management System commit 91caab8 was discovered to contain a SQL injection vulnerability via the room_type parameter at admin_room_add...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42554</link><description>Hotel Management System commit 91caab8 was discovered to contain a SQL injection vulnerability via the room_type parameter at admin_room_added.php.</description><pubDate>Tue, 20 Aug 2024 13:19:05 +0000</pubDate></item><item><title>CVE-2024-42555 | A Cross-Site Request Forgery (CSRF) in the component admin_room_removed.php of Hotel Management System commit 91caab8 allows attackers to es...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42555</link><description>A Cross-Site Request Forgery (CSRF) in the component admin_room_removed.php of Hotel Management System commit 91caab8 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:05 +0000</pubDate></item><item><title>CVE-2024-42556 | Hotel Management System commit 91caab8 was discovered to contain a SQL injection vulnerability via the room_type parameter at admin_room_rem...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42556</link><description>Hotel Management System commit 91caab8 was discovered to contain a SQL injection vulnerability via the room_type parameter at admin_room_removed.php.</description><pubDate>Tue, 20 Aug 2024 13:19:05 +0000</pubDate></item><item><title>CVE-2024-42557 | A Cross-Site Request Forgery (CSRF) in the component admin_modify_room.php of Hotel Management System commit 91caab8 allows attackers to esc...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42557</link><description>A Cross-Site Request Forgery (CSRF) in the component admin_modify_room.php of Hotel Management System commit 91caab8 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:06 +0000</pubDate></item><item><title>CVE-2024-42558 | Hotel Management System commit 91caab8 was discovered to contain a SQL injection vulnerability via the book_id parameter at admin_modify_roo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42558</link><description>Hotel Management System commit 91caab8 was discovered to contain a SQL injection vulnerability via the book_id parameter at admin_modify_room.php.</description><pubDate>Tue, 20 Aug 2024 13:19:06 +0000</pubDate></item><item><title>CVE-2024-42559 | An issue in the login component (process_login.php) of Hotel Management System commit 79d688 allows attackers to authenticate without provid...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42559</link><description>An issue in the login component (process_login.php) of Hotel Management System commit 79d688 allows attackers to authenticate without providing a valid password.</description><pubDate>Tue, 20 Aug 2024 13:19:06 +0000</pubDate></item><item><title>CVE-2024-42560 | A cross-site scripting (XSS) vulnerability in the component update_page_details.php of Blood Bank And Donation Management System commit dc9e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42560</link><description>A cross-site scripting (XSS) vulnerability in the component update_page_details.php of Blood Bank And Donation Management System commit dc9e039 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Page Details parameter.</description><pubDate>Tue, 20 Aug 2024 13:19:07 +0000</pubDate></item><item><title>CVE-2024-42561 | Pharmacy Management System commit a2efc8 was discovered to contain a SQL injection vulnerability via the invoice_number parameter at sales_r...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42561</link><description>Pharmacy Management System commit a2efc8 was discovered to contain a SQL injection vulnerability via the invoice_number parameter at sales_report.php.</description><pubDate>Tue, 20 Aug 2024 13:19:07 +0000</pubDate></item><item><title>CVE-2024-42562 | Pharmacy Management System commit a2efc8 was discovered to contain a SQL injection vulnerability via the invoice_number parameter at preview...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42562</link><description>Pharmacy Management System commit a2efc8 was discovered to contain a SQL injection vulnerability via the invoice_number parameter at preview.php.</description><pubDate>Tue, 20 Aug 2024 13:19:08 +0000</pubDate></item><item><title>CVE-2024-42563 | An arbitrary file upload vulnerability in ERP commit 44bd04 allows attackers to execute arbitrary code via uploading a crafted HTML file.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42563</link><description>An arbitrary file upload vulnerability in ERP commit 44bd04 allows attackers to execute arbitrary code via uploading a crafted HTML file.</description><pubDate>Tue, 20 Aug 2024 13:19:08 +0000</pubDate></item><item><title>CVE-2024-42564 | ERP commit 44bd04 was discovered to contain a SQL injection vulnerability via the id parameter at /index.php/basedata/inventory/delete?actio...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42564</link><description>ERP commit 44bd04 was discovered to contain a SQL injection vulnerability via the id parameter at /index.php/basedata/inventory/delete?action=delete.</description><pubDate>Tue, 20 Aug 2024 13:19:08 +0000</pubDate></item><item><title>CVE-2024-42565 | ERP commit 44bd04 was discovered to contain a SQL injection vulnerability via the id parameter at /index.php/basedata/contact/delete?action=...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42565</link><description>ERP commit 44bd04 was discovered to contain a SQL injection vulnerability via the id parameter at /index.php/basedata/contact/delete?action=delete.</description><pubDate>Tue, 20 Aug 2024 13:19:09 +0000</pubDate></item><item><title>CVE-2024-42566 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the password parameter at login.php</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42566</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the password parameter at login.php</description><pubDate>Tue, 20 Aug 2024 13:19:09 +0000</pubDate></item><item><title>CVE-2024-42567 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the sid parameter at /search.php?action=2...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42567</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the sid parameter at /search.php?action=2.</description><pubDate>Tue, 20 Aug 2024 13:19:09 +0000</pubDate></item><item><title>CVE-2024-42568 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the transport parameter at vehicle.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42568</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the transport parameter at vehicle.php.</description><pubDate>Tue, 20 Aug 2024 13:19:10 +0000</pubDate></item><item><title>CVE-2024-42569 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at paidclass.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42569</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at paidclass.php.</description><pubDate>Tue, 20 Aug 2024 13:19:10 +0000</pubDate></item><item><title>CVE-2024-42570 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at admininsert.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42570</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at admininsert.php.</description><pubDate>Tue, 20 Aug 2024 13:19:11 +0000</pubDate></item><item><title>CVE-2024-42571 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at insertattendance....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42571</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at insertattendance.php.</description><pubDate>Tue, 20 Aug 2024 13:19:11 +0000</pubDate></item><item><title>CVE-2024-42572 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at unitmarks.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42572</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at unitmarks.php.</description><pubDate>Tue, 20 Aug 2024 13:19:11 +0000</pubDate></item><item><title>CVE-2024-42573 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at dtmarks.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42573</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at dtmarks.php.</description><pubDate>Tue, 20 Aug 2024 13:19:12 +0000</pubDate></item><item><title>CVE-2024-42574 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at attendance.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42574</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at attendance.php.</description><pubDate>Tue, 20 Aug 2024 13:19:12 +0000</pubDate></item><item><title>CVE-2024-42575 | School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at substaff.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42575</link><description>School Management System commit bae5aa was discovered to contain a SQL injection vulnerability via the medium parameter at substaff.php.</description><pubDate>Tue, 20 Aug 2024 13:19:12 +0000</pubDate></item><item><title>CVE-2024-42576 | A Cross-Site Request Forgery (CSRF) in the component edit_categorie.php of Warehouse Inventory System v2.0 allows attackers to escalate priv...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42576</link><description>A Cross-Site Request Forgery (CSRF) in the component edit_categorie.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:13 +0000</pubDate></item><item><title>CVE-2024-42577 | A Cross-Site Request Forgery (CSRF) in the component add_product.php of Warehouse Inventory System v2.0 allows attackers to escalate privile...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42577</link><description>A Cross-Site Request Forgery (CSRF) in the component add_product.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:13 +0000</pubDate></item><item><title>CVE-2024-42578 | A Cross-Site Request Forgery (CSRF) in the component edit_product.php of Warehouse Inventory System v2.0 allows attackers to escalate privil...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42578</link><description>A Cross-Site Request Forgery (CSRF) in the component edit_product.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:13 +0000</pubDate></item><item><title>CVE-2024-42579 | A Cross-Site Request Forgery (CSRF) in the component add_group.php of Warehouse Inventory System v2.0 allows attackers to escalate privilege...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42579</link><description>A Cross-Site Request Forgery (CSRF) in the component add_group.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:14 +0000</pubDate></item><item><title>CVE-2024-42580 | A Cross-Site Request Forgery (CSRF) in the component edit_group.php of Warehouse Inventory System v2.0 allows attackers to escalate privileg...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42580</link><description>A Cross-Site Request Forgery (CSRF) in the component edit_group.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:14 +0000</pubDate></item><item><title>CVE-2024-42581 | A Cross-Site Request Forgery (CSRF) in the component delete_group.php of Warehouse Inventory System v2.0 allows attackers to escalate privil...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42581</link><description>A Cross-Site Request Forgery (CSRF) in the component delete_group.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:14 +0000</pubDate></item><item><title>CVE-2024-42582 | A Cross-Site Request Forgery (CSRF) in the component delete_categorie.php of Warehouse Inventory System v2.0 allows attackers to escalate pr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42582</link><description>A Cross-Site Request Forgery (CSRF) in the component delete_categorie.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:15 +0000</pubDate></item><item><title>CVE-2024-42583 | A Cross-Site Request Forgery (CSRF) in the component delete_user.php of Warehouse Inventory System v2.0 allows attackers to escalate privile...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42583</link><description>A Cross-Site Request Forgery (CSRF) in the component delete_user.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:15 +0000</pubDate></item><item><title>CVE-2024-42584 | A Cross-Site Request Forgery (CSRF) in the component delete_product.php of Warehouse Inventory System v2.0 allows attackers to escalate priv...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42584</link><description>A Cross-Site Request Forgery (CSRF) in the component delete_product.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:15 +0000</pubDate></item><item><title>CVE-2024-42585 | A Cross-Site Request Forgery (CSRF) in the component delete_media.php of Warehouse Inventory System v2.0 allows attackers to escalate privil...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42585</link><description>A Cross-Site Request Forgery (CSRF) in the component delete_media.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:16 +0000</pubDate></item><item><title>CVE-2024-42586 | A Cross-Site Request Forgery (CSRF) in the component categorie.php of Warehouse Inventory System v2.0 allows attackers to escalate privilege...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42586</link><description>A Cross-Site Request Forgery (CSRF) in the component categorie.php of Warehouse Inventory System v2.0 allows attackers to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 13:19:16 +0000</pubDate></item><item><title>CVE-2024-42336 | Servision - CWE-287: Improper Authentication</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42336</link><description>Servision - CWE-287: Improper Authentication</description><pubDate>Tue, 20 Aug 2024 12:56:06 +0000</pubDate></item><item><title>CVE-2024-42334 | Hargal - CWE-284: Improper Access Control</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42334</link><description>Hargal - CWE-284: Improper Access Control</description><pubDate>Tue, 20 Aug 2024 12:28:13 +0000</pubDate></item><item><title>CVE-2024-42335 | 7Twenty - CWE-79: Improper Neutralization of Input During Web Page Generation (&amp;#x27;Cross-site Scripting&amp;#x27;)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42335</link><description>7Twenty - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</description><pubDate>Tue, 20 Aug 2024 12:28:14 +0000</pubDate></item><item><title>CVE-2024-6918 | CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') vulnerability
exists that could cause a crash of the Accutec...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6918</link><description>CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') vulnerability
exists that could cause a crash of the Accutech Manager when receiving a specially crafted
request over port 2536/TCP.</description><pubDate>Tue, 20 Aug 2024 12:28:14 +0000</pubDate></item><item><title>CVE-2024-25009 | Ericsson Packet Core Controller (PCC) - Improper Input Validation Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25009</link><description>Ericsson Packet Core Controller (PCC) contains a vulnerability in Access and Mobility Management Function (AMF) where improper input validation can lead to denial of service which may result in service degradation.</description><pubDate>Tue, 20 Aug 2024 12:28:15 +0000</pubDate></item><item><title>CVE-2024-41699 | Priority – CWE-552: Files or Directories Accessible to External Parties</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41699</link><description>Priority – CWE-552: Files or Directories Accessible to External Parties</description><pubDate>Tue, 20 Aug 2024 12:28:15 +0000</pubDate></item><item><title>CVE-2024-41700 | Barix – CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41700</link><description>Barix – CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</description><pubDate>Tue, 20 Aug 2024 12:28:15 +0000</pubDate></item><item><title>CVE-2024-41698 | Priority – CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41698</link><description>Priority – CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</description><pubDate>Tue, 20 Aug 2024 12:28:16 +0000</pubDate></item><item><title>CVE-2024-41697 | Priority – CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41697</link><description>Priority - CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</description><pubDate>Tue, 20 Aug 2024 11:55:42 +0000</pubDate></item><item><title>CVE-2024-7054 | Popup Maker &amp;lt;= 1.19.0 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7054</link><description>The Popup Maker – Boost Sales, Conversions, Optins, Subscribers with the Ultimate WP Popups Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘close_text’ parameter in all versions up to, and including, 1.19.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 20 Aug 2024 11:08:33 +0000</pubDate></item><item><title>CVE-2024-21689 | This High severity RCE (Remote Code Execution) vulnerability CVE-2024-21689  was introduced in versions 9.1.0, 9.2.0, 9.3.0, 9.4.0, 9.5.0, a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21689</link><description>This High severity RCE (Remote Code Execution) vulnerability CVE-2024-21689  was introduced in versions 9.1.0, 9.2.0, 9.3.0, 9.4.0, 9.5.0, and 9.6.0 of Bamboo Data Center and Server.

This RCE (Remote Code Execution) vulnerability, with a CVSS Score of 7.6, allows an authenticated attacker to execute arbitrary code which has high impact to confidentiality, high impact to integrity, high impact to availability, and requires user interaction.

Atlassian recommends that Bamboo Data Center and Server customers upgrade to latest version, if you are unable to do so, upgrade your instance to one of the specified supported fixed versions:
 Bamboo Data Center and Server 9.2: Upgrade to a release greater than or equal to 9.2.17

 Bamboo Data Center and Server 9.6: Upgrade to a release greater than or equal to 9.6.5

See the release notes ([https://confluence.atlassian.com/bambooreleases/bamboo-release-notes-1189793869.html]). You can download the latest version of Bamboo Data Center and Server from the download center ([https://www.atlassian.com/software/bamboo/download-archives]).

This vulnerability was reported via our Bug Bounty program.</description><pubDate>Tue, 20 Aug 2024 10:29:14 +0000</pubDate></item><item><title>CVE-2024-28829 | Privilege escalation in mk_informix plugin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28829</link><description>Least privilege violation and reliance on untrusted inputs in the mk_informix Checkmk agent plugin before Checkmk 2.3.0p12, 2.2.0p32, 2.1.0p47 and 2.0.0 (EOL) allows local users to escalate privileges.</description><pubDate>Tue, 20 Aug 2024 09:41:31 +0000</pubDate></item><item><title>CVE-2024-43202 | Apache DolphinScheduler: Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43202</link><description>Exposure of Remote Code Execution in Apache Dolphinscheduler.

This issue affects Apache DolphinScheduler: before 3.2.2. 

We recommend users to upgrade Apache DolphinScheduler to version 3.2.2, which fixes the issue.</description><pubDate>Tue, 20 Aug 2024 07:37:14 +0000</pubDate></item><item><title>CVE-2024-38808 | CVE-2024-38808: Spring Expression DoS Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38808</link><description>In Spring Framework versions 5.3.0 - 5.3.38 and older unsupported versions, it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial of service (DoS) condition.

Specifically, an application is vulnerable when the following is true:

  *  The application evaluates user-supplied SpEL expressions.</description><pubDate>Tue, 20 Aug 2024 07:26:08 +0000</pubDate></item><item><title>CVE-2024-6847 | SmartSearch WP &amp;lt;= 2.4.4 - Unauthenticated SQLi</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6847</link><description>The Chatbot with ChatGPT WordPress plugin before 2.4.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users when submitting messages to the chatbot.</description><pubDate>Tue, 20 Aug 2024 06:31:09 +0000</pubDate></item><item><title>CVE-2024-43688 | cron/entry.c in vixie cron before 9cc8ab1, as used in OpenBSD 7.4 and 7.5, allows a heap-based buffer underflow and memory corruption. NOTE:...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43688</link><description>cron/entry.c in vixie cron before 9cc8ab1, as used in OpenBSD 7.4 and 7.5, allows a heap-based buffer underflow and memory corruption. NOTE: this issue was introduced during a May 2023 refactoring.</description><pubDate>Tue, 20 Aug 2024 05:50:42 +0000</pubDate></item><item><title>CVE-2024-5576 | Tutor LMS Elementor Addons &amp;lt;= 2.1.4 - Authenticated (Contributor+) Stored Cross-Site Scripting via Course Carousel Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5576</link><description>The Tutor LMS Elementor Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'course_carousel_skin' attribute within the plugin's Course Carousel widget in all versions up to, and including, 2.1.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 20 Aug 2024 05:40:35 +0000</pubDate></item><item><title>CVE-2024-6864 | WP Last Modified Info &amp;lt;= 1.9.0 - Authenticated (Contributor+) Stored Cross-Site Scripting via lmt-post-modified-info Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6864</link><description>The WP Last Modified Info plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘template’ attribute of the lmt-post-modified-info shortcode in all versions up to, and including, 1.9.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 20 Aug 2024 04:45:59 +0000</pubDate></item><item><title>CVE-2024-38810 | Missing Authorization When Using @AuthorizeReturnObject</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38810</link><description>Missing Authorization When Using @AuthorizeReturnObject in Spring Security 6.3.0 and 6.3.1 allows attacker to render security annotations inaffective.</description><pubDate>Tue, 20 Aug 2024 03:42:02 +0000</pubDate></item><item><title>CVE-2022-1206 | AdRotate – Ad manager &amp;amp; AdSense Ads &amp;lt;= 5.13.2 - Authenticated (Admin+) Double Extension Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2022-1206</link><description>The AdRotate Banner Manager – The only ad manager you'll need plugin for WordPress is vulnerable to arbitrary file uploads due to missing file extension sanitization in the adrotate_insert_media() function in all versions up to, and including, 5.13.2. This makes it possible for authenticated attackers, with administrator-level access and above, to upload arbitrary files with double extensions on the affected site's server which may make remote code execution possible. This is only exploitable on select instances where the configuration will execute the first extension present.</description><pubDate>Tue, 20 Aug 2024 03:31:14 +0000</pubDate></item><item><title>CVE-2024-5763 | The Plus Addons for Elementor – Elementor Addons, Page Templates, Widgets, Mega Menu, WooCommerce &amp;lt;= 5.6.2 - Authenticated (Contributor+) Stored Cross-Site Scripting via Video Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5763</link><description>The The Plus Addons for Elementor – Elementor Addons, Page Templates, Widgets, Mega Menu, WooCommerce plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the video_date attribute within the plugin's Video widget in all versions up to, and including, 5.6.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 20 Aug 2024 03:31:15 +0000</pubDate></item><item><title>CVE-2024-6575 | The Plus Addons for Elementor &amp;lt;= 5.6.2 - Authenticated (Contributor+) Stored Cross-Site Scripting via TP Page Scroll Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6575</link><description>The The Plus Addons for Elementor – Elementor Addons, Page Templates, Widgets, Mega Menu, WooCommerce plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘res_width_value’ parameter within the plugin's tp_page_scroll widget in all versions up to, and including, 5.6.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 20 Aug 2024 03:31:15 +0000</pubDate></item><item><title>CVE-2024-7702 | Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp;amp; Custom Contact Form builder 2.0 - 2.13.9 - Authenticated (Administrator+) SQL Injection via getLogHistory Function</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7702</link><description>The Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp; Custom Contact Form builder plugin for WordPress is vulnerable to generic SQL Injection via the entryID parameter in versions 2.0 to 2.13.9 due to insufficient escaping on the user-supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Administrator-level access and above, to append additional SQL queries to already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Tue, 20 Aug 2024 03:31:16 +0000</pubDate></item><item><title>CVE-2024-7775 | Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp;amp; Custom Contact Form builder 2.0 - 2.13.9 - Authenticated (Administrator+) Arbitrary JavaScript File Uploads</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7775</link><description>The Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp; Custom Contact Form builder plugin for WordPress is vulnerable to arbitrary JavaScript file uploads due to missing input validation in the addCustomCode function in versions 2.0 to 2.13.9. This makes it possible for authenticated attackers, with Administrator-level access and above, to upload arbitrary JavaScript files to the affected site's server.</description><pubDate>Tue, 20 Aug 2024 03:31:16 +0000</pubDate></item><item><title>CVE-2024-7777 | Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp;amp; Custom Contact Form builder 2.0 - 2.13.9 - Authenticated (Administrator+) Arbitrary File Read And Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7777</link><description>The Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp; Custom Contact Form builder plugin for WordPress is vulnerable to arbitrary file read and deletion due to insufficient file path validation in multiple functions in versions 2.0 to 2.13.9. This makes it possible for authenticated attackers, with Administrator-level access and above, to read and delete arbitrary files on the server, which can easily lead to remote code execution when the right file is deleted (such as wp-config.php).</description><pubDate>Tue, 20 Aug 2024 03:31:17 +0000</pubDate></item><item><title>CVE-2024-7780 | Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp;amp; Custom Contact Form builder 2.0 - 2.13.9 - Authenticated (Administrator+) SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7780</link><description>The Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp; Custom Contact Form builder plugin for WordPress is vulnerable to generic SQL Injection via the id parameter in versions 2.0 to 2.13.9 due to insufficient escaping on the user-supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Administrator-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Tue, 20 Aug 2024 03:31:17 +0000</pubDate></item><item><title>CVE-2024-7782 | Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp;amp; Custom Contact Form builder 2.0 - 2.13.4 - Authenticater (Administrator+) Arbitrary File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7782</link><description>The Contact Form by Bit Form: Multi Step Form, Calculation Contact Form, Payment Contact Form &amp; Custom Contact Form builder plugin for WordPress is vulnerable to arbitrary file deletion due to insufficient file path validation in the iconRemove function in versions 2.0 to 2.13.4. This makes it possible for authenticated attackers, with Administrator-level access and above, to delete arbitrary files on the server, which can easily lead to remote code execution when the right file is deleted (such as wp-config.php).</description><pubDate>Tue, 20 Aug 2024 03:31:17 +0000</pubDate></item><item><title>CVE-2024-5932 | GiveWP – Donation Plugin and Fundraising Platform &amp;lt;= 3.14.1 - Unauthenticated PHP Object Injection to Remote Code Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5932</link><description>The GiveWP – Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 3.14.1 via deserialization of untrusted input from the 'give_title' parameter. This makes it possible for unauthenticated attackers to inject a PHP Object. The additional presence of a POP chain allows attackers to execute code remotely, and to delete arbitrary files.</description><pubDate>Tue, 20 Aug 2024 02:29:50 +0000</pubDate></item><item><title>CVE-2024-5939 | GiveWP – Donation Plugin and Fundraising Platform &amp;lt;= 3.13.0 - Missing Authorization to Limited Information Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5939</link><description>The GiveWP – Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the 'setup_wizard' function in all versions up to, and including, 3.13.0. This makes it possible for unauthenticated attackers to read the setup wizard administrative pages.</description><pubDate>Tue, 20 Aug 2024 02:29:51 +0000</pubDate></item><item><title>CVE-2024-5940 | GiveWP – Donation Plugin and Fundraising Platform &amp;lt;= 3.13.0 - Missing Authorization to Unauthenticated Event Settings Update</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5940</link><description>The GiveWP – Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'handle_request' function in all versions up to, and including, 3.13.0. This makes it possible for unauthenticated attackers to edit event ticket settings if the Events beta feature is enabled.</description><pubDate>Tue, 20 Aug 2024 02:29:51 +0000</pubDate></item><item><title>CVE-2024-5941 | GiveWP – Donation Plugin and Fundraising Platform &amp;lt;= 3.14.1 - Missing Authorization to Authenticated (Subscriber+) Limited File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5941</link><description>The GiveWP – Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to unauthorized access and deletion of data due to a missing capability check on the 'handle_request' function in all versions up to, and including, 3.14.1. This makes it possible for authenticated attackers, with Subscriber-level access and above, to read attachment paths and delete attachment files.</description><pubDate>Tue, 20 Aug 2024 02:29:52 +0000</pubDate></item><item><title>CVE-2024-7827 | Shopping Cart &amp;amp; eCommerce Store &amp;lt;= 5.7.2 - Authenticated (Contributor+) SQL Injection via model_number Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7827</link><description>The Shopping Cart &amp; eCommerce Store plugin for WordPress is vulnerable to boolean-based SQL Injection via the ‘model_number’ parameter in all versions up to, and including, 5.7.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query. This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Tue, 20 Aug 2024 02:29:52 +0000</pubDate></item><item><title>CVE-2024-7850 | BP Profile Search &amp;lt;= 5.7.5 - Cross-Site Request Forgery to Reflected Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7850</link><description>The BP Profile Search plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 5.7.5. This is due to missing or incorrect nonce validation on the bps_ajax_field_selector(), bps_ajax_template_options(), and bps_ajax_field_row() functions. This makes it possible for unauthenticated attackers to inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 20 Aug 2024 02:29:52 +0000</pubDate></item><item><title>CVE-2024-7948 | SourceCodester Accounts Manager App Update Account Page update-account.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7948</link><description>A vulnerability classified as problematic was found in SourceCodester Accounts Manager App 1.0. This vulnerability affects unknown code of the file update-account.php of the component Update Account Page. The manipulation of the argument Account Name/Username/Password/Link leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 02:29:53 +0000</pubDate></item><item><title>CVE-2024-7949 | SourceCodester Online Graduate Tracer System fetch_genderit.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7949</link><description>A vulnerability, which was classified as critical, was found in SourceCodester Online Graduate Tracer System up to 1.0. Affected is an unknown function of the file /tracking/admin/fetch_genderit.php. The manipulation of the argument request leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 02:29:53 +0000</pubDate></item><item><title>CVE-2024-7946 | itsourcecode Online Blood Bank Management System User Signup register.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7946</link><description>A vulnerability was found in itsourcecode Online Blood Bank Management System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file register.php of the component User Signup. The manipulation of the argument user leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 02:29:54 +0000</pubDate></item><item><title>CVE-2024-7947 | SourceCodester Point of Sales and Inventory Management System login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7947</link><description>A vulnerability classified as critical has been found in SourceCodester Point of Sales and Inventory Management System 1.0. This affects an unknown part of the file login.php. The manipulation of the argument email leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 02:29:55 +0000</pubDate></item><item><title>CVE-2024-7944 | itsourcecode Laravel Property Management System DocumentsController.php UpdateDocumentsRequest unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7944</link><description>A vulnerability was found in itsourcecode Laravel Property Management System 1.0. It has been classified as critical. Affected is the function UpdateDocumentsRequest of the file DocumentsController.php. The manipulation leads to unrestricted upload. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 01:49:27 +0000</pubDate></item><item><title>CVE-2024-7945 | itsourcecode Laravel Property Management System Notes Page create cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7945</link><description>A vulnerability was found in itsourcecode Laravel Property Management System 1.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file /admin/notes/create of the component Notes Page. The manipulation of the argument Note text leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 01:49:27 +0000</pubDate></item><item><title>CVE-2024-7943 | itsourcecode Laravel Property Management System PropertiesController.php upload unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7943</link><description>A vulnerability was found in itsourcecode Laravel Property Management System 1.0 and classified as critical. This issue affects the function upload of the file PropertiesController.php. The manipulation of the argument file leads to unrestricted upload. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 01:49:28 +0000</pubDate></item><item><title>CVE-2024-7937 | itsourcecode Project Expense Monitoring System printtransfer.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7937</link><description>A vulnerability classified as critical was found in itsourcecode Project Expense Monitoring System 1.0. This vulnerability affects unknown code of the file printtransfer.php. The manipulation of the argument transfer_id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 00:32:39 +0000</pubDate></item><item><title>CVE-2024-7942 | SourceCodester Leads Manager Tool update-leads.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7942</link><description>A vulnerability has been found in SourceCodester Leads Manager Tool 1.0 and classified as problematic. This vulnerability affects unknown code of the file update-leads.php. The manipulation of the argument phone_number leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Tue, 20 Aug 2024 00:32:40 +0000</pubDate></item><item><title>CVE-2024-7936 | itsourcecode Project Expense Monitoring System transferred_report.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7936</link><description>A vulnerability classified as critical has been found in itsourcecode Project Expense Monitoring System 1.0. This affects an unknown part of the file transferred_report.php. The manipulation of the argument start/end/employee leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 23:41:43 +0000</pubDate></item><item><title>CVE-2024-7305 | DWF Vulnerability in Autodesk Desktop Software</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7305</link><description>A maliciously crafted DWF file, when parsed in AdDwfPdk.dll through Autodesk AutoCAD, can force an Out-of-Bounds Write. A malicious actor can leverage this vulnerability to cause a crash, read sensitive data, or execute arbitrary code in the context of the current process.</description><pubDate>Mon, 19 Aug 2024 23:29:30 +0000</pubDate></item><item><title>CVE-2024-7935 | itsourcecode Project Expense Monitoring System print.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7935</link><description>A vulnerability was found in itsourcecode Project Expense Monitoring System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file print.php. The manipulation of the argument map_id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 23:17:22 +0000</pubDate></item><item><title>CVE-2024-7933 | itsourcecode Project Expense Monitoring System Backend Login login1.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7933</link><description>A vulnerability was found in itsourcecode Project Expense Monitoring System 1.0. It has been classified as critical. Affected is an unknown function of the file login1.php of the component Backend Login. The manipulation of the argument user leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 22:36:50 +0000</pubDate></item><item><title>CVE-2024-7934 | itsourcecode Project Expense Monitoring System execute.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7934</link><description>A vulnerability was found in itsourcecode Project Expense Monitoring System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file execute.php. The manipulation of the argument code leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 22:36:51 +0000</pubDate></item><item><title>CVE-2024-4785 | BT: Missing Check in LL_CONNECTION_UPDATE_IND Packet Leads to Division by Zero</title><link>https://www.cve.org/CVERecord?id=CVE-2024-4785</link><description>BT: Missing Check in LL_CONNECTION_UPDATE_IND Packet Leads to Division by Zero</description><pubDate>Mon, 19 Aug 2024 22:22:48 +0000</pubDate></item><item><title>CVE-2024-7930 | SourceCodester Clinics Patient Management System get_packings.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7930</link><description>A vulnerability has been found in SourceCodester Clinics Patient Management System 1.0 and classified as critical. This vulnerability affects unknown code of the file /pms/ajax/get_packings.php. The manipulation of the argument medicine_id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 22:22:48 +0000</pubDate></item><item><title>CVE-2024-7931 | SourceCodester Online Graduate Tracer System view_csprofile.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7931</link><description>A vulnerability was found in SourceCodester Online Graduate Tracer System 1.0 and classified as critical. This issue affects some unknown processing of the file /tracking/admin/view_csprofile.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 22:22:49 +0000</pubDate></item><item><title>CVE-2024-7928 | FastAdmin lang path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7928</link><description>A vulnerability, which was classified as problematic, has been found in FastAdmin up to 1.3.3.20220121. Affected by this issue is some unknown functionality of the file /index/ajax/lang. The manipulation of the argument lang leads to path traversal. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 1.3.4.20220530 is able to address this issue. It is recommended to upgrade the affected component.</description><pubDate>Mon, 19 Aug 2024 21:40:06 +0000</pubDate></item><item><title>CVE-2024-7929 | SourceCodester Simple Forum Website Signup Page registration.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7929</link><description>A vulnerability, which was classified as problematic, was found in SourceCodester Simple Forum Website 1.0. This affects an unknown part of the file /registration.php of the component Signup Page. The manipulation of the argument username leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 21:40:06 +0000</pubDate></item><item><title>CVE-2024-35538 | Typecho v1.3.0 was discovered to contain a Client IP Spoofing vulnerability, which allows attackers to falsify their IP addresses by specify...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35538</link><description>Typecho v1.3.0 was discovered to contain a Client IP Spoofing vulnerability, which allows attackers to falsify their IP addresses by specifying an arbitrary IP as value of X-Forwarded-For or Client-Ip headers while performing HTTP requests.</description><pubDate>Mon, 19 Aug 2024 20:25:49 +0000</pubDate></item><item><title>CVE-2024-35539 | Typecho v1.3.0 was discovered to contain a race condition vulnerability in the post commenting function. This vulnerability allows attackers...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35539</link><description>Typecho v1.3.0 was discovered to contain a race condition vulnerability in the post commenting function. This vulnerability allows attackers to post several comments before the spam protection checks if the comments are posted too frequently.</description><pubDate>Mon, 19 Aug 2024 20:25:50 +0000</pubDate></item><item><title>CVE-2024-7927 | ZZCMS class.php path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7927</link><description>A vulnerability classified as critical was found in ZZCMS 2023. Affected by this vulnerability is an unknown functionality of the file /admin/class.php?dowhat=modifyclass. The manipulation of the argument skin[] leads to path traversal. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 20:25:50 +0000</pubDate></item><item><title>CVE-2024-42813 | In TRENDnet TEW-752DRU FW1.03B01, there is a buffer overflow vulnerability due to the lack of length verification for the service field in g...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42813</link><description>In TRENDnet TEW-752DRU FW1.03B01, there is a buffer overflow vulnerability due to the lack of length verification for the service field in gena.cgi. Attackers who successfully exploit this vulnerability can cause the remote target device to crash or execute arbitrary commands.</description><pubDate>Mon, 19 Aug 2024 20:08:37 +0000</pubDate></item><item><title>CVE-2024-42815 | In the TP-Link RE365 V1_180213, there is a buffer overflow vulnerability due to the lack of length verification for the USER_AGENT field in ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42815</link><description>In the TP-Link RE365 V1_180213, there is a buffer overflow vulnerability due to the lack of length verification for the USER_AGENT field in /usr/bin/httpd. Attackers who successfully exploit this vulnerability can cause the remote target device to crash or execute arbitrary commands.</description><pubDate>Mon, 19 Aug 2024 19:41:52 +0000</pubDate></item><item><title>CVE-2024-43345 | WordPress Landing Page Builder plugin &amp;lt;= 1.5.2.0 - Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43345</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in PluginOps Landing Page Builder allows PHP Local File Inclusion.This issue affects Landing Page Builder: from n/a through 1.5.2.0.</description><pubDate>Mon, 19 Aug 2024 19:41:52 +0000</pubDate></item><item><title>CVE-2024-43354 | WordPress myCred plugin &amp;lt;= 2.7.2 - PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43354</link><description>Deserialization of Untrusted Data vulnerability in myCred allows Object Injection.This issue affects myCred: from n/a through 2.7.2.</description><pubDate>Mon, 19 Aug 2024 19:41:52 +0000</pubDate></item><item><title>CVE-2024-7926 | ZZCMS about_edit.php path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7926</link><description>A vulnerability classified as critical has been found in ZZCMS 2023. Affected is an unknown function of the file /admin/about_edit.php?action=modify. The manipulation of the argument skin leads to path traversal. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 19:41:53 +0000</pubDate></item><item><title>CVE-2024-43311 | WordPress Login As Users plugin &amp;lt;= 1.4.2 - Broken Authentication vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43311</link><description>Improper Privilege Management vulnerability in Geek Code Lab Login As Users allows Privilege Escalation.This issue affects Login As Users: from n/a through 1.4.2.</description><pubDate>Mon, 19 Aug 2024 19:32:11 +0000</pubDate></item><item><title>CVE-2024-43317 | WordPress RegistrationMagic plugin &amp;lt;= 6.0.1.0 - Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43317</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Metagauss User Registration Team RegistrationMagic allows Cross-Site Scripting (XSS).This issue affects RegistrationMagic: from n/a through 6.0.1.0.</description><pubDate>Mon, 19 Aug 2024 19:32:11 +0000</pubDate></item><item><title>CVE-2024-43326 | WordPress Plugin Notes Plus plugin &amp;lt;= 1.2.7 - Arbitrary Content Deletion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43326</link><description>Missing Authorization vulnerability in Jamie Bergen Plugin Notes Plus allows Accessing Functionality Not Properly Constrained by ACLs.This issue affects Plugin Notes Plus: from n/a through 1.2.7.</description><pubDate>Mon, 19 Aug 2024 19:32:12 +0000</pubDate></item><item><title>CVE-2024-43328 | WordPress EmbedPress plugin &amp;lt;= 4.0.9 - Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43328</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in WPDeveloper EmbedPress allows PHP Local File Inclusion.This issue affects EmbedPress: from n/a through 4.0.9.</description><pubDate>Mon, 19 Aug 2024 19:32:12 +0000</pubDate></item><item><title>CVE-2024-42812 | In D-Link DIR-860L v2.03, there is a buffer overflow vulnerability due to the lack of length verification for the SID field in gena.cgi. Att...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42812</link><description>In D-Link DIR-860L v2.03, there is a buffer overflow vulnerability due to the lack of length verification for the SID field in gena.cgi. Attackers who successfully exploit this vulnerability can cause the remote target device to crash or execute arbitrary commands.</description><pubDate>Mon, 19 Aug 2024 19:22:03 +0000</pubDate></item><item><title>CVE-2024-7592 | Quadratic complexity parsing cookies with backslashes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7592</link><description>There is a LOW severity vulnerability affecting CPython, specifically the
'http.cookies' standard library module.


When parsing cookies that contained backslashes for quoted characters in
the cookie value, the parser would use an algorithm with quadratic
complexity, resulting in excess CPU resources being used while parsing the
value.</description><pubDate>Mon, 19 Aug 2024 19:22:04 +0000</pubDate></item><item><title>CVE-2024-23729 | The ColorOS Internet Browser com.heytap.browser application 45.10.3.4.1 for Android allows a remote attacker to execute arbitrary JavaScript...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23729</link><description>The ColorOS Internet Browser com.heytap.browser application 45.10.3.4.1 for Android allows a remote attacker to execute arbitrary JavaScript code via the com.android.browser.RealBrowserActivity component.</description><pubDate>Mon, 19 Aug 2024 18:28:39 +0000</pubDate></item><item><title>CVE-2024-7924 | ZZCMS list.php path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7924</link><description>A vulnerability was found in ZZCMS 2023. It has been declared as critical. This vulnerability affects unknown code of the file /I/list.php. The manipulation of the argument skin leads to path traversal. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 18:28:39 +0000</pubDate></item><item><title>CVE-2024-7925 | ZZCMS eginfo.php information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7925</link><description>A vulnerability was found in ZZCMS 2023. It has been rated as problematic. This issue affects some unknown processing of the file 3/E_bak5.1/upload/eginfo.php. The manipulation of the argument phome with the input ShowPHPInfo leads to information disclosure. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 18:28:40 +0000</pubDate></item><item><title>CVE-2024-43280 | WordPress Salon Booking System plugin &amp;lt;= 10.8.1 - Open Redirection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43280</link><description>URL Redirection to Untrusted Site ('Open Redirect') vulnerability in Salon Booking System Salon booking system.This issue affects Salon booking system: from n/a through 10.8.1.</description><pubDate>Mon, 19 Aug 2024 17:59:17 +0000</pubDate></item><item><title>CVE-2024-43281 | WordPress Void Elementor Post Grid Addon for Elementor Page builder plugin &amp;lt;= 2.3 - Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43281</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in VOID CODERS Void Elementor Post Grid Addon for Elementor Page builder allows PHP Local File Inclusion.This issue affects Void Elementor Post Grid Addon for Elementor Page builder: from n/a through 2.3.</description><pubDate>Mon, 19 Aug 2024 17:59:17 +0000</pubDate></item><item><title>CVE-2024-43261 | WordPress Compute Links plugin &amp;lt;= 1.2.1 - Remote File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43261</link><description>Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') vulnerability in Hamed Naderfar Compute Links allows PHP Remote File Inclusion.This issue affects Compute Links: from n/a through 1.2.1.</description><pubDate>Mon, 19 Aug 2024 17:49:32 +0000</pubDate></item><item><title>CVE-2024-43271 | WordPress Widgets for WooCommerce Products on Elementor plugin &amp;lt;= 2.0.0 - Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43271</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in Themelocation Woo Products Widgets For Elementor allows PHP Local File Inclusion.This issue affects Woo Products Widgets For Elementor: from n/a through 2.0.0.</description><pubDate>Mon, 19 Aug 2024 17:49:33 +0000</pubDate></item><item><title>CVE-2024-43272 | WordPress Icegram Engage plugin &amp;lt;= 3.1.24 - Unauthenticated Unpublished Campaign Viewer vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43272</link><description>Missing Authentication for Critical Function vulnerability in icegram Icegram allows Accessing Functionality Not Properly Constrained by ACLs.This issue affects Icegram: from n/a through 3.1.24.</description><pubDate>Mon, 19 Aug 2024 17:49:33 +0000</pubDate></item><item><title>CVE-2024-43250 | WordPress Bit Form Pro plugin &amp;lt;= 2.6.4 - Authenticated Plugin Settings Change vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43250</link><description>Incorrect Authorization vulnerability in Bit Apps Bit Form Pro bitformpro allows Accessing Functionality Not Properly Constrained by ACLs.This issue affects Bit Form Pro: from n/a through 2.6.4.</description><pubDate>Mon, 19 Aug 2024 17:39:40 +0000</pubDate></item><item><title>CVE-2024-43252 | WordPress Crew HRM plugin &amp;lt;= 1.1.1 - PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43252</link><description>Deserialization of Untrusted Data vulnerability in Crew HRM allows Object Injection.This issue affects Crew HRM: from n/a through 1.1.1.</description><pubDate>Mon, 19 Aug 2024 17:39:41 +0000</pubDate></item><item><title>CVE-2024-43256 | WordPress Leopard plugin &amp;lt;= 2.0.36 - Subscriber+ Plugin Settings Change vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43256</link><description>Missing Authorization vulnerability in nouthemes Leopard - WordPress offload media allows Accessing Functionality Not Properly Constrained by ACLs.This issue affects Leopard - WordPress offload media: from n/a through 2.0.36.</description><pubDate>Mon, 19 Aug 2024 17:39:41 +0000</pubDate></item><item><title>CVE-2024-43242 | WordPress Indeed Ultimate Membership Pro plugin &amp;lt;= 12.6 - Unauthenticated PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43242</link><description>Deserialization of Untrusted Data vulnerability in azzaroco Ultimate Membership Pro allows Object Injection.This issue affects Ultimate Membership Pro: from n/a through 12.6.</description><pubDate>Mon, 19 Aug 2024 17:29:38 +0000</pubDate></item><item><title>CVE-2024-43245 | WordPress JobSearch plugin &amp;lt;= 2.3.4 - Unauthenticated Account Takeover vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43245</link><description>Improper Privilege Management vulnerability in eyecix JobSearch allows Privilege Escalation.This issue affects JobSearch: from n/a through 2.3.4.</description><pubDate>Mon, 19 Aug 2024 17:29:38 +0000</pubDate></item><item><title>CVE-2024-43247 | WordPress WHMpress plugin &amp;lt;= 6.2-revision-5 - Subscriber+ Arbitrary Settings Change vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43247</link><description>Missing Authorization vulnerability in creativeon WHMpress allows Accessing Functionality Not Properly Constrained by ACLs.This issue affects WHMpress: from n/a through 6.2-revision-5.</description><pubDate>Mon, 19 Aug 2024 17:29:38 +0000</pubDate></item><item><title>CVE-2024-43248 | WordPress Bit Form Pro plugin &amp;lt;= 2.6.4 - Unauthenticated Arbitrary File Deletion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43248</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in Bit Apps Bit Form Pro allows File Manipulation.This issue affects Bit Form Pro: from n/a through 2.6.4.</description><pubDate>Mon, 19 Aug 2024 17:29:39 +0000</pubDate></item><item><title>CVE-2024-43249 | WordPress Bit Form Pro plugin &amp;lt;= 2.6.4 - Authenticated Arbitrary File Upload vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43249</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in Bit Apps Bit Form Pro allows Command Injection.This issue affects Bit Form Pro: from n/a through 2.6.4.</description><pubDate>Mon, 19 Aug 2024 17:29:39 +0000</pubDate></item><item><title>CVE-2024-43221 | WordPress JetGridBuilder plugin &amp;lt;= 1.1.2 - Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43221</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in Crocoblock JetGridBuilder allows PHP Local File Inclusion.This issue affects JetGridBuilder: from n/a through 1.1.2.</description><pubDate>Mon, 19 Aug 2024 17:12:56 +0000</pubDate></item><item><title>CVE-2024-43232 | WordPress Timeline and History slider plugin &amp;lt;= 2.3 - Local File Inclusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43232</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in WP OnlineSupport, Essential Plugin Timeline and History slider allows PHP Local File Inclusion.This issue affects Timeline and History slider: from n/a through 2.3.</description><pubDate>Mon, 19 Aug 2024 17:12:56 +0000</pubDate></item><item><title>CVE-2024-43236 | WordPress Easy PayPal &amp;amp; Stripe Buy Now Button plugin &amp;lt;= 1.9 - Open Redirection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43236</link><description>URL Redirection to Untrusted Site ('Open Redirect') vulnerability in Scott Paterson Easy PayPal Buy Now Button.This issue affects Easy PayPal Buy Now Button: from n/a through 1.9.</description><pubDate>Mon, 19 Aug 2024 17:12:57 +0000</pubDate></item><item><title>CVE-2024-43240 | WordPress Indeed Ultimate Membership Pro plugin &amp;lt;= 12.6 - Unauthenticated Privilege Escalation vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43240</link><description>Improper Privilege Management vulnerability in azzaroco Ultimate Membership Pro allows Privilege Escalation.This issue affects Ultimate Membership Pro: from n/a through 12.6.</description><pubDate>Mon, 19 Aug 2024 17:12:57 +0000</pubDate></item><item><title>CVE-2024-37099 | WordPress GiveWP plugin &amp;lt;= 3.14.1 - Unauthenticated PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37099</link><description>Deserialization of Untrusted Data vulnerability in Liquid Web GiveWP allows Object Injection.This issue affects GiveWP: from n/a through 3.14.1.</description><pubDate>Mon, 19 Aug 2024 17:12:58 +0000</pubDate></item><item><title>CVE-2024-42658 | An issue in wishnet Nepstech Wifi Router NTPL-XPON1GFEVN v1.0 allows a remote attacker to obtain sensitive information via the cookie's para...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42658</link><description>An issue in wishnet Nepstech Wifi Router NTPL-XPON1GFEVN v1.0 allows a remote attacker to obtain sensitive information via the cookie's parameter</description><pubDate>Mon, 19 Aug 2024 17:12:58 +0000</pubDate></item><item><title>CVE-2024-32927 | In sendDeviceState_1_6 of RadioExt.cpp, there is a possible use after free due to improper locking. This could lead to local escalation of p...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-32927</link><description>In sendDeviceState_1_6 of RadioExt.cpp, there is a possible use after free due to improper locking. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.</description><pubDate>Mon, 19 Aug 2024 16:54:29 +0000</pubDate></item><item><title>CVE-2024-42657 | An issue in wishnet Nepstech Wifi Router NTPL-XPON1GFEVN v1.0 allows a remote attacker to obtain sensitive information via the lack of encry...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42657</link><description>An issue in wishnet Nepstech Wifi Router NTPL-XPON1GFEVN v1.0 allows a remote attacker to obtain sensitive information via the lack of encryption during login process</description><pubDate>Mon, 19 Aug 2024 16:54:29 +0000</pubDate></item><item><title>CVE-2024-32928 | The libcurl CURLOPT_SSL_VERIFYPEER option was disabled on a subset of requests made by Nest production devices which enabled a potential man...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-32928</link><description>The libcurl CURLOPT_SSL_VERIFYPEER option was disabled on a subset of requests made by Nest production devices which enabled a potential man-in-the-middle attack on requests to Google cloud services by any host the traffic was routed through.</description><pubDate>Mon, 19 Aug 2024 16:44:16 +0000</pubDate></item><item><title>CVE-2024-43400 | XWiki Platform allows XSS through XClass name in string properties</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43400</link><description>XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. It is possible for a user without Script or Programming rights to craft a URL pointing to a page with arbitrary JavaScript. This requires social engineer to trick a user to follow the URL. This has been patched in XWiki 14.10.21, 15.5.5, 15.10.6 and 16.0.0.</description><pubDate>Mon, 19 Aug 2024 16:44:17 +0000</pubDate></item><item><title>CVE-2024-43401 | In XWiki Platform, payloads stored in content is executed when a user with script/programming right edit them</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43401</link><description>XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. A user without script/programming right can trick a user with elevated rights to edit a content with a malicious payload using a WYSIWYG editor. The user with elevated rights is not warned beforehand that they are going to edit possibly dangerous content. The payload is executed at edit time. This vulnerability has been patched in XWiki 15.10RC1.</description><pubDate>Mon, 19 Aug 2024 16:44:17 +0000</pubDate></item><item><title>CVE-2024-42633 | A Command Injection vulnerability exists in the do_upgrade_post function of the httpd binary in Linksys E1500 v1.0.06.001. As a result, an a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42633</link><description>A Command Injection vulnerability exists in the do_upgrade_post function of the httpd binary in Linksys E1500 v1.0.06.001. As a result, an authenticated attacker can execute OS commands with root privileges.</description><pubDate>Mon, 19 Aug 2024 15:51:35 +0000</pubDate></item><item><title>CVE-2024-6348 | Predictable seed generation after ECU reset</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6348</link><description>Predictable seed generation in the security access mechanism of UDS in the Blind Spot Protection Sensor ECU in Nissan Altima (2022) allows attackers to predict the requested seeds and bypass security controls via repeated ECU resets and seed requests.</description><pubDate>Mon, 19 Aug 2024 15:31:43 +0000</pubDate></item><item><title>CVE-2024-7922 | D-Link DNS-1550-04 myMusic.cgi cgi_write_playlist command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7922</link><description>A vulnerability was found in D-Link DNS-120, DNR-202L, DNS-315L, DNS-320, DNS-320L, DNS-320LW, DNS-321, DNR-322L, DNS-323, DNS-325, DNS-326, DNS-327L, DNR-326, DNS-340L, DNS-343, DNS-345, DNS-726-4, DNS-1100-4, DNS-1200-05 and DNS-1550-04 up to 20240814 and classified as critical. Affected by this issue is the function cgi_audio_search/cgi_create_playlist/cgi_get_album_all_tracks/cgi_get_alltracks_editlist/cgi_get_artist_all_album/cgi_get_genre_all_tracks/cgi_get_tracks_list/cgi_set_airplay_content/cgi_write_playlist of the file /cgi-bin/myMusic.cgi. The manipulation leads to command injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. NOTE: This vulnerability only affects products that are no longer supported by the maintainer. NOTE: Vendor was contacted early and confirmed that the product is end-of-life. It should be retired and replaced.</description><pubDate>Mon, 19 Aug 2024 15:18:45 +0000</pubDate></item><item><title>CVE-2024-43399 | Mobile Security Framework (MobSF) has a Zip Slip Vulnerability in .a Static Library Files</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43399</link><description>Mobile Security Framework (MobSF) is a pen-testing, malware analysis and security assessment framework capable of performing static and dynamic analysis. Before 4.0.7, there is a flaw in the Static Libraries analysis section. Specifically, during the extraction of .a extension files, the measure intended to prevent Zip Slip attacks is improperly implemented. Since the implemented measure can be bypassed, the vulnerability allows an attacker to extract files to any desired location within the server running MobSF. This vulnerability is fixed in 4.0.7.</description><pubDate>Mon, 19 Aug 2024 14:56:56 +0000</pubDate></item><item><title>CVE-2024-43380 | fugit parse and parse_nat stall on lengthy input</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43380</link><description>fugit contains time tools for flor and the floraison group. The fugit "natural" parser, that turns "every wednesday at 5pm" into "0 17 * * 3", accepted any length of input and went on attempting to parse it, not returning promptly, as expected. The parse call could hold the thread with no end in sight. Fugit dependents that do not check (user) input length for plausibility are impacted. A fix was released in fugit 1.11.1.</description><pubDate>Mon, 19 Aug 2024 14:47:01 +0000</pubDate></item><item><title>CVE-2024-43379 | TruffleHog has a Blind SSRF in some Detectors</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43379</link><description>TruffleHog is a secrets scanning tool. Prior to v3.81.9, this vulnerability allows a malicious actor to craft data in a way that, when scanned by specific detectors, could trigger the detector to make an unauthorized request to an endpoint chosen by the attacker. For an exploit to be effective, the target endpoint must be an unauthenticated GET endpoint that produces side effects. The victim must scan the maliciously crafted data and have such an endpoint targeted for the exploit to succeed. The vulnerability has been resolved in TruffleHog v3.81.9 and later versions.</description><pubDate>Mon, 19 Aug 2024 14:36:54 +0000</pubDate></item><item><title>CVE-2024-25582 | Module savepoints could be abused to inject references to malicious code delivered through the same domain. Attackers could perform maliciou...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25582</link><description>Module savepoints could be abused to inject references to malicious code delivered through the same domain. Attackers could perform malicious API requests or extract information from the users account. Exploiting this vulnerability requires temporary access to an account or successful social engineering to make a user follow a prepared link to a malicious account. Please deploy the provided updates and patch releases. The savepoint module path has been restricted to modules that provide the feature, excluding any arbitrary or non-existing modules. No publicly available exploits are known.</description><pubDate>Mon, 19 Aug 2024 07:13:26 +0000</pubDate></item><item><title>CVE-2024-6330 | GEO my WordPress &amp;lt; 4.4.0.2 - Unauthenticated RCE via LFI</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6330</link><description>The GEO my WP WordPress plugin before 4.5.0.2 does not prevent unauthenticated attackers from including arbitrary files in PHP's execution context, which leads to Remote Code Execution.</description><pubDate>Mon, 19 Aug 2024 06:28:50 +0000</pubDate></item><item><title>CVE-2024-6451 | AI Engine &amp;lt; 2.5.1 - Admin+ RCE</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6451</link><description>AI Engine &lt; 2.4.3 is susceptible to remote-code-execution (RCE) via Log Poisoning. The AI Engine WordPress plugin before 2.5.1 fails to validate the file extension of "logs_path", allowing Administrators to change log filetypes from .log to .php.</description><pubDate>Mon, 19 Aug 2024 06:28:50 +0000</pubDate></item><item><title>CVE-2024-6843 | SmartSearch WP &amp;lt;= 2.4.4 - Unauthenticated Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6843</link><description>The Chatbot with ChatGPT WordPress plugin before 2.4.5 does not sanitise and escape user inputs, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks against admins</description><pubDate>Mon, 19 Aug 2024 06:28:50 +0000</pubDate></item><item><title>CVE-2024-44083 | ida64.dll in Hex-Rays IDA Pro through 8.4 crashes when there is a section that has many jumps linked, and the final jump corresponds to the ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44083</link><description>ida64.dll in Hex-Rays IDA Pro through 8.4 crashes when there is a section that has many jumps linked, and the final jump corresponds to the payload from where the actual entry point will be invoked. NOTE: in many use cases, this is an inconvenience but not a security issue.</description><pubDate>Mon, 19 Aug 2024 04:10:01 +0000</pubDate></item><item><title>CVE-2024-44076 | In Microcks before 1.10.0, the POST /api/import and POST /api/export endpoints allow non-administrator access.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44076</link><description>In Microcks before 1.10.0, the POST /api/import and POST /api/export endpoints allow non-administrator access.</description><pubDate>Mon, 19 Aug 2024 03:16:24 +0000</pubDate></item><item><title>CVE-2024-44073 | The Miniscript (aka rust-miniscript) library before 12.2.0 for Rust allows stack consumption because it does not properly track tree depth.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44073</link><description>The Miniscript (aka rust-miniscript) library before 12.2.0 for Rust allows stack consumption because it does not properly track tree depth.</description><pubDate>Mon, 19 Aug 2024 02:41:26 +0000</pubDate></item><item><title>CVE-2024-7921 | Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 GetDataList access control</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7921</link><description>A vulnerability has been found in Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 up to 20240805 and classified as problematic. Affected by this vulnerability is an unknown functionality of the file /report/ParkOutRecord/GetDataList. The manipulation leads to improper access controls. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 02:41:26 +0000</pubDate></item><item><title>CVE-2024-44070 | An issue was discovered in FRRouting (FRR) through 10.1. bgp_attr_encap in bgpd/bgp_attr.c does not check the actual remaining stream length...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44070</link><description>An issue was discovered in FRRouting (FRR) through 10.1. bgp_attr_encap in bgpd/bgp_attr.c does not check the actual remaining stream length before taking the TLV value.</description><pubDate>Mon, 19 Aug 2024 02:41:27 +0000</pubDate></item><item><title>CVE-2024-44069 | Pi-hole before 6 allows unauthenticated admin/api.php?setTempUnit= calls to change the temperature units of the web dashboard. NOTE: the sup...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44069</link><description>Pi-hole before 6 allows unauthenticated admin/api.php?setTempUnit= calls to change the temperature units of the web dashboard. NOTE: the supplier reportedly does "not consider the bug a security issue" but the specific motivation for letting arbitrary persons change the value (Celsius, Fahrenheit, or Kelvin), seen by the device owner, is unclear.</description><pubDate>Mon, 19 Aug 2024 01:59:43 +0000</pubDate></item><item><title>CVE-2024-44067 | The T-Head XuanTie C910 CPU in the TH1520 SoC and the T-Head XuanTie C920 CPU in the SOPHON SG2042 have instructions that allow unprivileged...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44067</link><description>The T-Head XuanTie C910 CPU in the TH1520 SoC and the T-Head XuanTie C920 CPU in the SOPHON SG2042 have instructions that allow unprivileged attackers to write to arbitrary physical memory locations, aka GhostWrite.</description><pubDate>Mon, 19 Aug 2024 01:59:43 +0000</pubDate></item><item><title>CVE-2024-7919 | Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 GetDataList access control</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7919</link><description>A vulnerability, which was classified as critical, has been found in Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 up to 20240805. This issue affects some unknown processing of the file /report/ParkChargeRecord/GetDataList. The manipulation leads to improper access controls. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 00:45:26 +0000</pubDate></item><item><title>CVE-2024-7920 | Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 GetParkInThroughDeivces access control</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7920</link><description>A vulnerability, which was classified as problematic, was found in Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 up to 20240805. Affected is an unknown function of the file /Report/ParkCommon/GetParkInThroughDeivces. The manipulation leads to improper access controls. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 19 Aug 2024 00:45:26 +0000</pubDate></item></channel></rss>