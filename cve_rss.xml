<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Sat, 24 Aug 2024 09:45:07 +0000</lastBuildDate><item><title>CVE-2024-8127 | D-Link DNS-1550-04 HTTP POST Request webfile_mgr.cgi cgi_unzip command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8127</link><description>A vulnerability classified as critical was found in D-Link DNS-120, DNR-202L, DNS-315L, DNS-320, DNS-320L, DNS-320LW, DNS-321, DNR-322L, DNS-323, DNS-325, DNS-326, DNS-327L, DNR-326, DNS-340L, DNS-343, DNS-345, DNS-726-4, DNS-1100-4, DNS-1200-05 and DNS-1550-04 up to 20240814. This vulnerability affects the function cgi_unzip of the file /cgi-bin/webfile_mgr.cgi of the component HTTP POST Request Handler. The manipulation of the argument path leads to command injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. NOTE: This vulnerability only affects products that are no longer supported by the maintainer. NOTE: Vendor was contacted early and confirmed that the product is end-of-life. It should be retired and replaced.</description><pubDate>Sat, 24 Aug 2024 09:45:10 +0000</pubDate></item><item><title>CVE-2024-7351 | Simple Job Board &amp;lt;= 2.12.3 - Authenticated (Editor+) PHP Object Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7351</link><description>The Simple Job Board plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 2.12.3 via deserialization of untrusted input when editing job applications. This makes it possible for authenticated attackers, with Editor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.</description><pubDate>Sat, 24 Aug 2024 07:45:21 +0000</pubDate></item><item><title>CVE-2024-6499 | WordPress Button Plugin MaxButtons &amp;lt;= 9.7.8 - Full Path Disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6499</link><description>The WordPress Button Plugin MaxButtons plugin for WordPress is vulnerable to information exposure in all versions up to, and including, 9.7.8. This makes it possible for unauthenticated attackers to obtain the full path to instances, which they may be able to use in combination with other vulnerabilities or to simplify reconnaissance work. On its own, this information is of very limited use.</description><pubDate>Sat, 24 Aug 2024 03:35:23 +0000</pubDate></item><item><title>CVE-2024-2254 | RT Easy Builder – Advanced addons for Elementor &amp;lt;= 2.2 - Authenticated (Contributor+) Stored Cross-site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2254</link><description>The RT Easy Builder – Advanced addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all versions up to, and including, 2.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 24 Aug 2024 02:50:44 +0000</pubDate></item><item><title>CVE-2024-6631 | ImageRecycle pdf &amp;amp; image compression &amp;lt;= 3.1.14 - Missing Authorization in Several AJAX Actions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6631</link><description>The ImageRecycle pdf &amp; image compression plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on several AJAX actions in all versions up to, and including, 3.1.14. This makes it possible for authenticated attackers, with Subscriber-level access and above, to perform unauthorized actions, such as updating plugin settings.</description><pubDate>Sat, 24 Aug 2024 02:50:45 +0000</pubDate></item><item><title>CVE-2024-8120 | ImageRecycle pdf &amp;amp; image compression &amp;lt;= 3.1.14 - Cross-Site Request in Several AJAX Actions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8120</link><description>The ImageRecycle pdf &amp; image compression plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 3.1.14. This is due to missing or incorrect nonce validation on several functions in the class/class-image-otimizer.php file. This makes it possible for unauthenticated attackers to update plugin settings along with performing other actions via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Sat, 24 Aug 2024 02:50:45 +0000</pubDate></item><item><title>CVE-2023-0926 | Custom Permalinks &amp;lt;= 2.6.0 - Authenticated(Editor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-0926</link><description>The Custom Permalinks plugin for WordPress is vulnerable to Stored Cross-Site Scripting in versions up to, and including, 2.6.0 due to insufficient input sanitization and output escaping on tag names. This allows authenticated users, with editor-level permissions or greater to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page, even when 'unfiltered_html' has been disabled.</description><pubDate>Sat, 24 Aug 2024 02:27:34 +0000</pubDate></item><item><title>CVE-2023-6987 | String Locator &amp;lt;= 2.6.5 - Reflected Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6987</link><description>The String locator plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'sql-column' parameter in all versions up to, and including, 2.6.5 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link. This required WP_DEBUG to be enabled in order to be exploited.</description><pubDate>Sat, 24 Aug 2024 02:27:34 +0000</pubDate></item><item><title>CVE-2024-7568 | Favicon Generator &amp;lt;= 1.5 - Cross-Site Request Forgery to Arbitrary File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7568</link><description>The Favicon Generator plugin for WordPress is vulnerable to Cross-Site Request Forgery in versions up to, and including, 1.5. This is due to missing or incorrect nonce validation on the output_sub_admin_page_0 function. This makes it possible for unauthenticated attackers to delete arbitrary files on the server via a forged request granted they can trick a site administrator into performing an action such as clicking on a link. The plugin author deleted the functionality of the plugin to patch this issue and close the plugin, we recommend seeking an alternative to this plugin.</description><pubDate>Sat, 24 Aug 2024 02:27:34 +0000</pubDate></item><item><title>CVE-2024-38207 | Microsoft Edge (HTML-based) Memory Corruption Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38207</link><description>No english description</description><pubDate>Fri, 23 Aug 2024 23:20:50 +0000</pubDate></item><item><title>CVE-2024-40111 | A persistent (stored) cross-site scripting (XSS) vulnerability has been identified in Automad 2.0.0-alpha.4. This vulnerability enables an a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-40111</link><description>A persistent (stored) cross-site scripting (XSS) vulnerability has been identified in Automad 2.0.0-alpha.4. This vulnerability enables an attacker to inject malicious JavaScript code into the template body. The injected code is stored within the flat file CMS and is executed in the browser of any user visiting the forum.</description><pubDate>Fri, 23 Aug 2024 21:11:12 +0000</pubDate></item><item><title>CVE-2024-37392 | A stored Cross-Site Scripting (XSS) vulnerability has been identified in SMSEagle software version &lt; 6.0. The vulnerability arises because t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37392</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been identified in SMSEagle software version &lt; 6.0. The vulnerability arises because the application did not properly sanitize user input in the SMS messages in the inbox. This could allow an attacker to inject malicious JavaScript code into an SMS message, which gets executed when the SMS is viewed and specially interacted in web-GUI.</description><pubDate>Fri, 23 Aug 2024 21:11:13 +0000</pubDate></item><item><title>CVE-2024-45188 | Mage AI file content request remote arbitrary file leak</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45188</link><description>Mage AI allows remote users with the "Viewer" role to leak arbitrary files from the Mage server due to a path traversal in the "File Content" request</description><pubDate>Fri, 23 Aug 2024 19:21:24 +0000</pubDate></item><item><title>CVE-2024-45189 | Mage AI git content request remote arbitrary file leak</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45189</link><description>Mage AI allows remote users with the "Viewer" role to leak arbitrary files from the Mage server due to a path traversal in the "Git Content" request</description><pubDate>Fri, 23 Aug 2024 19:21:24 +0000</pubDate></item><item><title>CVE-2024-45190 | Mage AI pipeline interaction request remote arbitrary file leak</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45190</link><description>Mage AI allows remote users with the "Viewer" role to leak arbitrary files from the Mage server due to a path traversal in the "Pipeline Interaction" request</description><pubDate>Fri, 23 Aug 2024 19:21:24 +0000</pubDate></item><item><title>CVE-2024-45187 | Mage AI allows deleted users to use the terminal server with admin access, leading to remote code execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45187</link><description>Guest users in the Mage AI framework that remain logged in after their accounts are deleted, are mistakenly given high privileges and specifically given access to remotely execute arbitrary code through the Mage AI terminal server</description><pubDate>Fri, 23 Aug 2024 19:09:36 +0000</pubDate></item><item><title>CVE-2024-42845 | An eval Injection vulnerability in the component invesalius/reader/dicom.py of InVesalius 3.1.99991 through 3.1.99998 allows attackers to ex...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42845</link><description>An eval Injection vulnerability in the component invesalius/reader/dicom.py of InVesalius 3.1.99991 through 3.1.99998 allows attackers to execute arbitrary code via loading a crafted DICOM file.</description><pubDate>Fri, 23 Aug 2024 18:32:45 +0000</pubDate></item><item><title>CVE-2024-42914 | A host header injection vulnerability exists in the forgot password functionality of ArrowCMS version 1.0.0. By sending a specially crafted ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42914</link><description>A host header injection vulnerability exists in the forgot password functionality of ArrowCMS version 1.0.0. By sending a specially crafted host header in the forgot password request, it is possible to send password reset links to users which, once clicked, lead to an attacker-controlled server and thus leak the password reset token. This may allow an attacker to reset other users' passwords.</description><pubDate>Fri, 23 Aug 2024 18:32:46 +0000</pubDate></item><item><title>CVE-2024-7954 | SPIP porte_plume Plugin Arbitrary PHP Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7954</link><description>The porte_plume plugin used by SPIP before 4.30-alpha2, 4.2.13, and 4.1.16 is vulnerable to an arbitrary code execution vulnerability. A remote and unauthenticated attacker can execute arbitrary PHP as the SPIP user by sending a crafted HTTP request.</description><pubDate>Fri, 23 Aug 2024 17:51:59 +0000</pubDate></item><item><title>CVE-2024-42852 | Cross Site Scripting vulnerability in AcuToWeb server v.10.5.0.7577C8b allows a remote attacker to execute arbitrary code via the index.php ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42852</link><description>Cross Site Scripting vulnerability in AcuToWeb server v.10.5.0.7577C8b allows a remote attacker to execute arbitrary code via the index.php component.</description><pubDate>Fri, 23 Aug 2024 17:19:29 +0000</pubDate></item><item><title>CVE-2024-42992 | Python Pip Pandas v2.2.2 was discovered to contain an arbitrary file read vulnerability.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42992</link><description>Python Pip Pandas v2.2.2 was discovered to contain an arbitrary file read vulnerability.</description><pubDate>Fri, 23 Aug 2024 17:19:29 +0000</pubDate></item><item><title>CVE-2024-42918 | itsourcecode Online Accreditation Management System contains a Cross Site Scripting vulnerability, which allows an attacker to execute arbit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42918</link><description>itsourcecode Online Accreditation Management System contains a Cross Site Scripting vulnerability, which allows an attacker to execute arbitrary code via a crafted payload to the SCHOOLNAME, EMAILADDRES, CONTACTNO, COMPANYNAME and COMPANYCONTACTNO parameters in controller.php.</description><pubDate>Fri, 23 Aug 2024 17:19:30 +0000</pubDate></item><item><title>CVE-2024-7427 | Potential Cross-Site Scripting  vulnerability affect OpenText™ Network Node Manager i (NNMi).</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7427</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in OpenText™ Network Node Manager i (NNMi) could allow Cross-Site Scripting (XSS).This issue affects Network Node Manager i (NNMi): 2022.11, 2023.05, 23.4, 24.2.</description><pubDate>Fri, 23 Aug 2024 17:19:30 +0000</pubDate></item><item><title>CVE-2024-7428 | Potential Open Redirect issues affect OpenText™ Network Node Manager i (NNMi).</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7428</link><description>URL Redirection to Untrusted Site ('Open Redirect') vulnerability in OpenText™ Network Node Manager i (NNMi) allows URL Redirector Abuse.This issue affects Network Node Manager i (NNMi): 2022.11, 2023.05, 23.4, 24.2.</description><pubDate>Fri, 23 Aug 2024 17:19:30 +0000</pubDate></item><item><title>CVE-2024-41841 | AMS XSS - /libs/cq/personalization/components/profileloader/content/load.js</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41841</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a reflected Cross-Site Scripting (XSS) vulnerability. If an attacker is able to convince a victim to visit a URL referencing a vulnerable page, malicious JavaScript content may be executed within the context of the victim's browser.</description><pubDate>Fri, 23 Aug 2024 16:59:27 +0000</pubDate></item><item><title>CVE-2024-41842 | Cross-site scripting vulnerability | AEM</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41842</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim’s browser when they browse to the page containing the vulnerable field.</description><pubDate>Fri, 23 Aug 2024 16:59:27 +0000</pubDate></item><item><title>CVE-2024-41843 | Stored XSS in `libs/granite/ui/components/coral/foundation/clientlibs/foundation/js/layout/actionfield.js`</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41843</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim’s browser when they browse to the page containing the vulnerable field.</description><pubDate>Fri, 23 Aug 2024 16:59:27 +0000</pubDate></item><item><title>CVE-2024-41844 | Stored XSS in `libs/dam/gui/coral/components/admin/clientlibs/actions/js/download.js`</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41844</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim’s browser when they browse to the page containing the vulnerable field.</description><pubDate>Fri, 23 Aug 2024 16:59:28 +0000</pubDate></item><item><title>CVE-2024-41845 | Stored XSS in `libs/dam/gui/components/admin/collections/clientlibs/admin/js/collectionoperationsactivator.js`</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41845</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim’s browser when they browse to the page containing the vulnerable field.</description><pubDate>Fri, 23 Aug 2024 16:59:28 +0000</pubDate></item><item><title>CVE-2024-41846 | AMS XSS - /libs/dam/gui/coral/components/admin/drm/licensefield/licensefield.jsp</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41846</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim’s browser when they browse to the page containing the vulnerable field.</description><pubDate>Fri, 23 Aug 2024 16:59:28 +0000</pubDate></item><item><title>CVE-2024-41847 | Cloud Services - /libs/cq/contexthub/components/traits/generic-comparison/generic-comparison.jsp (retest 2132455 - not fixed)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41847</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a reflected Cross-Site Scripting (XSS) vulnerability. If an attacker is able to convince a victim to visit a URL referencing a vulnerable page, malicious JavaScript content may be executed within the context of the victim's browser.</description><pubDate>Fri, 23 Aug 2024 16:59:29 +0000</pubDate></item><item><title>CVE-2024-41848 | AMS XSS - /libs/dam/gui/coral/components/admin/reports/viewreport/clientlibs/viewreport/js/viewreport.js (JS)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41848</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a reflected Cross-Site Scripting (XSS) vulnerability. If an attacker is able to convince a victim to visit a URL referencing a vulnerable page, malicious JavaScript content may be executed within the context of the victim's browser.</description><pubDate>Fri, 23 Aug 2024 16:59:29 +0000</pubDate></item><item><title>CVE-2024-41849 | HTML Injection on `https://author-bugbounty-65-prod.adobecqms.net/`</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41849</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by an Improper Input Validation vulnerability that could lead to a security feature bypass. An low-privileged attacker could leverage this vulnerability to slightly affect the integrity of the page. Exploitation of this issue requires user interaction and scope is changed.</description><pubDate>Fri, 23 Aug 2024 16:59:30 +0000</pubDate></item><item><title>CVE-2024-41875 | AMS XSS - /libs/dam/gui/components/admin/collections/clientlibs/admin/js/collectionoperationsactivator.js</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41875</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim’s browser when they browse to the page containing the vulnerable field.</description><pubDate>Fri, 23 Aug 2024 16:59:30 +0000</pubDate></item><item><title>CVE-2024-41876 | AMS XSS -  /libs/clientlibs/granite/richtext/externals/tests/resources/test/index.html (retest of 1969052 - not fixed)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41876</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a reflected Cross-Site Scripting (XSS) vulnerability. If an attacker is able to convince a victim to visit a URL referencing a vulnerable page, malicious JavaScript content may be executed within the context of the victim's browser.</description><pubDate>Fri, 23 Aug 2024 16:59:30 +0000</pubDate></item><item><title>CVE-2024-41877 | AMS XSS - /libs/dam/gui/coral/components/admin/clientlibs/actions/js/download.js</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41877</link><description>Adobe Experience Manager versions 6.5.19 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim’s browser when they browse to the page containing the vulnerable field.</description><pubDate>Fri, 23 Aug 2024 16:59:31 +0000</pubDate></item><item><title>CVE-2024-41878 | AMS XSS - /libs/granite/ui/components/foundation/clientlibs/foundation/js/admin/propertiesactivator.js</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41878</link><description>Adobe Experience Manager versions 6.5.19 and earlier are affected by a DOM-based Cross-Site Scripting (XSS) vulnerability. This vulnerability could allow an attacker to inject and execute arbitrary JavaScript code within the context of the user's browser session. Exploitation of this issue requires user interaction, such as convincing a victim to click on a malicious link.</description><pubDate>Fri, 23 Aug 2024 16:59:31 +0000</pubDate></item><item><title>CVE-2024-42531 | Ezviz Internet PT Camera CS-CV246 D15655150 allows an unauthenticated host to access its live video stream by crafting a set of RTSP packets...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42531</link><description>Ezviz Internet PT Camera CS-CV246 D15655150 allows an unauthenticated host to access its live video stream by crafting a set of RTSP packets with a specific set of URLs that can be used to redirect the camera feed.</description><pubDate>Fri, 23 Aug 2024 16:59:31 +0000</pubDate></item><item><title>CVE-2024-44387 | Tenda FH1206 V1.2.0.8(8155)_EN contains a Buffer Overflow vulnerability via the functino formWrlExtraGet.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44387</link><description>Tenda FH1206 V1.2.0.8(8155)_EN contains a Buffer Overflow vulnerability via the functino formWrlExtraGet.</description><pubDate>Fri, 23 Aug 2024 16:39:51 +0000</pubDate></item><item><title>CVE-2024-32501 | A SQL Injection vulnerability exists in the updateServiceHost functionality in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13,...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-32501</link><description>A SQL Injection vulnerability exists in the updateServiceHost functionality in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13, 23.04.x before 23.04.19, and 22.10.x before 22.10.23.</description><pubDate>Fri, 23 Aug 2024 16:21:57 +0000</pubDate></item><item><title>CVE-2024-33852 | A SQL Injection vulnerability exists in the Downtime component in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13, 23.04.x befo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33852</link><description>A SQL Injection vulnerability exists in the Downtime component in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13, 23.04.x before 23.04.19, and 22.10.x before 22.10.23.</description><pubDate>Fri, 23 Aug 2024 16:21:58 +0000</pubDate></item><item><title>CVE-2024-33853 | A SQL Injection vulnerability exists in the Timeperiod component in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13, 23.04.x be...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33853</link><description>A SQL Injection vulnerability exists in the Timeperiod component in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13, 23.04.x before 23.04.19, and 22.10.x before 22.10.23.</description><pubDate>Fri, 23 Aug 2024 16:21:58 +0000</pubDate></item><item><title>CVE-2024-33854 | A SQL Injection vulnerability exists in the Graph Template component in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13, 23.04....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-33854</link><description>A SQL Injection vulnerability exists in the Graph Template component in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13, 23.04.x before 23.04.19, and 22.10.x before 22.10.23.</description><pubDate>Fri, 23 Aug 2024 16:21:59 +0000</pubDate></item><item><title>CVE-2024-39841 | A SQL Injection vulnerability exists in the service configuration functionality in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39841</link><description>A SQL Injection vulnerability exists in the service configuration functionality in Centreon Web 24.04.x before 24.04.3, 23.10.x before 23.10.13, 23.04.x before 23.04.19, and 22.10.x before 22.10.23.</description><pubDate>Fri, 23 Aug 2024 16:21:59 +0000</pubDate></item><item><title>CVE-2024-43794 | OpenSearch Dashboards Security Plugin improper validation of nextUrl can lead to external redirect</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43794</link><description>OpenSearch Dashboards Security Plugin adds a configuration management UI for the OpenSearch Security features to OpenSearch Dashboards. Improper validation of the nextUrl parameter can lead to external redirect on login to OpenSearch-Dashboards for specially crafted parameters. A patch is available in 1.3.19 and 2.16.0 for this issue.</description><pubDate>Fri, 23 Aug 2024 16:21:59 +0000</pubDate></item><item><title>CVE-2024-44390 | Tenda FH1206 V1.2.0.8(8155)_EN contains a Buffer Overflow vulnerability via the function formWrlsafeset.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44390</link><description>Tenda FH1206 V1.2.0.8(8155)_EN contains a Buffer Overflow vulnerability via the function formWrlsafeset.</description><pubDate>Fri, 23 Aug 2024 16:22:00 +0000</pubDate></item><item><title>CVE-2024-44386 | Tenda FH1206 V1.2.0.8(8155)_EN contains a Buffer Overflow vulnerability via the function fromSetIpBind.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44386</link><description>Tenda FH1206 V1.2.0.8(8155)_EN contains a Buffer Overflow vulnerability via the function fromSetIpBind.</description><pubDate>Fri, 23 Aug 2024 16:22:01 +0000</pubDate></item><item><title>CVE-2024-44381 | D-Link DI_8004W 16.07.26A1 contains a command execution vulnerability in jhttpd msp_info_htm function.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44381</link><description>D-Link DI_8004W 16.07.26A1 contains a command execution vulnerability in jhttpd msp_info_htm function.</description><pubDate>Fri, 23 Aug 2024 15:57:03 +0000</pubDate></item><item><title>CVE-2024-44382 | D-Link DI_8004W 16.07.26A1 contains a command execution vulnerability in the jhttpd upgrade_filter_asp function.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-44382</link><description>D-Link DI_8004W 16.07.26A1 contains a command execution vulnerability in the jhttpd upgrade_filter_asp function.</description><pubDate>Fri, 23 Aug 2024 15:57:03 +0000</pubDate></item><item><title>CVE-2024-42364 | homepage DNS rebinding vulnerability (GHSL-2024-096)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42364</link><description>Homepage is a highly customizable homepage with Docker and service API integrations. The default setup of homepage 0.9.1 is vulnerable to DNS rebinding. Homepage is setup without certificate and authentication by default, leaving it to vulnerable to DNS rebinding. In this attack, an attacker will ask a user to visit his/her website. The attacker website will then change the DNS records of their domain from their IP address to the internal IP address of the homepage instance. To tell which IP addresses are valid, we can rebind a subdomain to each IP address we want to check, and see if there is a response. Once potential candidates have been found, the attacker can launch the attack by reading the response of the webserver after the IP address has changed. When the attacker domain is fetched, the response will be from the homepage instance, not the attacker website, because the IP address has been changed. Due to a lack of authentication, a user’s private information such as API keys (fixed after first report) and other private information can then be extracted by the attacker website.</description><pubDate>Fri, 23 Aug 2024 15:57:04 +0000</pubDate></item><item><title>CVE-2024-42523 | publiccms V4.0.202302.e and before is vulnerable to Any File Upload via publiccms/admin/cmsTemplate/saveMetaData</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42523</link><description>publiccms V4.0.202302.e and before is vulnerable to Any File Upload via publiccms/admin/cmsTemplate/saveMetaData</description><pubDate>Fri, 23 Aug 2024 15:47:02 +0000</pubDate></item><item><title>CVE-2024-42756 | An issue in Netgear DGN1000WW v.1.1.00.45 allows a remote attacker to execute arbitrary code via the Diagnostics page</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42756</link><description>An issue in Netgear DGN1000WW v.1.1.00.45 allows a remote attacker to execute arbitrary code via the Diagnostics page</description><pubDate>Fri, 23 Aug 2024 15:47:02 +0000</pubDate></item><item><title>CVE-2024-43031 | autMan v2.9.6 was discovered to contain an access control issue.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43031</link><description>autMan v2.9.6 was discovered to contain an access control issue.</description><pubDate>Fri, 23 Aug 2024 15:37:22 +0000</pubDate></item><item><title>CVE-2024-43032 | autMan v2.9.6 allows attackers to bypass authentication via a crafted web request.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43032</link><description>autMan v2.9.6 allows attackers to bypass authentication via a crafted web request.</description><pubDate>Fri, 23 Aug 2024 15:37:23 +0000</pubDate></item><item><title>CVE-2024-42636 | DedeCMS V5.7.115 has a command execution vulnerability via file_manage_view.php?fmdo=newfile&amp;activepath.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42636</link><description>DedeCMS V5.7.115 has a command execution vulnerability via file_manage_view.php?fmdo=newfile&amp;amp;activepath.</description><pubDate>Fri, 23 Aug 2024 15:22:33 +0000</pubDate></item><item><title>CVE-2024-42915 | A host header injection vulnerability in Staff Appraisal System v1.0 allows attackers to obtain the password reset token via user interactio...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42915</link><description>A host header injection vulnerability in Staff Appraisal System v1.0 allows attackers to obtain the password reset token via user interaction with a crafted password reset link. This will allow attackers to arbitrarily reset other users' passwords and compromise their accounts.</description><pubDate>Fri, 23 Aug 2024 15:22:34 +0000</pubDate></item><item><title>CVE-2024-43791 | RequestStore has Incorrect Default Permissions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43791</link><description>RequestStore provides per-request global storage for Rack. The files published as part of request_store 1.3.2 have 0666 permissions, meaning that they are world-writable, which allows local users to execute arbitrary code. This version was published in 2017, and most production environments do not allow access for local users, so the chances of this being exploited are very low, given that the vast majority of users will have upgraded, and those that have not, if any, are not likely to be exposed.</description><pubDate>Fri, 23 Aug 2024 14:48:06 +0000</pubDate></item><item><title>CVE-2024-42766 | Kashipara Bus Ticket Reservation System v1.0 0 is vulnerable to Incorrect Access Control via /deleteTicket.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42766</link><description>Kashipara Bus Ticket Reservation System v1.0 0 is vulnerable to Incorrect Access Control via /deleteTicket.php.</description><pubDate>Fri, 23 Aug 2024 14:38:01 +0000</pubDate></item><item><title>CVE-2024-43782 | openedx-translations&amp;#x27;s Atlas translations for Open edX missing validation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43782</link><description>This openedx-translations repository contains translation files from Open edX repositories to be kept in sync with Transifex. Before moving to pulling translations from the openedx-translations repository via openedx-atlas, translations in the edx-platform repository were validated using edx-i18n-tools. This validation included protection against malformed translations and translations-based script injections. Prior to this patch, the validation implemented in the openedx-translations repository did not include the same protections. The maintainer inspected the translations in the edx-platform directory of both the main and open-release/redwood.master branches of the openedx-translations repository and found no evidence of exploited translation strings.</description><pubDate>Fri, 23 Aug 2024 14:38:02 +0000</pubDate></item><item><title>CVE-2024-8112 | thinkgem JeeSite Cookie login cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8112</link><description>A vulnerability was found in thinkgem JeeSite 5.3. It has been rated as problematic. This issue affects some unknown processing of the file /js/a/login of the component Cookie Handler. The manipulation of the argument skinName leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 23 Aug 2024 14:38:02 +0000</pubDate></item><item><title>CVE-2024-37311 | Collabora Online&amp;#x27;s remote host TLS certificates are not fully verified</title><link>https://www.cve.org/CVERecord?id=CVE-2024-37311</link><description>Collabora Online is a collaborative online office suite based on LibreOffice. In affected versions of Collabora Online, https connections from coolwsd to other hosts may incompletely verify the remote host's certificate's against the full chain of trust. This vulnerability is fixed in Collabora Online 24.04.4.3, 23.05.14.1, and 22.05.23.1.</description><pubDate>Fri, 23 Aug 2024 14:38:03 +0000</pubDate></item><item><title>CVE-2024-42764 | Kashipara Bus Ticket Reservation System v1.0 is vulnerable to Cross Site Request Forgery (CSRF) via /deleteTicket.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42764</link><description>Kashipara Bus Ticket Reservation System v1.0 is vulnerable to Cross Site Request Forgery (CSRF) via /deleteTicket.php.</description><pubDate>Fri, 23 Aug 2024 14:38:03 +0000</pubDate></item><item><title>CVE-2024-8113 | Stored XSS in Placeholder Samples in Mail Preview</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8113</link><description>Stored XSS in organizer and event settings of pretix up to 2024.7.0 allows malicious event organizers to inject HTML tags into e-mail previews on settings page. The default Content Security Policy of pretix prevents execution of attacker-provided scripts, making exploitation unlikely. However, combined with a CSP bypass (which is not currently known) the vulnerability could be used to impersonate other organizers or staff users.</description><pubDate>Fri, 23 Aug 2024 14:38:04 +0000</pubDate></item><item><title>CVE-2024-38869 | Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38869</link><description>An Stored Cross-site Scripting vulnerability affects Zohocorp ManageEngine ServiceDesk Plus, ServiceDesk Plus MSP and SupportCenter Plus.This issue affects ServiceDesk Plus versions: through 14810; ServiceDesk Plus MSP: through 14800; SupportCenter Plus: through 14800.</description><pubDate>Fri, 23 Aug 2024 14:24:15 +0000</pubDate></item><item><title>CVE-2024-41150 | Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-41150</link><description>An Stored Cross-site Scripting vulnerability in request module affects Zohocorp ManageEngine ServiceDesk Plus, ServiceDesk Plus MSP and SupportCenter Plus.This issue affects ServiceDesk Plus versions: through 14810; ServiceDesk Plus MSP: through 14800; SupportCenter Plus: through 14800.</description><pubDate>Fri, 23 Aug 2024 14:24:15 +0000</pubDate></item><item><title>CVE-2024-42040 | Buffer Overflow vulnerability in the net/bootp.c in DENEX U-Boot from its initial commit in 2002 (3861aa5) up to today on any platform allow...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42040</link><description>Buffer Overflow vulnerability in the net/bootp.c in DENEX U-Boot from its initial commit in 2002 (3861aa5) up to today on any platform allows an attacker on the local network to leak memory from four up to 32 bytes of memory stored behind the packet to the network depending on the later use of DHCP-provided parameters via crafted DHCP responses.</description><pubDate>Fri, 23 Aug 2024 14:24:16 +0000</pubDate></item><item><title>CVE-2024-42765 | A SQL injection vulnerability in "/login.php" of the Kashipara Bus Ticket Reservation System v1.0 allows remote attackers to execute arbitra...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42765</link><description>A SQL injection vulnerability in "/login.php" of the Kashipara Bus Ticket Reservation System v1.0 allows remote attackers to execute arbitrary SQL commands and bypass Login via the "email" or "password" Login page parameters.</description><pubDate>Fri, 23 Aug 2024 14:24:16 +0000</pubDate></item><item><title>CVE-2024-5556 | SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5556</link><description>Zohocorp ManageEngine ADAudit Plus versions below 8000 are vulnerable to the authenticated SQL injection in reports module.</description><pubDate>Fri, 23 Aug 2024 14:01:01 +0000</pubDate></item><item><title>CVE-2024-5586 | SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5586</link><description>Zohocorp ManageEngine ADAudit Plus versions below 8121 are vulnerable to the authenticated SQL injection in extranet lockouts report option.</description><pubDate>Fri, 23 Aug 2024 14:01:02 +0000</pubDate></item><item><title>CVE-2024-5490 | SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5490</link><description>Zohocorp ManageEngine ADAudit Plus versions below 8000 are vulnerable to the authenticated SQL injection in aggregate reports option.</description><pubDate>Fri, 23 Aug 2024 13:51:11 +0000</pubDate></item><item><title>CVE-2024-36514 | SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36514</link><description>Zohocorp ManageEngine ADAudit Plus versions below 8000 are vulnerable to the authenticated SQL injection in file summary option.</description><pubDate>Fri, 23 Aug 2024 13:41:25 +0000</pubDate></item><item><title>CVE-2024-36515 | SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36515</link><description>Zohocorp ManageEngine ADAudit Plus versions below 8000 are vulnerable to the authenticated SQL injection in dashboard.
Note: This vulnerability is different from another vulnerability (CVE-2024-36516), both of which have affected ADAudit Plus' dashboard.</description><pubDate>Fri, 23 Aug 2024 13:41:25 +0000</pubDate></item><item><title>CVE-2024-36516 | SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36516</link><description>Zohocorp ManageEngine ADAudit Plus versions below 8000 are vulnerable to the authenticated SQL injection in dashboard.
Note: This vulnerability is different from another vulnerability (CVE-2024-36515), both of which have affected ADAudit Plus' dashboard.</description><pubDate>Fri, 23 Aug 2024 13:41:26 +0000</pubDate></item><item><title>CVE-2024-36517 | SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36517</link><description>Zohocorp ManageEngine ADAudit Plus versions below 8000 are vulnerable to the authenticated SQL injection in alerts module.</description><pubDate>Fri, 23 Aug 2024 13:41:26 +0000</pubDate></item><item><title>CVE-2024-5467 | SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5467</link><description>Zohocorp ManageEngine ADAudit Plus versions below 8121 are vulnerable to the authenticated SQL injection in account lockout report.</description><pubDate>Fri, 23 Aug 2024 13:41:28 +0000</pubDate></item><item><title>CVE-2024-5466 | Remote Code Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5466</link><description>Zohocorp ManageEngine OpManager and Remote Monitoring and Management versions 128329 and below are vulnerable to the authenticated remote code execution in the deploy agent option.</description><pubDate>Fri, 23 Aug 2024 13:31:31 +0000</pubDate></item><item><title>CVE-2024-43883 | usb: vhci-hcd: Do not drop references before new references are gained</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43883</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: vhci-hcd: Do not drop references before new references are gained

At a few places the driver carries stale pointers
to references that can still be used. Make sure that does not happen.
This strictly speaking closes ZDI-CAN-22273, though there may be
similar races in the driver.</description><pubDate>Fri, 23 Aug 2024 13:21:01 +0000</pubDate></item><item><title>CVE-2024-7986 | Rockwell Automation ThinManager® ThinServer™ Information Disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7986</link><description>A vulnerability exists in the Rockwell Automation ThinManager® ThinServer that allows a threat actor to disclose sensitive information. A threat actor can exploit this vulnerability by abusing the ThinServer™ service to read arbitrary files by creating a junction that points to the target directory.</description><pubDate>Fri, 23 Aug 2024 11:56:41 +0000</pubDate></item><item><title>CVE-2024-38807 | CVE-2024-38807: Signature Forgery Vulnerability in Spring Boot&amp;#x27;s Loader</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38807</link><description>Applications that use spring-boot-loader or spring-boot-loader-classic and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</description><pubDate>Fri, 23 Aug 2024 08:37:37 +0000</pubDate></item><item><title>CVE-2024-5502 | Piotnet Addons For Elementor &amp;lt;= 2.4.30 - Authenticated (Contributor+) Stored Cross-Site Scripting via Multiple Widgets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5502</link><description>The Piotnet Addons For Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Image Accordion, Dual Heading, and Vertical Timeline widgets in all versions up to, and including, 2.4.30 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 23 Aug 2024 08:37:38 +0000</pubDate></item><item><title>CVE-2024-43105 | Excessive Resource Consumption via `/export`</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43105</link><description>Mattermost Plugin Channel Export versions &lt;=1.0.0 fail to restrict concurrent runs of the /export command which allows a user to consume excessive resource by running the /export command multiple times at once.</description><pubDate>Fri, 23 Aug 2024 07:37:21 +0000</pubDate></item><item><title>CVE-2024-40766 | An improper access control vulnerability has been identified in the SonicWall SonicOS management access, potentially leading to unauthorized...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-40766</link><description>An improper access control vulnerability has been identified in the SonicWall SonicOS management access, potentially leading to unauthorized resource access and in specific conditions, causing the firewall to crash. This issue affects SonicWall Firewall Gen 5 and Gen 6 devices, as well as Gen 7 devices running SonicOS 7.0.1-5035 and older versions.</description><pubDate>Fri, 23 Aug 2024 06:30:06 +0000</pubDate></item><item><title>CVE-2024-3282 | WP Table Builder &amp;lt;= 1.5.0 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3282</link><description>The WP Table Builder  WordPress plugin through 1.5.0 does not sanitise and escape some of its Table data, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Fri, 23 Aug 2024 06:30:07 +0000</pubDate></item><item><title>CVE-2024-6715 | Ditty 3.1.39-3.1.45 - Author+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6715</link><description>The Ditty  WordPress plugin before 3.1.46 re-introduced a previously fixed security issue (https://wpscan.com/vulnerability/80a9eb3a-2cb1-4844-9004-ba2554b2d46c/) in v3.1.39</description><pubDate>Fri, 23 Aug 2024 06:30:07 +0000</pubDate></item><item><title>CVE-2024-7258 | WooCommerce Google Feed Manager &amp;lt;= 2.8.0 - Missing Authorization to Authenticated (Contributor+) Arbitrary File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7258</link><description>The WooCommerce Google Feed Manager plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the 'wppfm_removeFeedFile' function in all versions up to, and including, 2.8.0. This makes it possible for authenticated attackers, with Contributor-level access and above, to delete arbitrary files on the server, which can easily lead to remote code execution when the right file is deleted (such as wp-config.php).</description><pubDate>Fri, 23 Aug 2024 04:42:42 +0000</pubDate></item><item><title>CVE-2024-7559 | File Manager Pro &amp;lt;= 8.3.7 - Authenticated (Subscriber+) Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7559</link><description>The File Manager Pro plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation and capability checks in the mk_file_folder_manager AJAX action in all versions up to, and including, 8.3.7. This makes it possible for authenticated attackers, with Subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Fri, 23 Aug 2024 02:46:16 +0000</pubDate></item><item><title>CVE-2024-43477 | Entra ID Elevation of Privilege Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43477</link><description>No english description</description><pubDate>Fri, 23 Aug 2024 02:14:03 +0000</pubDate></item><item><title>CVE-2024-8089 | SourceCodester E-Commerce System controller.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8089</link><description>A vulnerability was found in SourceCodester E-Commerce System 1.0. It has been classified as critical. Affected is an unknown function of the file /ecommerce/admin/products/controller.php. The manipulation of the argument photo leads to unrestricted upload. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 22 Aug 2024 23:46:27 +0000</pubDate></item><item><title>CVE-2024-38208 | Microsoft Edge for Android Spoofing Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38208</link><description>No english description</description><pubDate>Thu, 22 Aug 2024 23:25:24 +0000</pubDate></item><item><title>CVE-2024-38209 | Microsoft Edge (Chromium-based) Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38209</link><description>No english description</description><pubDate>Thu, 22 Aug 2024 23:25:25 +0000</pubDate></item><item><title>CVE-2024-38210 | Microsoft Edge (Chromium-based) Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38210</link><description>No english description</description><pubDate>Thu, 22 Aug 2024 23:25:25 +0000</pubDate></item><item><title>CVE-2024-8087 | SourceCodester E-Commerce System popup_Item.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8087</link><description>A vulnerability was found in SourceCodester E-Commerce System 1.0 and classified as critical. This issue affects some unknown processing of the file /ecommerce/popup_Item.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 22 Aug 2024 23:25:26 +0000</pubDate></item><item><title>CVE-2024-8086 | SourceCodester E-Commerce System Admin Login login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8086</link><description>A vulnerability has been found in SourceCodester E-Commerce System 1.0 and classified as critical. This vulnerability affects unknown code of the file /ecommerce/admin/login.php of the component Admin Login. The manipulation of the argument user_email leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 22 Aug 2024 22:42:35 +0000</pubDate></item><item><title>CVE-2024-8083 | SourceCodester Online Computer and Laptop Store Master.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8083</link><description>A vulnerability, which was classified as critical, has been found in SourceCodester Online Computer and Laptop Store 1.0. Affected by this issue is some unknown functionality of the file /php-ocls/classes/Master.php?f=pay_order. The manipulation of the argument id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 22 Aug 2024 22:08:34 +0000</pubDate></item><item><title>CVE-2024-8084 | SourceCodester Online Computer and Laptop Store Setting SystemSettings.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8084</link><description>A vulnerability, which was classified as problematic, was found in SourceCodester Online Computer and Laptop Store 1.0. This affects an unknown part of the file /php-ocls/classes/SystemSettings.php?f=update_settings of the component Setting Handler. The manipulation of the argument System Name leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 22 Aug 2024 22:08:35 +0000</pubDate></item><item><title>CVE-2024-43790 | heap-buffer-overflow in do_search() in Vim &amp;lt; 9.1.0689</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43790</link><description>Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.</description><pubDate>Thu, 22 Aug 2024 21:42:01 +0000</pubDate></item><item><title>CVE-2024-8081 | itsourcecode Payroll Management System login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8081</link><description>A vulnerability classified as critical was found in itsourcecode Payroll Management System 1.0. Affected by this vulnerability is an unknown functionality of the file login.php. The manipulation of the argument username leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 22 Aug 2024 21:42:02 +0000</pubDate></item><item><title>CVE-2023-7260 | A path traversal vulnerability has been discovered in OpenText™ CX-E Voice.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7260</link><description>Path Traversal vulnerability discovered in OpenText™ CX-E Voice, 

affecting all version through 22.4. The vulnerability could allow arbitrarily access files on the system.</description><pubDate>Thu, 22 Aug 2024 21:19:27 +0000</pubDate></item><item><title>CVE-2024-8079 | TOTOLINK AC1200 T8 exportOvpn buffer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8079</link><description>A vulnerability was found in TOTOLINK AC1200 T8 4.1.5cu.862_B20230228. It has been rated as critical. This issue affects the function exportOvpn. The manipulation leads to buffer overflow. The attack may be initiated remotely. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 22 Aug 2024 21:19:28 +0000</pubDate></item><item><title>CVE-2024-8080 | SourceCodester Online Health Care System search.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8080</link><description>A vulnerability classified as critical has been found in SourceCodester Online Health Care System 1.0. Affected is an unknown function of the file search.php. The manipulation of the argument f_name with the input 1%' or 1=1 ) UNION SELECT 1,2,3,4,5,database(),7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23# as part of string leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 22 Aug 2024 21:19:28 +0000</pubDate></item><item><title>CVE-2024-42761 | A Stored Cross Site Scripting (XSS) vulnerability was found in "/admin_schedule.php" in Kashipara Bus Ticket Reservation System v1.0, which ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42761</link><description>A Stored Cross Site Scripting (XSS) vulnerability was found in "/admin_schedule.php" in Kashipara Bus Ticket Reservation System v1.0, which allows remote attackers to execute arbitrary code via scheduleDurationPHP parameter.</description><pubDate>Thu, 22 Aug 2024 20:48:12 +0000</pubDate></item><item><title>CVE-2024-42762 | A Stored Cross Site Scripting (XSS) vulnerability was found in "/history.php" in Kashipara Bus Ticket Reservation System v1.0, which allows ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42762</link><description>A Stored Cross Site Scripting (XSS) vulnerability was found in "/history.php" in Kashipara Bus Ticket Reservation System v1.0, which allows remote attackers to execute arbitrary code via the Name, Phone, and Email parameter fields.</description><pubDate>Thu, 22 Aug 2024 20:48:12 +0000</pubDate></item><item><title>CVE-2024-42763 | A Reflected Cross Site Scripting (XSS) vulnerability was found in the "/schedule.php" page of the Kashipara Bus Ticket Reservation System v1...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42763</link><description>A Reflected Cross Site Scripting (XSS) vulnerability was found in the "/schedule.php" page of the Kashipara Bus Ticket Reservation System v1.0, which allows remote attackers to execute arbitrary code via the "bookingdate" parameter.</description><pubDate>Thu, 22 Aug 2024 20:37:59 +0000</pubDate></item><item><title>CVE-2024-8078 | TOTOLINK AC1200 T8 setTracerouteCfg buffer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8078</link><description>A vulnerability was found in TOTOLINK AC1200 T8 4.1.5cu.862_B20230228. It has been declared as critical. This vulnerability affects the function setTracerouteCfg. The manipulation leads to buffer overflow. The attack can be initiated remotely. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 22 Aug 2024 20:37:59 +0000</pubDate></item><item><title>CVE-2024-8076 | TOTOLINK AC1200 T8 setDiagnosisCfg buffer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8076</link><description>A vulnerability was found in TOTOLINK AC1200 T8 4.1.5cu.862_B20230228 and classified as critical. Affected by this issue is the function setDiagnosisCfg. The manipulation leads to buffer overflow. The attack may be launched remotely. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 22 Aug 2024 20:09:59 +0000</pubDate></item><item><title>CVE-2024-8077 | TOTOLINK AC1200 T8 setTracerouteCfg os command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8077</link><description>A vulnerability was found in TOTOLINK AC1200 T8 4.1.5cu.862_B20230228. It has been classified as critical. This affects the function setTracerouteCfg. The manipulation leads to os command injection. It is possible to initiate the attack remotely. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 22 Aug 2024 20:09:59 +0000</pubDate></item><item><title>CVE-2024-42418 | Avtec Outpost Use of Hard-coded Cryptographic Key</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42418</link><description>Avtec Outpost uses a default cryptographic key that can be used to decrypt sensitive information.</description><pubDate>Thu, 22 Aug 2024 20:10:00 +0000</pubDate></item><item><title>CVE-2024-45201 | An issue was discovered in llama_index before 0.10.38. download/integration.py includes an exec call for import {cls_name}.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45201</link><description>An issue was discovered in llama_index before 0.10.38. download/integration.py includes an exec call for import {cls_name}.</description><pubDate>Thu, 22 Aug 2024 20:10:00 +0000</pubDate></item><item><title>CVE-2024-39776 | Avtec Outpost Storage of File with Sensitive Data Under Web Root</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39776</link><description>Avtec Outpost stores sensitive information in an insecure location without proper access controls in place.</description><pubDate>Thu, 22 Aug 2024 19:52:29 +0000</pubDate></item><item><title>CVE-2024-8075 | TOTOLINK AC1200 T8 setDiagnosisCfg os command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8075</link><description>A vulnerability has been found in TOTOLINK AC1200 T8 4.1.5cu.862_B20230228 and classified as critical. Affected by this vulnerability is the function setDiagnosisCfg. The manipulation leads to os command injection. The attack can be launched remotely. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 22 Aug 2024 19:42:19 +0000</pubDate></item><item><title>CVE-2024-42599 | SeaCMS 13.0 has a remote code execution vulnerability. The reason for this vulnerability is that although admin_files.php imposes restrictio...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42599</link><description>SeaCMS 13.0 has a remote code execution vulnerability. The reason for this vulnerability is that although admin_files.php imposes restrictions on edited files, attackers can still bypass these restrictions and write code, allowing authenticated attackers to exploit the vulnerability to execute arbitrary commands and gain system privileges.</description><pubDate>Thu, 22 Aug 2024 19:22:25 +0000</pubDate></item><item><title>CVE-2024-39717 | The Versa Director GUI provides an option to customize the look and feel of the user interface. This option is only available for a user log...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39717</link><description>The Versa Director GUI provides an option to customize the look and feel of the user interface. This option is only available for a user logged with Provider-Data-Center-Admin or Provider-Data-Center-System-Admin. (Tenant level users do not have this privilege). The “Change Favicon” (Favorite Icon) option can be mis-used to upload a malicious file ending with .png extension to masquerade as image file. This is possible only after a user with Provider-Data-Center-Admin or Provider-Data-Center-System-Admin has successfully authenticated and logged in. 

Severity: HIGH
 
Exploitation Status:

Versa Networks is aware of one confirmed customer reported instance where this vulnerability was exploited because the Firewall guidelines which were published in 2015 &amp; 2017 were not implemented by that customer. This non-implementation resulted in the bad actor being able to exploit this vulnerability without using the GUI. In our testing (not exhaustive, as not all numerical versions of major browsers were tested) the malicious file does not get executed on the client. There are reports of others based on backbone telemetry observations of a 3rd party provider, however these are unconfirmed to date.</description><pubDate>Thu, 22 Aug 2024 18:54:53 +0000</pubDate></item><item><title>CVE-2024-8088 | Infinite loop when iterating over zip archive entry names</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8088</link><description>There is a HIGH severity vulnerability affecting the CPython "zipfile"
module.





When iterating over names of entries in a zip archive (for example, methods
of "zipfile.ZipFile" like "namelist()", "iterdir()", "extractall()", etc)
the process can be put into an infinite loop with a maliciously crafted
zip archive. This defect applies when reading only metadata or extracting
the contents of the zip archive. Programs that are not handling
user-controlled zip archives are not affected.</description><pubDate>Thu, 22 Aug 2024 18:54:53 +0000</pubDate></item><item><title>CVE-2024-7634 | NGINX Agent Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7634</link><description>NGINX Agent's "config_dirs" restriction feature allows a highly privileged attacker to gain the ability to write/overwrite files outside of the designated secure directory.</description><pubDate>Thu, 22 Aug 2024 18:13:32 +0000</pubDate></item><item><title>CVE-2024-42767 | Kashipara Hotel Management System v1.0 is vulnerable to Unrestricted File Upload RCE via /admin/add_room_controller.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42767</link><description>Kashipara Hotel Management System v1.0 is vulnerable to Unrestricted File Upload RCE via /admin/add_room_controller.php.</description><pubDate>Thu, 22 Aug 2024 17:43:20 +0000</pubDate></item><item><title>CVE-2024-42773 | An Incorrect Access Control vulnerability was found in /admin/edit_room_controller.php in Kashipara Hotel Management System v1.0, which allo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42773</link><description>An Incorrect Access Control vulnerability was found in /admin/edit_room_controller.php in Kashipara Hotel Management System v1.0, which allows an unauthenticated attacker to edit the valid hotel room entries in the administrator section.</description><pubDate>Thu, 22 Aug 2024 17:43:20 +0000</pubDate></item><item><title>CVE-2024-42768 | A Cross-Site Request Forgery (CSRF) vulnerability was found in Kashipara Hotel Management System v1.0 via /admin/delete_room.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42768</link><description>A Cross-Site Request Forgery (CSRF) vulnerability was found in Kashipara Hotel Management System v1.0 via /admin/delete_room.php.</description><pubDate>Thu, 22 Aug 2024 17:22:09 +0000</pubDate></item><item><title>CVE-2024-42772 | An Incorrect Access Control vulnerability was found in /admin/rooms.php in Kashipara Hotel Management System v1.0, which allows an unauthent...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42772</link><description>An Incorrect Access Control vulnerability was found in /admin/rooms.php in Kashipara Hotel Management System v1.0, which allows an unauthenticated attacker to view valid hotel room entries in administrator section.</description><pubDate>Thu, 22 Aug 2024 17:22:09 +0000</pubDate></item><item><title>CVE-2024-42774 | An Incorrect Access Control vulnerability was found in /admin/delete_room.php in Kashipara Hotel Management System v1.0, which allows an una...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42774</link><description>An Incorrect Access Control vulnerability was found in /admin/delete_room.php in Kashipara Hotel Management System v1.0, which allows an unauthenticated attacker to delete valid hotel room entries in the administrator section.</description><pubDate>Thu, 22 Aug 2024 17:22:09 +0000</pubDate></item><item><title>CVE-2024-42775 | An Incorrect Access Control vulnerability was found in /admin/add_room_controller.php in Kashipara Hotel Management System v1.0, which allow...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42775</link><description>An Incorrect Access Control vulnerability was found in /admin/add_room_controller.php in Kashipara Hotel Management System v1.0, which allows an unauthenticated attacker to add the valid hotel room entries in the administrator section via the direct URL access.</description><pubDate>Thu, 22 Aug 2024 17:22:10 +0000</pubDate></item><item><title>CVE-2024-42776 | Kashipara Hotel Management System v1.0 is vulnerable to Incorrect Access Control via /admin/users.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42776</link><description>Kashipara Hotel Management System v1.0 is vulnerable to Incorrect Access Control via /admin/users.php.</description><pubDate>Thu, 22 Aug 2024 17:22:10 +0000</pubDate></item><item><title>CVE-2024-42771 | A Stored Cross Site Scripting (XSS) vulnerability was found in " /admin/edit_room_controller.php" of the Kashipara Hotel Management System v...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42771</link><description>A Stored Cross Site Scripting (XSS) vulnerability was found in " /admin/edit_room_controller.php" of the Kashipara Hotel Management System v1.0, which allows remote attackers to execute arbitrary code via "room_name" parameter.</description><pubDate>Thu, 22 Aug 2024 16:38:42 +0000</pubDate></item><item><title>CVE-2024-3127 | Improper Access Control in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3127</link><description>An issue has been discovered in GitLab EE affecting all versions starting from 12.5 before 17.1.6, all versions starting from 17.2 before 17.2.4, all versions starting from 17.3 before 17.3.1. Under certain conditions it may be possible to bypass the IP restriction for groups through GraphQL allowing unauthorised users to perform some actions at the group level.</description><pubDate>Thu, 22 Aug 2024 15:43:48 +0000</pubDate></item><item><title>CVE-2024-42490 | authentik has Insufficient Authorization for several API endpoints</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42490</link><description>authentik is an open-source Identity Provider. Several API endpoints can be accessed by users without correct authentication/authorization. The main API endpoints affected by this are /api/v3/crypto/certificatekeypairs//view_certificate/, /api/v3/crypto/certificatekeypairs//view_private_key/, and /api/v3/.../used_by/. Note that all of the affected API endpoints require the knowledge of the ID of an object, which especially for certificates is not accessible to an unprivileged user. Additionally the IDs for most objects are UUIDv4, meaning they are not easily guessable/enumerable. authentik 2024.4.4, 2024.6.4 and 2024.8.0 fix this issue.</description><pubDate>Thu, 22 Aug 2024 15:43:48 +0000</pubDate></item><item><title>CVE-2024-42770 | A Stored Cross Site Scripting (XSS) vulnerability was found in "/core/signup_user.php" of Kashipara Hotel Management System v1.0, which allo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42770</link><description>A Stored Cross Site Scripting (XSS) vulnerability was found in "/core/signup_user.php" of Kashipara Hotel Management System v1.0, which allows remote attackers to execute arbitrary code via the "user_email" parameter.</description><pubDate>Thu, 22 Aug 2024 15:43:49 +0000</pubDate></item><item><title>CVE-2024-6502 | Incorrect Provision of Specified Functionality in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6502</link><description>An issue was discovered in GitLab CE/EE affecting all versions starting from 8.2 prior to 17.1.6 starting from 17.2 prior to 17.2.4, and starting from 17.3 prior to 17.3.1, which allows an attacker to create a branch with the same name as a deleted tag.</description><pubDate>Thu, 22 Aug 2024 15:43:49 +0000</pubDate></item><item><title>CVE-2024-7110 | Improper Neutralization of Special Elements used in a Command (&amp;#x27;Command Injection&amp;#x27;) in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7110</link><description>An issue was discovered in GitLab EE affecting all versions starting 17.0 to 17.1.6, 17.2 prior to 17.2.4, and 17.3 prior to 17.3.1 allows an attacker to execute arbitrary command in a victim's pipeline through prompt injection.</description><pubDate>Thu, 22 Aug 2024 15:43:49 +0000</pubDate></item><item><title>CVE-2024-8041 | Uncontrolled Resource Consumption in GitLab</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8041</link><description>A Denial of Service (DoS) issue has been discovered in GitLab CE/EE affecting all versions prior to 17.1.6, 17.2 prior to 17.2.4, and 17.3 prior to 17.3.1. A denial of service could occur upon importing a maliciously crafted repository using the GitHub importer.</description><pubDate>Thu, 22 Aug 2024 15:43:50 +0000</pubDate></item><item><title>CVE-2023-6452 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Forcepoint Web Security (Transaction V...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6452</link><description>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Forcepoint Web Security (Transaction Viewer) allows Stored XSS.





The
 Forcepoint Web Security portal allows administrators to generate 
detailed reports on user requests made through the Web proxy. It has 
been determined that the "user agent" field in the Transaction Viewer is
 vulnerable to a persistent Cross-Site Scripting (XSS) vulnerability, 
which can be exploited by any user who can route traffic through the 
Forcepoint Web proxy.

This 
vulnerability enables unauthorized attackers to execute JavaScript 
within the browser context of a Forcepoint administrator, thereby 
allowing them to perform actions on the administrator's behalf. Such a 
breach could lead to unauthorized access or modifications, posing a 
significant security risk.






This issue affects Web Security: before 8.5.6.</description><pubDate>Thu, 22 Aug 2024 15:33:53 +0000</pubDate></item><item><title>CVE-2024-36441 | Swissphone DiCal-RED 4009 devices allow an unauthenticated attacker use a port-2101 TCP connection to gain access to operation messages that...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36441</link><description>Swissphone DiCal-RED 4009 devices allow an unauthenticated attacker use a port-2101 TCP connection to gain access to operation messages that are received by the device.</description><pubDate>Thu, 22 Aug 2024 15:33:53 +0000</pubDate></item><item><title>CVE-2024-42769 | A Reflected Cross Site Scripting (XSS) vulnerability was found in "/core/signup_user.php " of Kashipara Hotel Management System v1.0, which ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42769</link><description>A Reflected Cross Site Scripting (XSS) vulnerability was found in "/core/signup_user.php " of Kashipara Hotel Management System v1.0, which allows remote attackers to execute arbitrary code via "user_fname" and "user_lname" parameters.</description><pubDate>Thu, 22 Aug 2024 15:33:54 +0000</pubDate></item><item><title>CVE-2024-40884 | Unauthorized disabling of invite URL</title><link>https://www.cve.org/CVERecord?id=CVE-2024-40884</link><description>Mattermost versions 9.5.x &lt;= 9.5.7, 9.10.x &lt;= 9.10.0 fail to properly enforce permissions which allows a team admin user without "Add Team Members" permission to disable the invite URL.</description><pubDate>Thu, 22 Aug 2024 15:21:24 +0000</pubDate></item><item><title>CVE-2024-42497 | Insufficient permissions checks on teams</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42497</link><description>Mattermost versions 9.9.x &lt;= 9.9.1, 9.5.x &lt;= 9.5.7, 9.10.x &lt;= 9.10.0, 9.8.x &lt;= 9.8.2 fail to properly enforce permissions which allows a user with systems manager role with read-only access to teams to perform write operations on teams.</description><pubDate>Thu, 22 Aug 2024 15:21:24 +0000</pubDate></item><item><title>CVE-2024-43780 | Unauthorized channel file upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43780</link><description>Mattermost versions 9.9.x &lt;= 9.9.1, 9.5.x &lt;= 9.5.7, 9.10.0, 9.8.x &lt;= 9.8.2 fail to enforce permissions which allows a guest user with read access to upload files to a channel.</description><pubDate>Thu, 22 Aug 2024 15:21:24 +0000</pubDate></item><item><title>CVE-2024-45191 | An issue was discovered in Matrix libolm (aka Olm) through 3.2.16. The AES implementation is vulnerable to cache-timing attacks due to use o...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45191</link><description>An issue was discovered in Matrix libolm (aka Olm) through 3.2.16. The AES implementation is vulnerable to cache-timing attacks due to use of S-boxes. This is related to software that uses a lookup table for the SubWord step. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</description><pubDate>Thu, 22 Aug 2024 15:21:25 +0000</pubDate></item><item><title>CVE-2024-45192 | An issue was discovered in Matrix libolm (aka Olm) through 3.2.16. Cache-timing attacks can occur due to use of base64 when decoding group s...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45192</link><description>An issue was discovered in Matrix libolm (aka Olm) through 3.2.16. Cache-timing attacks can occur due to use of base64 when decoding group session keys. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</description><pubDate>Thu, 22 Aug 2024 15:21:25 +0000</pubDate></item><item><title>CVE-2024-45193 | An issue was discovered in Matrix libolm (aka Olm) through 3.2.16. There is Ed25519 signature malleability due to lack of validation criteri...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45193</link><description>An issue was discovered in Matrix libolm (aka Olm) through 3.2.16. There is Ed25519 signature malleability due to lack of validation criteria (does not ensure that S &lt; n). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</description><pubDate>Thu, 22 Aug 2024 15:21:25 +0000</pubDate></item><item><title>CVE-2024-36440 | An issue was discovered on Swissphone DiCal-RED 4009 devices. An attacker with access to the file /etc/deviceconfig may recover the administ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36440</link><description>An issue was discovered on Swissphone DiCal-RED 4009 devices. An attacker with access to the file /etc/deviceconfig may recover the administrative device password via password-cracking methods, because unsalted MD5 is used.</description><pubDate>Thu, 22 Aug 2024 14:47:37 +0000</pubDate></item><item><title>CVE-2024-36442 | cgi-bin/fdmcgiwebv2.cgi on Swissphone DiCal-RED 4009 devices allows an authenticated attacker to gain access to arbitrary files on the devic...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36442</link><description>cgi-bin/fdmcgiwebv2.cgi on Swissphone DiCal-RED 4009 devices allows an authenticated attacker to gain access to arbitrary files on the device's file system.</description><pubDate>Thu, 22 Aug 2024 14:47:37 +0000</pubDate></item><item><title>CVE-2024-36444 | cgi-bin/fdmcgiwebv2.cgi on Swissphone DiCal-RED 4009 devices allows an unauthenticated attacker to gain access to device logs.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36444</link><description>cgi-bin/fdmcgiwebv2.cgi on Swissphone DiCal-RED 4009 devices allows an unauthenticated attacker to gain access to device logs.</description><pubDate>Thu, 22 Aug 2024 14:47:37 +0000</pubDate></item><item><title>CVE-2024-36445 | Swissphone DiCal-RED 4009 devices allow a remote attacker to gain a root shell via TELNET without authentication.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36445</link><description>Swissphone DiCal-RED 4009 devices allow a remote attacker to gain a root shell via TELNET without authentication.</description><pubDate>Thu, 22 Aug 2024 14:47:38 +0000</pubDate></item><item><title>CVE-2024-36439 | Swissphone DiCal-RED 4009 devices allow a remote attacker to gain access to the administrative web interface via the device password's hash ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36439</link><description>Swissphone DiCal-RED 4009 devices allow a remote attacker to gain access to the administrative web interface via the device password's hash value, without knowing the actual device password.</description><pubDate>Thu, 22 Aug 2024 14:37:46 +0000</pubDate></item><item><title>CVE-2024-43398 | REXML denial of service vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43398</link><description>REXML is an XML toolkit for Ruby. The REXML gem before 3.3.6 has a DoS vulnerability when it parses an XML that has many deep elements that have same local name attributes. If you need to parse untrusted XMLs with tree parser API like REXML::Document.new, you may be impacted to this vulnerability. If you use other parser APIs such as stream parser API and SAX2 parser API, this vulnerability is not affected. The REXML gem 3.3.6 or later include the patch to fix the vulnerability.</description><pubDate>Thu, 22 Aug 2024 14:24:16 +0000</pubDate></item><item><title>CVE-2024-43785 | gitoxide-core does not neutralize special characters for terminals</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43785</link><description>gitoxide An idiomatic, lean, fast &amp; safe pure Rust implementation of Git. gitoxide-core, which provides most underlying functionality of the gix and ein commands, does not neutralize newlines, backspaces, or control characters—including those that form ANSI escape sequences—that appear in a repository's paths, author and committer names, commit messages, or other metadata. Such text may be written as part of the output of a command, as well as appearing in error messages when an operation fails. This sometimes allows an untrusted repository to misrepresent its contents and to alter or concoct error messages.</description><pubDate>Thu, 22 Aug 2024 14:24:16 +0000</pubDate></item><item><title>CVE-2024-43787 | Hono CSRF middleware can be bypassed using crafted Content-Type header</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43787</link><description>Hono is a Web application framework that provides support for any JavaScript runtime. Hono CSRF middleware can be bypassed using crafted Content-Type header. MIME types are case insensitive, but isRequestedByFormElementRe only matches lower-case. As a result, attacker can bypass csrf middleware using upper-case form-like MIME type. This vulnerability is fixed in 4.5.8.</description><pubDate>Thu, 22 Aug 2024 14:24:16 +0000</pubDate></item><item><title>CVE-2024-36443 | Swissphone DiCal-RED 4009 devices allow a remote attacker to gain read access to almost the whole file system via anonymous FTP.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36443</link><description>Swissphone DiCal-RED 4009 devices allow a remote attacker to gain read access to almost the whole file system via anonymous FTP.</description><pubDate>Thu, 22 Aug 2024 14:24:17 +0000</pubDate></item><item><title>CVE-2024-43331 | WordPress WP SMS plugin &amp;lt;= 6.9.3 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43331</link><description>Missing Authorization vulnerability in VeronaLabs WP SMS.This issue affects WP SMS: from n/a through 6.9.3.</description><pubDate>Thu, 22 Aug 2024 11:36:15 +0000</pubDate></item><item><title>CVE-2024-39745 | IBM Sterling Connect:Direct Web Services information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39745</link><description>IBM Sterling Connect:Direct Web Services 6.0, 6.1, 6.2, and 6.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.</description><pubDate>Thu, 22 Aug 2024 11:11:51 +0000</pubDate></item><item><title>CVE-2024-7848 | User Private Files &amp;lt;= 2.1.0 - Insecure Direct Object Reference to Authenticated (Subscriber+) Private File Access</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7848</link><description>The User Private Files – WordPress File Sharing Plugin plugin for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 2.1.0 via the 'dpk_upvf_update_doc' due to missing validation on the 'docid' user controlled key. This makes it possible for authenticated attackers, with subscriber-level access and above, to gain access to other user's private files.</description><pubDate>Thu, 22 Aug 2024 11:11:51 +0000</pubDate></item><item><title>CVE-2024-39744 | IBM Sterling Connect:Direct Web Services cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39744</link><description>IBM Sterling Connect:Direct Web Services 6.0, 6.1, 6.2, and 6.3 is vulnerable to cross-site request forgery which could allow an attacker to execute malicious and unauthorized actions transmitted from a user that the website trusts.</description><pubDate>Thu, 22 Aug 2024 11:11:52 +0000</pubDate></item><item><title>CVE-2024-39746 | IBM Sterling Connect:Direct Web Services information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39746</link><description>IBM Sterling Connect:Direct Web Services 6.0, 6.1, 6.2, and 6.3 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques.</description><pubDate>Thu, 22 Aug 2024 10:33:20 +0000</pubDate></item><item><title>CVE-2024-35151 | IBM OpenPages information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35151</link><description>IBM OpenPages with Watson 8.3 and 9.0 could allow authenticated users access to sensitive information through improper authorization controls on APIs.</description><pubDate>Thu, 22 Aug 2024 10:33:20 +0000</pubDate></item><item><title>CVE-2024-6870 | Responsive Lightbox &amp;amp; Gallery &amp;lt;= 2.4.7 - Authenticated (Author+) Stored Cross-Site Scripting via File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6870</link><description>The Responsive Lightbox &amp; Gallery plugin for WordPress is vulnerable to Stored Cross-Site Scripting via file uploads in all versions up to, and including, 2.4.7 due to insufficient input sanitization and output escaping affecting the rl_upload_image AJAX endpoint. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the 3gp2 file.</description><pubDate>Thu, 22 Aug 2024 09:43:53 +0000</pubDate></item><item><title>CVE-2024-7778 | Orbit Fox by ThemeIsle &amp;lt;= 2.10.36 - Authenticated (Author+) Stored Cross-Site Scripting via SVG File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7778</link><description>The Orbit Fox by ThemeIsle plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 2.10.36 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.</description><pubDate>Thu, 22 Aug 2024 09:43:53 +0000</pubDate></item><item><title>CVE-2024-8072 | Mage AI allows remote unauthenticated attackers to leak the terminal server command history of arbitrary users</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8072</link><description>Mage AI allows remote unauthenticated attackers to leak the terminal server command history of arbitrary users</description><pubDate>Thu, 22 Aug 2024 08:00:07 +0000</pubDate></item><item><title>CVE-2024-40886 | One-click Client-Side Path Traversal Leading to CSRF in User Management admin page</title><link>https://www.cve.org/CVERecord?id=CVE-2024-40886</link><description>Mattermost versions 9.9.x &lt;= 9.9.1, 9.5.x &lt;= 9.5.7, 9.10.x &lt;= 9.10.0, 9.8.x &lt;= 9.8.2 fail to sanitize user inputs in the frontend that are used for redirection which allows for a one-click client-side path traversal that is leading to CSRF in User Management page of the system console.</description><pubDate>Thu, 22 Aug 2024 06:47:16 +0000</pubDate></item><item><title>CVE-2024-42411 | User creation date manipulation in POST /api/v4/users</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42411</link><description>Mattermost versions 9.9.x &lt;= 9.9.1, 9.5.x &lt;= 9.5.7, 9.10.x &lt;= 9.10.0, 9.8.x &lt;= 9.8.2 fail to restrict the input in POST /api/v4/users which allows a user to manipulate the creation date in POST /api/v4/users tricking the admin into believing their account is much older.</description><pubDate>Thu, 22 Aug 2024 06:47:16 +0000</pubDate></item><item><title>CVE-2024-43813 | IDOR when marking read a user&amp;#x27;s channel</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43813</link><description>Mattermost versions 9.5.x &lt;= 9.5.7, 9.10.x &lt;= 9.10.0 fail to enforce proper access controls which allows any authenticated user, including guests, to mark any channel inside any team as read for any user.</description><pubDate>Thu, 22 Aug 2024 06:47:16 +0000</pubDate></item><item><title>CVE-2024-8071 | System Role with edit access to permissions can elevate themselves to system admin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8071</link><description>Mattermost versions 9.9.x &lt;= 9.9.1, 9.5.x &lt;= 9.5.7, 9.10.x &lt;= 9.10.0 and 9.8.x &lt;= 9.8.2 fail to restrict which roles can promote a user as system admin which allows a System Role with edit access to the permissions section of system console to update their role (e.g. member) to include the `manage_system` permission, effectively becoming a System Admin.</description><pubDate>Thu, 22 Aug 2024 06:47:17 +0000</pubDate></item><item><title>CVE-2024-32939 | Email addresses of remote users visible in props regardless of server settings</title><link>https://www.cve.org/CVERecord?id=CVE-2024-32939</link><description>Mattermost versions 9.9.x &lt;= 9.9.1, 9.5.x &lt;= 9.5.7, 9.10.x &lt;= 9.10.0, 9.8.x &lt;= 9.8.2, when shared channels are enabled, fail to redact remote users' original email addresses stored in user props when email addresses are otherwise configured not to be visible in the local server."</description><pubDate>Thu, 22 Aug 2024 06:34:51 +0000</pubDate></item><item><title>CVE-2024-39810 | Server crash via Elasticsearch certificate file</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39810</link><description>Mattermost versions 9.5.x &lt;= 9.5.7 and 9.10.x &lt;= 9.10.0 fail to time limit and size limit the CA path file in the ElasticSearch configuration which allows a System Role with access to the Elasticsearch system console to add any file as a CA path field, such as /dev/zero and, after testing the connection, cause the application to crash.</description><pubDate>Thu, 22 Aug 2024 06:34:52 +0000</pubDate></item><item><title>CVE-2024-39836 | Munged email address used for password resets and notifications</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39836</link><description>Mattermost versions 9.9.x &lt;= 9.9.1, 9.5.x &lt;= 9.5.7, 9.10.x &lt;= 9.10.0 and 9.8.x &lt;= 9.8.2 fail to  ensure that remote/synthetic users cannot create sessions or reset passwords, which allows the munged email addresses, created by shared channels, to be used to receive email notifications and to reset passwords, when they are valid, functional emails.</description><pubDate>Thu, 22 Aug 2024 06:34:52 +0000</pubDate></item><item><title>CVE-2024-45163 | The Mirai botnet through 2024-08-19 mishandles simultaneous TCP connections to the CNC (command and control) server. Unauthenticated session...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45163</link><description>The Mirai botnet through 2024-08-19 mishandles simultaneous TCP connections to the CNC (command and control) server. Unauthenticated sessions remain open, causing resource consumption. For example, an attacker can send a recognized username (such as root), or can send arbitrary data.</description><pubDate>Thu, 22 Aug 2024 04:26:18 +0000</pubDate></item><item><title>CVE-2022-48926 | usb: gadget: rndis: add spinlock for rndis response list</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48926</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: rndis: add spinlock for rndis response list

There's no lock for rndis response list. It could cause list corruption
if there're two different list_add at the same time like below.
It's better to add in rndis_add_response / rndis_free_response
/ rndis_get_next_response to prevent any race condition on response list.

[  361.894299] [1:   irq/191-dwc3:16979] list_add corruption.
next-&gt;prev should be prev (ffffff80651764d0),
but was ffffff883dc36f80. (next=ffffff80651764d0).

[  361.904380] [1:   irq/191-dwc3:16979] Call trace:
[  361.904391] [1:   irq/191-dwc3:16979]  __list_add_valid+0x74/0x90
[  361.904401] [1:   irq/191-dwc3:16979]  rndis_msg_parser+0x168/0x8c0
[  361.904409] [1:   irq/191-dwc3:16979]  rndis_command_complete+0x24/0x84
[  361.904417] [1:   irq/191-dwc3:16979]  usb_gadget_giveback_request+0x20/0xe4
[  361.904426] [1:   irq/191-dwc3:16979]  dwc3_gadget_giveback+0x44/0x60
[  361.904434] [1:   irq/191-dwc3:16979]  dwc3_ep0_complete_data+0x1e8/0x3a0
[  361.904442] [1:   irq/191-dwc3:16979]  dwc3_ep0_interrupt+0x29c/0x3dc
[  361.904450] [1:   irq/191-dwc3:16979]  dwc3_process_event_entry+0x78/0x6cc
[  361.904457] [1:   irq/191-dwc3:16979]  dwc3_process_event_buf+0xa0/0x1ec
[  361.904465] [1:   irq/191-dwc3:16979]  dwc3_thread_interrupt+0x34/0x5c</description><pubDate>Thu, 22 Aug 2024 03:41:19 +0000</pubDate></item><item><title>CVE-2022-48927 | iio: adc: tsc2046: fix memory corruption by preventing array overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48927</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: tsc2046: fix memory corruption by preventing array overflow

On one side we have indio_dev-&gt;num_channels includes all physical channels +
timestamp channel. On other side we have an array allocated only for
physical channels. So, fix memory corruption by ARRAY_SIZE() instead of
num_channels variable.

Note the first case is a cleanup rather than a fix as the software
timestamp channel bit in active_scanmask is never set by the IIO core.</description><pubDate>Thu, 22 Aug 2024 03:41:20 +0000</pubDate></item><item><title>CVE-2022-48928 | iio: adc: men_z188_adc: Fix a resource leak in an error handling path</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48928</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: men_z188_adc: Fix a resource leak in an error handling path

If iio_device_register() fails, a previous ioremap() is left unbalanced.

Update the error handling path and add the missing iounmap() call, as
already done in the remove function.</description><pubDate>Thu, 22 Aug 2024 03:41:20 +0000</pubDate></item><item><title>CVE-2022-48929 | bpf: Fix crash due to out of bounds access into reg2btf_ids.</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48929</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix crash due to out of bounds access into reg2btf_ids.

When commit e6ac2450d6de ("bpf: Support bpf program calling kernel function") added
kfunc support, it defined reg2btf_ids as a cheap way to translate the verifier
reg type to the appropriate btf_vmlinux BTF ID, however
commit c25b2ae13603 ("bpf: Replace PTR_TO_XXX_OR_NULL with PTR_TO_XXX | PTR_MAYBE_NULL")
moved the __BPF_REG_TYPE_MAX from the last member of bpf_reg_type enum to after
the base register types, and defined other variants using type flag
composition. However, now, the direct usage of reg-&gt;type to index into
reg2btf_ids may no longer fall into __BPF_REG_TYPE_MAX range, and hence lead to
out of bounds access and kernel crash on dereference of bad pointer.</description><pubDate>Thu, 22 Aug 2024 03:41:20 +0000</pubDate></item><item><title>CVE-2022-48930 | RDMA/ib_srp: Fix a deadlock</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48930</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/ib_srp: Fix a deadlock

Remove the flush_workqueue(system_long_wq) call since flushing
system_long_wq is deadlock-prone and since that call is redundant with a
preceding cancel_work_sync()</description><pubDate>Thu, 22 Aug 2024 03:41:21 +0000</pubDate></item><item><title>CVE-2022-48931 | configfs: fix a race in configfs_{,un}register_subsystem()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48931</link><description>In the Linux kernel, the following vulnerability has been resolved:

configfs: fix a race in configfs_{,un}register_subsystem()

When configfs_register_subsystem() or configfs_unregister_subsystem()
is executing link_group() or unlink_group(),
it is possible that two processes add or delete list concurrently.
Some unfortunate interleavings of them can cause kernel panic.

One of cases is:
A --&gt; B --&gt; C --&gt; D
A &lt;-- B &lt;-- C &lt;-- D

     delete list_head *B        |      delete list_head *C
--------------------------------|-----------------------------------
configfs_unregister_subsystem   |   configfs_unregister_subsystem
  unlink_group                  |     unlink_group
    unlink_obj                  |       unlink_obj
      list_del_init             |         list_del_init
        __list_del_entry        |           __list_del_entry
          __list_del            |             __list_del
            // next == C        |
            next-&gt;prev = prev   |
                                |               next-&gt;prev = prev
            prev-&gt;next = next   |
                                |                 // prev == B
                                |                 prev-&gt;next = next

Fix this by adding mutex when calling link_group() or unlink_group(),
but parent configfs_subsystem is NULL when config_item is root.
So I create a mutex configfs_subsystem_mutex.</description><pubDate>Thu, 22 Aug 2024 03:41:21 +0000</pubDate></item><item><title>CVE-2022-48932 | net/mlx5: DR, Fix slab-out-of-bounds in mlx5_cmd_dr_create_fte</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48932</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: DR, Fix slab-out-of-bounds in mlx5_cmd_dr_create_fte

When adding a rule with 32 destinations, we hit the following out-of-band
access issue:

  BUG: KASAN: slab-out-of-bounds in mlx5_cmd_dr_create_fte+0x18ee/0x1e70

This patch fixes the issue by both increasing the allocated buffers to
accommodate for the needed actions and by checking the number of actions
to prevent this issue when a rule with too many actions is provided.</description><pubDate>Thu, 22 Aug 2024 03:41:21 +0000</pubDate></item><item><title>CVE-2022-48933 | netfilter: nf_tables: fix memory leak during stateful obj update</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48933</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: fix memory leak during stateful obj update

stateful objects can be updated from the control plane.
The transaction logic allocates a temporary object for this purpose.

The -&gt;init function was called for this object, so plain kfree() leaks
resources. We must call -&gt;destroy function of the object.

nft_obj_destroy does this, but it also decrements the module refcount,
but the update path doesn't increment it.

To avoid special-casing the update object release, do module_get for
the update case too and release it via nft_obj_destroy().</description><pubDate>Thu, 22 Aug 2024 03:41:22 +0000</pubDate></item><item><title>CVE-2022-48934 | nfp: flower: Fix a potential leak in nfp_tunnel_add_shared_mac()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48934</link><description>In the Linux kernel, the following vulnerability has been resolved:

nfp: flower: Fix a potential leak in nfp_tunnel_add_shared_mac()

ida_simple_get() returns an id between min (0) and max (NFP_MAX_MAC_INDEX)
inclusive.
So NFP_MAX_MAC_INDEX (0xff) is a valid id.

In order for the error handling path to work correctly, the 'invalid'
value for 'ida_idx' should not be in the 0..NFP_MAX_MAC_INDEX range,
inclusive.

So set it to -1.</description><pubDate>Thu, 22 Aug 2024 03:41:22 +0000</pubDate></item><item><title>CVE-2022-48935 | netfilter: nf_tables: unregister flowtable hooks on netns exit</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48935</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: unregister flowtable hooks on netns exit

Unregister flowtable hooks before they are releases via
nf_tables_flowtable_destroy() otherwise hook core reports UAF.

BUG: KASAN: use-after-free in nf_hook_entries_grow+0x5a7/0x700 net/netfilter/core.c:142 net/netfilter/core.c:142
Read of size 4 at addr ffff8880736f7438 by task syz-executor579/3666

CPU: 0 PID: 3666 Comm: syz-executor579 Not tainted 5.16.0-rc5-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 
 __dump_stack lib/dump_stack.c:88 [inline]
 __dump_stack lib/dump_stack.c:88 [inline] lib/dump_stack.c:106
 dump_stack_lvl+0x1dc/0x2d8 lib/dump_stack.c:106 lib/dump_stack.c:106
 print_address_description+0x65/0x380 mm/kasan/report.c:247 mm/kasan/report.c:247
 __kasan_report mm/kasan/report.c:433 [inline]
 __kasan_report mm/kasan/report.c:433 [inline] mm/kasan/report.c:450
 kasan_report+0x19a/0x1f0 mm/kasan/report.c:450 mm/kasan/report.c:450
 nf_hook_entries_grow+0x5a7/0x700 net/netfilter/core.c:142 net/netfilter/core.c:142
 __nf_register_net_hook+0x27e/0x8d0 net/netfilter/core.c:429 net/netfilter/core.c:429
 nf_register_net_hook+0xaa/0x180 net/netfilter/core.c:571 net/netfilter/core.c:571
 nft_register_flowtable_net_hooks+0x3c5/0x730 net/netfilter/nf_tables_api.c:7232 net/netfilter/nf_tables_api.c:7232
 nf_tables_newflowtable+0x2022/0x2cf0 net/netfilter/nf_tables_api.c:7430 net/netfilter/nf_tables_api.c:7430
 nfnetlink_rcv_batch net/netfilter/nfnetlink.c:513 [inline]
 nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:634 [inline]
 nfnetlink_rcv_batch net/netfilter/nfnetlink.c:513 [inline] net/netfilter/nfnetlink.c:652
 nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:634 [inline] net/netfilter/nfnetlink.c:652
 nfnetlink_rcv+0x10e6/0x2550 net/netfilter/nfnetlink.c:652 net/netfilter/nfnetlink.c:652

__nft_release_hook() calls nft_unregister_flowtable_net_hooks() which
only unregisters the hooks, then after RCU grace period, it is
guaranteed that no packets add new entries to the flowtable (no flow
offload rules and flowtable hooks are reachable from packet path), so it
is safe to call nf_flow_table_free() which cleans up the remaining
entries from the flowtable (both software and hardware) and it unbinds
the flow_block.</description><pubDate>Thu, 22 Aug 2024 03:41:22 +0000</pubDate></item><item><title>CVE-2022-48936 | gso: do not skip outer ip header in case of ipip and net_failover</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48936</link><description>In the Linux kernel, the following vulnerability has been resolved:

gso: do not skip outer ip header in case of ipip and net_failover

We encounter a tcp drop issue in our cloud environment. Packet GROed in
host forwards to a VM virtio_net nic with net_failover enabled. VM acts
as a IPVS LB with ipip encapsulation. The full path like:
host gro -&gt; vm virtio_net rx -&gt; net_failover rx -&gt; ipvs fullnat
 -&gt; ipip encap -&gt; net_failover tx -&gt; virtio_net tx

When net_failover transmits a ipip pkt (gso_type = 0x0103, which means
SKB_GSO_TCPV4, SKB_GSO_DODGY and SKB_GSO_IPXIP4), there is no gso
did because it supports TSO and GSO_IPXIP4. But network_header points to
inner ip header.

Call Trace:
 tcp4_gso_segment        ------&gt; return NULL
 inet_gso_segment        ------&gt; inner iph, network_header points to
 ipip_gso_segment
 inet_gso_segment        ------&gt; outer iph
 skb_mac_gso_segment

Afterwards virtio_net transmits the pkt, only inner ip header is modified.
And the outer one just keeps unchanged. The pkt will be dropped in remote
host.

Call Trace:
 inet_gso_segment        ------&gt; inner iph, outer iph is skipped
 skb_mac_gso_segment
 __skb_gso_segment
 validate_xmit_skb
 validate_xmit_skb_list
 sch_direct_xmit
 __qdisc_run
 __dev_queue_xmit        ------&gt; virtio_net
 dev_hard_start_xmit
 __dev_queue_xmit        ------&gt; net_failover
 ip_finish_output2
 ip_output
 iptunnel_xmit
 ip_tunnel_xmit
 ipip_tunnel_xmit        ------&gt; ipip
 dev_hard_start_xmit
 __dev_queue_xmit
 ip_finish_output2
 ip_output
 ip_forward
 ip_rcv
 __netif_receive_skb_one_core
 netif_receive_skb_internal
 napi_gro_receive
 receive_buf
 virtnet_poll
 net_rx_action

The root cause of this issue is specific with the rare combination of
SKB_GSO_DODGY and a tunnel device that adds an SKB_GSO_ tunnel option.
SKB_GSO_DODGY is set from external virtio_net. We need to reset network
header when callbacks.gso_segment() returns NULL.

This patch also includes ipv6_gso_segment(), considering SIT, etc.</description><pubDate>Thu, 22 Aug 2024 03:41:23 +0000</pubDate></item><item><title>CVE-2022-48937 | io_uring: add a schedule point in io_add_buffers()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48937</link><description>In the Linux kernel, the following vulnerability has been resolved:

io_uring: add a schedule point in io_add_buffers()

Looping ~65535 times doing kmalloc() calls can trigger soft lockups,
especially with DEBUG features (like KASAN).

[  253.536212] watchdog: BUG: soft lockup - CPU#64 stuck for 26s! [b219417889:12575]
[  253.544433] Modules linked in: vfat fat i2c_mux_pca954x i2c_mux spidev cdc_acm xhci_pci xhci_hcd sha3_generic gq(O)
[  253.544451] CPU: 64 PID: 12575 Comm: b219417889 Tainted: G S         O      5.17.0-smp-DEV #801
[  253.544457] RIP: 0010:kernel_text_address (./include/asm-generic/sections.h:192 ./include/linux/kallsyms.h:29 kernel/extable.c:67 kernel/extable.c:98)
[  253.544464] Code: 0f 93 c0 48 c7 c1 e0 63 d7 a4 48 39 cb 0f 92 c1 20 c1 0f b6 c1 5b 5d c3 90 0f 1f 44 00 00 55 48 89 e5 41 57 41 56 53 48 89 fb &lt;48&gt; c7 c0 00 00 80 a0 41 be 01 00 00 00 48 39 c7 72 0c 48 c7 c0 40
[  253.544468] RSP: 0018:ffff8882d8baf4c0 EFLAGS: 00000246
[  253.544471] RAX: 1ffff1105b175e00 RBX: ffffffffa13ef09a RCX: 00000000a13ef001
[  253.544474] RDX: ffffffffa13ef09a RSI: ffff8882d8baf558 RDI: ffffffffa13ef09a
[  253.544476] RBP: ffff8882d8baf4d8 R08: ffff8882d8baf5e0 R09: 0000000000000004
[  253.544479] R10: ffff8882d8baf5e8 R11: ffffffffa0d59a50 R12: ffff8882eab20380
[  253.544481] R13: ffffffffa0d59a50 R14: dffffc0000000000 R15: 1ffff1105b175eb0
[  253.544483] FS:  00000000016d3380(0000) GS:ffff88af48c00000(0000) knlGS:0000000000000000
[  253.544486] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  253.544488] CR2: 00000000004af0f0 CR3: 00000002eabfa004 CR4: 00000000003706e0
[  253.544491] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[  253.544492] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[  253.544494] Call Trace:
[  253.544496]  
[  253.544498] ? io_queue_sqe (fs/io_uring.c:7143)
[  253.544505] __kernel_text_address (kernel/extable.c:78)
[  253.544508] unwind_get_return_address (arch/x86/kernel/unwind_frame.c:19)
[  253.544514] arch_stack_walk (arch/x86/kernel/stacktrace.c:27)
[  253.544517] ? io_queue_sqe (fs/io_uring.c:7143)
[  253.544521] stack_trace_save (kernel/stacktrace.c:123)
[  253.544527] ____kasan_kmalloc (mm/kasan/common.c:39 mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:515)
[  253.544531] ? ____kasan_kmalloc (mm/kasan/common.c:39 mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:515)
[  253.544533] ? __kasan_kmalloc (mm/kasan/common.c:524)
[  253.544535] ? kmem_cache_alloc_trace (./include/linux/kasan.h:270 mm/slab.c:3567)
[  253.544541] ? io_issue_sqe (fs/io_uring.c:4556 fs/io_uring.c:4589 fs/io_uring.c:6828)
[  253.544544] ? __io_queue_sqe (fs/io_uring.c:?)
[  253.544551] __kasan_kmalloc (mm/kasan/common.c:524)
[  253.544553] kmem_cache_alloc_trace (./include/linux/kasan.h:270 mm/slab.c:3567)
[  253.544556] ? io_issue_sqe (fs/io_uring.c:4556 fs/io_uring.c:4589 fs/io_uring.c:6828)
[  253.544560] io_issue_sqe (fs/io_uring.c:4556 fs/io_uring.c:4589 fs/io_uring.c:6828)
[  253.544564] ? __kasan_slab_alloc (mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:469)
[  253.544567] ? __kasan_slab_alloc (mm/kasan/common.c:39 mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:469)
[  253.544569] ? kmem_cache_alloc_bulk (mm/slab.h:732 mm/slab.c:3546)
[  253.544573] ? __io_alloc_req_refill (fs/io_uring.c:2078)
[  253.544578] ? io_submit_sqes (fs/io_uring.c:7441)
[  253.544581] ? __se_sys_io_uring_enter (fs/io_uring.c:10154 fs/io_uring.c:10096)
[  253.544584] ? __x64_sys_io_uring_enter (fs/io_uring.c:10096)
[  253.544587] ? do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80)
[  253.544590] ? entry_SYSCALL_64_after_hwframe (??:?)
[  253.544596] __io_queue_sqe (fs/io_uring.c:?)
[  253.544600] io_queue_sqe (fs/io_uring.c:7143)
[  253.544603] io_submit_sqe (fs/io_uring.c:?)
[  253.544608] io_submit_sqes (fs/io_uring.c:?)
[  253.544612] __se_sys_io_uring_enter (fs/io_uring.c:10154 fs/io_uri
---truncated---</description><pubDate>Thu, 22 Aug 2024 03:41:23 +0000</pubDate></item><item><title>CVE-2022-48938 | CDC-NCM: avoid overflow in sanity checking</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48938</link><description>In the Linux kernel, the following vulnerability has been resolved:

CDC-NCM: avoid overflow in sanity checking

A broken device may give an extreme offset like 0xFFF0
and a reasonable length for a fragment. In the sanity
check as formulated now, this will create an integer
overflow, defeating the sanity check. Both offset
and offset + len need to be checked in such a manner
that no overflow can occur.
And those quantities should be unsigned.</description><pubDate>Thu, 22 Aug 2024 03:41:24 +0000</pubDate></item><item><title>CVE-2022-48939 | bpf: Add schedule points in batch ops</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48939</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Add schedule points in batch ops

syzbot reported various soft lockups caused by bpf batch operations.

 INFO: task kworker/1:1:27 blocked for more than 140 seconds.
 INFO: task hung in rcu_barrier

Nothing prevents batch ops to process huge amount of data,
we need to add schedule points in them.

Note that maybe_wait_bpf_programs(map) calls from
generic_map_delete_batch() can be factorized by moving
the call after the loop.

This will be done later in -next tree once we get this fix merged,
unless there is strong opinion doing this optimization sooner.</description><pubDate>Thu, 22 Aug 2024 03:41:24 +0000</pubDate></item><item><title>CVE-2022-48940 | bpf: Fix crash due to incorrect copy_map_value</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48940</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix crash due to incorrect copy_map_value

When both bpf_spin_lock and bpf_timer are present in a BPF map value,
copy_map_value needs to skirt both objects when copying a value into and
out of the map. However, the current code does not set both s_off and
t_off in copy_map_value, which leads to a crash when e.g. bpf_spin_lock
is placed in map value with bpf_timer, as bpf_map_update_elem call will
be able to overwrite the other timer object.

When the issue is not fixed, an overwriting can produce the following
splat:

[root@(none) bpf]# ./test_progs -t timer_crash
[   15.930339] bpf_testmod: loading out-of-tree module taints kernel.
[   16.037849] ==================================================================
[   16.038458] BUG: KASAN: user-memory-access in __pv_queued_spin_lock_slowpath+0x32b/0x520
[   16.038944] Write of size 8 at addr 0000000000043ec0 by task test_progs/325
[   16.039399]
[   16.039514] CPU: 0 PID: 325 Comm: test_progs Tainted: G           OE     5.16.0+ #278
[   16.039983] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ArchLinux 1.15.0-1 04/01/2014
[   16.040485] Call Trace:
[   16.040645]  
[   16.040805]  dump_stack_lvl+0x59/0x73
[   16.041069]  ? __pv_queued_spin_lock_slowpath+0x32b/0x520
[   16.041427]  kasan_report.cold+0x116/0x11b
[   16.041673]  ? __pv_queued_spin_lock_slowpath+0x32b/0x520
[   16.042040]  __pv_queued_spin_lock_slowpath+0x32b/0x520
[   16.042328]  ? memcpy+0x39/0x60
[   16.042552]  ? pv_hash+0xd0/0xd0
[   16.042785]  ? lockdep_hardirqs_off+0x95/0xd0
[   16.043079]  __bpf_spin_lock_irqsave+0xdf/0xf0
[   16.043366]  ? bpf_get_current_comm+0x50/0x50
[   16.043608]  ? jhash+0x11a/0x270
[   16.043848]  bpf_timer_cancel+0x34/0xe0
[   16.044119]  bpf_prog_c4ea1c0f7449940d_sys_enter+0x7c/0x81
[   16.044500]  bpf_trampoline_6442477838_0+0x36/0x1000
[   16.044836]  __x64_sys_nanosleep+0x5/0x140
[   16.045119]  do_syscall_64+0x59/0x80
[   16.045377]  ? lock_is_held_type+0xe4/0x140
[   16.045670]  ? irqentry_exit_to_user_mode+0xa/0x40
[   16.046001]  ? mark_held_locks+0x24/0x90
[   16.046287]  ? asm_exc_page_fault+0x1e/0x30
[   16.046569]  ? asm_exc_page_fault+0x8/0x30
[   16.046851]  ? lockdep_hardirqs_on+0x7e/0x100
[   16.047137]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[   16.047405] RIP: 0033:0x7f9e4831718d
[   16.047602] Code: b4 0c 00 0f 05 eb a9 66 0f 1f 44 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d b3 6c 0c 00 f7 d8 64 89 01 48
[   16.048764] RSP: 002b:00007fff488086b8 EFLAGS: 00000206 ORIG_RAX: 0000000000000023
[   16.049275] RAX: ffffffffffffffda RBX: 00007f9e48683740 RCX: 00007f9e4831718d
[   16.049747] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 00007fff488086d0
[   16.050225] RBP: 00007fff488086f0 R08: 00007fff488085d7 R09: 00007f9e4cb594a0
[   16.050648] R10: 0000000000000000 R11: 0000000000000206 R12: 00007f9e484cde30
[   16.051124] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
[   16.051608]  
[   16.051762] ==================================================================</description><pubDate>Thu, 22 Aug 2024 03:41:24 +0000</pubDate></item><item><title>CVE-2022-48941 | ice: fix concurrent reset and removal of VFs</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48941</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: fix concurrent reset and removal of VFs

Commit c503e63200c6 ("ice: Stop processing VF messages during teardown")
introduced a driver state flag, ICE_VF_DEINIT_IN_PROGRESS, which is
intended to prevent some issues with concurrently handling messages from
VFs while tearing down the VFs.

This change was motivated by crashes caused while tearing down and
bringing up VFs in rapid succession.

It turns out that the fix actually introduces issues with the VF driver
caused because the PF no longer responds to any messages sent by the VF
during its .remove routine. This results in the VF potentially removing
its DMA memory before the PF has shut down the device queues.

Additionally, the fix doesn't actually resolve concurrency issues within
the ice driver. It is possible for a VF to initiate a reset just prior
to the ice driver removing VFs. This can result in the remove task
concurrently operating while the VF is being reset. This results in
similar memory corruption and panics purportedly fixed by that commit.

Fix this concurrency at its root by protecting both the reset and
removal flows using the existing VF cfg_lock. This ensures that we
cannot remove the VF while any outstanding critical tasks such as a
virtchnl message or a reset are occurring.

This locking change also fixes the root cause originally fixed by commit
c503e63200c6 ("ice: Stop processing VF messages during teardown"), so we
can simply revert it.

Note that I kept these two changes together because simply reverting the
original commit alone would leave the driver vulnerable to worse race
conditions.</description><pubDate>Thu, 22 Aug 2024 03:41:25 +0000</pubDate></item><item><title>CVE-2022-48942 | hwmon: Handle failure to register sensor with thermal zone correctly</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48942</link><description>In the Linux kernel, the following vulnerability has been resolved:

hwmon: Handle failure to register sensor with thermal zone correctly

If an attempt is made to a sensor with a thermal zone and it fails,
the call to devm_thermal_zone_of_sensor_register() may return -ENODEV.
This may result in crashes similar to the following.

Unable to handle kernel NULL pointer dereference at virtual address 00000000000003cd
...
Internal error: Oops: 96000021 [#1] PREEMPT SMP
...
pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
pc : mutex_lock+0x18/0x60
lr : thermal_zone_device_update+0x40/0x2e0
sp : ffff800014c4fc60
x29: ffff800014c4fc60 x28: ffff365ee3f6e000 x27: ffffdde218426790
x26: ffff365ee3f6e000 x25: 0000000000000000 x24: ffff365ee3f6e000
x23: ffffdde218426870 x22: ffff365ee3f6e000 x21: 00000000000003cd
x20: ffff365ee8bf3308 x19: ffffffffffffffed x18: 0000000000000000
x17: ffffdde21842689c x16: ffffdde1cb7a0b7c x15: 0000000000000040
x14: ffffdde21a4889a0 x13: 0000000000000228 x12: 0000000000000000
x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000
x8 : 0000000001120000 x7 : 0000000000000001 x6 : 0000000000000000
x5 : 0068000878e20f07 x4 : 0000000000000000 x3 : 00000000000003cd
x2 : ffff365ee3f6e000 x1 : 0000000000000000 x0 : 00000000000003cd
Call trace:
 mutex_lock+0x18/0x60
 hwmon_notify_event+0xfc/0x110
 0xffffdde1cb7a0a90
 0xffffdde1cb7a0b7c
 irq_thread_fn+0x2c/0xa0
 irq_thread+0x134/0x240
 kthread+0x178/0x190
 ret_from_fork+0x10/0x20
Code: d503201f d503201f d2800001 aa0103e4 (c8e47c02)

Jon Hunter reports that the exact call sequence is:

hwmon_notify_event()
  --&gt; hwmon_thermal_notify()
    --&gt; thermal_zone_device_update()
      --&gt; update_temperature()
        --&gt; mutex_lock()

The hwmon core needs to handle all errors returned from calls
to devm_thermal_zone_of_sensor_register(). If the call fails
with -ENODEV, report that the sensor was not attached to a
thermal zone  but continue to register the hwmon device.</description><pubDate>Thu, 22 Aug 2024 03:41:25 +0000</pubDate></item><item><title>CVE-2022-48943 | KVM: x86/mmu: make apf token non-zero to fix bug</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48943</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: x86/mmu: make apf token non-zero to fix bug

In current async pagefault logic, when a page is ready, KVM relies on
kvm_arch_can_dequeue_async_page_present() to determine whether to deliver
a READY event to the Guest. This function test token value of struct
kvm_vcpu_pv_apf_data, which must be reset to zero by Guest kernel when a
READY event is finished by Guest. If value is zero meaning that a READY
event is done, so the KVM can deliver another.
But the kvm_arch_setup_async_pf() may produce a valid token with zero
value, which is confused with previous mention and may lead the loss of
this READY event.

This bug may cause task blocked forever in Guest:
 INFO: task stress:7532 blocked for more than 1254 seconds.
       Not tainted 5.10.0 #16
 "echo 0 &gt; /proc/sys/kernel/hung_task_timeout_secs" disables this message.
 task:stress          state:D stack:    0 pid: 7532 ppid:  1409
 flags:0x00000080
 Call Trace:
  __schedule+0x1e7/0x650
  schedule+0x46/0xb0
  kvm_async_pf_task_wait_schedule+0xad/0xe0
  ? exit_to_user_mode_prepare+0x60/0x70
  __kvm_handle_async_pf+0x4f/0xb0
  ? asm_exc_page_fault+0x8/0x30
  exc_page_fault+0x6f/0x110
  ? asm_exc_page_fault+0x8/0x30
  asm_exc_page_fault+0x1e/0x30
 RIP: 0033:0x402d00
 RSP: 002b:00007ffd31912500 EFLAGS: 00010206
 RAX: 0000000000071000 RBX: ffffffffffffffff RCX: 00000000021a32b0
 RDX: 000000000007d011 RSI: 000000000007d000 RDI: 00000000021262b0
 RBP: 00000000021262b0 R08: 0000000000000003 R09: 0000000000000086
 R10: 00000000000000eb R11: 00007fefbdf2baa0 R12: 0000000000000000
 R13: 0000000000000002 R14: 000000000007d000 R15: 0000000000001000</description><pubDate>Thu, 22 Aug 2024 03:41:25 +0000</pubDate></item><item><title>CVE-2024-45165 | An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Data is sent between client and server with encryption. However, ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45165</link><description>An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Data is sent between client and server with encryption. However, the key is derived from the string "(c)2007 UCI Software GmbH B.Boll" (without quotes). The key is both static and hardcoded. With access to messages, this results in message decryption and encryption by an attacker. Thus, it enables passive and active man-in-the-middle attacks.</description><pubDate>Thu, 22 Aug 2024 03:41:26 +0000</pubDate></item><item><title>CVE-2024-45166 | An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Due to improper input validation, improper deserialization, and i...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45166</link><description>An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Due to improper input validation, improper deserialization, and improper restriction of operations within the bounds of a memory buffer, IDOL2 is vulnerable to Denial-of-Service (DoS) attacks and possibly remote code execution. There is an access violation and EIP overwrite after five logins.</description><pubDate>Thu, 22 Aug 2024 03:41:26 +0000</pubDate></item><item><title>CVE-2024-45167 | An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Due to improper input validation, improper deserialization, and i...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45167</link><description>An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Due to improper input validation, improper deserialization, and improper restriction of operations within the bounds of a memory buffer, IDOL2 is vulnerable to Denial-of-Service (DoS) attacks and possibly remote code execution. A certain XmlMessage document causes 100% CPU consumption.</description><pubDate>Thu, 22 Aug 2024 03:41:26 +0000</pubDate></item><item><title>CVE-2024-45168 | An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Data is transferred over a raw socket without any authentication ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45168</link><description>An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Data is transferred over a raw socket without any authentication mechanism. Thus, communication endpoints are not verifiable.</description><pubDate>Thu, 22 Aug 2024 03:41:27 +0000</pubDate></item><item><title>CVE-2024-45169 | An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Due to improper input validation, improper deserialization, and i...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45169</link><description>An issue was discovered in UCI IDOL 2 (aka uciIDOL or IDOL2) through 2.12. Due to improper input validation, improper deserialization, and improper restriction of operations within the bounds of a memory buffer, IDOL2 is vulnerable to Denial-of-Service (DoS) attacks and possibly remote code execution via the \xB0\x00\x3c byte sequence.</description><pubDate>Thu, 22 Aug 2024 03:41:27 +0000</pubDate></item><item><title>CVE-2024-39576 | Dell Power Manager (DPM), versions 3.15.0 and prior, contains an Incorrect Privilege Assignment vulnerability. A low privileged attacker wit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-39576</link><description>Dell Power Manager (DPM), versions 3.15.0 and prior, contains an Incorrect Privilege Assignment vulnerability. A low privileged attacker with local access could potentially exploit this vulnerability, leading to Code execution and Elevation of privileges.</description><pubDate>Thu, 22 Aug 2024 03:09:19 +0000</pubDate></item><item><title>CVE-2024-5583 | The Plus Addons for Elementor – Elementor Addons, Page Templates, Widgets, Mega Menu, WooCommerce &amp;lt;= 5.6.2 - Authenticated (Contributor+) Stored Cross-Site Scripting via Testimonials Widget Settings</title><link>https://www.cve.org/CVERecord?id=CVE-2024-5583</link><description>The The Plus Addons for Elementor – Elementor Addons, Page Templates, Widgets, Mega Menu, WooCommerce plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the carousel_direction parameter of testimonials widget in all versions up to, and including, 5.6.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 22 Aug 2024 02:30:12 +0000</pubDate></item><item><title>CVE-2024-7384 | AcyMailing &amp;lt;= 9.7.2 - Authenticated (Subscriber+) Arbitrary File Upload via acym_extractArchive Function</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7384</link><description>The AcyMailing – An Ultimate Newsletter Plugin and Marketing Automation Solution for WordPress plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the acym_extractArchive function in all versions up to, and including, 9.7.2. This makes it possible for authenticated attackers, with Subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Thu, 22 Aug 2024 02:30:12 +0000</pubDate></item><item><title>CVE-2024-7836 | Themify Builder &amp;lt;= 7.6.1 - Missing Authorization to Authenticated (Contributor+) Post Duplication</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7836</link><description>The Themify Builder plugin for WordPress is vulnerable to unauthorized post duplication due to missing checks on the duplicate_page_ajaxify function in all versions up to, and including, 7.6.1. This makes it possible for authenticated attackers, with Contributor-level access and above, to duplicate and view private or draft posts created by other users that otherwise shouldn't be accessible to them.</description><pubDate>Thu, 22 Aug 2024 02:30:12 +0000</pubDate></item><item><title>CVE-2021-4441 | spi: spi-zynq-qspi: Fix a NULL pointer dereference in zynq_qspi_exec_mem_op()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-4441</link><description>In the Linux kernel, the following vulnerability has been resolved:

spi: spi-zynq-qspi: Fix a NULL pointer dereference in zynq_qspi_exec_mem_op()

In zynq_qspi_exec_mem_op(), kzalloc() is directly used in memset(),
which could lead to a NULL pointer dereference on failure of
kzalloc().

Fix this bug by adding a check of tmpbuf.

This bug was found by a static analyzer. The analysis employs
differential checking to identify inconsistent security operations
(e.g., checks or kfrees) between two code paths and confirms that the
inconsistent operations are not recovered in the current function or
the callers, so they constitute bugs.

Note that, as a bug found by static analysis, it can be a false
positive or hard to trigger. Multiple researchers have cross-reviewed
the bug.

Builds with CONFIG_SPI_ZYNQ_QSPI=m show no new warnings,
and our static analyzer no longer warns about this code.</description><pubDate>Thu, 22 Aug 2024 02:30:13 +0000</pubDate></item><item><title>CVE-2022-48900 | xen/netfront: react properly to failing gnttab_end_foreign_access_ref()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48900</link><description>In the Linux kernel, the following vulnerability has been resolved:

xen/netfront: react properly to failing gnttab_end_foreign_access_ref()

When calling gnttab_end_foreign_access_ref() the returned value must
be tested and the reaction to that value should be appropriate.

In case of failure in xennet_get_responses() the reaction should not be
to crash the system, but to disable the network device.

The calls in setup_netfront() can be replaced by calls of
gnttab_end_foreign_access(). While at it avoid double free of ring
pages and grant references via xennet_disconnect_backend() in this case.

This is CVE-2022-23042 / part of XSA-396.

---
V2:
- avoid double free
V3:
- remove pointless initializer (Jan Beulich)</description><pubDate>Thu, 22 Aug 2024 02:30:14 +0000</pubDate></item><item><title>CVE-2022-48901 | btrfs: do not start relocation until in progress drops are done</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48901</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: do not start relocation until in progress drops are done

We hit a bug with a recovering relocation on mount for one of our file
systems in production.  I reproduced this locally by injecting errors
into snapshot delete with balance running at the same time.  This
presented as an error while looking up an extent item

  WARNING: CPU: 5 PID: 1501 at fs/btrfs/extent-tree.c:866 lookup_inline_extent_backref+0x647/0x680
  CPU: 5 PID: 1501 Comm: btrfs-balance Not tainted 5.16.0-rc8+ #8
  RIP: 0010:lookup_inline_extent_backref+0x647/0x680
  RSP: 0018:ffffae0a023ab960 EFLAGS: 00010202
  RAX: 0000000000000001 RBX: 0000000000000000 RCX: 0000000000000000
  RDX: 0000000000000000 RSI: 000000000000000c RDI: 0000000000000000
  RBP: ffff943fd2a39b60 R08: 0000000000000000 R09: 0000000000000001
  R10: 0001434088152de0 R11: 0000000000000000 R12: 0000000001d05000
  R13: ffff943fd2a39b60 R14: ffff943fdb96f2a0 R15: ffff9442fc923000
  FS:  0000000000000000(0000) GS:ffff944e9eb40000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 00007f1157b1fca8 CR3: 000000010f092000 CR4: 0000000000350ee0
  Call Trace:
   
   insert_inline_extent_backref+0x46/0xd0
   __btrfs_inc_extent_ref.isra.0+0x5f/0x200
   ? btrfs_merge_delayed_refs+0x164/0x190
   __btrfs_run_delayed_refs+0x561/0xfa0
   ? btrfs_search_slot+0x7b4/0xb30
   ? btrfs_update_root+0x1a9/0x2c0
   btrfs_run_delayed_refs+0x73/0x1f0
   ? btrfs_update_root+0x1a9/0x2c0
   btrfs_commit_transaction+0x50/0xa50
   ? btrfs_update_reloc_root+0x122/0x220
   prepare_to_merge+0x29f/0x320
   relocate_block_group+0x2b8/0x550
   btrfs_relocate_block_group+0x1a6/0x350
   btrfs_relocate_chunk+0x27/0xe0
   btrfs_balance+0x777/0xe60
   balance_kthread+0x35/0x50
   ? btrfs_balance+0xe60/0xe60
   kthread+0x16b/0x190
   ? set_kthread_struct+0x40/0x40
   ret_from_fork+0x22/0x30
   

Normally snapshot deletion and relocation are excluded from running at
the same time by the fs_info-&gt;cleaner_mutex.  However if we had a
pending balance waiting to get the -&gt;cleaner_mutex, and a snapshot
deletion was running, and then the box crashed, we would come up in a
state where we have a half deleted snapshot.

Again, in the normal case the snapshot deletion needs to complete before
relocation can start, but in this case relocation could very well start
before the snapshot deletion completes, as we simply add the root to the
dead roots list and wait for the next time the cleaner runs to clean up
the snapshot.

Fix this by setting a bit on the fs_info if we have any DEAD_ROOT's that
had a pending drop_progress key.  If they do then we know we were in the
middle of the drop operation and set a flag on the fs_info.  Then
balance can wait until this flag is cleared to start up again.

If there are DEAD_ROOT's that don't have a drop_progress set then we're
safe to start balance right away as we'll be properly protected by the
cleaner_mutex.</description><pubDate>Thu, 22 Aug 2024 02:30:14 +0000</pubDate></item><item><title>CVE-2022-48902 | btrfs: do not WARN_ON() if we have PageError set</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48902</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: do not WARN_ON() if we have PageError set

Whenever we do any extent buffer operations we call
assert_eb_page_uptodate() to complain loudly if we're operating on an
non-uptodate page.  Our overnight tests caught this warning earlier this
week

  WARNING: CPU: 1 PID: 553508 at fs/btrfs/extent_io.c:6849 assert_eb_page_uptodate+0x3f/0x50
  CPU: 1 PID: 553508 Comm: kworker/u4:13 Tainted: G        W         5.17.0-rc3+ #564
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-2.fc32 04/01/2014
  Workqueue: btrfs-cache btrfs_work_helper
  RIP: 0010:assert_eb_page_uptodate+0x3f/0x50
  RSP: 0018:ffffa961440a7c68 EFLAGS: 00010246
  RAX: 0017ffffc0002112 RBX: ffffe6e74453f9c0 RCX: 0000000000001000
  RDX: ffffe6e74467c887 RSI: ffffe6e74453f9c0 RDI: ffff8d4c5efc2fc0
  RBP: 0000000000000d56 R08: ffff8d4d4a224000 R09: 0000000000000000
  R10: 00015817fa9d1ef0 R11: 000000000000000c R12: 00000000000007b1
  R13: ffff8d4c5efc2fc0 R14: 0000000001500000 R15: 0000000001cb1000
  FS:  0000000000000000(0000) GS:ffff8d4dbbd00000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 00007ff31d3448d8 CR3: 0000000118be8004 CR4: 0000000000370ee0
  Call Trace:

   extent_buffer_test_bit+0x3f/0x70
   free_space_test_bit+0xa6/0xc0
   load_free_space_tree+0x1f6/0x470
   caching_thread+0x454/0x630
   ? rcu_read_lock_sched_held+0x12/0x60
   ? rcu_read_lock_sched_held+0x12/0x60
   ? rcu_read_lock_sched_held+0x12/0x60
   ? lock_release+0x1f0/0x2d0
   btrfs_work_helper+0xf2/0x3e0
   ? lock_release+0x1f0/0x2d0
   ? finish_task_switch.isra.0+0xf9/0x3a0
   process_one_work+0x26d/0x580
   ? process_one_work+0x580/0x580
   worker_thread+0x55/0x3b0
   ? process_one_work+0x580/0x580
   kthread+0xf0/0x120
   ? kthread_complete_and_exit+0x20/0x20
   ret_from_fork+0x1f/0x30

This was partially fixed by c2e39305299f01 ("btrfs: clear extent buffer
uptodate when we fail to write it"), however all that fix did was keep
us from finding extent buffers after a failed writeout.  It didn't keep
us from continuing to use a buffer that we already had found.

In this case we're searching the commit root to cache the block group,
so we can start committing the transaction and switch the commit root
and then start writing.  After the switch we can look up an extent
buffer that hasn't been written yet and start processing that block
group.  Then we fail to write that block out and clear Uptodate on the
page, and then we start spewing these errors.

Normally we're protected by the tree lock to a certain degree here.  If
we read a block we have that block read locked, and we block the writer
from locking the block before we submit it for the write.  However this
isn't necessarily fool proof because the read could happen before we do
the submit_bio and after we locked and unlocked the extent buffer.

Also in this particular case we have path-&gt;skip_locking set, so that
won't save us here.  We'll simply get a block that was valid when we
read it, but became invalid while we were using it.

What we really want is to catch the case where we've "read" a block but
it's not marked Uptodate.  On read we ClearPageError(), so if we're
!Uptodate and !Error we know we didn't do the right thing for reading
the page.

Fix this by checking !Uptodate &amp;&amp; !Error, this way we will not complain
if our buffer gets invalidated while we're using it, and we'll maintain
the spirit of the check which is to make sure we have a fully in-cache
block while we're messing with it.</description><pubDate>Thu, 22 Aug 2024 02:30:14 +0000</pubDate></item><item><title>CVE-2022-48903 | btrfs: fix relocation crash due to premature return from btrfs_commit_transaction()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48903</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix relocation crash due to premature return from btrfs_commit_transaction()

We are seeing crashes similar to the following trace:

[38.969182] WARNING: CPU: 20 PID: 2105 at fs/btrfs/relocation.c:4070 btrfs_relocate_block_group+0x2dc/0x340 [btrfs]
[38.973556] CPU: 20 PID: 2105 Comm: btrfs Not tainted 5.17.0-rc4 #54
[38.974580] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
[38.976539] RIP: 0010:btrfs_relocate_block_group+0x2dc/0x340 [btrfs]
[38.980336] RSP: 0000:ffffb0dd42e03c20 EFLAGS: 00010206
[38.981218] RAX: ffff96cfc4ede800 RBX: ffff96cfc3ce0000 RCX: 000000000002ca14
[38.982560] RDX: 0000000000000000 RSI: 4cfd109a0bcb5d7f RDI: ffff96cfc3ce0360
[38.983619] RBP: ffff96cfc309c000 R08: 0000000000000000 R09: 0000000000000000
[38.984678] R10: ffff96cec0000001 R11: ffffe84c80000000 R12: ffff96cfc4ede800
[38.985735] R13: 0000000000000000 R14: 0000000000000000 R15: ffff96cfc3ce0360
[38.987146] FS:  00007f11c15218c0(0000) GS:ffff96d6dfb00000(0000) knlGS:0000000000000000
[38.988662] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[38.989398] CR2: 00007ffc922c8e60 CR3: 00000001147a6001 CR4: 0000000000370ee0
[38.990279] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[38.991219] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[38.992528] Call Trace:
[38.992854]  
[38.993148]  btrfs_relocate_chunk+0x27/0xe0 [btrfs]
[38.993941]  btrfs_balance+0x78e/0xea0 [btrfs]
[38.994801]  ? vsnprintf+0x33c/0x520
[38.995368]  ? __kmalloc_track_caller+0x351/0x440
[38.996198]  btrfs_ioctl_balance+0x2b9/0x3a0 [btrfs]
[38.997084]  btrfs_ioctl+0x11b0/0x2da0 [btrfs]
[38.997867]  ? mod_objcg_state+0xee/0x340
[38.998552]  ? seq_release+0x24/0x30
[38.999184]  ? proc_nr_files+0x30/0x30
[38.999654]  ? call_rcu+0xc8/0x2f0
[39.000228]  ? __x64_sys_ioctl+0x84/0xc0
[39.000872]  ? btrfs_ioctl_get_supported_features+0x30/0x30 [btrfs]
[39.001973]  __x64_sys_ioctl+0x84/0xc0
[39.002566]  do_syscall_64+0x3a/0x80
[39.003011]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[39.003735] RIP: 0033:0x7f11c166959b
[39.007324] RSP: 002b:00007fff2543e998 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
[39.008521] RAX: ffffffffffffffda RBX: 00007f11c1521698 RCX: 00007f11c166959b
[39.009833] RDX: 00007fff2543ea40 RSI: 00000000c4009420 RDI: 0000000000000003
[39.011270] RBP: 0000000000000003 R08: 0000000000000013 R09: 00007f11c16f94e0
[39.012581] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fff25440df3
[39.014046] R13: 0000000000000000 R14: 00007fff2543ea40 R15: 0000000000000001
[39.015040]  
[39.015418] ---[ end trace 0000000000000000 ]---
[43.131559] ------------[ cut here ]------------
[43.132234] kernel BUG at fs/btrfs/extent-tree.c:2717!
[43.133031] invalid opcode: 0000 [#1] PREEMPT SMP PTI
[43.133702] CPU: 1 PID: 1839 Comm: btrfs Tainted: G        W         5.17.0-rc4 #54
[43.134863] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
[43.136426] RIP: 0010:unpin_extent_range+0x37a/0x4f0 [btrfs]
[43.139913] RSP: 0000:ffffb0dd4216bc70 EFLAGS: 00010246
[43.140629] RAX: 0000000000000000 RBX: ffff96cfc34490f8 RCX: 0000000000000001
[43.141604] RDX: 0000000080000001 RSI: 0000000051d00000 RDI: 00000000ffffffff
[43.142645] RBP: 0000000000000000 R08: 0000000000000000 R09: ffff96cfd07dca50
[43.143669] R10: ffff96cfc46e8a00 R11: fffffffffffec000 R12: 0000000041d00000
[43.144657] R13: ffff96cfc3ce0000 R14: ffffb0dd4216bd08 R15: 0000000000000000
[43.145686] FS:  00007f7657dd68c0(0000) GS:ffff96d6df640000(0000) knlGS:0000000000000000
[43.146808] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[43.147584] CR2: 00007f7fe81bf5b0 CR3: 00000001093ee004 CR4: 0000000000370ee0
[43.148589] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[43.149581] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 00000000000
---truncated---</description><pubDate>Thu, 22 Aug 2024 02:30:15 +0000</pubDate></item><item><title>CVE-2022-48904 | iommu/amd: Fix I/O page table memory leak</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48904</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/amd: Fix I/O page table memory leak

The current logic updates the I/O page table mode for the domain
before calling the logic to free memory used for the page table.
This results in IOMMU page table memory leak, and can be observed
when launching VM w/ pass-through devices.

Fix by freeing the memory used for page table before updating the mode.</description><pubDate>Thu, 22 Aug 2024 02:30:15 +0000</pubDate></item><item><title>CVE-2022-48905 | ibmvnic: free reset-work-item when flushing</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48905</link><description>In the Linux kernel, the following vulnerability has been resolved:

ibmvnic: free reset-work-item when flushing

Fix a tiny memory leak when flushing the reset work queue.</description><pubDate>Thu, 22 Aug 2024 02:30:16 +0000</pubDate></item><item><title>CVE-2022-48906 | mptcp: Correctly set DATA_FIN timeout when number of retransmits is large</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48906</link><description>In the Linux kernel, the following vulnerability has been resolved:

mptcp: Correctly set DATA_FIN timeout when number of retransmits is large

Syzkaller with UBSAN uncovered a scenario where a large number of
DATA_FIN retransmits caused a shift-out-of-bounds in the DATA_FIN
timeout calculation:

================================================================================
UBSAN: shift-out-of-bounds in net/mptcp/protocol.c:470:29
shift exponent 32 is too large for 32-bit type 'unsigned int'
CPU: 1 PID: 13059 Comm: kworker/1:0 Not tainted 5.17.0-rc2-00630-g5fbf21c90c60 #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
Workqueue: events mptcp_worker
Call Trace:
 
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
 ubsan_epilogue+0xb/0x5a lib/ubsan.c:151
 __ubsan_handle_shift_out_of_bounds.cold+0xb2/0x20e lib/ubsan.c:330
 mptcp_set_datafin_timeout net/mptcp/protocol.c:470 [inline]
 __mptcp_retrans.cold+0x72/0x77 net/mptcp/protocol.c:2445
 mptcp_worker+0x58a/0xa70 net/mptcp/protocol.c:2528
 process_one_work+0x9df/0x16d0 kernel/workqueue.c:2307
 worker_thread+0x95/0xe10 kernel/workqueue.c:2454
 kthread+0x2f4/0x3b0 kernel/kthread.c:377
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295
 
================================================================================

This change limits the maximum timeout by limiting the size of the
shift, which keeps all intermediate values in-bounds.</description><pubDate>Thu, 22 Aug 2024 02:30:16 +0000</pubDate></item><item><title>CVE-2022-48907 | auxdisplay: lcd2s: Fix memory leak in -&amp;gt;remove()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48907</link><description>In the Linux kernel, the following vulnerability has been resolved:

auxdisplay: lcd2s: Fix memory leak in -&gt;remove()

Once allocated the struct lcd2s_data is never freed.
Fix the memory leak by switching to devm_kzalloc().</description><pubDate>Thu, 22 Aug 2024 02:30:16 +0000</pubDate></item><item><title>CVE-2022-48908 | net: arcnet: com20020: Fix null-ptr-deref in com20020pci_probe()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48908</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: arcnet: com20020: Fix null-ptr-deref in com20020pci_probe()

During driver initialization, the pointer of card info, i.e. the
variable 'ci' is required. However, the definition of
'com20020pci_id_table' reveals that this field is empty for some
devices, which will cause null pointer dereference when initializing
these devices.

The following log reveals it:

[    3.973806] KASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]
[    3.973819] RIP: 0010:com20020pci_probe+0x18d/0x13e0 [com20020_pci]
[    3.975181] Call Trace:
[    3.976208]  local_pci_probe+0x13f/0x210
[    3.977248]  pci_device_probe+0x34c/0x6d0
[    3.977255]  ? pci_uevent+0x470/0x470
[    3.978265]  really_probe+0x24c/0x8d0
[    3.978273]  __driver_probe_device+0x1b3/0x280
[    3.979288]  driver_probe_device+0x50/0x370

Fix this by checking whether the 'ci' is a null pointer first.</description><pubDate>Thu, 22 Aug 2024 02:30:17 +0000</pubDate></item><item><title>CVE-2022-48909 | net/smc: fix connection leak</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48909</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/smc: fix connection leak

There's a potential leak issue under following execution sequence :

smc_release  				smc_connect_work
if (sk-&gt;sk_state == SMC_INIT)
					send_clc_confirim
	tcp_abort();
					...
					sk.sk_state = SMC_ACTIVE
smc_close_active
switch(sk-&gt;sk_state) {
...
case SMC_ACTIVE:
	smc_close_final()
	// then wait peer closed

Unfortunately, tcp_abort() may discard CLC CONFIRM messages that are
still in the tcp send buffer, in which case our connection token cannot
be delivered to the server side, which means that we cannot get a
passive close message at all. Therefore, it is impossible for the to be
disconnected at all.

This patch tries a very simple way to avoid this issue, once the state
has changed to SMC_ACTIVE after tcp_abort(), we can actively abort the
smc connection, considering that the state is SMC_INIT before
tcp_abort(), abandoning the complete disconnection process should not
cause too much problem.

In fact, this problem may exist as long as the CLC CONFIRM message is
not received by the server. Whether a timer should be added after
smc_close_final() needs to be discussed in the future. But even so, this
patch provides a faster release for connection in above case, it should
also be valuable.</description><pubDate>Thu, 22 Aug 2024 02:30:17 +0000</pubDate></item><item><title>CVE-2022-48910 | net: ipv6: ensure we call ipv6_mc_down() at most once</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48910</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: ipv6: ensure we call ipv6_mc_down() at most once

There are two reasons for addrconf_notify() to be called with NETDEV_DOWN:
either the network device is actually going down, or IPv6 was disabled
on the interface.

If either of them stays down while the other is toggled, we repeatedly
call the code for NETDEV_DOWN, including ipv6_mc_down(), while never
calling the corresponding ipv6_mc_up() in between. This will cause a
new entry in idev-&gt;mc_tomb to be allocated for each multicast group
the interface is subscribed to, which in turn leaks one struct ifmcaddr6
per nontrivial multicast group the interface is subscribed to.

The following reproducer will leak at least $n objects:

ip addr add ff2e::4242/32 dev eth0 autojoin
sysctl -w net.ipv6.conf.eth0.disable_ipv6=1
for i in $(seq 1 $n); do
	ip link set up eth0; ip link set down eth0
done

Joining groups with IPV6_ADD_MEMBERSHIP (unprivileged) or setting the
sysctl net.ipv6.conf.eth0.forwarding to 1 (=&gt; subscribing to ff02::2)
can also be used to create a nontrivial idev-&gt;mc_list, which will the
leak objects with the right up-down-sequence.

Based on both sources for NETDEV_DOWN events the interface IPv6 state
should be considered:

 - not ready if the network interface is not ready OR IPv6 is disabled
   for it
 - ready if the network interface is ready AND IPv6 is enabled for it

The functions ipv6_mc_up() and ipv6_down() should only be run when this
state changes.

Implement this by remembering when the IPv6 state is ready, and only
run ipv6_mc_down() if it actually changed from ready to not ready.

The other direction (not ready -&gt; ready) already works correctly, as:

 - the interface notification triggered codepath for NETDEV_UP /
   NETDEV_CHANGE returns early if ipv6 is disabled, and
 - the disable_ipv6=0 triggered codepath skips fully initializing the
   interface as long as addrconf_link_ready(dev) returns false
 - calling ipv6_mc_up() repeatedly does not leak anything</description><pubDate>Thu, 22 Aug 2024 02:30:18 +0000</pubDate></item><item><title>CVE-2022-48911 | netfilter: nf_queue: fix possible use-after-free</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48911</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_queue: fix possible use-after-free

Eric Dumazet says:
  The sock_hold() side seems suspect, because there is no guarantee
  that sk_refcnt is not already 0.

On failure, we cannot queue the packet and need to indicate an
error.  The packet will be dropped by the caller.

v2: split skb prefetch hunk into separate change</description><pubDate>Thu, 22 Aug 2024 02:30:18 +0000</pubDate></item><item><title>CVE-2022-48912 | netfilter: fix use-after-free in __nf_register_net_hook()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48912</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: fix use-after-free in __nf_register_net_hook()

We must not dereference @new_hooks after nf_hook_mutex has been released,
because other threads might have freed our allocated hooks already.

BUG: KASAN: use-after-free in nf_hook_entries_get_hook_ops include/linux/netfilter.h:130 [inline]
BUG: KASAN: use-after-free in hooks_validate net/netfilter/core.c:171 [inline]
BUG: KASAN: use-after-free in __nf_register_net_hook+0x77a/0x820 net/netfilter/core.c:438
Read of size 2 at addr ffff88801c1a8000 by task syz-executor237/4430

CPU: 1 PID: 4430 Comm: syz-executor237 Not tainted 5.17.0-rc5-syzkaller-00306-g2293be58d6a1 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
 print_address_description.constprop.0.cold+0x8d/0x336 mm/kasan/report.c:255
 __kasan_report mm/kasan/report.c:442 [inline]
 kasan_report.cold+0x83/0xdf mm/kasan/report.c:459
 nf_hook_entries_get_hook_ops include/linux/netfilter.h:130 [inline]
 hooks_validate net/netfilter/core.c:171 [inline]
 __nf_register_net_hook+0x77a/0x820 net/netfilter/core.c:438
 nf_register_net_hook+0x114/0x170 net/netfilter/core.c:571
 nf_register_net_hooks+0x59/0xc0 net/netfilter/core.c:587
 nf_synproxy_ipv6_init+0x85/0xe0 net/netfilter/nf_synproxy_core.c:1218
 synproxy_tg6_check+0x30d/0x560 net/ipv6/netfilter/ip6t_SYNPROXY.c:81
 xt_check_target+0x26c/0x9e0 net/netfilter/x_tables.c:1038
 check_target net/ipv6/netfilter/ip6_tables.c:530 [inline]
 find_check_entry.constprop.0+0x7f1/0x9e0 net/ipv6/netfilter/ip6_tables.c:573
 translate_table+0xc8b/0x1750 net/ipv6/netfilter/ip6_tables.c:735
 do_replace net/ipv6/netfilter/ip6_tables.c:1153 [inline]
 do_ip6t_set_ctl+0x56e/0xb90 net/ipv6/netfilter/ip6_tables.c:1639
 nf_setsockopt+0x83/0xe0 net/netfilter/nf_sockopt.c:101
 ipv6_setsockopt+0x122/0x180 net/ipv6/ipv6_sockglue.c:1024
 rawv6_setsockopt+0xd3/0x6a0 net/ipv6/raw.c:1084
 __sys_setsockopt+0x2db/0x610 net/socket.c:2180
 __do_sys_setsockopt net/socket.c:2191 [inline]
 __se_sys_setsockopt net/socket.c:2188 [inline]
 __x64_sys_setsockopt+0xba/0x150 net/socket.c:2188
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7f65a1ace7d9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 71 15 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f65a1a7f308 EFLAGS: 00000246 ORIG_RAX: 0000000000000036
RAX: ffffffffffffffda RBX: 0000000000000006 RCX: 00007f65a1ace7d9
RDX: 0000000000000040 RSI: 0000000000000029 RDI: 0000000000000003
RBP: 00007f65a1b574c8 R08: 0000000000000001 R09: 0000000000000000
R10: 0000000020000000 R11: 0000000000000246 R12: 00007f65a1b55130
R13: 00007f65a1b574c0 R14: 00007f65a1b24090 R15: 0000000000022000
 

The buggy address belongs to the page:
page:ffffea0000706a00 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1c1a8
flags: 0xfff00000000000(node=0|zone=1|lastcpupid=0x7ff)
raw: 00fff00000000000 ffffea0001c1b108 ffffea000046dd08 0000000000000000
raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000
page dumped because: kasan: bad access detected
page_owner tracks the page as freed
page last allocated via order 2, migratetype Unmovable, gfp_mask 0x52dc0(GFP_KERNEL|__GFP_NOWARN|__GFP_NORETRY|__GFP_COMP|__GFP_ZERO), pid 4430, ts 1061781545818, free_ts 1061791488993
 prep_new_page mm/page_alloc.c:2434 [inline]
 get_page_from_freelist+0xa72/0x2f50 mm/page_alloc.c:4165
 __alloc_pages+0x1b2/0x500 mm/page_alloc.c:5389
 __alloc_pages_node include/linux/gfp.h:572 [inline]
 alloc_pages_node include/linux/gfp.h:595 [inline]
 kmalloc_large_node+0x62/0x130 mm/slub.c:4438
 __kmalloc_node+0x35a/0x4a0 mm/slub.
---truncated---</description><pubDate>Thu, 22 Aug 2024 02:30:18 +0000</pubDate></item><item><title>CVE-2022-48913 | blktrace: fix use after free for struct blk_trace</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48913</link><description>In the Linux kernel, the following vulnerability has been resolved:

blktrace: fix use after free for struct blk_trace

When tracing the whole disk, 'dropped' and 'msg' will be created
under 'q-&gt;debugfs_dir' and 'bt-&gt;dir' is NULL, thus blk_trace_free()
won't remove those files. What's worse, the following UAF can be
triggered because of accessing stale 'dropped' and 'msg':

==================================================================
BUG: KASAN: use-after-free in blk_dropped_read+0x89/0x100
Read of size 4 at addr ffff88816912f3d8 by task blktrace/1188

CPU: 27 PID: 1188 Comm: blktrace Not tainted 5.17.0-rc4-next-20220217+ #469
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-4
Call Trace:
 
 dump_stack_lvl+0x34/0x44
 print_address_description.constprop.0.cold+0xab/0x381
 ? blk_dropped_read+0x89/0x100
 ? blk_dropped_read+0x89/0x100
 kasan_report.cold+0x83/0xdf
 ? blk_dropped_read+0x89/0x100
 kasan_check_range+0x140/0x1b0
 blk_dropped_read+0x89/0x100
 ? blk_create_buf_file_callback+0x20/0x20
 ? kmem_cache_free+0xa1/0x500
 ? do_sys_openat2+0x258/0x460
 full_proxy_read+0x8f/0xc0
 vfs_read+0xc6/0x260
 ksys_read+0xb9/0x150
 ? vfs_write+0x3d0/0x3d0
 ? fpregs_assert_state_consistent+0x55/0x60
 ? exit_to_user_mode_prepare+0x39/0x1e0
 do_syscall_64+0x35/0x80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7fbc080d92fd
Code: ce 20 00 00 75 10 b8 00 00 00 00 0f 05 48 3d 01 f0 ff ff 73 31 c3 48 83 1
RSP: 002b:00007fbb95ff9cb0 EFLAGS: 00000293 ORIG_RAX: 0000000000000000
RAX: ffffffffffffffda RBX: 00007fbb95ff9dc0 RCX: 00007fbc080d92fd
RDX: 0000000000000100 RSI: 00007fbb95ff9cc0 RDI: 0000000000000045
RBP: 0000000000000045 R08: 0000000000406299 R09: 00000000fffffffd
R10: 000000000153afa0 R11: 0000000000000293 R12: 00007fbb780008c0
R13: 00007fbb78000938 R14: 0000000000608b30 R15: 00007fbb780029c8
 

Allocated by task 1050:
 kasan_save_stack+0x1e/0x40
 __kasan_kmalloc+0x81/0xa0
 do_blk_trace_setup+0xcb/0x410
 __blk_trace_setup+0xac/0x130
 blk_trace_ioctl+0xe9/0x1c0
 blkdev_ioctl+0xf1/0x390
 __x64_sys_ioctl+0xa5/0xe0
 do_syscall_64+0x35/0x80
 entry_SYSCALL_64_after_hwframe+0x44/0xae

Freed by task 1050:
 kasan_save_stack+0x1e/0x40
 kasan_set_track+0x21/0x30
 kasan_set_free_info+0x20/0x30
 __kasan_slab_free+0x103/0x180
 kfree+0x9a/0x4c0
 __blk_trace_remove+0x53/0x70
 blk_trace_ioctl+0x199/0x1c0
 blkdev_common_ioctl+0x5e9/0xb30
 blkdev_ioctl+0x1a5/0x390
 __x64_sys_ioctl+0xa5/0xe0
 do_syscall_64+0x35/0x80
 entry_SYSCALL_64_after_hwframe+0x44/0xae

The buggy address belongs to the object at ffff88816912f380
 which belongs to the cache kmalloc-96 of size 96
The buggy address is located 88 bytes inside of
 96-byte region [ffff88816912f380, ffff88816912f3e0)
The buggy address belongs to the page:
page:000000009a1b4e7c refcount:1 mapcount:0 mapping:0000000000000000 index:0x0f
flags: 0x17ffffc0000200(slab|node=0|zone=2|lastcpupid=0x1fffff)
raw: 0017ffffc0000200 ffffea00044f1100 dead000000000002 ffff88810004c780
raw: 0000000000000000 0000000000200020 00000001ffffffff 0000000000000000
page dumped because: kasan: bad access detected

Memory state around the buggy address:
 ffff88816912f280: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
 ffff88816912f300: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
&gt;ffff88816912f380: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
                                                    ^
 ffff88816912f400: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
 ffff88816912f480: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
==================================================================</description><pubDate>Thu, 22 Aug 2024 02:30:19 +0000</pubDate></item><item><title>CVE-2022-48914 | xen/netfront: destroy queues before real_num_tx_queues is zeroed</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48914</link><description>In the Linux kernel, the following vulnerability has been resolved:

xen/netfront: destroy queues before real_num_tx_queues is zeroed

xennet_destroy_queues() relies on info-&gt;netdev-&gt;real_num_tx_queues to
delete queues. Since d7dac083414eb5bb99a6d2ed53dc2c1b405224e5
("net-sysfs: update the queue counts in the unregistration path"),
unregister_netdev() indirectly sets real_num_tx_queues to 0. Those two
facts together means, that xennet_destroy_queues() called from
xennet_remove() cannot do its job, because it's called after
unregister_netdev(). This results in kfree-ing queues that are still
linked in napi, which ultimately crashes:

    BUG: kernel NULL pointer dereference, address: 0000000000000000
    #PF: supervisor read access in kernel mode
    #PF: error_code(0x0000) - not-present page
    PGD 0 P4D 0
    Oops: 0000 [#1] PREEMPT SMP PTI
    CPU: 1 PID: 52 Comm: xenwatch Tainted: G        W         5.16.10-1.32.fc32.qubes.x86_64+ #226
    RIP: 0010:free_netdev+0xa3/0x1a0
    Code: ff 48 89 df e8 2e e9 00 00 48 8b 43 50 48 8b 08 48 8d b8 a0 fe ff ff 48 8d a9 a0 fe ff ff 49 39 c4 75 26 eb 47 e8 ed c1 66 ff &lt;48&gt; 8b 85 60 01 00 00 48 8d 95 60 01 00 00 48 89 ef 48 2d 60 01 00
    RSP: 0000:ffffc90000bcfd00 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: ffff88800edad000 RCX: 0000000000000000
    RDX: 0000000000000001 RSI: ffffc90000bcfc30 RDI: 00000000ffffffff
    RBP: fffffffffffffea0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000001 R12: ffff88800edad050
    R13: ffff8880065f8f88 R14: 0000000000000000 R15: ffff8880066c6680
    FS:  0000000000000000(0000) GS:ffff8880f3300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000000 CR3: 00000000e998c006 CR4: 00000000003706e0
    Call Trace:
     
     xennet_remove+0x13d/0x300 [xen_netfront]
     xenbus_dev_remove+0x6d/0xf0
     __device_release_driver+0x17a/0x240
     device_release_driver+0x24/0x30
     bus_remove_device+0xd8/0x140
     device_del+0x18b/0x410
     ? _raw_spin_unlock+0x16/0x30
     ? klist_iter_exit+0x14/0x20
     ? xenbus_dev_request_and_reply+0x80/0x80
     device_unregister+0x13/0x60
     xenbus_dev_changed+0x18e/0x1f0
     xenwatch_thread+0xc0/0x1a0
     ? do_wait_intr_irq+0xa0/0xa0
     kthread+0x16b/0x190
     ? set_kthread_struct+0x40/0x40
     ret_from_fork+0x22/0x30
     

Fix this by calling xennet_destroy_queues() from xennet_uninit(),
when real_num_tx_queues is still available. This ensures that queues are
destroyed when real_num_tx_queues is set to 0, regardless of how
unregister_netdev() was called.

Originally reported at
https://github.com/QubesOS/qubes-issues/issues/7257</description><pubDate>Thu, 22 Aug 2024 02:30:19 +0000</pubDate></item><item><title>CVE-2022-48915 | thermal: core: Fix TZ_GET_TRIP NULL pointer dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48915</link><description>In the Linux kernel, the following vulnerability has been resolved:

thermal: core: Fix TZ_GET_TRIP NULL pointer dereference

Do not call get_trip_hyst() from thermal_genl_cmd_tz_get_trip() if
the thermal zone does not define one.</description><pubDate>Thu, 22 Aug 2024 02:30:19 +0000</pubDate></item><item><title>CVE-2022-48916 | iommu/vt-d: Fix double list_add when enabling VMD in scalable mode</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48916</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/vt-d: Fix double list_add when enabling VMD in scalable mode

When enabling VMD and IOMMU scalable mode, the following kernel panic
call trace/kernel log is shown in Eagle Stream platform (Sapphire Rapids
CPU) during booting:

pci 0000:59:00.5: Adding to iommu group 42
...
vmd 0000:59:00.5: PCI host bridge to bus 10000:80
pci 10000:80:01.0: [8086:352a] type 01 class 0x060400
pci 10000:80:01.0: reg 0x10: [mem 0x00000000-0x0001ffff 64bit]
pci 10000:80:01.0: enabling Extended Tags
pci 10000:80:01.0: PME# supported from D0 D3hot D3cold
pci 10000:80:01.0: DMAR: Setup RID2PASID failed
pci 10000:80:01.0: Failed to add to iommu group 42: -16
pci 10000:80:03.0: [8086:352b] type 01 class 0x060400
pci 10000:80:03.0: reg 0x10: [mem 0x00000000-0x0001ffff 64bit]
pci 10000:80:03.0: enabling Extended Tags
pci 10000:80:03.0: PME# supported from D0 D3hot D3cold
------------[ cut here ]------------
kernel BUG at lib/list_debug.c:29!
invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
CPU: 0 PID: 7 Comm: kworker/0:1 Not tainted 5.17.0-rc3+ #7
Hardware name: Lenovo ThinkSystem SR650V3/SB27A86647, BIOS ESE101Y-1.00 01/13/2022
Workqueue: events work_for_cpu_fn
RIP: 0010:__list_add_valid.cold+0x26/0x3f
Code: 9a 4a ab ff 4c 89 c1 48 c7 c7 40 0c d9 9e e8 b9 b1 fe ff 0f
      0b 48 89 f2 4c 89 c1 48 89 fe 48 c7 c7 f0 0c d9 9e e8 a2 b1
      fe ff &lt;0f&gt; 0b 48 89 d1 4c 89 c6 4c 89 ca 48 c7 c7 98 0c d9
      9e e8 8b b1 fe
RSP: 0000:ff5ad434865b3a40 EFLAGS: 00010246
RAX: 0000000000000058 RBX: ff4d61160b74b880 RCX: ff4d61255e1fffa8
RDX: 0000000000000000 RSI: 00000000fffeffff RDI: ffffffff9fd34f20
RBP: ff4d611d8e245c00 R08: 0000000000000000 R09: ff5ad434865b3888
R10: ff5ad434865b3880 R11: ff4d61257fdc6fe8 R12: ff4d61160b74b8a0
R13: ff4d61160b74b8a0 R14: ff4d611d8e245c10 R15: ff4d611d8001ba70
FS:  0000000000000000(0000) GS:ff4d611d5ea00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: ff4d611fa1401000 CR3: 0000000aa0210001 CR4: 0000000000771ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 
 intel_pasid_alloc_table+0x9c/0x1d0
 dmar_insert_one_dev_info+0x423/0x540
 ? device_to_iommu+0x12d/0x2f0
 intel_iommu_attach_device+0x116/0x290
 __iommu_attach_device+0x1a/0x90
 iommu_group_add_device+0x190/0x2c0
 __iommu_probe_device+0x13e/0x250
 iommu_probe_device+0x24/0x150
 iommu_bus_notifier+0x69/0x90
 blocking_notifier_call_chain+0x5a/0x80
 device_add+0x3db/0x7b0
 ? arch_memremap_can_ram_remap+0x19/0x50
 ? memremap+0x75/0x140
 pci_device_add+0x193/0x1d0
 pci_scan_single_device+0xb9/0xf0
 pci_scan_slot+0x4c/0x110
 pci_scan_child_bus_extend+0x3a/0x290
 vmd_enable_domain.constprop.0+0x63e/0x820
 vmd_probe+0x163/0x190
 local_pci_probe+0x42/0x80
 work_for_cpu_fn+0x13/0x20
 process_one_work+0x1e2/0x3b0
 worker_thread+0x1c4/0x3a0
 ? rescuer_thread+0x370/0x370
 kthread+0xc7/0xf0
 ? kthread_complete_and_exit+0x20/0x20
 ret_from_fork+0x1f/0x30
 
Modules linked in:
---[ end trace 0000000000000000 ]---
...
Kernel panic - not syncing: Fatal exception
Kernel Offset: 0x1ca00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
---[ end Kernel panic - not syncing: Fatal exception ]---

The following 'lspci' output shows devices '10000:80:*' are subdevices of
the VMD device 0000:59:00.5:

  $ lspci
  ...
  0000:59:00.5 RAID bus controller: Intel Corporation Volume Management Device NVMe RAID Controller (rev 20)
  ...
  10000:80:01.0 PCI bridge: Intel Corporation Device 352a (rev 03)
  10000:80:03.0 PCI bridge: Intel Corporation Device 352b (rev 03)
  10000:80:05.0 PCI bridge: Intel Corporation Device 352c (rev 03)
  10000:80:07.0 PCI bridge: Intel Corporation Device 352d (rev 03)
  10000:81:00.0 Non-Volatile memory controller: Intel Corporation NVMe Datacenter SSD [3DNAND, Beta Rock Controller]
  10000:82:00
---truncated---</description><pubDate>Thu, 22 Aug 2024 02:30:20 +0000</pubDate></item><item><title>CVE-2022-48917 | ASoC: ops: Shift tested values in snd_soc_put_volsw() by +min</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48917</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: ops: Shift tested values in snd_soc_put_volsw() by +min

While the $val/$val2 values passed in from userspace are always &gt;= 0
integers, the limits of the control can be signed integers and the $min
can be non-zero and less than zero. To correctly validate $val/$val2
against platform_max, add the $min offset to val first.</description><pubDate>Thu, 22 Aug 2024 02:30:20 +0000</pubDate></item><item><title>CVE-2022-48918 | iwlwifi: mvm: check debugfs_dir ptr before use</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48918</link><description>In the Linux kernel, the following vulnerability has been resolved:

iwlwifi: mvm: check debugfs_dir ptr before use

When "debugfs=off" is used on the kernel command line, iwiwifi's
mvm module uses an invalid/unchecked debugfs_dir pointer and causes
a BUG:

 BUG: kernel NULL pointer dereference, address: 000000000000004f
 #PF: supervisor read access in kernel mode
 #PF: error_code(0x0000) - not-present page
 PGD 0 P4D 0
 Oops: 0000 [#1] PREEMPT SMP
 CPU: 1 PID: 503 Comm: modprobe Tainted: G        W         5.17.0-rc5 #7
 Hardware name: Dell Inc. Inspiron 15 5510/076F7Y, BIOS 2.4.1 11/05/2021
 RIP: 0010:iwl_mvm_dbgfs_register+0x692/0x700 [iwlmvm]
 Code: 69 a0 be 80 01 00 00 48 c7 c7 50 73 6a a0 e8 95 cf ee e0 48 8b 83 b0 1e 00 00 48 c7 c2 54 73 6a a0 be 64 00 00 00 48 8d 7d 8c &lt;48&gt; 8b 48 50 e8 15 22 07 e1 48 8b 43 28 48 8d 55 8c 48 c7 c7 5f 73
 RSP: 0018:ffffc90000a0ba68 EFLAGS: 00010246
 RAX: ffffffffffffffff RBX: ffff88817d6e3328 RCX: ffff88817d6e3328
 RDX: ffffffffa06a7354 RSI: 0000000000000064 RDI: ffffc90000a0ba6c
 RBP: ffffc90000a0bae0 R08: ffffffff824e4880 R09: ffffffffa069d620
 R10: ffffc90000a0ba00 R11: ffffffffffffffff R12: 0000000000000000
 R13: ffffc90000a0bb28 R14: ffff88817d6e3328 R15: ffff88817d6e3320
 FS:  00007f64dd92d740(0000) GS:ffff88847f640000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 000000000000004f CR3: 000000016fc79001 CR4: 0000000000770ee0
 PKRU: 55555554
 Call Trace:
  
  ? iwl_mvm_mac_setup_register+0xbdc/0xda0 [iwlmvm]
  iwl_mvm_start_post_nvm+0x71/0x100 [iwlmvm]
  iwl_op_mode_mvm_start+0xab8/0xb30 [iwlmvm]
  _iwl_op_mode_start+0x6f/0xd0 [iwlwifi]
  iwl_opmode_register+0x6a/0xe0 [iwlwifi]
  ? 0xffffffffa0231000
  iwl_mvm_init+0x35/0x1000 [iwlmvm]
  ? 0xffffffffa0231000
  do_one_initcall+0x5a/0x1b0
  ? kmem_cache_alloc+0x1e5/0x2f0
  ? do_init_module+0x1e/0x220
  do_init_module+0x48/0x220
  load_module+0x2602/0x2bc0
  ? __kernel_read+0x145/0x2e0
  ? kernel_read_file+0x229/0x290
  __do_sys_finit_module+0xc5/0x130
  ? __do_sys_finit_module+0xc5/0x130
  __x64_sys_finit_module+0x13/0x20
  do_syscall_64+0x38/0x90
  entry_SYSCALL_64_after_hwframe+0x44/0xae
 RIP: 0033:0x7f64dda564dd
 Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d 1b 29 0f 00 f7 d8 64 89 01 48
 RSP: 002b:00007ffdba393f88 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
 RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f64dda564dd
 RDX: 0000000000000000 RSI: 00005575399e2ab2 RDI: 0000000000000001
 RBP: 000055753a91c5e0 R08: 0000000000000000 R09: 0000000000000002
 R10: 0000000000000001 R11: 0000000000000246 R12: 00005575399e2ab2
 R13: 000055753a91ceb0 R14: 0000000000000000 R15: 000055753a923018
  
 Modules linked in: btintel(+) btmtk bluetooth vfat snd_hda_codec_hdmi fat snd_hda_codec_realtek snd_hda_codec_generic iwlmvm(+) snd_sof_pci_intel_tgl mac80211 snd_sof_intel_hda_common soundwire_intel soundwire_generic_allocation soundwire_cadence soundwire_bus snd_sof_intel_hda snd_sof_pci snd_sof snd_sof_xtensa_dsp snd_soc_hdac_hda snd_hda_ext_core snd_soc_acpi_intel_match snd_soc_acpi snd_soc_core btrfs snd_compress snd_hda_intel snd_intel_dspcfg snd_intel_sdw_acpi snd_hda_codec raid6_pq iwlwifi snd_hda_core snd_pcm snd_timer snd soundcore cfg80211 intel_ish_ipc(+) thunderbolt rfkill intel_ishtp ucsi_acpi wmi i2c_hid_acpi i2c_hid evdev
 CR2: 000000000000004f
 ---[ end trace 0000000000000000 ]---

Check the debugfs_dir pointer for an error before using it.

[change to make both conditional]</description><pubDate>Thu, 22 Aug 2024 02:30:21 +0000</pubDate></item><item><title>CVE-2022-48919 | cifs: fix double free race when mount fails in cifs_get_root()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48919</link><description>In the Linux kernel, the following vulnerability has been resolved:

cifs: fix double free race when mount fails in cifs_get_root()

When cifs_get_root() fails during cifs_smb3_do_mount() we call
deactivate_locked_super() which eventually will call delayed_free() which
will free the context.
In this situation we should not proceed to enter the out: section in
cifs_smb3_do_mount() and free the same resources a second time.

[Thu Feb 10 12:59:06 2022] BUG: KASAN: use-after-free in rcu_cblist_dequeue+0x32/0x60
[Thu Feb 10 12:59:06 2022] Read of size 8 at addr ffff888364f4d110 by task swapper/1/0

[Thu Feb 10 12:59:06 2022] CPU: 1 PID: 0 Comm: swapper/1 Tainted: G           OE     5.17.0-rc3+ #4
[Thu Feb 10 12:59:06 2022] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.0 12/17/2019
[Thu Feb 10 12:59:06 2022] Call Trace:
[Thu Feb 10 12:59:06 2022]  
[Thu Feb 10 12:59:06 2022]  dump_stack_lvl+0x5d/0x78
[Thu Feb 10 12:59:06 2022]  print_address_description.constprop.0+0x24/0x150
[Thu Feb 10 12:59:06 2022]  ? rcu_cblist_dequeue+0x32/0x60
[Thu Feb 10 12:59:06 2022]  kasan_report.cold+0x7d/0x117
[Thu Feb 10 12:59:06 2022]  ? rcu_cblist_dequeue+0x32/0x60
[Thu Feb 10 12:59:06 2022]  __asan_load8+0x86/0xa0
[Thu Feb 10 12:59:06 2022]  rcu_cblist_dequeue+0x32/0x60
[Thu Feb 10 12:59:06 2022]  rcu_core+0x547/0xca0
[Thu Feb 10 12:59:06 2022]  ? call_rcu+0x3c0/0x3c0
[Thu Feb 10 12:59:06 2022]  ? __this_cpu_preempt_check+0x13/0x20
[Thu Feb 10 12:59:06 2022]  ? lock_is_held_type+0xea/0x140
[Thu Feb 10 12:59:06 2022]  rcu_core_si+0xe/0x10
[Thu Feb 10 12:59:06 2022]  __do_softirq+0x1d4/0x67b
[Thu Feb 10 12:59:06 2022]  __irq_exit_rcu+0x100/0x150
[Thu Feb 10 12:59:06 2022]  irq_exit_rcu+0xe/0x30
[Thu Feb 10 12:59:06 2022]  sysvec_hyperv_stimer0+0x9d/0xc0
...
[Thu Feb 10 12:59:07 2022] Freed by task 58179:
[Thu Feb 10 12:59:07 2022]  kasan_save_stack+0x26/0x50
[Thu Feb 10 12:59:07 2022]  kasan_set_track+0x25/0x30
[Thu Feb 10 12:59:07 2022]  kasan_set_free_info+0x24/0x40
[Thu Feb 10 12:59:07 2022]  ____kasan_slab_free+0x137/0x170
[Thu Feb 10 12:59:07 2022]  __kasan_slab_free+0x12/0x20
[Thu Feb 10 12:59:07 2022]  slab_free_freelist_hook+0xb3/0x1d0
[Thu Feb 10 12:59:07 2022]  kfree+0xcd/0x520
[Thu Feb 10 12:59:07 2022]  cifs_smb3_do_mount+0x149/0xbe0 [cifs]
[Thu Feb 10 12:59:07 2022]  smb3_get_tree+0x1a0/0x2e0 [cifs]
[Thu Feb 10 12:59:07 2022]  vfs_get_tree+0x52/0x140
[Thu Feb 10 12:59:07 2022]  path_mount+0x635/0x10c0
[Thu Feb 10 12:59:07 2022]  __x64_sys_mount+0x1bf/0x210
[Thu Feb 10 12:59:07 2022]  do_syscall_64+0x5c/0xc0
[Thu Feb 10 12:59:07 2022]  entry_SYSCALL_64_after_hwframe+0x44/0xae

[Thu Feb 10 12:59:07 2022] Last potentially related work creation:
[Thu Feb 10 12:59:07 2022]  kasan_save_stack+0x26/0x50
[Thu Feb 10 12:59:07 2022]  __kasan_record_aux_stack+0xb6/0xc0
[Thu Feb 10 12:59:07 2022]  kasan_record_aux_stack_noalloc+0xb/0x10
[Thu Feb 10 12:59:07 2022]  call_rcu+0x76/0x3c0
[Thu Feb 10 12:59:07 2022]  cifs_umount+0xce/0xe0 [cifs]
[Thu Feb 10 12:59:07 2022]  cifs_kill_sb+0xc8/0xe0 [cifs]
[Thu Feb 10 12:59:07 2022]  deactivate_locked_super+0x5d/0xd0
[Thu Feb 10 12:59:07 2022]  cifs_smb3_do_mount+0xab9/0xbe0 [cifs]
[Thu Feb 10 12:59:07 2022]  smb3_get_tree+0x1a0/0x2e0 [cifs]
[Thu Feb 10 12:59:07 2022]  vfs_get_tree+0x52/0x140
[Thu Feb 10 12:59:07 2022]  path_mount+0x635/0x10c0
[Thu Feb 10 12:59:07 2022]  __x64_sys_mount+0x1bf/0x210
[Thu Feb 10 12:59:07 2022]  do_syscall_64+0x5c/0xc0
[Thu Feb 10 12:59:07 2022]  entry_SYSCALL_64_after_hwframe+0x44/0xae</description><pubDate>Thu, 22 Aug 2024 02:30:21 +0000</pubDate></item><item><title>CVE-2022-48920 | btrfs: get rid of warning on transaction commit when using flushoncommit</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48920</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: get rid of warning on transaction commit when using flushoncommit

When using the flushoncommit mount option, during almost every transaction
commit we trigger a warning from __writeback_inodes_sb_nr():

  $ cat fs/fs-writeback.c:
  (...)
  static void __writeback_inodes_sb_nr(struct super_block *sb, ...
  {
        (...)
        WARN_ON(!rwsem_is_locked(&amp;amp;sb-&gt;s_umount));
        (...)
  }
  (...)

The trace produced in dmesg looks like the following:

  [947.473890] WARNING: CPU: 5 PID: 930 at fs/fs-writeback.c:2610 __writeback_inodes_sb_nr+0x7e/0xb3
  [947.481623] Modules linked in: nfsd nls_cp437 cifs asn1_decoder cifs_arc4 fscache cifs_md4 ipmi_ssif
  [947.489571] CPU: 5 PID: 930 Comm: btrfs-transacti Not tainted 95.16.3-srb-asrock-00001-g36437ad63879 #186
  [947.497969] RIP: 0010:__writeback_inodes_sb_nr+0x7e/0xb3
  [947.502097] Code: 24 10 4c 89 44 24 18 c6 (...)
  [947.519760] RSP: 0018:ffffc90000777e10 EFLAGS: 00010246
  [947.523818] RAX: 0000000000000000 RBX: 0000000000963300 RCX: 0000000000000000
  [947.529765] RDX: 0000000000000000 RSI: 000000000000fa51 RDI: ffffc90000777e50
  [947.535740] RBP: ffff888101628a90 R08: ffff888100955800 R09: ffff888100956000
  [947.541701] R10: 0000000000000002 R11: 0000000000000001 R12: ffff888100963488
  [947.547645] R13: ffff888100963000 R14: ffff888112fb7200 R15: ffff888100963460
  [947.553621] FS:  0000000000000000(0000) GS:ffff88841fd40000(0000) knlGS:0000000000000000
  [947.560537] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  [947.565122] CR2: 0000000008be50c4 CR3: 000000000220c000 CR4: 00000000001006e0
  [947.571072] Call Trace:
  [947.572354]  
  [947.573266]  btrfs_commit_transaction+0x1f1/0x998
  [947.576785]  ? start_transaction+0x3ab/0x44e
  [947.579867]  ? schedule_timeout+0x8a/0xdd
  [947.582716]  transaction_kthread+0xe9/0x156
  [947.585721]  ? btrfs_cleanup_transaction.isra.0+0x407/0x407
  [947.590104]  kthread+0x131/0x139
  [947.592168]  ? set_kthread_struct+0x32/0x32
  [947.595174]  ret_from_fork+0x22/0x30
  [947.597561]  
  [947.598553] ---[ end trace 644721052755541c ]---

This is because we started using writeback_inodes_sb() to flush delalloc
when committing a transaction (when using -o flushoncommit), in order to
avoid deadlocks with filesystem freeze operations. This change was made
by commit ce8ea7cc6eb313 ("btrfs: don't call btrfs_start_delalloc_roots
in flushoncommit"). After that change we started producing that warning,
and every now and then a user reports this since the warning happens too
often, it spams dmesg/syslog, and a user is unsure if this reflects any
problem that might compromise the filesystem's reliability.

We can not just lock the sb-&gt;s_umount semaphore before calling
writeback_inodes_sb(), because that would at least deadlock with
filesystem freezing, since at fs/super.c:freeze_super() sync_filesystem()
is called while we are holding that semaphore in write mode, and that can
trigger a transaction commit, resulting in a deadlock. It would also
trigger the same type of deadlock in the unmount path. Possibly, it could
also introduce some other locking dependencies that lockdep would report.

To fix this call try_to_writeback_inodes_sb() instead of
writeback_inodes_sb(), because that will try to read lock sb-&gt;s_umount
and then will only call writeback_inodes_sb() if it was able to lock it.
This is fine because the cases where it can't read lock sb-&gt;s_umount
are during a filesystem unmount or during a filesystem freeze - in those
cases sb-&gt;s_umount is write locked and sync_filesystem() is called, which
calls writeback_inodes_sb(). In other words, in all cases where we can't
take a read lock on sb-&gt;s_umount, writeback is already being triggered
elsewhere.

An alternative would be to call btrfs_start_delalloc_roots() with a
number of pages different from LONG_MAX, for example matching the number
of delalloc bytes we currently have, in 
---truncated---</description><pubDate>Thu, 22 Aug 2024 02:30:21 +0000</pubDate></item><item><title>CVE-2022-48921 | sched/fair: Fix fault in reweight_entity</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48921</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched/fair: Fix fault in reweight_entity

Syzbot found a GPF in reweight_entity. This has been bisected to
commit 4ef0c5c6b5ba ("kernel/sched: Fix sched_fork() access an invalid
sched_task_group")

There is a race between sched_post_fork() and setpriority(PRIO_PGRP)
within a thread group that causes a null-ptr-deref in
reweight_entity() in CFS. The scenario is that the main process spawns
number of new threads, which then call setpriority(PRIO_PGRP, 0, -20),
wait, and exit.  For each of the new threads the copy_process() gets
invoked, which adds the new task_struct and calls sched_post_fork()
for it.

In the above scenario there is a possibility that
setpriority(PRIO_PGRP) and set_one_prio() will be called for a thread
in the group that is just being created by copy_process(), and for
which the sched_post_fork() has not been executed yet. This will
trigger a null pointer dereference in reweight_entity(), as it will
try to access the run queue pointer, which hasn't been set.

Before the mentioned change the cfs_rq pointer for the task  has been
set in sched_fork(), which is called much earlier in copy_process(),
before the new task is added to the thread_group.  Now it is done in
the sched_post_fork(), which is called after that.  To fix the issue
the remove the update_load param from the update_load param() function
and call reweight_task() only if the task flag doesn't have the
TASK_NEW flag set.</description><pubDate>Thu, 22 Aug 2024 02:30:22 +0000</pubDate></item><item><title>CVE-2022-48922 | riscv: fix oops caused by irqsoff latency tracer</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48922</link><description>In the Linux kernel, the following vulnerability has been resolved:

riscv: fix oops caused by irqsoff latency tracer

The trace_hardirqs_{on,off}() require the caller to setup frame pointer
properly. This because these two functions use macro 'CALLER_ADDR1' (aka.
__builtin_return_address(1)) to acquire caller info. If the $fp is used
for other purpose, the code generated this macro (as below) could trigger
memory access fault.

   0xffffffff8011510e &lt;+80&gt;:    ld      a1,-16(s0)
   0xffffffff80115112 &lt;+84&gt;:    ld      s2,-8(a1)  # &lt;-- paging fault here

The oops message during booting if compiled with 'irqoff' tracer enabled:
[    0.039615][    T0] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000f8
[    0.041925][    T0] Oops [#1]
[    0.042063][    T0] Modules linked in:
[    0.042864][    T0] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.17.0-rc1-00233-g9a20c48d1ed2 #29
[    0.043568][    T0] Hardware name: riscv-virtio,qemu (DT)
[    0.044343][    T0] epc : trace_hardirqs_on+0x56/0xe2
[    0.044601][    T0]  ra : restore_all+0x12/0x6e
[    0.044721][    T0] epc : ffffffff80126a5c ra : ffffffff80003b94 sp : ffffffff81403db0
[    0.044801][    T0]  gp : ffffffff8163acd8 tp : ffffffff81414880 t0 : 0000000000000020
[    0.044882][    T0]  t1 : 0098968000000000 t2 : 0000000000000000 s0 : ffffffff81403de0
[    0.044967][    T0]  s1 : 0000000000000000 a0 : 0000000000000001 a1 : 0000000000000100
[    0.045046][    T0]  a2 : 0000000000000000 a3 : 0000000000000000 a4 : 0000000000000000
[    0.045124][    T0]  a5 : 0000000000000000 a6 : 0000000000000000 a7 : 0000000054494d45
[    0.045210][    T0]  s2 : ffffffff80003b94 s3 : ffffffff81a8f1b0 s4 : ffffffff80e27b50
[    0.045289][    T0]  s5 : ffffffff81414880 s6 : ffffffff8160fa00 s7 : 00000000800120e8
[    0.045389][    T0]  s8 : 0000000080013100 s9 : 000000000000007f s10: 0000000000000000
[    0.045474][    T0]  s11: 0000000000000000 t3 : 7fffffffffffffff t4 : 0000000000000000
[    0.045548][    T0]  t5 : 0000000000000000 t6 : ffffffff814aa368
[    0.045620][    T0] status: 0000000200000100 badaddr: 00000000000000f8 cause: 000000000000000d
[    0.046402][    T0] [] restore_all+0x12/0x6e

This because the $fp(aka. $s0) register is not used as frame pointer in the
assembly entry code.

	resume_kernel:
		REG_L s0, TASK_TI_PREEMPT_COUNT(tp)
		bnez s0, restore_all
		REG_L s0, TASK_TI_FLAGS(tp)
                andi s0, s0, _TIF_NEED_RESCHED
                beqz s0, restore_all
                call preempt_schedule_irq
                j restore_all

To fix above issue, here we add one extra level wrapper for function
trace_hardirqs_{on,off}() so they can be safely called by low level entry
code.</description><pubDate>Thu, 22 Aug 2024 02:30:22 +0000</pubDate></item><item><title>CVE-2022-48923 | btrfs: prevent copying too big compressed lzo segment</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48923</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: prevent copying too big compressed lzo segment

Compressed length can be corrupted to be a lot larger than memory
we have allocated for buffer.
This will cause memcpy in copy_compressed_segment to write outside
of allocated memory.

This mostly results in stuck read syscall but sometimes when using
btrfs send can get #GP

  kernel: general protection fault, probably for non-canonical address 0x841551d5c1000: 0000 [#1] PREEMPT SMP NOPTI
  kernel: CPU: 17 PID: 264 Comm: kworker/u256:7 Tainted: P           OE     5.17.0-rc2-1 #12
  kernel: Workqueue: btrfs-endio btrfs_work_helper [btrfs]
  kernel: RIP: 0010:lzo_decompress_bio (./include/linux/fortify-string.h:225 fs/btrfs/lzo.c:322 fs/btrfs/lzo.c:394) btrfs
  Code starting with the faulting instruction
  ===========================================
     0:*  48 8b 06                mov    (%rsi),%rax              &lt;-- trapping instruction
     3:   48 8d 79 08             lea    0x8(%rcx),%rdi
     7:   48 83 e7 f8             and    $0xfffffffffffffff8,%rdi
     b:   48 89 01                mov    %rax,(%rcx)
     e:   44 89 f0                mov    %r14d,%eax
    11:   48 8b 54 06 f8          mov    -0x8(%rsi,%rax,1),%rdx
  kernel: RSP: 0018:ffffb110812efd50 EFLAGS: 00010212
  kernel: RAX: 0000000000001000 RBX: 000000009ca264c8 RCX: ffff98996e6d8ff8
  kernel: RDX: 0000000000000064 RSI: 000841551d5c1000 RDI: ffffffff9500435d
  kernel: RBP: ffff989a3be856c0 R08: 0000000000000000 R09: 0000000000000000
  kernel: R10: 0000000000000000 R11: 0000000000001000 R12: ffff98996e6d8000
  kernel: R13: 0000000000000008 R14: 0000000000001000 R15: 000841551d5c1000
  kernel: FS:  0000000000000000(0000) GS:ffff98a09d640000(0000) knlGS:0000000000000000
  kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  kernel: CR2: 00001e9f984d9ea8 CR3: 000000014971a000 CR4: 00000000003506e0
  kernel: Call Trace:
  kernel:  
  kernel: end_compressed_bio_read (fs/btrfs/compression.c:104 fs/btrfs/compression.c:1363 fs/btrfs/compression.c:323) btrfs
  kernel: end_workqueue_fn (fs/btrfs/disk-io.c:1923) btrfs
  kernel: btrfs_work_helper (fs/btrfs/async-thread.c:326) btrfs
  kernel: process_one_work (./arch/x86/include/asm/jump_label.h:27 ./include/linux/jump_label.h:212 ./include/trace/events/workqueue.h:108 kernel/workqueue.c:2312)
  kernel: worker_thread (./include/linux/list.h:292 kernel/workqueue.c:2455)
  kernel: ? process_one_work (kernel/workqueue.c:2397)
  kernel: kthread (kernel/kthread.c:377)
  kernel: ? kthread_complete_and_exit (kernel/kthread.c:332)
  kernel: ret_from_fork (arch/x86/entry/entry_64.S:301)
  kernel:</description><pubDate>Thu, 22 Aug 2024 02:30:23 +0000</pubDate></item><item><title>CVE-2022-48924 | thermal: int340x: fix memory leak in int3400_notify()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48924</link><description>In the Linux kernel, the following vulnerability has been resolved:

thermal: int340x: fix memory leak in int3400_notify()

It is easy to hit the below memory leaks in my TigerLake platform:

unreferenced object 0xffff927c8b91dbc0 (size 32):
  comm "kworker/0:2", pid 112, jiffies 4294893323 (age 83.604s)
  hex dump (first 32 bytes):
    4e 41 4d 45 3d 49 4e 54 33 34 30 30 20 54 68 65  NAME=INT3400 The
    72 6d 61 6c 00 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b a5  rmal.kkkkkkkkkk.
  backtrace:
    [] __kmalloc_track_caller+0x2fe/0x4a0
    [] kvasprintf+0x65/0xd0
    [] kasprintf+0x4e/0x70
    [] int3400_notify+0x82/0x120 [int3400_thermal]
    [] acpi_ev_notify_dispatch+0x54/0x71
    [] acpi_os_execute_deferred+0x17/0x30
    [] process_one_work+0x21a/0x3f0
    [] worker_thread+0x4a/0x3b0
    [] kthread+0xfd/0x130
    [] ret_from_fork+0x1f/0x30

Fix it by calling kfree() accordingly.</description><pubDate>Thu, 22 Aug 2024 02:30:23 +0000</pubDate></item><item><title>CVE-2022-48925 | RDMA/cma: Do not change route.addr.src_addr outside state checks</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48925</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/cma: Do not change route.addr.src_addr outside state checks

If the state is not idle then resolve_prepare_src() should immediately
fail and no change to global state should happen. However, it
unconditionally overwrites the src_addr trying to build a temporary any
address.

For instance if the state is already RDMA_CM_LISTEN then this will corrupt
the src_addr and would cause the test in cma_cancel_operation():

           if (cma_any_addr(cma_src_addr(id_priv)) &amp;&amp; !id_priv-&gt;cma_dev)

Which would manifest as this trace from syzkaller:

  BUG: KASAN: use-after-free in __list_add_valid+0x93/0xa0 lib/list_debug.c:26
  Read of size 8 at addr ffff8881546491e0 by task syz-executor.1/32204

  CPU: 1 PID: 32204 Comm: syz-executor.1 Not tainted 5.12.0-rc8-syzkaller #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
  Call Trace:
   __dump_stack lib/dump_stack.c:79 [inline]
   dump_stack+0x141/0x1d7 lib/dump_stack.c:120
   print_address_description.constprop.0.cold+0x5b/0x2f8 mm/kasan/report.c:232
   __kasan_report mm/kasan/report.c:399 [inline]
   kasan_report.cold+0x7c/0xd8 mm/kasan/report.c:416
   __list_add_valid+0x93/0xa0 lib/list_debug.c:26
   __list_add include/linux/list.h:67 [inline]
   list_add_tail include/linux/list.h:100 [inline]
   cma_listen_on_all drivers/infiniband/core/cma.c:2557 [inline]
   rdma_listen+0x787/0xe00 drivers/infiniband/core/cma.c:3751
   ucma_listen+0x16a/0x210 drivers/infiniband/core/ucma.c:1102
   ucma_write+0x259/0x350 drivers/infiniband/core/ucma.c:1732
   vfs_write+0x28e/0xa30 fs/read_write.c:603
   ksys_write+0x1ee/0x250 fs/read_write.c:658
   do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
   entry_SYSCALL_64_after_hwframe+0x44/0xae

This is indicating that an rdma_id_private was destroyed without doing
cma_cancel_listens().

Instead of trying to re-use the src_addr memory to indirectly create an
any address derived from the dst build one explicitly on the stack and
bind to that as any other normal flow would do. rdma_bind_addr() will copy
it over the src_addr once it knows the state is valid.

This is similar to commit bc0bdc5afaa7 ("RDMA/cma: Do not change
route.addr.src_addr.ss_family")</description><pubDate>Thu, 22 Aug 2024 02:30:23 +0000</pubDate></item><item><title>CVE-2024-43033 | JPress through 5.1.1 on Windows has an arbitrary file upload vulnerability that could cause arbitrary code execution via ::$DATA to Attachme...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43033</link><description>JPress through 5.1.1 on Windows has an arbitrary file upload vulnerability that could cause arbitrary code execution via ::$DATA to AttachmentController, such as a .jsp::$DATA file to io.jpress.web.commons.controller.AttachmentController#upload. NOTE: this is unrelated to the attack vector for CVE-2024-32358.</description><pubDate>Thu, 22 Aug 2024 01:41:15 +0000</pubDate></item><item><title>CVE-2024-42056 | Retool (self-hosted enterprise) through 3.40.0 inserts resource authentication credentials into sent data. Credentials for users with "Use" ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-42056</link><description>Retool (self-hosted enterprise) through 3.40.0 inserts resource authentication credentials into sent data. Credentials for users with "Use" permissions can be discovered (by an authenticated attacker) via the /api/resources endpoint. The earliest affected version is 3.18.1.</description><pubDate>Thu, 22 Aug 2024 01:41:16 +0000</pubDate></item></channel></rss>