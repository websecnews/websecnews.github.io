<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Sat, 04 Oct 2025 15:30:10 +0000</lastBuildDate><item><title>CVE-2022-50470 | xhci: Remove device endpoints from bandwidth list when freeing the device</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50470</link><description>In the Linux kernel, the following vulnerability has been resolved:

xhci: Remove device endpoints from bandwidth list when freeing the device

Endpoints are normally deleted from the bandwidth list when they are
dropped, before the virt device is freed.

If xHC host is dying or being removed then the endpoints aren't dropped
cleanly due to functions returning early to avoid interacting with a
non-accessible host controller.

So check and delete endpoints that are still on the bandwidth list when
freeing the virt device.

Solves a list_del corruption kernel crash when unbinding xhci-pci,
caused by xhci_mem_cleanup() when it later tried to delete already freed
endpoints from the bandwidth list.

This only affects hosts that use software bandwidth checking, which
currenty is only the xHC in intel Panther Point PCH (Ivy Bridge)</description><pubDate>Sat, 04 Oct 2025 15:30:12 +0000</pubDate></item><item><title>CVE-2022-50471 | xen/gntdev: Accommodate VMA splitting</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50471</link><description>In the Linux kernel, the following vulnerability has been resolved:

xen/gntdev: Accommodate VMA splitting

Prior to this commit, the gntdev driver code did not handle the
following scenario correctly with paravirtualized (PV) Xen domains:

* User process sets up a gntdev mapping composed of two grant mappings
  (i.e., two pages shared by another Xen domain).
* User process munmap()s one of the pages.
* User process munmap()s the remaining page.
* User process exits.

In the scenario above, the user process would cause the kernel to log
the following messages in dmesg for the first munmap(), and the second
munmap() call would result in similar log messages:

  BUG: Bad page map in process doublemap.test  pte:... pmd:...
  page:0000000057c97bff refcount:1 mapcount:-1 \
    mapping:0000000000000000 index:0x0 pfn:...
  ...
  page dumped because: bad pte
  ...
  file:gntdev fault:0x0 mmap:gntdev_mmap [xen_gntdev] readpage:0x0
  ...
  Call Trace:
   &lt;TASK&gt;
   dump_stack_lvl+0x46/0x5e
   print_bad_pte.cold+0x66/0xb6
   unmap_page_range+0x7e5/0xdc0
   unmap_vmas+0x78/0xf0
   unmap_region+0xa8/0x110
   __do_munmap+0x1ea/0x4e0
   __vm_munmap+0x75/0x120
   __x64_sys_munmap+0x28/0x40
   do_syscall_64+0x38/0x90
   entry_SYSCALL_64_after_hwframe+0x61/0xcb
   ...

For each munmap() call, the Xen hypervisor (if built with CONFIG_DEBUG)
would print out the following and trigger a general protection fault in
the affected Xen PV domain:

  (XEN) d0v... Attempt to implicitly unmap d0's grant PTE ...
  (XEN) d0v... Attempt to implicitly unmap d0's grant PTE ...

As of this writing, gntdev_grant_map structure's vma field (referred to
as map-&gt;vma below) is mainly used for checking the start and end
addresses of mappings. However, with split VMAs, these may change, and
there could be more than one VMA associated with a gntdev mapping.
Hence, remove the use of map-&gt;vma and rely on map-&gt;pages_vm_start for
the original start address and on (map-&gt;count &lt;&lt; PAGE_SHIFT) for the
original mapping size. Let the invalidate() and find_special_page()
hooks use these.

Also, given that there can be multiple VMAs associated with a gntdev
mapping, move the "mmu_interval_notifier_remove(&amp;map-&gt;notifier)" call to
the end of gntdev_put_map, so that the MMU notifier is only removed
after the closing of the last remaining VMA.

Finally, use an atomic to prevent inadvertent gntdev mapping re-use,
instead of using the map-&gt;live_grants atomic counter and/or the map-&gt;vma
pointer (the latter of which is now removed). This prevents the
userspace from mmap()'ing (with MAP_FIXED) a gntdev mapping over the
same address range as a previously set up gntdev mapping. This scenario
can be summarized with the following call-trace, which was valid prior
to this commit:

  mmap
    gntdev_mmap
  mmap (repeat mmap with MAP_FIXED over the same address range)
    gntdev_invalidate
      unmap_grant_pages (sets 'being_removed' entries to true)
        gnttab_unmap_refs_async
    unmap_single_vma
    gntdev_mmap (maps the shared pages again)
  munmap
    gntdev_invalidate
      unmap_grant_pages
        (no-op because 'being_removed' entries are true)
    unmap_single_vma (For PV domains, Xen reports that a granted page
      is being unmapped and triggers a general protection fault in the
      affected domain, if Xen was built with CONFIG_DEBUG)

The fix for this last scenario could be worth its own commit, but we
opted for a single commit, because removing the gntdev_grant_map
structure's vma field requires guarding the entry to gntdev_mmap(), and
the live_grants atomic counter is not sufficient on its own to prevent
the mmap() over a pre-existing mapping.</description><pubDate>Sat, 04 Oct 2025 15:30:12 +0000</pubDate></item><item><title>CVE-2022-50472 | IB/mad: Don&amp;#x27;t call to function that might sleep while in atomic context</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50472</link><description>In the Linux kernel, the following vulnerability has been resolved:

IB/mad: Don't call to function that might sleep while in atomic context

Tracepoints are not allowed to sleep, as such the following splat is
generated due to call to ib_query_pkey() in atomic context.

WARNING: CPU: 0 PID: 1888000 at kernel/trace/ring_buffer.c:2492 rb_commit+0xc1/0x220
CPU: 0 PID: 1888000 Comm: kworker/u9:0 Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0-305.3.1.el8.x86_64 #1
 Hardware name: Red Hat KVM, BIOS 1.13.0-2.module_el8.3.0+555+a55c8938 04/01/2014
 Workqueue: ib-comp-unb-wq ib_cq_poll_work [ib_core]
 RIP: 0010:rb_commit+0xc1/0x220
 RSP: 0000:ffffa8ac80f9bca0 EFLAGS: 00010202
 RAX: ffff8951c7c01300 RBX: ffff8951c7c14a00 RCX: 0000000000000246
 RDX: ffff8951c707c000 RSI: ffff8951c707c57c RDI: ffff8951c7c14a00
 RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
 R10: ffff8951c7c01300 R11: 0000000000000001 R12: 0000000000000246
 R13: 0000000000000000 R14: ffffffff964c70c0 R15: 0000000000000000
 FS:  0000000000000000(0000) GS:ffff8951fbc00000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 00007f20e8f39010 CR3: 000000002ca10005 CR4: 0000000000170ef0
 Call Trace:
  ring_buffer_unlock_commit+0x1d/0xa0
  trace_buffer_unlock_commit_regs+0x3b/0x1b0
  trace_event_buffer_commit+0x67/0x1d0
  trace_event_raw_event_ib_mad_recv_done_handler+0x11c/0x160 [ib_core]
  ib_mad_recv_done+0x48b/0xc10 [ib_core]
  ? trace_event_raw_event_cq_poll+0x6f/0xb0 [ib_core]
  __ib_process_cq+0x91/0x1c0 [ib_core]
  ib_cq_poll_work+0x26/0x80 [ib_core]
  process_one_work+0x1a7/0x360
  ? create_worker+0x1a0/0x1a0
  worker_thread+0x30/0x390
  ? create_worker+0x1a0/0x1a0
  kthread+0x116/0x130
  ? kthread_flush_work_fn+0x10/0x10
  ret_from_fork+0x35/0x40
 ---[ end trace 78ba8509d3830a16 ]---</description><pubDate>Sat, 04 Oct 2025 15:30:13 +0000</pubDate></item><item><title>CVE-2022-50473 | cpufreq: Init completion before kobject_init_and_add()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50473</link><description>In the Linux kernel, the following vulnerability has been resolved:

cpufreq: Init completion before kobject_init_and_add()

In cpufreq_policy_alloc(), it will call uninitialed completion in
cpufreq_sysfs_release() when kobject_init_and_add() fails. And
that will cause a crash such as the following page fault in complete:

BUG: unable to handle page fault for address: fffffffffffffff8
[..]
RIP: 0010:complete+0x98/0x1f0
[..]
Call Trace:
 kobject_put+0x1be/0x4c0
 cpufreq_online.cold+0xee/0x1fd
 cpufreq_add_dev+0x183/0x1e0
 subsys_interface_register+0x3f5/0x4e0
 cpufreq_register_driver+0x3b7/0x670
 acpi_cpufreq_init+0x56c/0x1000 [acpi_cpufreq]
 do_one_initcall+0x13d/0x780
 do_init_module+0x1c3/0x630
 load_module+0x6e67/0x73b0
 __do_sys_finit_module+0x181/0x240
 do_syscall_64+0x35/0x80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd</description><pubDate>Sat, 04 Oct 2025 15:30:13 +0000</pubDate></item><item><title>CVE-2022-50474 | macintosh: fix possible memory leak in macio_add_one_device()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50474</link><description>In the Linux kernel, the following vulnerability has been resolved:

macintosh: fix possible memory leak in macio_add_one_device()

Afer commit 1fa5ae857bb1 ("driver core: get rid of struct device's
bus_id string array"), the name of device is allocated dynamically. It
needs to be freed when of_device_register() fails. Call put_device() to
give up the reference that's taken in device_initialize(), so that it
can be freed in kobject_cleanup() when the refcount hits 0.

macio device is freed in macio_release_dev(), so the kfree() can be
removed.</description><pubDate>Sat, 04 Oct 2025 15:30:13 +0000</pubDate></item><item><title>CVE-2022-50475 | RDMA/core: Make sure &amp;quot;ib_port&amp;quot; is valid when access sysfs node</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50475</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/core: Make sure "ib_port" is valid when access sysfs node

The "ib_port" structure must be set before adding the sysfs kobject,
and reset after removing it, otherwise it may crash when accessing
the sysfs node:
  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000050
  Mem abort info:
    ESR = 0x96000006
    Exception class = DABT (current EL), IL = 32 bits
    SET = 0, FnV = 0
    EA = 0, S1PTW = 0
  Data abort info:
    ISV = 0, ISS = 0x00000006
    CM = 0, WnR = 0
  user pgtable: 4k pages, 48-bit VAs, pgdp = 00000000e85f5ba5
  [0000000000000050] pgd=0000000848fd9003, pud=000000085b387003, pmd=0000000000000000
  Internal error: Oops: 96000006 [#2] PREEMPT SMP
  Modules linked in: ib_umad(O) mlx5_ib(O) nfnetlink_cttimeout(E) nfnetlink(E) act_gact(E) cls_flower(E) sch_ingress(E) openvswitch(E) nsh(E) nf_nat_ipv6(E) nf_nat_ipv4(E) nf_conncount(E) nf_nat(E) nf_conntrack(E) nf_defrag_ipv6(E) nf_defrag_ipv4(E) mst_pciconf(O) ipmi_devintf(E) ipmi_msghandler(E) ipmb_dev_int(OE) mlx5_core(O) mlxfw(O) mlxdevm(O) auxiliary(O) ib_uverbs(O) ib_core(O) mlx_compat(O) psample(E) sbsa_gwdt(E) uio_pdrv_genirq(E) uio(E) mlxbf_pmc(OE) mlxbf_gige(OE) mlxbf_tmfifo(OE) gpio_mlxbf2(OE) pwr_mlxbf(OE) mlx_trio(OE) i2c_mlxbf(OE) mlx_bootctl(OE) bluefield_edac(OE) knem(O) ip_tables(E) ipv6(E) crc_ccitt(E) [last unloaded: mst_pci]
  Process grep (pid: 3372, stack limit = 0x0000000022055c92)
  CPU: 5 PID: 3372 Comm: grep Tainted: G      D    OE     4.19.161-mlnx.47.gadcd9e3 #1
  Hardware name: https://www.mellanox.com BlueField SoC/BlueField SoC, BIOS BlueField:3.9.2-15-ga2403ab Sep  8 2022
  pstate: 40000005 (nZcv daif -PAN -UAO)
  pc : hw_stat_port_show+0x4c/0x80 [ib_core]
  lr : port_attr_show+0x40/0x58 [ib_core]
  sp : ffff000029f43b50
  x29: ffff000029f43b50 x28: 0000000019375000
  x27: ffff8007b821a540 x26: ffff000029f43e30
  x25: 0000000000008000 x24: ffff000000eaa958
  x23: 0000000000001000 x22: ffff8007a4ce3000
  x21: ffff8007baff8000 x20: ffff8007b9066ac0
  x19: ffff8007bae97578 x18: 0000000000000000
  x17: 0000000000000000 x16: 0000000000000000
  x15: 0000000000000000 x14: 0000000000000000
  x13: 0000000000000000 x12: 0000000000000000
  x11: 0000000000000000 x10: 0000000000000000
  x9 : 0000000000000000 x8 : ffff8007a4ce4000
  x7 : 0000000000000000 x6 : 000000000000003f
  x5 : ffff000000e6a280 x4 : ffff8007a4ce3000
  x3 : 0000000000000000 x2 : aaaaaaaaaaaaaaab
  x1 : ffff8007b9066a10 x0 : ffff8007baff8000
  Call trace:
   hw_stat_port_show+0x4c/0x80 [ib_core]
   port_attr_show+0x40/0x58 [ib_core]
   sysfs_kf_seq_show+0x8c/0x150
   kernfs_seq_show+0x44/0x50
   seq_read+0x1b4/0x45c
   kernfs_fop_read+0x148/0x1d8
   __vfs_read+0x58/0x180
   vfs_read+0x94/0x154
   ksys_read+0x68/0xd8
   __arm64_sys_read+0x28/0x34
   el0_svc_common+0x88/0x18c
   el0_svc_handler+0x78/0x94
   el0_svc+0x8/0xe8
  Code: f2955562 aa1603e4 aa1503e0 f9405683 (f9402861)</description><pubDate>Sat, 04 Oct 2025 15:30:14 +0000</pubDate></item><item><title>CVE-2022-50476 | ntb_netdev: Use dev_kfree_skb_any() in interrupt context</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50476</link><description>In the Linux kernel, the following vulnerability has been resolved:

ntb_netdev: Use dev_kfree_skb_any() in interrupt context

TX/RX callback handlers (ntb_netdev_tx_handler(),
ntb_netdev_rx_handler()) can be called in interrupt
context via the DMA framework when the respective
DMA operations have completed. As such, any calls
by these routines to free skb's, should use the
interrupt context safe dev_kfree_skb_any() function.

Previously, these callback handlers would call the
interrupt unsafe version of dev_kfree_skb(). This has
not presented an issue on Intel IOAT DMA engines as
that driver utilizes tasklets rather than a hard
interrupt handler, like the AMD PTDMA DMA driver.
On AMD systems, a kernel WARNING message is
encountered, which is being issued from
skb_release_head_state() due to in_hardirq()
being true.

Besides the user visible WARNING from the kernel,
the other symptom of this bug was that TCP/IP performance
across the ntb_netdev interface was very poor, i.e.
approximately an order of magnitude below what was
expected. With the repair to use dev_kfree_skb_any(),
kernel WARNINGs from skb_release_head_state() ceased
and TCP/IP performance, as measured by iperf, was on
par with expected results, approximately 20 Gb/s on
AMD Milan based server. Note that this performance
is comparable with Intel based servers.</description><pubDate>Sat, 04 Oct 2025 15:30:14 +0000</pubDate></item><item><title>CVE-2022-50477 | rtc: class: Fix potential memleak in devm_rtc_allocate_device()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50477</link><description>In the Linux kernel, the following vulnerability has been resolved:

rtc: class: Fix potential memleak in devm_rtc_allocate_device()

devm_rtc_allocate_device() will alloc a rtc_device first, and then run
dev_set_name(). If dev_set_name() failed, the rtc_device will memleak.
Move devm_add_action_or_reset() in front of dev_set_name() to prevent
memleak.

unreferenced object 0xffff888110a53000 (size 2048):
  comm "python3", pid 470, jiffies 4296078308 (age 58.882s)
  hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 08 30 a5 10 81 88 ff ff  .........0......
    08 30 a5 10 81 88 ff ff 00 00 00 00 00 00 00 00  .0..............
  backtrace:
    [&lt;000000004aac0364&gt;] kmalloc_trace+0x21/0x110
    [&lt;000000000ff02202&gt;] devm_rtc_allocate_device+0xd4/0x400
    [&lt;000000001bdf5639&gt;] devm_rtc_device_register+0x1a/0x80
    [&lt;00000000351bf81c&gt;] rx4581_probe+0xdd/0x110 [rtc_rx4581]
    [&lt;00000000f0eba0ae&gt;] spi_probe+0xde/0x130
    [&lt;00000000bff89ee8&gt;] really_probe+0x175/0x3f0
    [&lt;00000000128e8d84&gt;] __driver_probe_device+0xe6/0x170
    [&lt;00000000ee5bf913&gt;] device_driver_attach+0x32/0x80
    [&lt;00000000f3f28f92&gt;] bind_store+0x10b/0x1a0
    [&lt;000000009ff812d8&gt;] drv_attr_store+0x49/0x70
    [&lt;000000008139c323&gt;] sysfs_kf_write+0x8d/0xb0
    [&lt;00000000b6146e01&gt;] kernfs_fop_write_iter+0x214/0x2d0
    [&lt;00000000ecbe3895&gt;] vfs_write+0x61a/0x7d0
    [&lt;00000000aa2196ea&gt;] ksys_write+0xc8/0x190
    [&lt;0000000046a600f5&gt;] do_syscall_64+0x37/0x90
    [&lt;00000000541a336f&gt;] entry_SYSCALL_64_after_hwframe+0x63/0xcd</description><pubDate>Sat, 04 Oct 2025 15:30:15 +0000</pubDate></item><item><title>CVE-2022-50478 | nilfs2: fix shift-out-of-bounds/overflow in nilfs_sb2_bad_offset()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50478</link><description>In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix shift-out-of-bounds/overflow in nilfs_sb2_bad_offset()

Patch series "nilfs2: fix UBSAN shift-out-of-bounds warnings on mount
time".

The first patch fixes a bug reported by syzbot, and the second one fixes
the remaining bug of the same kind.  Although they are triggered by the
same super block data anomaly, I divided it into the above two because the
details of the issues and how to fix it are different.

Both are required to eliminate the shift-out-of-bounds issues at mount
time.


This patch (of 2):

If the block size exponent information written in an on-disk superblock is
corrupted, nilfs_sb2_bad_offset helper function can trigger
shift-out-of-bounds warning followed by a kernel panic (if panic_on_warn
is set):

 shift exponent 38983 is too large for 64-bit type 'unsigned long long'
 Call Trace:
  &lt;TASK&gt;
  __dump_stack lib/dump_stack.c:88 [inline]
  dump_stack_lvl+0x1b1/0x28e lib/dump_stack.c:106
  ubsan_epilogue lib/ubsan.c:151 [inline]
  __ubsan_handle_shift_out_of_bounds+0x33d/0x3b0 lib/ubsan.c:322
  nilfs_sb2_bad_offset fs/nilfs2/the_nilfs.c:449 [inline]
  nilfs_load_super_block+0xdf5/0xe00 fs/nilfs2/the_nilfs.c:523
  init_nilfs+0xb7/0x7d0 fs/nilfs2/the_nilfs.c:577
  nilfs_fill_super+0xb1/0x5d0 fs/nilfs2/super.c:1047
  nilfs_mount+0x613/0x9b0 fs/nilfs2/super.c:1317
  ...

In addition, since nilfs_sb2_bad_offset() performs multiplication without
considering the upper bound, the computation may overflow if the disk
layout parameters are not normal.

This fixes these issues by inserting preliminary sanity checks for those
parameters and by converting the comparison from one involving
multiplication and left bit-shifting to one using division and right
bit-shifting.</description><pubDate>Sat, 04 Oct 2025 15:30:15 +0000</pubDate></item><item><title>CVE-2022-50479 | drm/amd: fix potential memory leak</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50479</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd: fix potential memory leak

This patch fix potential memory leak (clk_src) when function run
into last return NULL.

s/free/kfree/ - Alex</description><pubDate>Sat, 04 Oct 2025 15:30:15 +0000</pubDate></item><item><title>CVE-2022-50480 | memory: pl353-smc: Fix refcount leak bug in pl353_smc_probe()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50480</link><description>In the Linux kernel, the following vulnerability has been resolved:

memory: pl353-smc: Fix refcount leak bug in pl353_smc_probe()

The break of for_each_available_child_of_node() needs a
corresponding of_node_put() when the reference 'child' is not
used anymore. Here we do not need to call of_node_put() in
fail path as '!match' means no break.

While the of_platform_device_create() will created a new
reference by 'child' but it has considered the refcounting.</description><pubDate>Sat, 04 Oct 2025 15:30:16 +0000</pubDate></item><item><title>CVE-2022-50481 | cxl: fix possible null-ptr-deref in cxl_guest_init_afu|adapter()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50481</link><description>In the Linux kernel, the following vulnerability has been resolved:

cxl: fix possible null-ptr-deref in cxl_guest_init_afu|adapter()

If device_register() fails in cxl_register_afu|adapter(), the device
is not added, device_unregister() can not be called in the error path,
otherwise it will cause a null-ptr-deref because of removing not added
device.

As comment of device_register() says, it should use put_device() to give
up the reference in the error path. So split device_unregister() into
device_del() and put_device(), then goes to put dev when register fails.</description><pubDate>Sat, 04 Oct 2025 15:30:16 +0000</pubDate></item><item><title>CVE-2022-50482 | iommu/vt-d: Clean up si_domain in the init_dmars() error path</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50482</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/vt-d: Clean up si_domain in the init_dmars() error path

A splat from kmem_cache_destroy() was seen with a kernel prior to
commit ee2653bbe89d ("iommu/vt-d: Remove domain and devinfo mempool")
when there was a failure in init_dmars(), because the iommu_domain
cache still had objects. While the mempool code is now gone, there
still is a leak of the si_domain memory if init_dmars() fails. So
clean up si_domain in the init_dmars() error path.</description><pubDate>Sat, 04 Oct 2025 15:30:16 +0000</pubDate></item><item><title>CVE-2022-50483 | net: enetc: avoid buffer leaks on xdp_do_redirect() failure</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50483</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: enetc: avoid buffer leaks on xdp_do_redirect() failure

Before enetc_clean_rx_ring_xdp() calls xdp_do_redirect(), each software
BD in the RX ring between index orig_i and i can have one of 2 refcount
values on its page.

We are the owner of the current buffer that is being processed, so the
refcount will be at least 1.

If the current owner of the buffer at the diametrically opposed index
in the RX ring (i.o.w, the other half of this page) has not yet called
kfree(), this page's refcount could even be 2.

enetc_page_reusable() in enetc_flip_rx_buff() tests for the page
refcount against 1, and [ if it's 2 ] does not attempt to reuse it.

But if enetc_flip_rx_buff() is put after the xdp_do_redirect() call,
the page refcount can have one of 3 values. It can also be 0, if there
is no owner of the other page half, and xdp_do_redirect() for this
buffer ran so far that it triggered a flush of the devmap/cpumap bulk
queue, and the consumers of those bulk queues also freed the buffer,
all by the time xdp_do_redirect() returns the execution back to enetc.

This is the reason why enetc_flip_rx_buff() is called before
xdp_do_redirect(), but there is a big flaw with that reasoning:
enetc_flip_rx_buff() will set rx_swbd-&gt;page = NULL on both sides of the
enetc_page_reusable() branch, and if xdp_do_redirect() returns an error,
we call enetc_xdp_free(), which does not deal gracefully with that.

In fact, what happens is quite special. The page refcounts start as 1.
enetc_flip_rx_buff() figures they're reusable, transfers these
rx_swbd-&gt;page pointers to a different rx_swbd in enetc_reuse_page(), and
bumps the refcount to 2. When xdp_do_redirect() later returns an error,
we call the no-op enetc_xdp_free(), but we still haven't lost the
reference to that page. A copy of it is still at rx_ring-&gt;next_to_alloc,
but that has refcount 2 (and there are no concurrent owners of it in
flight, to drop the refcount). What really kills the system is when
we'll flip the rx_swbd-&gt;page the second time around. With an updated
refcount of 2, the page will not be reusable and we'll really leak it.
Then enetc_new_page() will have to allocate more pages, which will then
eventually leak again on further errors from xdp_do_redirect().

The problem, summarized, is that we zeroize rx_swbd-&gt;page before we're
completely done with it, and this makes it impossible for the error path
to do something with it.

Since the packet is potentially multi-buffer and therefore the
rx_swbd-&gt;page is potentially an array, manual passing of the old
pointers between enetc_flip_rx_buff() and enetc_xdp_free() is a bit
difficult.

For the sake of going with a simple solution, we accept the possibility
of racing with xdp_do_redirect(), and we move the flip procedure to
execute only on the redirect success path. By racing, I mean that the
page may be deemed as not reusable by enetc (having a refcount of 0),
but there will be no leak in that case, either.

Once we accept that, we have something better to do with buffers on
XDP_REDIRECT failure. Since we haven't performed half-page flipping yet,
we won't, either (and this way, we can avoid enetc_xdp_free()
completely, which gives the entire page to the slab allocator).
Instead, we'll call enetc_xdp_drop(), which will recycle this half of
the buffer back to the RX ring.</description><pubDate>Sat, 04 Oct 2025 15:30:17 +0000</pubDate></item><item><title>CVE-2022-50484 | ALSA: usb-audio: Fix potential memory leaks</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50484</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: usb-audio: Fix potential memory leaks

When the driver hits -ENOMEM at allocating a URB or a buffer, it
aborts and goes to the error path that releases the all previously
allocated resources.  However, when -ENOMEM hits at the middle of the
sync EP URB allocation loop, the partially allocated URBs might be
left without released, because ep-&gt;nurbs is still zero at that point.

Fix it by setting ep-&gt;nurbs at first, so that the error handler loops
over the full URB list.</description><pubDate>Sat, 04 Oct 2025 15:30:17 +0000</pubDate></item><item><title>CVE-2022-50485 | ext4: add EXT4_IGET_BAD flag to prevent unexpected bad inode</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50485</link><description>In the Linux kernel, the following vulnerability has been resolved:

ext4: add EXT4_IGET_BAD flag to prevent unexpected bad inode

There are many places that will get unhappy (and crash) when ext4_iget()
returns a bad inode. However, if iget the boot loader inode, allows a bad
inode to be returned, because the inode may not be initialized. This
mechanism can be used to bypass some checks and cause panic. To solve this
problem, we add a special iget flag EXT4_IGET_BAD. Only with this flag
we'd be returning bad inode from ext4_iget(), otherwise we always return
the error code if the inode is bad inode.(suggested by Jan Kara)</description><pubDate>Sat, 04 Oct 2025 15:30:18 +0000</pubDate></item><item><title>CVE-2022-50486 | net: ethernet: ti: Fix return type of netcp_ndo_start_xmit()</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50486</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: ethernet: ti: Fix return type of netcp_ndo_start_xmit()

With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
indirect call targets are validated against the expected function
pointer prototype to make sure the call target is valid to help mitigate
ROP attacks. If they are not identical, there is a failure at run time,
which manifests as either a kernel panic or thread getting killed. A
proposed warning in clang aims to catch these at compile time, which
reveals:

  drivers/net/ethernet/ti/netcp_core.c:1944:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
          .ndo_start_xmit         = netcp_ndo_start_xmit,
                                    ^~~~~~~~~~~~~~~~~~~~
  1 error generated.

-&gt;ndo_start_xmit() in 'struct net_device_ops' expects a return type of
'netdev_tx_t', not 'int'. Adjust the return type of
netcp_ndo_start_xmit() to match the prototype's to resolve the warning
and CFI failure.</description><pubDate>Sat, 04 Oct 2025 15:30:18 +0000</pubDate></item><item><title>CVE-2022-50487 | NFSD: Protect against send buffer overflow in NFSv3 READDIR</title><link>https://www.cve.org/CVERecord?id=CVE-2022-50487</link><description>In the Linux kernel, the following vulnerability has been resolved:

NFSD: Protect against send buffer overflow in NFSv3 READDIR

Since before the git era, NFSD has conserved the number of pages
held by each nfsd thread by combining the RPC receive and send
buffers into a single array of pages. This works because there are
no cases where an operation needs a large RPC Call message and a
large RPC Reply message at the same time.

Once an RPC Call has been received, svc_process() updates
svc_rqst::rq_res to describe the part of rq_pages that can be
used for constructing the Reply. This means that the send buffer
(rq_res) shrinks when the received RPC record containing the RPC
Call is large.

A client can force this shrinkage on TCP by sending a correctly-
formed RPC Call header contained in an RPC record that is
excessively large. The full maximum payload size cannot be
constructed in that case.

Thanks to Aleksi Illikainen and Kari Hulkko for uncovering this
issue.</description><pubDate>Sat, 04 Oct 2025 15:30:19 +0000</pubDate></item><item><title>CVE-2023-53533 | Input: raspberrypi-ts - fix refcount leak in rpi_ts_probe</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53533</link><description>In the Linux kernel, the following vulnerability has been resolved:

Input: raspberrypi-ts - fix refcount leak in rpi_ts_probe

rpi_firmware_get() take reference, we need to release it in error paths
as well. Use devm_rpi_firmware_get() helper to handling the resources.
Also remove the existing rpi_firmware_put().</description><pubDate>Sat, 04 Oct 2025 15:30:19 +0000</pubDate></item><item><title>CVE-2023-53534 | drm/mediatek: mtk_drm_crtc: Add checks for devm_kcalloc</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53534</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/mediatek: mtk_drm_crtc: Add checks for devm_kcalloc

As the devm_kcalloc may return NULL, the return value needs to be checked
to avoid NULL poineter dereference.</description><pubDate>Sat, 04 Oct 2025 15:30:19 +0000</pubDate></item><item><title>CVE-2023-53535 | net: bcmgenet: Add a check for oversized packets</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53535</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: bcmgenet: Add a check for oversized packets

Occasionnaly we may get oversized packets from the hardware which
exceed the nomimal 2KiB buffer size we allocate SKBs with. Add an early
check which drops the packet to avoid invoking skb_over_panic() and move
on to processing the next packet.</description><pubDate>Sat, 04 Oct 2025 15:30:20 +0000</pubDate></item><item><title>CVE-2023-53536 | blk-crypto: make blk_crypto_evict_key() more robust</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53536</link><description>In the Linux kernel, the following vulnerability has been resolved:

blk-crypto: make blk_crypto_evict_key() more robust

If blk_crypto_evict_key() sees that the key is still in-use (due to a
bug) or that -&gt;keyslot_evict failed, it currently just returns while
leaving the key linked into the keyslot management structures.

However, blk_crypto_evict_key() is only called in contexts such as inode
eviction where failure is not an option.  So actually the caller
proceeds with freeing the blk_crypto_key regardless of the return value
of blk_crypto_evict_key().

These two assumptions don't match, and the result is that there can be a
use-after-free in blk_crypto_reprogram_all_keys() after one of these
errors occurs.  (Note, these errors *shouldn't* happen; we're just
talking about what happens if they do anyway.)

Fix this by making blk_crypto_evict_key() unlink the key from the
keyslot management structures even on failure.

Also improve some comments.</description><pubDate>Sat, 04 Oct 2025 15:30:20 +0000</pubDate></item><item><title>CVE-2023-53537 | f2fs: fix to avoid use-after-free for cached IPU bio</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53537</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to avoid use-after-free for cached IPU bio

xfstest generic/019 reports a bug:

kernel BUG at mm/filemap.c:1619!
RIP: 0010:folio_end_writeback+0x8a/0x90
Call Trace:
 end_page_writeback+0x1c/0x60
 f2fs_write_end_io+0x199/0x420
 bio_endio+0x104/0x180
 submit_bio_noacct+0xa5/0x510
 submit_bio+0x48/0x80
 f2fs_submit_write_bio+0x35/0x300
 f2fs_submit_merged_ipu_write+0x2a0/0x2b0
 f2fs_write_single_data_page+0x838/0x8b0
 f2fs_write_cache_pages+0x379/0xa30
 f2fs_write_data_pages+0x30c/0x340
 do_writepages+0xd8/0x1b0
 __writeback_single_inode+0x44/0x370
 writeback_sb_inodes+0x233/0x4d0
 __writeback_inodes_wb+0x56/0xf0
 wb_writeback+0x1dd/0x2d0
 wb_workfn+0x367/0x4a0
 process_one_work+0x21d/0x430
 worker_thread+0x4e/0x3c0
 kthread+0x103/0x130
 ret_from_fork+0x2c/0x50

The root cause is: after cp_error is set, f2fs_submit_merged_ipu_write()
in f2fs_write_single_data_page() tries to flush IPU bio in cache, however
f2fs_submit_merged_ipu_write() missed to check validity of @bio parameter,
result in submitting random cached bio which belong to other IO context,
then it will cause use-after-free issue, fix it by adding additional
validity check.</description><pubDate>Sat, 04 Oct 2025 15:30:20 +0000</pubDate></item><item><title>CVE-2023-53538 | btrfs: insert tree mod log move in push_node_left</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53538</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: insert tree mod log move in push_node_left

There is a fairly unlikely race condition in tree mod log rewind that
can result in a kernel panic which has the following trace:

  [530.569] BTRFS critical (device sda3): unable to find logical 0 length 4096
  [530.585] BTRFS critical (device sda3): unable to find logical 0 length 4096
  [530.602] BUG: kernel NULL pointer dereference, address: 0000000000000002
  [530.618] #PF: supervisor read access in kernel mode
  [530.629] #PF: error_code(0x0000) - not-present page
  [530.641] PGD 0 P4D 0
  [530.647] Oops: 0000 [#1] SMP
  [530.654] CPU: 30 PID: 398973 Comm: below Kdump: loaded Tainted: G S         O  K   5.12.0-0_fbk13_clang_7455_gb24de3bdb045 #1
  [530.680] Hardware name: Quanta Mono Lake-M.2 SATA 1HY9U9Z001G/Mono Lake-M.2 SATA, BIOS F20_3A15 08/16/2017
  [530.703] RIP: 0010:__btrfs_map_block+0xaa/0xd00
  [530.755] RSP: 0018:ffffc9002c2f7600 EFLAGS: 00010246
  [530.767] RAX: ffffffffffffffea RBX: ffff888292e41000 RCX: f2702d8b8be15100
  [530.784] RDX: ffff88885fda6fb8 RSI: ffff88885fd973c8 RDI: ffff88885fd973c8
  [530.800] RBP: ffff888292e410d0 R08: ffffffff82fd7fd0 R09: 00000000fffeffff
  [530.816] R10: ffffffff82e57fd0 R11: ffffffff82e57d70 R12: 0000000000000000
  [530.832] R13: 0000000000001000 R14: 0000000000001000 R15: ffffc9002c2f76f0
  [530.848] FS:  00007f38d64af000(0000) GS:ffff88885fd80000(0000) knlGS:0000000000000000
  [530.866] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  [530.880] CR2: 0000000000000002 CR3: 00000002b6770004 CR4: 00000000003706e0
  [530.896] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
  [530.912] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
  [530.928] Call Trace:
  [530.934]  ? btrfs_printk+0x13b/0x18c
  [530.943]  ? btrfs_bio_counter_inc_blocked+0x3d/0x130
  [530.955]  btrfs_map_bio+0x75/0x330
  [530.963]  ? kmem_cache_alloc+0x12a/0x2d0
  [530.973]  ? btrfs_submit_metadata_bio+0x63/0x100
  [530.984]  btrfs_submit_metadata_bio+0xa4/0x100
  [530.995]  submit_extent_page+0x30f/0x360
  [531.004]  read_extent_buffer_pages+0x49e/0x6d0
  [531.015]  ? submit_extent_page+0x360/0x360
  [531.025]  btree_read_extent_buffer_pages+0x5f/0x150
  [531.037]  read_tree_block+0x37/0x60
  [531.046]  read_block_for_search+0x18b/0x410
  [531.056]  btrfs_search_old_slot+0x198/0x2f0
  [531.066]  resolve_indirect_ref+0xfe/0x6f0
  [531.076]  ? ulist_alloc+0x31/0x60
  [531.084]  ? kmem_cache_alloc_trace+0x12e/0x2b0
  [531.095]  find_parent_nodes+0x720/0x1830
  [531.105]  ? ulist_alloc+0x10/0x60
  [531.113]  iterate_extent_inodes+0xea/0x370
  [531.123]  ? btrfs_previous_extent_item+0x8f/0x110
  [531.134]  ? btrfs_search_path_in_tree+0x240/0x240
  [531.146]  iterate_inodes_from_logical+0x98/0xd0
  [531.157]  ? btrfs_search_path_in_tree+0x240/0x240
  [531.168]  btrfs_ioctl_logical_to_ino+0xd9/0x180
  [531.179]  btrfs_ioctl+0xe2/0x2eb0

This occurs when logical inode resolution takes a tree mod log sequence
number, and then while backref walking hits a rewind on a busy node
which has the following sequence of tree mod log operations (numbers
filled in from a specific example, but they are somewhat arbitrary)

  REMOVE_WHILE_FREEING slot 532
  REMOVE_WHILE_FREEING slot 531
  REMOVE_WHILE_FREEING slot 530
  ...
  REMOVE_WHILE_FREEING slot 0
  REMOVE slot 455
  REMOVE slot 454
  REMOVE slot 453
  ...
  REMOVE slot 0
  ADD slot 455
  ADD slot 454
  ADD slot 453
  ...
  ADD slot 0
  MOVE src slot 0 -&gt; dst slot 456 nritems 533
  REMOVE slot 455
  REMOVE slot 454
  REMOVE slot 453
  ...
  REMOVE slot 0

When this sequence gets applied via btrfs_tree_mod_log_rewind, it
allocates a fresh rewind eb, and first inserts the correct key info for
the 533 elements, then overwrites the first 456 of them, then decrements
the count by 456 via the add ops, then rewinds the move by doing a
memmove from 456:988-&gt;0:532. We have never written anything past 532,
---truncated---</description><pubDate>Sat, 04 Oct 2025 15:30:21 +0000</pubDate></item><item><title>CVE-2023-53539 | RDMA/rxe: Fix incomplete state save in rxe_requester</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53539</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/rxe: Fix incomplete state save in rxe_requester

If a send packet is dropped by the IP layer in rxe_requester()
the call to rxe_xmit_packet() can fail with err == -EAGAIN.
To recover, the state of the wqe is restored to the state before
the packet was sent so it can be resent. However, the routines
that save and restore the state miss a significnt part of the
variable state in the wqe, the dma struct which is used to process
through the sge table. And, the state is not saved before the packet
is built which modifies the dma struct.

Under heavy stress testing with many QPs on a fast node sending
large messages to a slow node dropped packets are observed and
the resent packets are corrupted because the dma struct was not
restored. This patch fixes this behavior and allows the test cases
to succeed.</description><pubDate>Sat, 04 Oct 2025 15:30:21 +0000</pubDate></item><item><title>CVE-2023-53540 | wifi: cfg80211: reject auth/assoc to AP with our address</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53540</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: cfg80211: reject auth/assoc to AP with our address

If the AP uses our own address as its MLD address or BSSID, then
clearly something's wrong. Reject such connections so we don't
try and fail later.</description><pubDate>Sat, 04 Oct 2025 15:30:21 +0000</pubDate></item><item><title>CVE-2023-53541 | mtd: rawnand: brcmnand: Fix potential out-of-bounds access in oob write</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53541</link><description>In the Linux kernel, the following vulnerability has been resolved:

mtd: rawnand: brcmnand: Fix potential out-of-bounds access in oob write

When the oob buffer length is not in multiple of words, the oob write
function does out-of-bounds read on the oob source buffer at the last
iteration. Fix that by always checking length limit on the oob buffer
read and fill with 0xff when reaching the end of the buffer to the oob
registers.</description><pubDate>Sat, 04 Oct 2025 15:30:22 +0000</pubDate></item><item><title>CVE-2023-53542 | ARM: dts: exynos: Use Exynos5420 compatible for the MIPI video phy</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53542</link><description>In the Linux kernel, the following vulnerability has been resolved:

ARM: dts: exynos: Use Exynos5420 compatible for the MIPI video phy

For some reason, the driver adding support for Exynos5420 MIPI phy
back in 2016 wasn't used on Exynos5420, which caused a kernel panic.
Add the proper compatible for it.</description><pubDate>Sat, 04 Oct 2025 15:30:22 +0000</pubDate></item><item><title>CVE-2023-53543 | vdpa: Add max vqp attr to vdpa_nl_policy for nlattr length check</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53543</link><description>In the Linux kernel, the following vulnerability has been resolved:

vdpa: Add max vqp attr to vdpa_nl_policy for nlattr length check

The vdpa_nl_policy structure is used to validate the nlattr when parsing
the incoming nlmsg. It will ensure the attribute being described produces
a valid nlattr pointer in info-&gt;attrs before entering into each handler
in vdpa_nl_ops.

That is to say, the missing part in vdpa_nl_policy may lead to illegal
nlattr after parsing, which could lead to OOB read just like CVE-2023-3773.

This patch adds the missing nla_policy for vdpa max vqp attr to avoid
such bugs.</description><pubDate>Sat, 04 Oct 2025 15:30:23 +0000</pubDate></item><item><title>CVE-2023-53544 | cpufreq: davinci: Fix clk use after free</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53544</link><description>In the Linux kernel, the following vulnerability has been resolved:

cpufreq: davinci: Fix clk use after free

The remove function first frees the clks and only then calls
cpufreq_unregister_driver(). If one of the cpufreq callbacks is called
just before cpufreq_unregister_driver() is run, the freed clks might be
used.</description><pubDate>Sat, 04 Oct 2025 15:30:23 +0000</pubDate></item><item><title>CVE-2023-53545 | drm/amdgpu: unmap and remove csa_va properly</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53545</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: unmap and remove csa_va properly

Root PD BO should be reserved before unmap and remove
a bo_va from VM otherwise lockdep will complain.

v2: check fpriv-&gt;csa_va is not NULL instead of amdgpu_mcbp (christian)

[14616.936827] WARNING: CPU: 6 PID: 1711 at drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c:1762 amdgpu_vm_bo_del+0x399/0x3f0 [amdgpu]
[14616.937096] Call Trace:
[14616.937097]  &lt;TASK&gt;
[14616.937102]  amdgpu_driver_postclose_kms+0x249/0x2f0 [amdgpu]
[14616.937187]  drm_file_free+0x1d6/0x300 [drm]
[14616.937207]  drm_close_helper.isra.0+0x62/0x70 [drm]
[14616.937220]  drm_release+0x5e/0x100 [drm]
[14616.937234]  __fput+0x9f/0x280
[14616.937239]  ____fput+0xe/0x20
[14616.937241]  task_work_run+0x61/0x90
[14616.937246]  exit_to_user_mode_prepare+0x215/0x220
[14616.937251]  syscall_exit_to_user_mode+0x2a/0x60
[14616.937254]  do_syscall_64+0x48/0x90
[14616.937257]  entry_SYSCALL_64_after_hwframe+0x63/0xcd</description><pubDate>Sat, 04 Oct 2025 15:30:23 +0000</pubDate></item><item><title>CVE-2023-53546 | net/mlx5: DR, fix memory leak in mlx5dr_cmd_create_reformat_ctx</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53546</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: DR, fix memory leak in mlx5dr_cmd_create_reformat_ctx

when mlx5_cmd_exec failed in mlx5dr_cmd_create_reformat_ctx, the memory
pointed by 'in' is not released, which will cause memory leak. Move memory
release after mlx5_cmd_exec.</description><pubDate>Sat, 04 Oct 2025 15:30:24 +0000</pubDate></item><item><title>CVE-2023-53547 | drm/amdgpu: Fix sdma v4 sw fini error</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53547</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix sdma v4 sw fini error

Fix sdma v4 sw fini error for sdma 4.2.2 to
solve the following general protection fault

[  +0.108196] general protection fault, probably for non-canonical
address 0xd5e5a4ae79d24a32: 0000 [#1] PREEMPT SMP PTI
[  +0.000018] RIP: 0010:free_fw_priv+0xd/0x70
[  +0.000022] Call Trace:
[  +0.000012]  &lt;TASK&gt;
[  +0.000011]  release_firmware+0x55/0x80
[  +0.000021]  amdgpu_ucode_release+0x11/0x20 [amdgpu]
[  +0.000415]  amdgpu_sdma_destroy_inst_ctx+0x4f/0x90 [amdgpu]
[  +0.000360]  sdma_v4_0_sw_fini+0xce/0x110 [amdgpu]</description><pubDate>Sat, 04 Oct 2025 15:30:24 +0000</pubDate></item><item><title>CVE-2023-53548 | net: usbnet: Fix WARNING in usbnet_start_xmit/usb_submit_urb</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53548</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: usbnet: Fix WARNING in usbnet_start_xmit/usb_submit_urb

The syzbot fuzzer identified a problem in the usbnet driver:

usb 1-1: BOGUS urb xfer, pipe 3 != type 1
WARNING: CPU: 0 PID: 754 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504
Modules linked in:
CPU: 0 PID: 754 Comm: kworker/0:2 Not tainted 6.4.0-rc7-syzkaller-00014-g692b7dc87ca6 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/27/2023
Workqueue: mld mld_ifc_work
RIP: 0010:usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504
Code: 7c 24 18 e8 2c b4 5b fb 48 8b 7c 24 18 e8 42 07 f0 fe 41 89 d8 44 89 e1 4c 89 ea 48 89 c6 48 c7 c7 a0 c9 fc 8a e8 5a 6f 23 fb &lt;0f&gt; 0b e9 58 f8 ff ff e8 fe b3 5b fb 48 81 c5 c0 05 00 00 e9 84 f7
RSP: 0018:ffffc9000463f568 EFLAGS: 00010086
RAX: 0000000000000000 RBX: 0000000000000001 RCX: 0000000000000000
RDX: ffff88801eb28000 RSI: ffffffff814c03b7 RDI: 0000000000000001
RBP: ffff8881443b7190 R08: 0000000000000001 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000003
R13: ffff88802a77cb18 R14: 0000000000000003 R15: ffff888018262500
FS:  0000000000000000(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000556a99c15a18 CR3: 0000000028c71000 CR4: 0000000000350ef0
Call Trace:
 &lt;TASK&gt;
 usbnet_start_xmit+0xfe5/0x2190 drivers/net/usb/usbnet.c:1453
 __netdev_start_xmit include/linux/netdevice.h:4918 [inline]
 netdev_start_xmit include/linux/netdevice.h:4932 [inline]
 xmit_one net/core/dev.c:3578 [inline]
 dev_hard_start_xmit+0x187/0x700 net/core/dev.c:3594
...

This bug is caused by the fact that usbnet trusts the bulk endpoint
addresses its probe routine receives in the driver_info structure, and
it does not check to see that these endpoints actually exist and have
the expected type and directions.

The fix is simply to add such a check.</description><pubDate>Sat, 04 Oct 2025 15:30:24 +0000</pubDate></item><item><title>CVE-2023-53549 | netfilter: ipset: Rework long task execution when adding/deleting entries</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53549</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: ipset: Rework long task execution when adding/deleting entries

When adding/deleting large number of elements in one step in ipset, it can
take a reasonable amount of time and can result in soft lockup errors. The
patch 5f7b51bf09ba ("netfilter: ipset: Limit the maximal range of
consecutive elements to add/delete") tried to fix it by limiting the max
elements to process at all. However it was not enough, it is still possible
that we get hung tasks. Lowering the limit is not reasonable, so the
approach in this patch is as follows: rely on the method used at resizing
sets and save the state when we reach a smaller internal batch limit,
unlock/lock and proceed from the saved state. Thus we can avoid long
continuous tasks and at the same time removed the limit to add/delete large
number of elements in one step.

The nfnl mutex is held during the whole operation which prevents one to
issue other ipset commands in parallel.</description><pubDate>Sat, 04 Oct 2025 15:30:25 +0000</pubDate></item><item><title>CVE-2023-53550 | cpufreq: amd-pstate: fix global sysfs attribute type</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53550</link><description>In the Linux kernel, the following vulnerability has been resolved:

cpufreq: amd-pstate: fix global sysfs attribute type

In commit 3666062b87ec ("cpufreq: amd-pstate: move to use bus_get_dev_root()")
the "amd_pstate" attributes where moved from a dedicated kobject to the
cpu root kobject.

While the dedicated kobject expects to contain kobj_attributes the root
kobject needs device_attributes.

As the changed arguments are not used by the callbacks it works most of
the time.
However CFI will detect this issue:

[ 4947.849350] CFI failure at dev_attr_show+0x24/0x60 (target: show_status+0x0/0x70; expected type: 0x8651b1de)
...
[ 4947.849409] Call Trace:
[ 4947.849410]  &lt;TASK&gt;
[ 4947.849411]  ? __warn+0xcf/0x1c0
[ 4947.849414]  ? dev_attr_show+0x24/0x60
[ 4947.849415]  ? report_cfi_failure+0x4e/0x60
[ 4947.849417]  ? handle_cfi_failure+0x14c/0x1d0
[ 4947.849419]  ? __cfi_show_status+0x10/0x10
[ 4947.849420]  ? handle_bug+0x4f/0x90
[ 4947.849421]  ? exc_invalid_op+0x1a/0x60
[ 4947.849422]  ? asm_exc_invalid_op+0x1a/0x20
[ 4947.849424]  ? __cfi_show_status+0x10/0x10
[ 4947.849425]  ? dev_attr_show+0x24/0x60
[ 4947.849426]  sysfs_kf_seq_show+0xa6/0x110
[ 4947.849433]  seq_read_iter+0x16c/0x4b0
[ 4947.849436]  vfs_read+0x272/0x2d0
[ 4947.849438]  ksys_read+0x72/0xe0
[ 4947.849439]  do_syscall_64+0x76/0xb0
[ 4947.849440]  ? do_user_addr_fault+0x252/0x650
[ 4947.849442]  ? exc_page_fault+0x7a/0x1b0
[ 4947.849443]  entry_SYSCALL_64_after_hwframe+0x72/0xdc</description><pubDate>Sat, 04 Oct 2025 15:30:25 +0000</pubDate></item><item><title>CVE-2023-53551 | usb: gadget: u_serial: Add null pointer check in gserial_resume</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53551</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: u_serial: Add null pointer check in gserial_resume

Consider a case where gserial_disconnect has already cleared
gser-&gt;ioport. And if a wakeup interrupt triggers afterwards,
gserial_resume gets called, which will lead to accessing of
gser-&gt;ioport and thus causing null pointer dereference.Add
a null pointer check to prevent this.

Added a static spinlock to prevent gser-&gt;ioport from becoming
null after the newly added check.</description><pubDate>Sat, 04 Oct 2025 15:30:25 +0000</pubDate></item><item><title>CVE-2023-53552 | drm/i915: mark requests for GuC virtual engines to avoid use-after-free</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53552</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/i915: mark requests for GuC virtual engines to avoid use-after-free

References to i915_requests may be trapped by userspace inside a
sync_file or dmabuf (dma-resv) and held indefinitely across different
proceses. To counter-act the memory leaks, we try to not to keep
references from the request past their completion.
On the other side on fence release we need to know if rq-&gt;engine
is valid and points to hw engine (true for non-virtual requests).
To make it possible extra bit has been added to rq-&gt;execution_mask,
for marking virtual engines.

(cherry picked from commit 280410677af763f3871b93e794a199cfcf6fb580)</description><pubDate>Sat, 04 Oct 2025 15:30:26 +0000</pubDate></item><item><title>CVE-2023-53553 | HID: hyperv: avoid struct memcpy overrun warning</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53553</link><description>In the Linux kernel, the following vulnerability has been resolved:

HID: hyperv: avoid struct memcpy overrun warning

A previous patch addressed the fortified memcpy warning for most
builds, but I still see this one with gcc-9:

In file included from include/linux/string.h:254,
                 from drivers/hid/hid-hyperv.c:8:
In function 'fortify_memcpy_chk',
    inlined from 'mousevsc_on_receive' at drivers/hid/hid-hyperv.c:272:3:
include/linux/fortify-string.h:583:4: error: call to '__write_overflow_field' declared with attribute warning: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Werror=attribute-warning]
  583 |    __write_overflow_field(p_size_field, size);
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

My guess is that the WARN_ON() itself is what confuses gcc, so it no
longer sees that there is a correct range check. Rework the code in a
way that helps readability and avoids the warning.</description><pubDate>Sat, 04 Oct 2025 15:30:26 +0000</pubDate></item><item><title>CVE-2023-53554 | staging: ks7010: potential buffer overflow in ks_wlan_set_encode_ext()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53554</link><description>In the Linux kernel, the following vulnerability has been resolved:

staging: ks7010: potential buffer overflow in ks_wlan_set_encode_ext()

The "exc-&gt;key_len" is a u16 that comes from the user.  If it's over
IW_ENCODING_TOKEN_MAX (64) that could lead to memory corruption.</description><pubDate>Sat, 04 Oct 2025 15:30:26 +0000</pubDate></item><item><title>CVE-2023-53555 | mm/damon/core: initialize damo_filter-&amp;gt;list from damos_new_filter()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53555</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm/damon/core: initialize damo_filter-&gt;list from damos_new_filter()

damos_new_filter() is not initializing the list field of newly allocated
filter object.  However, DAMON sysfs interface and DAMON_RECLAIM are not
initializing it after calling damos_new_filter().  As a result, accessing
uninitialized memory is possible.  Actually, adding multiple DAMOS filters
via DAMON sysfs interface caused NULL pointer dereferencing.  Initialize
the field just after the allocation from damos_new_filter().</description><pubDate>Sat, 04 Oct 2025 15:30:27 +0000</pubDate></item><item><title>CVE-2023-53556 | iavf: Fix use-after-free in free_netdev</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53556</link><description>In the Linux kernel, the following vulnerability has been resolved:

iavf: Fix use-after-free in free_netdev

We do netif_napi_add() for all allocated q_vectors[], but potentially
do netif_napi_del() for part of them, then kfree q_vectors and leave
invalid pointers at dev-&gt;napi_list.

Reproducer:

  [root@host ~]# cat repro.sh
  #!/bin/bash

  pf_dbsf="0000:41:00.0"
  vf0_dbsf="0000:41:02.0"
  g_pids=()

  function do_set_numvf()
  {
      echo 2 &gt;/sys/bus/pci/devices/${pf_dbsf}/sriov_numvfs
      sleep $((RANDOM%3+1))
      echo 0 &gt;/sys/bus/pci/devices/${pf_dbsf}/sriov_numvfs
      sleep $((RANDOM%3+1))
  }

  function do_set_channel()
  {
      local nic=$(ls -1 --indicator-style=none /sys/bus/pci/devices/${vf0_dbsf}/net/)
      [ -z "$nic" ] &amp;&amp; { sleep $((RANDOM%3)) ; return 1; }
      ifconfig $nic 192.168.18.5 netmask 255.255.255.0
      ifconfig $nic up
      ethtool -L $nic combined 1
      ethtool -L $nic combined 4
      sleep $((RANDOM%3))
  }

  function on_exit()
  {
      local pid
      for pid in "${g_pids[@]}"; do
          kill -0 "$pid" &amp;&gt;/dev/null &amp;&amp; kill "$pid" &amp;&gt;/dev/null
      done
      g_pids=()
  }

  trap "on_exit; exit" EXIT

  while :; do do_set_numvf ; done &amp;
  g_pids+=($!)
  while :; do do_set_channel ; done &amp;
  g_pids+=($!)

  wait

Result:

[ 4093.900222] ==================================================================
[ 4093.900230] BUG: KASAN: use-after-free in free_netdev+0x308/0x390
[ 4093.900232] Read of size 8 at addr ffff88b4dc145640 by task repro.sh/6699
[ 4093.900233]
[ 4093.900236] CPU: 10 PID: 6699 Comm: repro.sh Kdump: loaded Tainted: G           O     --------- -t - 4.18.0 #1
[ 4093.900238] Hardware name: Powerleader PR2008AL/H12DSi-N6, BIOS 2.0 04/09/2021
[ 4093.900239] Call Trace:
[ 4093.900244]  dump_stack+0x71/0xab
[ 4093.900249]  print_address_description+0x6b/0x290
[ 4093.900251]  ? free_netdev+0x308/0x390
[ 4093.900252]  kasan_report+0x14a/0x2b0
[ 4093.900254]  free_netdev+0x308/0x390
[ 4093.900261]  iavf_remove+0x825/0xd20 [iavf]
[ 4093.900265]  pci_device_remove+0xa8/0x1f0
[ 4093.900268]  device_release_driver_internal+0x1c6/0x460
[ 4093.900271]  pci_stop_bus_device+0x101/0x150
[ 4093.900273]  pci_stop_and_remove_bus_device+0xe/0x20
[ 4093.900275]  pci_iov_remove_virtfn+0x187/0x420
[ 4093.900277]  ? pci_iov_add_virtfn+0xe10/0xe10
[ 4093.900278]  ? pci_get_subsys+0x90/0x90
[ 4093.900280]  sriov_disable+0xed/0x3e0
[ 4093.900282]  ? bus_find_device+0x12d/0x1a0
[ 4093.900290]  i40e_free_vfs+0x754/0x1210 [i40e]
[ 4093.900298]  ? i40e_reset_all_vfs+0x880/0x880 [i40e]
[ 4093.900299]  ? pci_get_device+0x7c/0x90
[ 4093.900300]  ? pci_get_subsys+0x90/0x90
[ 4093.900306]  ? pci_vfs_assigned.part.7+0x144/0x210
[ 4093.900309]  ? __mutex_lock_slowpath+0x10/0x10
[ 4093.900315]  i40e_pci_sriov_configure+0x1fa/0x2e0 [i40e]
[ 4093.900318]  sriov_numvfs_store+0x214/0x290
[ 4093.900320]  ? sriov_totalvfs_show+0x30/0x30
[ 4093.900321]  ? __mutex_lock_slowpath+0x10/0x10
[ 4093.900323]  ? __check_object_size+0x15a/0x350
[ 4093.900326]  kernfs_fop_write+0x280/0x3f0
[ 4093.900329]  vfs_write+0x145/0x440
[ 4093.900330]  ksys_write+0xab/0x160
[ 4093.900332]  ? __ia32_sys_read+0xb0/0xb0
[ 4093.900334]  ? fput_many+0x1a/0x120
[ 4093.900335]  ? filp_close+0xf0/0x130
[ 4093.900338]  do_syscall_64+0xa0/0x370
[ 4093.900339]  ? page_fault+0x8/0x30
[ 4093.900341]  entry_SYSCALL_64_after_hwframe+0x65/0xca
[ 4093.900357] RIP: 0033:0x7f16ad4d22c0
[ 4093.900359] Code: 73 01 c3 48 8b 0d d8 cb 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d 89 24 2d 00 00 75 10 b8 01 00 00 00 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 31 c3 48 83 ec 08 e8 fe dd 01 00 48 89 04 24
[ 4093.900360] RSP: 002b:00007ffd6491b7f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
[ 4093.900362] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f16ad4d22c0
[ 4093.900363] RDX: 0000000000000002 RSI: 0000000001a41408 RDI: 0000000000000001
[ 4093.900364] RBP: 0000000001a41408 R08: 00007f16ad7a1780 R09: 00007f16ae1f2700
[ 4093.9003
---truncated---</description><pubDate>Sat, 04 Oct 2025 15:30:27 +0000</pubDate></item><item><title>CVE-2023-53557 | fprobe: Release rethook after the ftrace_ops is unregistered</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53557</link><description>In the Linux kernel, the following vulnerability has been resolved:

fprobe: Release rethook after the ftrace_ops is unregistered

While running bpf selftests it's possible to get following fault:

  general protection fault, probably for non-canonical address \
  0x6b6b6b6b6b6b6b6b: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC NOPTI
  ...
  Call Trace:
   &lt;TASK&gt;
   fprobe_handler+0xc1/0x270
   ? __pfx_bpf_testmod_init+0x10/0x10
   ? __pfx_bpf_testmod_init+0x10/0x10
   ? bpf_fentry_test1+0x5/0x10
   ? bpf_fentry_test1+0x5/0x10
   ? bpf_testmod_init+0x22/0x80
   ? do_one_initcall+0x63/0x2e0
   ? rcu_is_watching+0xd/0x40
   ? kmalloc_trace+0xaf/0xc0
   ? do_init_module+0x60/0x250
   ? __do_sys_finit_module+0xac/0x120
   ? do_syscall_64+0x37/0x90
   ? entry_SYSCALL_64_after_hwframe+0x72/0xdc
   &lt;/TASK&gt;

In unregister_fprobe function we can't release fp-&gt;rethook while it's
possible there are some of its users still running on another cpu.

Moving rethook_free call after fp-&gt;ops is unregistered with
unregister_ftrace_function call.</description><pubDate>Sat, 04 Oct 2025 15:30:28 +0000</pubDate></item><item><title>CVE-2023-53558 | rcu-tasks: Avoid pr_info() with spin lock in cblist_init_generic()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53558</link><description>In the Linux kernel, the following vulnerability has been resolved:

rcu-tasks: Avoid pr_info() with spin lock in cblist_init_generic()

pr_info() is called with rtp-&gt;cbs_gbl_lock spin lock locked.  Because
pr_info() calls printk() that might sleep, this will result in BUG
like below:

[    0.206455] cblist_init_generic: Setting adjustable number of callback queues.
[    0.206463]
[    0.206464] =============================
[    0.206464] [ BUG: Invalid wait context ]
[    0.206465] 5.19.0-00428-g9de1f9c8ca51 #5 Not tainted
[    0.206466] -----------------------------
[    0.206466] swapper/0/1 is trying to lock:
[    0.206467] ffffffffa0167a58 (&amp;port_lock_key){....}-{3:3}, at: serial8250_console_write+0x327/0x4a0
[    0.206473] other info that might help us debug this:
[    0.206473] context-{5:5}
[    0.206474] 3 locks held by swapper/0/1:
[    0.206474]  #0: ffffffff9eb597e0 (rcu_tasks.cbs_gbl_lock){....}-{2:2}, at: cblist_init_generic.constprop.0+0x14/0x1f0
[    0.206478]  #1: ffffffff9eb579c0 (console_lock){+.+.}-{0:0}, at: _printk+0x63/0x7e
[    0.206482]  #2: ffffffff9ea77780 (console_owner){....}-{0:0}, at: console_emit_next_record.constprop.0+0x111/0x330
[    0.206485] stack backtrace:
[    0.206486] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.19.0-00428-g9de1f9c8ca51 #5
[    0.206488] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-1.fc36 04/01/2014
[    0.206489] Call Trace:
[    0.206490]  &lt;TASK&gt;
[    0.206491]  dump_stack_lvl+0x6a/0x9f
[    0.206493]  __lock_acquire.cold+0x2d7/0x2fe
[    0.206496]  ? stack_trace_save+0x46/0x70
[    0.206497]  lock_acquire+0xd1/0x2f0
[    0.206499]  ? serial8250_console_write+0x327/0x4a0
[    0.206500]  ? __lock_acquire+0x5c7/0x2720
[    0.206502]  _raw_spin_lock_irqsave+0x3d/0x90
[    0.206504]  ? serial8250_console_write+0x327/0x4a0
[    0.206506]  serial8250_console_write+0x327/0x4a0
[    0.206508]  console_emit_next_record.constprop.0+0x180/0x330
[    0.206511]  console_unlock+0xf7/0x1f0
[    0.206512]  vprintk_emit+0xf7/0x330
[    0.206514]  _printk+0x63/0x7e
[    0.206516]  cblist_init_generic.constprop.0.cold+0x24/0x32
[    0.206518]  rcu_init_tasks_generic+0x5/0xd9
[    0.206522]  kernel_init_freeable+0x15b/0x2a2
[    0.206523]  ? rest_init+0x160/0x160
[    0.206526]  kernel_init+0x11/0x120
[    0.206527]  ret_from_fork+0x1f/0x30
[    0.206530]  &lt;/TASK&gt;
[    0.207018] cblist_init_generic: Setting shift to 1 and lim to 1.

This patch moves pr_info() so that it is called without
rtp-&gt;cbs_gbl_lock locked.</description><pubDate>Sat, 04 Oct 2025 15:30:28 +0000</pubDate></item><item><title>CVE-2023-53559 | ip_vti: fix potential slab-use-after-free in decode_session6</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53559</link><description>In the Linux kernel, the following vulnerability has been resolved:

ip_vti: fix potential slab-use-after-free in decode_session6

When ip_vti device is set to the qdisc of the sfb type, the cb field
of the sent skb may be modified during enqueuing. Then,
slab-use-after-free may occur when ip_vti device sends IPv6 packets.
As commit f855691975bb ("xfrm6: Fix the nexthdr offset in
_decode_session6.") showed, xfrm_decode_session was originally intended
only for the receive path. IP6CB(skb)-&gt;nhoff is not set during
transmission. Therefore, set the cb field in the skb to 0 before
sending packets.</description><pubDate>Sat, 04 Oct 2025 15:30:28 +0000</pubDate></item><item><title>CVE-2023-53560 | tracing/histograms: Add histograms to hist_vars if they have referenced variables</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53560</link><description>In the Linux kernel, the following vulnerability has been resolved:

tracing/histograms: Add histograms to hist_vars if they have referenced variables

Hist triggers can have referenced variables without having direct
variables fields. This can be the case if referenced variables are added
for trigger actions. In this case the newly added references will not
have field variables. Not taking such referenced variables into
consideration can result in a bug where it would be possible to remove
hist trigger with variables being refenced. This will result in a bug
that is easily reproducable like so

$ cd /sys/kernel/tracing
$ echo 'synthetic_sys_enter char[] comm; long id' &gt;&gt; synthetic_events
$ echo 'hist:keys=common_pid.execname,id.syscall:vals=hitcount:comm=common_pid.execname' &gt;&gt; events/raw_syscalls/sys_enter/trigger
$ echo 'hist:keys=common_pid.execname,id.syscall:onmatch(raw_syscalls.sys_enter).synthetic_sys_enter($comm, id)' &gt;&gt; events/raw_syscalls/sys_enter/trigger
$ echo '!hist:keys=common_pid.execname,id.syscall:vals=hitcount:comm=common_pid.execname' &gt;&gt; events/raw_syscalls/sys_enter/trigger

[  100.263533] ==================================================================
[  100.264634] BUG: KASAN: slab-use-after-free in resolve_var_refs+0xc7/0x180
[  100.265520] Read of size 8 at addr ffff88810375d0f0 by task bash/439
[  100.266320]
[  100.266533] CPU: 2 PID: 439 Comm: bash Not tainted 6.5.0-rc1 #4
[  100.267277] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-20220807_005459-localhost 04/01/2014
[  100.268561] Call Trace:
[  100.268902]  &lt;TASK&gt;
[  100.269189]  dump_stack_lvl+0x4c/0x70
[  100.269680]  print_report+0xc5/0x600
[  100.270165]  ? resolve_var_refs+0xc7/0x180
[  100.270697]  ? kasan_complete_mode_report_info+0x80/0x1f0
[  100.271389]  ? resolve_var_refs+0xc7/0x180
[  100.271913]  kasan_report+0xbd/0x100
[  100.272380]  ? resolve_var_refs+0xc7/0x180
[  100.272920]  __asan_load8+0x71/0xa0
[  100.273377]  resolve_var_refs+0xc7/0x180
[  100.273888]  event_hist_trigger+0x749/0x860
[  100.274505]  ? kasan_save_stack+0x2a/0x50
[  100.275024]  ? kasan_set_track+0x29/0x40
[  100.275536]  ? __pfx_event_hist_trigger+0x10/0x10
[  100.276138]  ? ksys_write+0xd1/0x170
[  100.276607]  ? do_syscall_64+0x3c/0x90
[  100.277099]  ? entry_SYSCALL_64_after_hwframe+0x6e/0xd8
[  100.277771]  ? destroy_hist_data+0x446/0x470
[  100.278324]  ? event_hist_trigger_parse+0xa6c/0x3860
[  100.278962]  ? __pfx_event_hist_trigger_parse+0x10/0x10
[  100.279627]  ? __kasan_check_write+0x18/0x20
[  100.280177]  ? mutex_unlock+0x85/0xd0
[  100.280660]  ? __pfx_mutex_unlock+0x10/0x10
[  100.281200]  ? kfree+0x7b/0x120
[  100.281619]  ? ____kasan_slab_free+0x15d/0x1d0
[  100.282197]  ? event_trigger_write+0xac/0x100
[  100.282764]  ? __kasan_slab_free+0x16/0x20
[  100.283293]  ? __kmem_cache_free+0x153/0x2f0
[  100.283844]  ? sched_mm_cid_remote_clear+0xb1/0x250
[  100.284550]  ? __pfx_sched_mm_cid_remote_clear+0x10/0x10
[  100.285221]  ? event_trigger_write+0xbc/0x100
[  100.285781]  ? __kasan_check_read+0x15/0x20
[  100.286321]  ? __bitmap_weight+0x66/0xa0
[  100.286833]  ? _find_next_bit+0x46/0xe0
[  100.287334]  ? task_mm_cid_work+0x37f/0x450
[  100.287872]  event_triggers_call+0x84/0x150
[  100.288408]  trace_event_buffer_commit+0x339/0x430
[  100.289073]  ? ring_buffer_event_data+0x3f/0x60
[  100.292189]  trace_event_raw_event_sys_enter+0x8b/0xe0
[  100.295434]  syscall_trace_enter.constprop.0+0x18f/0x1b0
[  100.298653]  syscall_enter_from_user_mode+0x32/0x40
[  100.301808]  do_syscall_64+0x1a/0x90
[  100.304748]  entry_SYSCALL_64_after_hwframe+0x6e/0xd8
[  100.307775] RIP: 0033:0x7f686c75c1cb
[  100.310617] Code: 73 01 c3 48 8b 0d 65 3c 10 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 21 00 00 00 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d 35 3c 10 00 f7 d8 64 89 01 48
[  100.317847] RSP: 002b:00007ffc60137a38 EFLAGS: 00000246 ORIG_RAX: 0000000000000021
[  100.321200] RA
---truncated---</description><pubDate>Sat, 04 Oct 2025 15:30:29 +0000</pubDate></item><item><title>CVE-2023-53561 | net: wwan: iosm: fix NULL pointer dereference when removing device</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53561</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: wwan: iosm: fix NULL pointer dereference when removing device

In suspend and resume cycle, the removal and rescan of device ends
up in NULL pointer dereference.

During driver initialization, if the ipc_imem_wwan_channel_init()
fails to get the valid device capabilities it returns an error and
further no resource (wwan struct) will be allocated. Now in this
situation if driver removal procedure is initiated it would result
in NULL pointer exception since unallocated wwan struct is dereferenced
inside ipc_wwan_deinit().

ipc_imem_run_state_worker() to handle the called functions return value
and to release the resource in failure case. It also reports the link
down event in failure cases. The user space application can handle this
event to do a device reset for restoring the device communication.</description><pubDate>Sat, 04 Oct 2025 15:30:29 +0000</pubDate></item><item><title>CVE-2023-53562 | drm/msm: fix vram leak on bind errors</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53562</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm: fix vram leak on bind errors

Make sure to release the VRAM buffer also in a case a subcomponent fails
to bind.

Patchwork: https://patchwork.freedesktop.org/patch/525094/</description><pubDate>Sat, 04 Oct 2025 15:30:29 +0000</pubDate></item><item><title>CVE-2023-53563 | cpufreq: amd-pstate-ut: Fix kernel panic when loading the driver</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53563</link><description>In the Linux kernel, the following vulnerability has been resolved:

cpufreq: amd-pstate-ut: Fix kernel panic when loading the driver

After loading the amd-pstate-ut driver, amd_pstate_ut_check_perf()
and amd_pstate_ut_check_freq() use cpufreq_cpu_get() to get the policy
of the CPU and mark it as busy.

In these functions, cpufreq_cpu_put() should be used to release the
policy, but it is not, so any other entity trying to access the policy
is blocked indefinitely.

One such scenario is when amd_pstate mode is changed, leading to the
following splat:

[ 1332.103727] INFO: task bash:2929 blocked for more than 120 seconds.
[ 1332.110001]       Not tainted 6.5.0-rc2-amd-pstate-ut #5
[ 1332.115315] "echo 0 &gt; /proc/sys/kernel/hung_task_timeout_secs" disables this message.
[ 1332.123140] task:bash            state:D stack:0     pid:2929  ppid:2873   flags:0x00004006
[ 1332.123143] Call Trace:
[ 1332.123145]  &lt;TASK&gt;
[ 1332.123148]  __schedule+0x3c1/0x16a0
[ 1332.123154]  ? _raw_read_lock_irqsave+0x2d/0x70
[ 1332.123157]  schedule+0x6f/0x110
[ 1332.123160]  schedule_timeout+0x14f/0x160
[ 1332.123162]  ? preempt_count_add+0x86/0xd0
[ 1332.123165]  __wait_for_common+0x92/0x190
[ 1332.123168]  ? __pfx_schedule_timeout+0x10/0x10
[ 1332.123170]  wait_for_completion+0x28/0x30
[ 1332.123173]  cpufreq_policy_put_kobj+0x4d/0x90
[ 1332.123177]  cpufreq_policy_free+0x157/0x1d0
[ 1332.123178]  ? preempt_count_add+0x58/0xd0
[ 1332.123180]  cpufreq_remove_dev+0xb6/0x100
[ 1332.123182]  subsys_interface_unregister+0x114/0x120
[ 1332.123185]  ? preempt_count_add+0x58/0xd0
[ 1332.123187]  ? __pfx_amd_pstate_change_driver_mode+0x10/0x10
[ 1332.123190]  cpufreq_unregister_driver+0x3b/0xd0
[ 1332.123192]  amd_pstate_change_driver_mode+0x1e/0x50
[ 1332.123194]  store_status+0xe9/0x180
[ 1332.123197]  dev_attr_store+0x1b/0x30
[ 1332.123199]  sysfs_kf_write+0x42/0x50
[ 1332.123202]  kernfs_fop_write_iter+0x143/0x1d0
[ 1332.123204]  vfs_write+0x2df/0x400
[ 1332.123208]  ksys_write+0x6b/0xf0
[ 1332.123210]  __x64_sys_write+0x1d/0x30
[ 1332.123213]  do_syscall_64+0x60/0x90
[ 1332.123216]  ? fpregs_assert_state_consistent+0x2e/0x50
[ 1332.123219]  ? exit_to_user_mode_prepare+0x49/0x1a0
[ 1332.123223]  ? irqentry_exit_to_user_mode+0xd/0x20
[ 1332.123225]  ? irqentry_exit+0x3f/0x50
[ 1332.123226]  ? exc_page_fault+0x8e/0x190
[ 1332.123228]  entry_SYSCALL_64_after_hwframe+0x6e/0xd8
[ 1332.123232] RIP: 0033:0x7fa74c514a37
[ 1332.123234] RSP: 002b:00007ffe31dd0788 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
[ 1332.123238] RAX: ffffffffffffffda RBX: 0000000000000008 RCX: 00007fa74c514a37
[ 1332.123239] RDX: 0000000000000008 RSI: 000055e27c447aa0 RDI: 0000000000000001
[ 1332.123241] RBP: 000055e27c447aa0 R08: 00007fa74c5d1460 R09: 000000007fffffff
[ 1332.123242] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000008
[ 1332.123244] R13: 00007fa74c61a780 R14: 00007fa74c616600 R15: 00007fa74c615a00
[ 1332.123247]  &lt;/TASK&gt;

Fix this by calling cpufreq_cpu_put() wherever necessary.

[ rjw: Subject and changelog edits ]</description><pubDate>Sat, 04 Oct 2025 15:30:30 +0000</pubDate></item><item><title>CVE-2023-53564 | ocfs2: fix defrag path triggering jbd2 ASSERT</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53564</link><description>In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix defrag path triggering jbd2 ASSERT

code path:

ocfs2_ioctl_move_extents
 ocfs2_move_extents
  ocfs2_defrag_extent
   __ocfs2_move_extent
    + ocfs2_journal_access_di
    + ocfs2_split_extent  //sub-paths call jbd2_journal_restart
    + ocfs2_journal_dirty //crash by jbs2 ASSERT

crash stacks:

PID: 11297  TASK: ffff974a676dcd00  CPU: 67  COMMAND: "defragfs.ocfs2"
 #0 [ffffb25d8dad3900] machine_kexec at ffffffff8386fe01
 #1 [ffffb25d8dad3958] __crash_kexec at ffffffff8395959d
 #2 [ffffb25d8dad3a20] crash_kexec at ffffffff8395a45d
 #3 [ffffb25d8dad3a38] oops_end at ffffffff83836d3f
 #4 [ffffb25d8dad3a58] do_trap at ffffffff83833205
 #5 [ffffb25d8dad3aa0] do_invalid_op at ffffffff83833aa6
 #6 [ffffb25d8dad3ac0] invalid_op at ffffffff84200d18
    [exception RIP: jbd2_journal_dirty_metadata+0x2ba]
    RIP: ffffffffc09ca54a  RSP: ffffb25d8dad3b70  RFLAGS: 00010207
    RAX: 0000000000000000  RBX: ffff9706eedc5248  RCX: 0000000000000000
    RDX: 0000000000000001  RSI: ffff97337029ea28  RDI: ffff9706eedc5250
    RBP: ffff9703c3520200   R8: 000000000f46b0b2   R9: 0000000000000000
    R10: 0000000000000001  R11: 00000001000000fe  R12: ffff97337029ea28
    R13: 0000000000000000  R14: ffff9703de59bf60  R15: ffff9706eedc5250
    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
 #7 [ffffb25d8dad3ba8] ocfs2_journal_dirty at ffffffffc137fb95 [ocfs2]
 #8 [ffffb25d8dad3be8] __ocfs2_move_extent at ffffffffc139a950 [ocfs2]
 #9 [ffffb25d8dad3c80] ocfs2_defrag_extent at ffffffffc139b2d2 [ocfs2]

Analysis

This bug has the same root cause of 'commit 7f27ec978b0e ("ocfs2: call
ocfs2_journal_access_di() before ocfs2_journal_dirty() in
ocfs2_write_end_nolock()")'.  For this bug, jbd2_journal_restart() is
called by ocfs2_split_extent() during defragmenting.

How to fix

For ocfs2_split_extent() can handle journal operations totally by itself. 
Caller doesn't need to call journal access/dirty pair, and caller only
needs to call journal start/stop pair.  The fix method is to remove
journal access/dirty from __ocfs2_move_extent().

The discussion for this patch:
https://oss.oracle.com/pipermail/ocfs2-devel/2023-February/000647.html</description><pubDate>Sat, 04 Oct 2025 15:30:30 +0000</pubDate></item><item><title>CVE-2023-53565 | wifi: brcmfmac: Check for probe() id argument being NULL</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53565</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: brcmfmac: Check for probe() id argument being NULL

The probe() id argument may be NULL in 2 scenarios:

1. brcmf_pcie_pm_leave_D3() calling brcmf_pcie_probe() to reprobe
   the device.

2. If a user tries to manually bind the driver from sysfs then the sdio /
   pcie / usb probe() function gets called with NULL as id argument.

1. Is being hit by users causing the following oops on resume and causing
wifi to stop working:

BUG: kernel NULL pointer dereference, address: 0000000000000018
&lt;snip&gt;
Hardware name: Dell Inc. XPS 13 9350/0PWNCR, BIDS 1.13.0 02/10/2020
Workgueue: events_unbound async_run_entry_fn
RIP: 0010:brcmf_pcie_probe+Ox16b/0x7a0 [brcmfmac]
&lt;snip&gt;
Call Trace:
 &lt;TASK&gt;
 brcmf_pcie_pm_leave_D3+0xc5/8x1a0 [brcmfmac be3b4cefca451e190fa35be8f00db1bbec293887]
 ? pci_pm_resume+0x5b/0xf0
 ? pci_legacy_resume+0x80/0x80
 dpm_run_callback+0x47/0x150
 device_resume+0xa2/0x1f0
 async_resume+0x1d/0x30
&lt;snip&gt;

Fix this by checking for id being NULL.

In the PCI and USB cases try a manual lookup of the id so that manually
binding the driver through sysfs and more importantly brcmf_pcie_probe()
on resume will work.

For the SDIO case there is no helper to do a manual sdio_device_id lookup,
so just directly error out on a NULL id there.</description><pubDate>Sat, 04 Oct 2025 15:30:30 +0000</pubDate></item><item><title>CVE-2023-53566 | netfilter: nft_set_rbtree: fix null deref on element insertion</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53566</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nft_set_rbtree: fix null deref on element insertion

There is no guarantee that rb_prev() will not return NULL in nft_rbtree_gc_elem():

general protection fault, probably for non-canonical address 0xdffffc0000000003: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000018-0x000000000000001f]
 nft_add_set_elem+0x14b0/0x2990
  nf_tables_newsetelem+0x528/0xb30

Furthermore, there is a possible use-after-free while iterating,
'node' can be free'd so we need to cache the next value to use.</description><pubDate>Sat, 04 Oct 2025 15:30:31 +0000</pubDate></item><item><title>CVE-2023-53567 | spi: qup: Don&amp;#x27;t skip cleanup in remove&amp;#x27;s error path</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53567</link><description>In the Linux kernel, the following vulnerability has been resolved:

spi: qup: Don't skip cleanup in remove's error path

Returning early in a platform driver's remove callback is wrong. In this
case the dma resources are not released in the error path. this is never
retried later and so this is a permanent leak. To fix this, only skip
hardware disabling if waking the device fails.</description><pubDate>Sat, 04 Oct 2025 15:30:31 +0000</pubDate></item><item><title>CVE-2023-53568 | s390/zcrypt: don&amp;#x27;t leak memory if dev_set_name() fails</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53568</link><description>In the Linux kernel, the following vulnerability has been resolved:

s390/zcrypt: don't leak memory if dev_set_name() fails

When dev_set_name() fails, zcdn_create() doesn't free the newly
allocated resources. Do it.</description><pubDate>Sat, 04 Oct 2025 15:30:32 +0000</pubDate></item><item><title>CVE-2023-53569 | ext2: Check block size validity during mount</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53569</link><description>In the Linux kernel, the following vulnerability has been resolved:

ext2: Check block size validity during mount

Check that log of block size stored in the superblock has sensible
value. Otherwise the shift computing the block size can overflow leading
to undefined behavior.</description><pubDate>Sat, 04 Oct 2025 15:30:32 +0000</pubDate></item><item><title>CVE-2023-53570 | wifi: nl80211: fix integer overflow in nl80211_parse_mbssid_elems()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53570</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: nl80211: fix integer overflow in nl80211_parse_mbssid_elems()

nl80211_parse_mbssid_elems() uses a u8 variable num_elems to count the
number of MBSSID elements in the nested netlink attribute attrs, which can
lead to an integer overflow if a user of the nl80211 interface specifies
256 or more elements in the corresponding attribute in userspace. The
integer overflow can lead to a heap buffer overflow as num_elems determines
the size of the trailing array in elems, and this array is thereafter
written to for each element in attrs.

Note that this vulnerability only affects devices with the
wiphy-&gt;mbssid_max_interfaces member set for the wireless physical device
struct in the device driver, and can only be triggered by a process with
CAP_NET_ADMIN capabilities.

Fix this by checking for a maximum of 255 elements in attrs.</description><pubDate>Sat, 04 Oct 2025 15:30:32 +0000</pubDate></item><item><title>CVE-2023-53571 | drm/i915: Make intel_get_crtc_new_encoder() less oopsy</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53571</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/i915: Make intel_get_crtc_new_encoder() less oopsy

The point of the WARN was to print something, not oops
straight up. Currently that is precisely what happens
if we can't find the connector for the crtc in the atomic
state. Get the dev pointer from the atomic state instead
of the potentially NULL encoder to avoid that.

(cherry picked from commit 3b6692357f70498f617ea1b31a0378070a0acf1c)</description><pubDate>Sat, 04 Oct 2025 15:30:33 +0000</pubDate></item><item><title>CVE-2023-53572 | clk: imx: scu: use _safe list iterator to avoid a use after free</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53572</link><description>In the Linux kernel, the following vulnerability has been resolved:

clk: imx: scu: use _safe list iterator to avoid a use after free

This loop is freeing "clk" so it needs to use list_for_each_entry_safe().
Otherwise it dereferences a freed variable to get the next item on the
loop.</description><pubDate>Sat, 04 Oct 2025 15:30:33 +0000</pubDate></item><item><title>CVE-2023-53573 | clk: rs9: Fix suspend/resume</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53573</link><description>In the Linux kernel, the following vulnerability has been resolved:

clk: rs9: Fix suspend/resume

Disabling the cache in commit 2ff4ba9e3702 ("clk: rs9: Fix I2C accessors")
without removing cache synchronization in resume path results in a
kernel panic as map-&gt;cache_ops is unset, due to REGCACHE_NONE.
Enable flat cache again to support resume again. num_reg_defaults_raw
is necessary to read the cache defaults from hardware. Some registers
are strapped in hardware and cannot be provided in software.</description><pubDate>Sat, 04 Oct 2025 15:30:34 +0000</pubDate></item><item><title>CVE-2023-53574 | wifi: rtw88: delete timer and free skb queue when unloading</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53574</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: rtw88: delete timer and free skb queue when unloading

Fix possible crash and memory leak on driver unload by deleting
TX purge timer and freeing C2H queue in 'rtw_core_deinit()',
shrink critical section in the latter by freeing COEX queue
out of TX report lock scope.</description><pubDate>Sat, 04 Oct 2025 15:30:34 +0000</pubDate></item><item><title>CVE-2023-53575 | wifi: iwlwifi: mvm: fix potential array out of bounds access</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53575</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: mvm: fix potential array out of bounds access

Account for IWL_SEC_WEP_KEY_OFFSET when needed while verifying
key_len size in iwl_mvm_sec_key_add().</description><pubDate>Sat, 04 Oct 2025 15:30:34 +0000</pubDate></item><item><title>CVE-2023-53576 | null_blk: Always check queue mode setting from configfs</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53576</link><description>In the Linux kernel, the following vulnerability has been resolved:

null_blk: Always check queue mode setting from configfs

Make sure to check device queue mode in the null_validate_conf() and
return error for NULL_Q_RQ as we don't allow legacy I/O path, without
this patch we get OOPs when queue mode is set to 1 from configfs,
following are repro steps :-

modprobe null_blk nr_devices=0
mkdir config/nullb/nullb0
echo 1 &gt; config/nullb/nullb0/memory_backed
echo 4096 &gt; config/nullb/nullb0/blocksize
echo 20480 &gt; config/nullb/nullb0/size
echo 1 &gt; config/nullb/nullb0/queue_mode
echo 1 &gt; config/nullb/nullb0/power

Entering kdb (current=0xffff88810acdd080, pid 2372) on processor 42 Oops: (null)
due to oops @ 0xffffffffc041c329
CPU: 42 PID: 2372 Comm: sh Tainted: G           O     N 6.3.0-rc5lblk+ #5
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014
RIP: 0010:null_add_dev.part.0+0xd9/0x720 [null_blk]
Code: 01 00 00 85 d2 0f 85 a1 03 00 00 48 83 bb 08 01 00 00 00 0f 85 f7 03 00 00 80 bb 62 01 00 00 00 48 8b 75 20 0f 85 6d 02 00 00 &lt;48&gt; 89 6e 60 48 8b 75 20 bf 06 00 00 00 e8 f5 37 2c c1 48 8b 75 20
RSP: 0018:ffffc900052cbde0 EFLAGS: 00010246
RAX: 0000000000000001 RBX: ffff88811084d800 RCX: 0000000000000001
RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff888100042e00
RBP: ffff8881053d8200 R08: ffffc900052cbd68 R09: ffff888105db2000
R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000002
R13: ffff888104765200 R14: ffff88810eec1748 R15: ffff88810eec1740
FS:  00007fd445fd1740(0000) GS:ffff8897dfc80000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000060 CR3: 0000000166a00000 CR4: 0000000000350ee0
DR0: ffffffff8437a488 DR1: ffffffff8437a489 DR2: ffffffff8437a48a
DR3: ffffffff8437a48b DR6: 00000000ffff0ff0 DR7: 0000000000000400
Call Trace:
 &lt;TASK&gt;
 nullb_device_power_store+0xd1/0x120 [null_blk]
 configfs_write_iter+0xb4/0x120
 vfs_write+0x2ba/0x3c0
 ksys_write+0x5f/0xe0
 do_syscall_64+0x3b/0x90
 entry_SYSCALL_64_after_hwframe+0x72/0xdc
RIP: 0033:0x7fd4460c57a7
Code: 0d 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b7 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 01 00 00 00 0f 05 &lt;48&gt; 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 48 89 54 24 18 48 89 74 24
RSP: 002b:00007ffd3792a4a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007fd4460c57a7
RDX: 0000000000000002 RSI: 000055b43c02e4c0 RDI: 0000000000000001
RBP: 000055b43c02e4c0 R08: 000000000000000a R09: 00007fd44615b4e0
R10: 00007fd44615b3e0 R11: 0000000000000246 R12: 0000000000000002
R13: 00007fd446198520 R14: 0000000000000002 R15: 00007fd446198700
 &lt;/TASK&gt;</description><pubDate>Sat, 04 Oct 2025 15:30:35 +0000</pubDate></item><item><title>CVE-2023-53577 | bpf, cpumap: Make sure kthread is running before map update returns</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53577</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf, cpumap: Make sure kthread is running before map update returns

The following warning was reported when running stress-mode enabled
xdp_redirect_cpu with some RT threads:

  ------------[ cut here ]------------
  WARNING: CPU: 4 PID: 65 at kernel/bpf/cpumap.c:135
  CPU: 4 PID: 65 Comm: kworker/4:1 Not tainted 6.5.0-rc2+ #1
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
  Workqueue: events cpu_map_kthread_stop
  RIP: 0010:put_cpu_map_entry+0xda/0x220
  ......
  Call Trace:
   &lt;TASK&gt;
   ? show_regs+0x65/0x70
   ? __warn+0xa5/0x240
   ......
   ? put_cpu_map_entry+0xda/0x220
   cpu_map_kthread_stop+0x41/0x60
   process_one_work+0x6b0/0xb80
   worker_thread+0x96/0x720
   kthread+0x1a5/0x1f0
   ret_from_fork+0x3a/0x70
   ret_from_fork_asm+0x1b/0x30
   &lt;/TASK&gt;

The root cause is the same as commit 436901649731 ("bpf: cpumap: Fix memory
leak in cpu_map_update_elem"). The kthread is stopped prematurely by
kthread_stop() in cpu_map_kthread_stop(), and kthread() doesn't call
cpu_map_kthread_run() at all but XDP program has already queued some
frames or skbs into ptr_ring. So when __cpu_map_ring_cleanup() checks
the ptr_ring, it will find it was not emptied and report a warning.

An alternative fix is to use __cpu_map_ring_cleanup() to drop these
pending frames or skbs when kthread_stop() returns -EINTR, but it may
confuse the user, because these frames or skbs have been handled
correctly by XDP program. So instead of dropping these frames or skbs,
just make sure the per-cpu kthread is running before
__cpu_map_entry_alloc() returns.

After apply the fix, the error handle for kthread_stop() will be
unnecessary because it will always return 0, so just remove it.</description><pubDate>Sat, 04 Oct 2025 15:30:35 +0000</pubDate></item><item><title>CVE-2023-53578 | net: qrtr: Fix an uninit variable access bug in qrtr_tx_resume()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53578</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: qrtr: Fix an uninit variable access bug in qrtr_tx_resume()

Syzbot reported a bug as following:

=====================================================
BUG: KMSAN: uninit-value in qrtr_tx_resume+0x185/0x1f0 net/qrtr/af_qrtr.c:230
 qrtr_tx_resume+0x185/0x1f0 net/qrtr/af_qrtr.c:230
 qrtr_endpoint_post+0xf85/0x11b0 net/qrtr/af_qrtr.c:519
 qrtr_tun_write_iter+0x270/0x400 net/qrtr/tun.c:108
 call_write_iter include/linux/fs.h:2189 [inline]
 aio_write+0x63a/0x950 fs/aio.c:1600
 io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
 __do_sys_io_submit fs/aio.c:2078 [inline]
 __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
 __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd

Uninit was created at:
 slab_post_alloc_hook mm/slab.h:766 [inline]
 slab_alloc_node mm/slub.c:3452 [inline]
 __kmem_cache_alloc_node+0x71f/0xce0 mm/slub.c:3491
 __do_kmalloc_node mm/slab_common.c:967 [inline]
 __kmalloc_node_track_caller+0x114/0x3b0 mm/slab_common.c:988
 kmalloc_reserve net/core/skbuff.c:492 [inline]
 __alloc_skb+0x3af/0x8f0 net/core/skbuff.c:565
 __netdev_alloc_skb+0x120/0x7d0 net/core/skbuff.c:630
 qrtr_endpoint_post+0xbd/0x11b0 net/qrtr/af_qrtr.c:446
 qrtr_tun_write_iter+0x270/0x400 net/qrtr/tun.c:108
 call_write_iter include/linux/fs.h:2189 [inline]
 aio_write+0x63a/0x950 fs/aio.c:1600
 io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
 __do_sys_io_submit fs/aio.c:2078 [inline]
 __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
 __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd

It is because that skb-&gt;len requires at least sizeof(struct qrtr_ctrl_pkt)
in qrtr_tx_resume(). And skb-&gt;len equals to size in qrtr_endpoint_post().
But size is less than sizeof(struct qrtr_ctrl_pkt) when qrtr_cb-&gt;type
equals to QRTR_TYPE_RESUME_TX in qrtr_endpoint_post() under the syzbot
scenario. This triggers the uninit variable access bug.

Add size check when qrtr_cb-&gt;type equals to QRTR_TYPE_RESUME_TX in
qrtr_endpoint_post() to fix the bug.</description><pubDate>Sat, 04 Oct 2025 15:30:36 +0000</pubDate></item><item><title>CVE-2023-53579 | gpio: mvebu: fix irq domain leak</title><link>https://www.cve.org/CVERecord?id=CVE-2023-53579</link><description>In the Linux kernel, the following vulnerability has been resolved:

gpio: mvebu: fix irq domain leak

Uwe Kleine-König pointed out we still have one resource leak in the mvebu
driver triggered on driver detach. Let's address it with a custom devm
action.</description><pubDate>Sat, 04 Oct 2025 15:30:36 +0000</pubDate></item><item><title>CVE-2025-39929 | smb: client: fix smbdirect_recv_io leak in smbd_negotiate() error path</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39929</link><description>In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix smbdirect_recv_io leak in smbd_negotiate() error path

During tests of another unrelated patch I was able to trigger this
error: Objects remaining on __kmem_cache_shutdown()</description><pubDate>Sat, 04 Oct 2025 07:38:29 +0000</pubDate></item><item><title>CVE-2025-39931 | crypto: af_alg - Set merge to zero early in af_alg_sendmsg</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39931</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: af_alg - Set merge to zero early in af_alg_sendmsg

If an error causes af_alg_sendmsg to abort, ctx-&gt;merge may contain
a garbage value from the previous loop.  This may then trigger a
crash on the next entry into af_alg_sendmsg when it attempts to do
a merge that can't be done.

Fix this by setting ctx-&gt;merge to zero near the start of the loop.</description><pubDate>Sat, 04 Oct 2025 07:38:30 +0000</pubDate></item><item><title>CVE-2025-39932 | smb: client: let smbd_destroy() call disable_work_sync(&amp;amp;info-&amp;gt;post_send_credits_work)</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39932</link><description>In the Linux kernel, the following vulnerability has been resolved:

smb: client: let smbd_destroy() call disable_work_sync(&amp;amp;info-&gt;post_send_credits_work)

In smbd_destroy() we may destroy the memory so we better
wait until post_send_credits_work is no longer pending
and will never be started again.

I actually just hit the case using rxe:

WARNING: CPU: 0 PID: 138 at drivers/infiniband/sw/rxe/rxe_verbs.c:1032 rxe_post_recv+0x1ee/0x480 [rdma_rxe]
...
[ 5305.686979] [    T138]  smbd_post_recv+0x445/0xc10 [cifs]
[ 5305.687135] [    T138]  ? srso_alias_return_thunk+0x5/0xfbef5
[ 5305.687149] [    T138]  ? __kasan_check_write+0x14/0x30
[ 5305.687185] [    T138]  ? __pfx_smbd_post_recv+0x10/0x10 [cifs]
[ 5305.687329] [    T138]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
[ 5305.687356] [    T138]  ? srso_alias_return_thunk+0x5/0xfbef5
[ 5305.687368] [    T138]  ? srso_alias_return_thunk+0x5/0xfbef5
[ 5305.687378] [    T138]  ? _raw_spin_unlock_irqrestore+0x11/0x60
[ 5305.687389] [    T138]  ? srso_alias_return_thunk+0x5/0xfbef5
[ 5305.687399] [    T138]  ? get_receive_buffer+0x168/0x210 [cifs]
[ 5305.687555] [    T138]  smbd_post_send_credits+0x382/0x4b0 [cifs]
[ 5305.687701] [    T138]  ? __pfx_smbd_post_send_credits+0x10/0x10 [cifs]
[ 5305.687855] [    T138]  ? __pfx___schedule+0x10/0x10
[ 5305.687865] [    T138]  ? __pfx__raw_spin_lock_irq+0x10/0x10
[ 5305.687875] [    T138]  ? queue_delayed_work_on+0x8e/0xa0
[ 5305.687889] [    T138]  process_one_work+0x629/0xf80
[ 5305.687908] [    T138]  ? srso_alias_return_thunk+0x5/0xfbef5
[ 5305.687917] [    T138]  ? __kasan_check_write+0x14/0x30
[ 5305.687933] [    T138]  worker_thread+0x87f/0x1570
...

It means rxe_post_recv was called after rdma_destroy_qp().
This happened because put_receive_buffer() was triggered
by ib_drain_qp() and called:
queue_work(info-&gt;workqueue, &amp;amp;info-&gt;post_send_credits_work);</description><pubDate>Sat, 04 Oct 2025 07:38:30 +0000</pubDate></item><item><title>CVE-2025-39933 | smb: client: let recv_done verify data_offset, data_length and remaining_data_length</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39933</link><description>In the Linux kernel, the following vulnerability has been resolved:

smb: client: let recv_done verify data_offset, data_length and remaining_data_length

This is inspired by the related server fixes.</description><pubDate>Sat, 04 Oct 2025 07:38:31 +0000</pubDate></item><item><title>CVE-2025-39934 | drm: bridge: anx7625: Fix NULL pointer dereference with early IRQ</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39934</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm: bridge: anx7625: Fix NULL pointer dereference with early IRQ

If the interrupt occurs before resource initialization is complete, the
interrupt handler/worker may access uninitialized data such as the I2C
tcpc_client device, potentially leading to NULL pointer dereference.</description><pubDate>Sat, 04 Oct 2025 07:38:31 +0000</pubDate></item><item><title>CVE-2025-39935 | ASoC: codec: sma1307: Fix memory corruption in sma1307_setting_loaded()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39935</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: codec: sma1307: Fix memory corruption in sma1307_setting_loaded()

The sma1307-&gt;set.header_size is how many integers are in the header
(there are 8 of them) but instead of allocating space of 8 integers
we allocate 8 bytes.  This leads to memory corruption when we copy data
it on the next line:

        memcpy(sma1307-&gt;set.header, data,
               sma1307-&gt;set.header_size * sizeof(int));

Also since we're immediately copying over the memory in -&gt;set.header,
there is no need to zero it in the allocator.  Use devm_kmalloc_array()
to allocate the memory instead.</description><pubDate>Sat, 04 Oct 2025 07:38:32 +0000</pubDate></item><item><title>CVE-2025-39936 | crypto: ccp - Always pass in an error pointer to __sev_platform_shutdown_locked()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39936</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: ccp - Always pass in an error pointer to __sev_platform_shutdown_locked()

When

  9770b428b1a2 ("crypto: ccp - Move dev_info/err messages for SEV/SNP init and shutdown")

moved the error messages dumping so that they don't need to be issued by
the callers, it missed the case where __sev_firmware_shutdown() calls
__sev_platform_shutdown_locked() with a NULL argument which leads to
a NULL ptr deref on the shutdown path, during suspend to disk:

  #PF: supervisor read access in kernel mode
  #PF: error_code(0x0000) - not-present page
  PGD 0 P4D 0
  Oops: Oops: 0000 [#1] SMP NOPTI
  CPU: 0 UID: 0 PID: 983 Comm: hib.sh Not tainted 6.17.0-rc4+ #1 PREEMPT(voluntary)
  Hardware name: Supermicro Super Server/H12SSL-i, BIOS 2.5 09/08/2022
  RIP: 0010:__sev_platform_shutdown_locked.cold+0x0/0x21 [ccp]

That rIP is:

  00000000000006fd &lt;__sev_platform_shutdown_locked.cold&gt;:
   6fd:   8b 13                   mov    (%rbx),%edx
   6ff:   48 8b 7d 00             mov    0x0(%rbp),%rdi
   703:   89 c1                   mov    %eax,%ecx

  Code: 74 05 31 ff 41 89 3f 49 8b 3e 89 ea 48 c7 c6 a0 8e 54 a0 41 bf 92 ff ff ff e8 e5 2e 09 e1 c6 05 2a d4 38 00 01 e9 26 af ff ff &lt;8b&gt; 13 48 8b 7d 00 89 c1 48 c7 c6 18 90 54 a0 89 44 24 04 e8 c1 2e
  RSP: 0018:ffffc90005467d00 EFLAGS: 00010282
  RAX: 00000000ffffff92 RBX: 0000000000000000 RCX: 0000000000000000
  			     ^^^^^^^^^^^^^^^^
and %rbx is nice and clean.

  Call Trace:
   
   __sev_firmware_shutdown.isra.0
   sev_dev_destroy
   psp_dev_destroy
   sp_destroy
   pci_device_shutdown
   device_shutdown
   kernel_power_off
   hibernate.cold
   state_store
   kernfs_fop_write_iter
   vfs_write
   ksys_write
   do_syscall_64
   entry_SYSCALL_64_after_hwframe

Pass in a pointer to the function-local error var in the caller.

With that addressed, suspending the ccp shows the error properly at
least:

  ccp 0000:47:00.1: sev command 0x2 timed out, disabling PSP
  ccp 0000:47:00.1: SEV: failed to SHUTDOWN error 0x0, rc -110
  SEV-SNP: Leaking PFN range 0x146800-0x146a00
  SEV-SNP: PFN 0x146800 unassigned, dumping non-zero entries in 2M PFN region: [0x146800 - 0x146a00]
  ...
  ccp 0000:47:00.1: SEV-SNP firmware shutdown failed, rc -16, error 0x0
  ACPI: PM: Preparing to enter system sleep state S5
  kvm: exiting hardware virtualization
  reboot: Power down

Btw, this driver is crying to be cleaned up to pass in a proper I/O
struct which can be used to store information between the different
functions, otherwise stuff like that will happen in the future again.</description><pubDate>Sat, 04 Oct 2025 07:38:32 +0000</pubDate></item><item><title>CVE-2025-39937 | net: rfkill: gpio: Fix crash due to dereferencering uninitialized pointer</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39937</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: rfkill: gpio: Fix crash due to dereferencering uninitialized pointer

Since commit 7d5e9737efda ("net: rfkill: gpio: get the name and type from
device property") rfkill_find_type() gets called with the possibly
uninitialized "const char *type_name;" local variable.

On x86 systems when rfkill-gpio binds to a "BCM4752" or "LNV4752"
acpi_device, the rfkill-&gt;type is set based on the ACPI acpi_device_id:

        rfkill-&gt;type = (unsigned)id-&gt;driver_data;

and there is no "type" property so device_property_read_string() will fail
and leave type_name uninitialized, leading to a potential crash.

rfkill_find_type() does accept a NULL pointer, fix the potential crash
by initializing type_name to NULL.

Note likely sofar this has not been caught because:

1. Not many x86 machines actually have a "BCM4752"/"LNV4752" acpi_device
2. The stack happened to contain NULL where type_name is stored</description><pubDate>Sat, 04 Oct 2025 07:38:32 +0000</pubDate></item><item><title>CVE-2025-39938 | ASoC: qcom: q6apm-lpass-dais: Fix NULL pointer dereference if source graph failed</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39938</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: qcom: q6apm-lpass-dais: Fix NULL pointer dereference if source graph failed

If earlier opening of source graph fails (e.g. ADSP rejects due to
incorrect audioreach topology), the graph is closed and
"dai_data-&gt;graph[dai-&gt;id]" is assigned NULL.  Preparing the DAI for sink
graph continues though and next call to q6apm_lpass_dai_prepare()
receives dai_data-&gt;graph[dai-&gt;id]=NULL leading to NULL pointer
exception:

  qcom-apm gprsvc:service:2:1: Error (1) Processing 0x01001002 cmd
  qcom-apm gprsvc:service:2:1: DSP returned error[1001002] 1
  q6apm-lpass-dais 30000000.remoteproc:glink-edge:gpr:service@1:bedais: fail to start APM port 78
  q6apm-lpass-dais 30000000.remoteproc:glink-edge:gpr:service@1:bedais: ASoC: error at snd_soc_pcm_dai_prepare on TX_CODEC_DMA_TX_3: -22
  Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a8
  ...
  Call trace:
   q6apm_graph_media_format_pcm+0x48/0x120 (P)
   q6apm_lpass_dai_prepare+0x110/0x1b4
   snd_soc_pcm_dai_prepare+0x74/0x108
   __soc_pcm_prepare+0x44/0x160
   dpcm_be_dai_prepare+0x124/0x1c0</description><pubDate>Sat, 04 Oct 2025 07:38:33 +0000</pubDate></item><item><title>CVE-2025-39939 | iommu/s390: Fix memory corruption when using identity domain</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39939</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu/s390: Fix memory corruption when using identity domain

zpci_get_iommu_ctrs() returns counter information to be reported as part
of device statistics; these counters are stored as part of the s390_domain.
The problem, however, is that the identity domain is not backed by an
s390_domain and so the conversion via to_s390_domain() yields a bad address
that is zero'd initially and read on-demand later via a sysfs read.
These counters aren't necessary for the identity domain; just return NULL
in this case.

This issue was discovered via KASAN with reports that look like:
BUG: KASAN: global-out-of-bounds in zpci_fmb_enable_device
when using the identity domain for a device on s390.</description><pubDate>Sat, 04 Oct 2025 07:38:33 +0000</pubDate></item><item><title>CVE-2025-39940 | dm-stripe: fix a possible integer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39940</link><description>In the Linux kernel, the following vulnerability has been resolved:

dm-stripe: fix a possible integer overflow

There's a possible integer overflow in stripe_io_hints if we have too
large chunk size. Test if the overflow happened, and if it did, don't set
limits-&gt;io_min and limits-&gt;io_opt;</description><pubDate>Sat, 04 Oct 2025 07:38:34 +0000</pubDate></item><item><title>CVE-2025-39941 | zram: fix slot write race condition</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39941</link><description>In the Linux kernel, the following vulnerability has been resolved:

zram: fix slot write race condition

Parallel concurrent writes to the same zram index result in leaked
zsmalloc handles.  Schematically we can have something like this:

CPU0                              CPU1
zram_slot_lock()
zs_free(handle)
zram_slot_lock()
				zram_slot_lock()
				zs_free(handle)
				zram_slot_lock()

compress			compress
handle = zs_malloc()		handle = zs_malloc()
zram_slot_lock
zram_set_handle(handle)
zram_slot_lock
				zram_slot_lock
				zram_set_handle(handle)
				zram_slot_lock

Either CPU0 or CPU1 zsmalloc handle will leak because zs_free() is done
too early.  In fact, we need to reset zram entry right before we set its
new handle, all under the same slot lock scope.</description><pubDate>Sat, 04 Oct 2025 07:38:34 +0000</pubDate></item><item><title>CVE-2025-39942 | ksmbd: smbdirect: verify remaining_data_length respects max_fragmented_recv_size</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39942</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: smbdirect: verify remaining_data_length respects max_fragmented_recv_size

This is inspired by the check for data_offset + data_length.</description><pubDate>Sat, 04 Oct 2025 07:38:34 +0000</pubDate></item><item><title>CVE-2025-39943 | ksmbd: smbdirect: validate data_offset and data_length field of smb_direct_data_transfer</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39943</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: smbdirect: validate data_offset and data_length field of smb_direct_data_transfer

If data_offset and data_length of smb_direct_data_transfer struct are
invalid, out of bounds issue could happen.
This patch validate data_offset and data_length field in recv_done.</description><pubDate>Sat, 04 Oct 2025 07:38:35 +0000</pubDate></item><item><title>CVE-2025-39944 | octeontx2-pf: Fix use-after-free bugs in otx2_sync_tstamp()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39944</link><description>In the Linux kernel, the following vulnerability has been resolved:

octeontx2-pf: Fix use-after-free bugs in otx2_sync_tstamp()

The original code relies on cancel_delayed_work() in otx2_ptp_destroy(),
which does not ensure that the delayed work item synctstamp_work has fully
completed if it was already running. This leads to use-after-free scenarios
where otx2_ptp is deallocated by otx2_ptp_destroy(), while synctstamp_work
remains active and attempts to dereference otx2_ptp in otx2_sync_tstamp().
Furthermore, the synctstamp_work is cyclic, the likelihood of triggering
the bug is nonnegligible.

A typical race condition is illustrated below:

CPU 0 (cleanup)           | CPU 1 (delayed work callback)
otx2_remove()             |
  otx2_ptp_destroy()      | otx2_sync_tstamp()
    cancel_delayed_work() |
    kfree(ptp)            |
                          |   ptp = container_of(...); //UAF
                          |   ptp-&gt; //UAF

This is confirmed by a KASAN report:

BUG: KASAN: slab-use-after-free in __run_timer_base.part.0+0x7d7/0x8c0
Write of size 8 at addr ffff88800aa09a18 by task bash/136
...
Call Trace:
 
 dump_stack_lvl+0x55/0x70
 print_report+0xcf/0x610
 ? __run_timer_base.part.0+0x7d7/0x8c0
 kasan_report+0xb8/0xf0
 ? __run_timer_base.part.0+0x7d7/0x8c0
 __run_timer_base.part.0+0x7d7/0x8c0
 ? __pfx___run_timer_base.part.0+0x10/0x10
 ? __pfx_read_tsc+0x10/0x10
 ? ktime_get+0x60/0x140
 ? lapic_next_event+0x11/0x20
 ? clockevents_program_event+0x1d4/0x2a0
 run_timer_softirq+0xd1/0x190
 handle_softirqs+0x16a/0x550
 irq_exit_rcu+0xaf/0xe0
 sysvec_apic_timer_interrupt+0x70/0x80
 
...
Allocated by task 1:
 kasan_save_stack+0x24/0x50
 kasan_save_track+0x14/0x30
 __kasan_kmalloc+0x7f/0x90
 otx2_ptp_init+0xb1/0x860
 otx2_probe+0x4eb/0xc30
 local_pci_probe+0xdc/0x190
 pci_device_probe+0x2fe/0x470
 really_probe+0x1ca/0x5c0
 __driver_probe_device+0x248/0x310
 driver_probe_device+0x44/0x120
 __driver_attach+0xd2/0x310
 bus_for_each_dev+0xed/0x170
 bus_add_driver+0x208/0x500
 driver_register+0x132/0x460
 do_one_initcall+0x89/0x300
 kernel_init_freeable+0x40d/0x720
 kernel_init+0x1a/0x150
 ret_from_fork+0x10c/0x1a0
 ret_from_fork_asm+0x1a/0x30

Freed by task 136:
 kasan_save_stack+0x24/0x50
 kasan_save_track+0x14/0x30
 kasan_save_free_info+0x3a/0x60
 __kasan_slab_free+0x3f/0x50
 kfree+0x137/0x370
 otx2_ptp_destroy+0x38/0x80
 otx2_remove+0x10d/0x4c0
 pci_device_remove+0xa6/0x1d0
 device_release_driver_internal+0xf8/0x210
 pci_stop_bus_device+0x105/0x150
 pci_stop_and_remove_bus_device_locked+0x15/0x30
 remove_store+0xcc/0xe0
 kernfs_fop_write_iter+0x2c3/0x440
 vfs_write+0x871/0xd70
 ksys_write+0xee/0x1c0
 do_syscall_64+0xac/0x280
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
...

Replace cancel_delayed_work() with cancel_delayed_work_sync() to ensure
that the delayed work item is properly canceled before the otx2_ptp is
deallocated.

This bug was initially identified through static analysis. To reproduce
and test it, I simulated the OcteonTX2 PCI device in QEMU and introduced
artificial delays within the otx2_sync_tstamp() function to increase the
likelihood of triggering the bug.</description><pubDate>Sat, 04 Oct 2025 07:38:35 +0000</pubDate></item><item><title>CVE-2025-39945 | cnic: Fix use-after-free bugs in cnic_delete_task</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39945</link><description>In the Linux kernel, the following vulnerability has been resolved:

cnic: Fix use-after-free bugs in cnic_delete_task

The original code uses cancel_delayed_work() in cnic_cm_stop_bnx2x_hw(),
which does not guarantee that the delayed work item 'delete_task' has
fully completed if it was already running. Additionally, the delayed work
item is cyclic, the flush_workqueue() in cnic_cm_stop_bnx2x_hw() only
blocks and waits for work items that were already queued to the
workqueue prior to its invocation. Any work items submitted after
flush_workqueue() is called are not included in the set of tasks that the
flush operation awaits. This means that after the cyclic work items have
finished executing, a delayed work item may still exist in the workqueue.
This leads to use-after-free scenarios where the cnic_dev is deallocated
by cnic_free_dev(), while delete_task remains active and attempt to
dereference cnic_dev in cnic_delete_task().

A typical race condition is illustrated below:

CPU 0 (cleanup)              | CPU 1 (delayed work callback)
cnic_netdev_event()          |
  cnic_stop_hw()             | cnic_delete_task()
    cnic_cm_stop_bnx2x_hw()  | ...
      cancel_delayed_work()  | /* the queue_delayed_work()
      flush_workqueue()      |    executes after flush_workqueue()*/
                             | queue_delayed_work()
  cnic_free_dev(dev)//free   | cnic_delete_task() //new instance
                             |   dev = cp-&gt;dev; //use

Replace cancel_delayed_work() with cancel_delayed_work_sync() to ensure
that the cyclic delayed work item is properly canceled and that any
ongoing execution of the work item completes before the cnic_dev is
deallocated. Furthermore, since cancel_delayed_work_sync() uses
__flush_work(work, true) to synchronously wait for any currently
executing instance of the work item to finish, the flush_workqueue()
becomes redundant and should be removed.

This bug was identified through static analysis. To reproduce the issue
and validate the fix, I simulated the cnic PCI device in QEMU and
introduced intentional delays — such as inserting calls to ssleep()
within the cnic_delete_task() function — to increase the likelihood
of triggering the bug.</description><pubDate>Sat, 04 Oct 2025 07:38:36 +0000</pubDate></item><item><title>CVE-2025-39946 | tls: make sure to abort the stream if headers are bogus</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39946</link><description>In the Linux kernel, the following vulnerability has been resolved:

tls: make sure to abort the stream if headers are bogus

Normally we wait for the socket to buffer up the whole record
before we service it. If the socket has a tiny buffer, however,
we read out the data sooner, to prevent connection stalls.
Make sure that we abort the connection when we find out late
that the record is actually invalid. Retrying the parsing is
fine in itself but since we copy some more data each time
before we parse we can overflow the allocated skb space.

Constructing a scenario in which we're under pressure without
enough data in the socket to parse the length upfront is quite
hard. syzbot figured out a way to do this by serving us the header
in small OOB sends, and then filling in the recvbuf with a large
normal send.

Make sure that tls_rx_msg_size() aborts strp, if we reach
an invalid record there's really no way to recover.</description><pubDate>Sat, 04 Oct 2025 07:38:36 +0000</pubDate></item><item><title>CVE-2025-39947 | net/mlx5e: Harden uplink netdev access against device unbind</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39947</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Harden uplink netdev access against device unbind

The function mlx5_uplink_netdev_get() gets the uplink netdevice
pointer from mdev-&gt;mlx5e_res.uplink_netdev. However, the netdevice can
be removed and its pointer cleared when unbound from the mlx5_core.eth
driver. This results in a NULL pointer, causing a kernel panic.

 BUG: unable to handle page fault for address: 0000000000001300
 at RIP: 0010:mlx5e_vport_rep_load+0x22a/0x270 [mlx5_core]
 Call Trace:
  
  mlx5_esw_offloads_rep_load+0x68/0xe0 [mlx5_core]
  esw_offloads_enable+0x593/0x910 [mlx5_core]
  mlx5_eswitch_enable_locked+0x341/0x420 [mlx5_core]
  mlx5_devlink_eswitch_mode_set+0x17e/0x3a0 [mlx5_core]
  devlink_nl_eswitch_set_doit+0x60/0xd0
  genl_family_rcv_msg_doit+0xe0/0x130
  genl_rcv_msg+0x183/0x290
  netlink_rcv_skb+0x4b/0xf0
  genl_rcv+0x24/0x40
  netlink_unicast+0x255/0x380
  netlink_sendmsg+0x1f3/0x420
  __sock_sendmsg+0x38/0x60
  __sys_sendto+0x119/0x180
  do_syscall_64+0x53/0x1d0
  entry_SYSCALL_64_after_hwframe+0x4b/0x53

Ensure the pointer is valid before use by checking it for NULL. If it
is valid, immediately call netdev_hold() to take a reference, and
preventing the netdevice from being freed while it is in use.</description><pubDate>Sat, 04 Oct 2025 07:38:37 +0000</pubDate></item><item><title>CVE-2025-39948 | ice: fix Rx page leak on multi-buffer frames</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39948</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: fix Rx page leak on multi-buffer frames

The ice_put_rx_mbuf() function handles calling ice_put_rx_buf() for each
buffer in the current frame. This function was introduced as part of
handling multi-buffer XDP support in the ice driver.

It works by iterating over the buffers from first_desc up to 1 plus the
total number of fragments in the frame, cached from before the XDP program
was executed.

If the hardware posts a descriptor with a size of 0, the logic used in
ice_put_rx_mbuf() breaks. Such descriptors get skipped and don't get added
as fragments in ice_add_xdp_frag. Since the buffer isn't counted as a
fragment, we do not iterate over it in ice_put_rx_mbuf(), and thus we don't
call ice_put_rx_buf().

Because we don't call ice_put_rx_buf(), we don't attempt to re-use the
page or free it. This leaves a stale page in the ring, as we don't
increment next_to_alloc.

The ice_reuse_rx_page() assumes that the next_to_alloc has been incremented
properly, and that it always points to a buffer with a NULL page. Since
this function doesn't check, it will happily recycle a page over the top
of the next_to_alloc buffer, losing track of the old page.

Note that this leak only occurs for multi-buffer frames. The
ice_put_rx_mbuf() function always handles at least one buffer, so a
single-buffer frame will always get handled correctly. It is not clear
precisely why the hardware hands us descriptors with a size of 0 sometimes,
but it happens somewhat regularly with "jumbo frames" used by 9K MTU.

To fix ice_put_rx_mbuf(), we need to make sure to call ice_put_rx_buf() on
all buffers between first_desc and next_to_clean. Borrow the logic of a
similar function in i40e used for this same purpose. Use the same logic
also in ice_get_pgcnts().

Instead of iterating over just the number of fragments, use a loop which
iterates until the current index reaches to the next_to_clean element just
past the current frame. Unlike i40e, the ice_put_rx_mbuf() function does
call ice_put_rx_buf() on the last buffer of the frame indicating the end of
packet.

For non-linear (multi-buffer) frames, we need to take care when adjusting
the pagecnt_bias. An XDP program might release fragments from the tail of
the frame, in which case that fragment page is already released. Only
update the pagecnt_bias for the first descriptor and fragments still
remaining post-XDP program. Take care to only access the shared info for
fragmented buffers, as this avoids a significant cache miss.

The xdp_xmit value only needs to be updated if an XDP program is run, and
only once per packet. Drop the xdp_xmit pointer argument from
ice_put_rx_mbuf(). Instead, set xdp_xmit in the ice_clean_rx_irq() function
directly. This avoids needing to pass the argument and avoids an extra
bit-wise OR for each buffer in the frame.

Move the increment of the ntc local variable to ensure its updated *before*
all calls to ice_get_pgcnts() or ice_put_rx_mbuf(), as the loop logic
requires the index of the element just after the current frame.

Now that we use an index pointer in the ring to identify the packet, we no
longer need to track or cache the number of fragments in the rx_ring.</description><pubDate>Sat, 04 Oct 2025 07:38:37 +0000</pubDate></item><item><title>CVE-2025-39949 | qed: Don&amp;#x27;t collect too many protection override GRC elements</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39949</link><description>In the Linux kernel, the following vulnerability has been resolved:

qed: Don't collect too many protection override GRC elements

In the protection override dump path, the firmware can return far too
many GRC elements, resulting in attempting to write past the end of the
previously-kmalloc'ed dump buffer.

This will result in a kernel panic with reason:

 BUG: unable to handle kernel paging request at ADDRESS

where "ADDRESS" is just past the end of the protection override dump
buffer. The start address of the buffer is:
 p_hwfn-&gt;cdev-&gt;dbg_features[DBG_FEATURE_PROTECTION_OVERRIDE].dump_buf
and the size of the buffer is buf_size in the same data structure.

The panic can be arrived at from either the qede Ethernet driver path:

    [exception RIP: qed_grc_dump_addr_range+0x108]
 qed_protection_override_dump at ffffffffc02662ed [qed]
 qed_dbg_protection_override_dump at ffffffffc0267792 [qed]
 qed_dbg_feature at ffffffffc026aa8f [qed]
 qed_dbg_all_data at ffffffffc026b211 [qed]
 qed_fw_fatal_reporter_dump at ffffffffc027298a [qed]
 devlink_health_do_dump at ffffffff82497f61
 devlink_health_report at ffffffff8249cf29
 qed_report_fatal_error at ffffffffc0272baf [qed]
 qede_sp_task at ffffffffc045ed32 [qede]
 process_one_work at ffffffff81d19783

or the qedf storage driver path:

    [exception RIP: qed_grc_dump_addr_range+0x108]
 qed_protection_override_dump at ffffffffc068b2ed [qed]
 qed_dbg_protection_override_dump at ffffffffc068c792 [qed]
 qed_dbg_feature at ffffffffc068fa8f [qed]
 qed_dbg_all_data at ffffffffc0690211 [qed]
 qed_fw_fatal_reporter_dump at ffffffffc069798a [qed]
 devlink_health_do_dump at ffffffff8aa95e51
 devlink_health_report at ffffffff8aa9ae19
 qed_report_fatal_error at ffffffffc0697baf [qed]
 qed_hw_err_notify at ffffffffc06d32d7 [qed]
 qed_spq_post at ffffffffc06b1011 [qed]
 qed_fcoe_destroy_conn at ffffffffc06b2e91 [qed]
 qedf_cleanup_fcport at ffffffffc05e7597 [qedf]
 qedf_rport_event_handler at ffffffffc05e7bf7 [qedf]
 fc_rport_work at ffffffffc02da715 [libfc]
 process_one_work at ffffffff8a319663

Resolve this by clamping the firmware's return value to the maximum
number of legal elements the firmware should return.</description><pubDate>Sat, 04 Oct 2025 07:38:37 +0000</pubDate></item><item><title>CVE-2025-39950 | net/tcp: Fix a NULL pointer dereference when using TCP-AO with TCP_REPAIR</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39950</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/tcp: Fix a NULL pointer dereference when using TCP-AO with TCP_REPAIR

A NULL pointer dereference can occur in tcp_ao_finish_connect() during a
connect() system call on a socket with a TCP-AO key added and TCP_REPAIR
enabled.

The function is called with skb being NULL and attempts to dereference it
on tcp_hdr(skb)-&gt;seq without a prior skb validation.

Fix this by checking if skb is NULL before dereferencing it.

The commentary is taken from bpf_skops_established(), which is also called
in the same flow. Unlike the function being patched,
bpf_skops_established() validates the skb before dereferencing it.

int main(void){
	struct sockaddr_in sockaddr;
	struct tcp_ao_add tcp_ao;
	int sk;
	int one = 1;

	memset(&amp;amp;sockaddr,'\0',sizeof(sockaddr));
	memset(&amp;amp;tcp_ao,'\0',sizeof(tcp_ao));

	sk = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);

	sockaddr.sin_family = AF_INET;

	memcpy(tcp_ao.alg_name,"cmac(aes128)",12);
	memcpy(tcp_ao.key,"ABCDEFGHABCDEFGH",16);
	tcp_ao.keylen = 16;

	memcpy(&amp;amp;tcp_ao.addr,&amp;amp;sockaddr,sizeof(sockaddr));

	setsockopt(sk, IPPROTO_TCP, TCP_AO_ADD_KEY, &amp;amp;tcp_ao,
	sizeof(tcp_ao));
	setsockopt(sk, IPPROTO_TCP, TCP_REPAIR, &amp;amp;one, sizeof(one));

	sockaddr.sin_family = AF_INET;
	sockaddr.sin_port = htobe16(123);

	inet_aton("127.0.0.1", &amp;amp;sockaddr.sin_addr);

	connect(sk,(struct sockaddr *)&amp;amp;sockaddr,sizeof(sockaddr));

return 0;
}

$ gcc tcp-ao-nullptr.c -o tcp-ao-nullptr -Wall
$ unshare -Urn

BUG: kernel NULL pointer dereference, address: 00000000000000b6
PGD 1f648d067 P4D 1f648d067 PUD 1982e8067 PMD 0
Oops: Oops: 0000 [#1] SMP NOPTI
Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop
Reference Platform, BIOS 6.00 11/12/2020
RIP: 0010:tcp_ao_finish_connect (net/ipv4/tcp_ao.c:1182)</description><pubDate>Sat, 04 Oct 2025 07:38:38 +0000</pubDate></item><item><title>CVE-2025-39951 | um: virtio_uml: Fix use-after-free after put_device in probe</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39951</link><description>In the Linux kernel, the following vulnerability has been resolved:

um: virtio_uml: Fix use-after-free after put_device in probe

When register_virtio_device() fails in virtio_uml_probe(),
the code sets vu_dev-&gt;registered = 1 even though
the device was not successfully registered.
This can lead to use-after-free or other issues.</description><pubDate>Sat, 04 Oct 2025 07:38:38 +0000</pubDate></item><item><title>CVE-2025-39952 | wifi: wilc1000: avoid buffer overflow in WID string configuration</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39952</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: wilc1000: avoid buffer overflow in WID string configuration

Fix the following copy overflow warning identified by Smatch checker.

 drivers/net/wireless/microchip/wilc1000/wlan_cfg.c:184 wilc_wlan_parse_response_frame()
        error: '__memcpy()' 'cfg-&gt;s[i]-&gt;str' copy overflow (512 vs 65537)

This patch introduces size check before accessing the memory buffer.
The checks are base on the WID type of received data from the firmware.
For WID string configuration, the size limit is determined by individual
element size in 'struct wilc_cfg_str_vals' that is maintained in 'len' field
of 'struct wilc_cfg_str'.</description><pubDate>Sat, 04 Oct 2025 07:38:39 +0000</pubDate></item><item><title>CVE-2025-39953 | cgroup: split cgroup_destroy_wq into 3 workqueues</title><link>https://www.cve.org/CVERecord?id=CVE-2025-39953</link><description>In the Linux kernel, the following vulnerability has been resolved:

cgroup: split cgroup_destroy_wq into 3 workqueues

A hung task can occur during [1] LTP cgroup testing when repeatedly
mounting/unmounting perf_event and net_prio controllers with
systemd.unified_cgroup_hierarchy=1. The hang manifests in
cgroup_lock_and_drain_offline() during root destruction.

Related case:
cgroup_fj_function_perf_event cgroup_fj_function.sh perf_event
cgroup_fj_function_net_prio cgroup_fj_function.sh net_prio

Call Trace:
	cgroup_lock_and_drain_offline+0x14c/0x1e8
	cgroup_destroy_root+0x3c/0x2c0
	css_free_rwork_fn+0x248/0x338
	process_one_work+0x16c/0x3b8
	worker_thread+0x22c/0x3b0
	kthread+0xec/0x100
	ret_from_fork+0x10/0x20

Root Cause:

CPU0                            CPU1
mount perf_event                umount net_prio
cgroup1_get_tree                cgroup_kill_sb
rebind_subsystems               // root destruction enqueues
				// cgroup_destroy_wq
// kill all perf_event css
                                // one perf_event css A is dying
                                // css A offline enqueues cgroup_destroy_wq
                                // root destruction will be executed first
                                css_free_rwork_fn
                                cgroup_destroy_root
                                cgroup_lock_and_drain_offline
                                // some perf descendants are dying
                                // cgroup_destroy_wq max_active = 1
                                // waiting for css A to die

Problem scenario:
1. CPU0 mounts perf_event (rebind_subsystems)
2. CPU1 unmounts net_prio (cgroup_kill_sb), queuing root destruction work
3. A dying perf_event CSS gets queued for offline after root destruction
4. Root destruction waits for offline completion, but offline work is
   blocked behind root destruction in cgroup_destroy_wq (max_active=1)

Solution:
Split cgroup_destroy_wq into three dedicated workqueues:
cgroup_offline_wq – Handles CSS offline operations
cgroup_release_wq – Manages resource release
cgroup_free_wq – Performs final memory deallocation

This separation eliminates blocking in the CSS free path while waiting for
offline operations to complete.

[1] https://github.com/linux-test-project/ltp/blob/master/runtest/controllers</description><pubDate>Sat, 04 Oct 2025 07:38:39 +0000</pubDate></item><item><title>CVE-2025-10383 | Contest Gallery – Upload, Vote &amp;amp; Sell with PayPal and Stripe &amp;lt;= 27.0.2 - Authenticated (Author+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10383</link><description>The Contest Gallery – Upload, Vote &amp; Sell with PayPal and Stripe plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple form field parameters in all versions up to, and including, 27.0.2. This is due to insufficient input sanitization and output escaping on user-supplied attributes. This makes it possible for authenticated attackers, with author-level access or higher, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 04 Oct 2025 03:44:16 +0000</pubDate></item><item><title>CVE-2025-9886 | Trinity Audio &amp;lt;= 5.20.2 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9886</link><description>The Trinity Audio – Text to Speech AI audio player to convert content into audio plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 5.20.2. This is due to missing or incorrect nonce validation in the '/admin/inc/post-management.php' file. This makes it possible for unauthenticated attackers to activate/deactivate posts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Sat, 04 Oct 2025 03:44:16 +0000</pubDate></item><item><title>CVE-2025-9952 | Trinity Audio &amp;lt;= 5.20.2 - Reflected Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9952</link><description>The Trinity Audio – Text to Speech AI audio player to convert content into audio plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'range-date' parameter in all versions up to, and including, 5.20.2 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Sat, 04 Oct 2025 03:44:16 +0000</pubDate></item><item><title>CVE-2025-61962 | In fetchmail before 6.5.6, the SMTP client can crash when authenticating upon receiving a 334 status code in a malformed context.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61962</link><description>In fetchmail before 6.5.6, the SMTP client can crash when authenticating upon receiving a 334 status code in a malformed context.</description><pubDate>Sat, 04 Oct 2025 03:31:35 +0000</pubDate></item><item><title>CVE-2025-10746 | Integrate Dynamics 365 CRM &amp;lt;= 1.0.9 - Missing Authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10746</link><description>The Integrate Dynamics 365 CRM plugin for WordPress is vulnerable to unauthorized access in all versions up to, and including, 1.0.9. This is due to missing capability checks and nonce verification on functions hooked to 'init'. This makes it possible for unauthenticated attackers to deactivate the plugin, tamper with OAuth configuration, and trigger test connections that expose sensitive data via direct request to vulnerable endpoints granted they can craft malicious requests with specific parameters.</description><pubDate>Sat, 04 Oct 2025 03:03:46 +0000</pubDate></item><item><title>CVE-2025-11227 | GiveWP – Donation Plugin and Fundraising Platform &amp;lt;= 4.10.0 - Missing Authorization to Unauthenticated Forms and Campaigns Disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11227</link><description>The GiveWP – Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to Information Exposure in all versions up to, and including, 4.10.0 via the 'registerGetForm', 'registerGetForms', 'registerGetCampaign' and 'registerGetCampaigns' functions due to a missing capability check. This makes it possible for unauthenticated attackers to extract data from private and draft donation forms, as well as archived campaigns.</description><pubDate>Sat, 04 Oct 2025 03:03:47 +0000</pubDate></item><item><title>CVE-2025-11228 | GiveWP – Donation Plugin and Fundraising Platform &amp;lt;= 4.10.0 - Missing Authorization to Unauthenticated Forms-Campaign Association</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11228</link><description>The GiveWP – Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the `registerAssociateFormsWithCampaign` function in all versions up to, and including, 4.10.0. This makes it possible for unauthenticated attackers to associate any donation forms with any campaign.</description><pubDate>Sat, 04 Oct 2025 03:03:47 +0000</pubDate></item><item><title>CVE-2025-8726 | WP Photo Album Plus &amp;lt;= 9.0.11.006 - Authenticated (Subscriber+) Stored Cross-Site Scripting via wppa_user_upload</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8726</link><description>The WP Photo Album Plus plugin for WordPress is vulnerable to Cross-Site Scripting in all versions up to, and including, 9.0.11.006 due to insufficient input sanitization and output escaping in the wppa_user_upload function. This makes it possible for authenticated attackers, with Subscriber-level access and above, to inject arbitrary web scripts in the photo album descriptions that execute in a victim's browser.</description><pubDate>Sat, 04 Oct 2025 03:03:47 +0000</pubDate></item><item><title>CVE-2025-9029 | WDesignKit – Elementor &amp;amp; Gutenberg Starter Templates, Patterns, Cloud Workspace &amp;amp; Widget Builder &amp;lt;= 1.2.16 - Missing Authentication via wdkit_handle_review_submission Function</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9029</link><description>The WDesignKit – Elementor &amp; Gutenberg Starter Templates, Patterns, Cloud Workspace &amp; Widget Builder plugin for WordPress is vulnerable to missing authorization via the wdkit_handle_review_submission function in versions less than, or equal to, 1.2.16. This is due to the plugin not properly verifying that a user is authorized to perform an action. This makes it possible for unauthenticated attackers to submit feedback data to external services.</description><pubDate>Sat, 04 Oct 2025 03:03:48 +0000</pubDate></item><item><title>CVE-2025-9030 | Majestic Before After Image &amp;lt;= 2.0.2 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9030</link><description>The Majestic Before After Image plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'before_label' and 'after_label' parameters in versions less than, or equal to, 2.0.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 04 Oct 2025 03:03:48 +0000</pubDate></item><item><title>CVE-2025-9243 | Cost Calculator Builder &amp;lt;= 3.5.32 - Authenticated (Subscriber+) Missing Authorization via get_cc_orders/update_order_status Functions</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9243</link><description>The Cost Calculator Builder plugin for WordPress is vulnerable to unauthorizedmodification of data due to a missing capability check on the get_cc_orders and update_order_status functions in all versions up to, and including, 3.5.32. This makes it possible for authenticated attackers, with Subscriber-level access and above, to access order management functions and modify order status.</description><pubDate>Sat, 04 Oct 2025 03:03:48 +0000</pubDate></item><item><title>CVE-2025-9485 | OAuth Single Sign On – SSO (OAuth Client) &amp;lt;= 6.26.12 - Authentication Bypass via get_resource_owner_from_id_token()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9485</link><description>The OAuth Single Sign On – SSO (OAuth Client) plugin for WordPress is vulnerable to Improper Verification of Cryptographic Signature in versions up to, and including, 6.26.12. This is due to the plugin performing unsafe JWT token processing without verification or validation in the `get_resource_owner_from_id_token` function. This makes it possible for unauthenticated attackers to bypass authentication and gain access to any existing user account - including administrators in certain configurations - or to create arbitrary subscriber-level accounts.</description><pubDate>Sat, 04 Oct 2025 03:03:49 +0000</pubDate></item><item><title>CVE-2025-10751 | MacForge 1.2.0 Beta 1 - Local Privilege Escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10751</link><description>MacForge contains an insecure XPC service that allows local, unprivileged users to escalate their privileges to root.This issue affects MacForge: 1.2.0 Beta 1.</description><pubDate>Sat, 04 Oct 2025 01:08:53 +0000</pubDate></item><item><title>CVE-2025-61685 | Mastra Docs MCP Server `@mastra/mcp-docs-server` Leads to Information Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61685</link><description>Mastra is a Typescript framework for building AI agents and assistants. Versions 0.13.8 through 0.13.20-alpha.0 are vulnerable to a Directory Traversal attack that results in the disclosure of directory listings. The code contains a security check to prevent path traversal for reading file contents, but this check is effectively bypassed by subsequent logic that attempts to find directory suggestions. An attacker can leverage this flaw to list the contents of arbitrary directories on the user's filesystem, including the user's home directory, exposing sensitive information about the file system's structure. This issue is fixed in version 0.13.20.</description><pubDate>Fri, 03 Oct 2025 22:40:39 +0000</pubDate></item><item><title>CVE-2025-61681 | Kuno is Vulnerable to Stored XSS Attack via SVG File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61681</link><description>KUNO CMS is a fully deployable full-stack blog application. Versions 1.3.13 and below contain validation flaws in its file upload functionality that can be exploited for stored XSS. The upload endpoint only validates file types based on Content-Type headers, lacks file content analysis and extension whitelist restrictions, allowing attackers to upload SVG files containing malicious scripts (disguised as images). When users access the uploaded resource pages, arbitrary JavaScript executes in their browsers. This issue is fixed in version 1.3.14.</description><pubDate>Fri, 03 Oct 2025 21:54:59 +0000</pubDate></item><item><title>CVE-2025-61680 | Minecraft RCON Terminal: Plain Text Password Storage in Configuration</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61680</link><description>Minecraft RCON Terminal is a VS Code extension that streamlines Minecraft server management. Versions 0.1.0 through 2.0.6 stores passwords using VS Code's configuration API which writes to settings.json in plaintext. This issue is fixed in version 2.1.0.</description><pubDate>Fri, 03 Oct 2025 21:46:18 +0000</pubDate></item><item><title>CVE-2025-61679 | Anyquery Unauthenticated Access Vulnerability Exposes Private Integration Data</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61679</link><description>Anyquery is an SQL query engine built on top of SQLite. Versions 0.4.3 and below allow attackers who have already gained access to localhost, even with low privileges, to use the http server through the port unauthenticated, and access private integration data like emails, without any warning of a foreign login from the provider. This issue is fixed in version 0.4.4.</description><pubDate>Fri, 03 Oct 2025 21:37:45 +0000</pubDate></item><item><title>CVE-2025-61677 | DataChain: Deserialization of Untrusted Data from Environment Variables</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61677</link><description>DataChain is a Python-based AI-data warehouse for transforming and analyzing unstructured data. Versions 0.34.1 and below allow for deseriaization of untrusted data because of the way the DataChain library reads serialized objects from environment variables (such as DATACHAIN__METASTORE and DATACHAIN__WAREHOUSE) in the loader.py module. An attacker with the ability to set these environment variables can trigger code execution when the application loads. This issue is fixed in version 0.34.2.</description><pubDate>Fri, 03 Oct 2025 21:27:50 +0000</pubDate></item><item><title>CVE-2025-43825 | A vulnerability in Liferay Portal 7.4.0 through 7.4.3.132, and Liferay DXP 2025.Q1.0 through 2025.Q1.4, 2024.Q4.0 through 2024.Q4.5, 2024.Q3...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-43825</link><description>A vulnerability in Liferay Portal 7.4.0 through 7.4.3.132, and Liferay DXP 2025.Q1.0 through 2025.Q1.4, 2024.Q4.0 through 2024.Q4.5, 2024.Q3.0 through 2024.Q3.13, 2024.Q2.1 through 2024.Q2.13, 2024.Q1.1 through 2024.Q1.12, 2023.Q4.0 through 2023.Q4.10, 2023.Q3.1 through 2023.Q3.10, and 7.4 GA through update 92 allows sensitive user data to be included in the Freemarker template. This weakness permits an unauthorized actor to gain access to, and potentially render, confidential information that should remain restricted.</description><pubDate>Fri, 03 Oct 2025 21:27:51 +0000</pubDate></item><item><title>CVE-2025-61673 | Karapace is vulnerable to Authentication Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61673</link><description>Karapace is an open-source implementation of Kafka REST and Schema Registry. Versions 5.0.0 and 5.0.1 contain an authentication bypass vulnerability when configured to use OAuth 2.0 Bearer Token authentication. If a request is sent without an Authorization header, the token validation logic is skipped entirely, allowing an unauthenticated user to read and write to Schema Registry endpoints that should otherwise be protected. This effectively renders the OAuth authentication mechanism ineffective. This issue is fixed in version 5.0.2.</description><pubDate>Fri, 03 Oct 2025 21:27:51 +0000</pubDate></item><item><title>CVE-2025-10695 | OpenSupports 4.11.0 — SSRF via test imap and smtp endpoints</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10695</link><description>Two unauthenticated diagnostic endpoints allow arbitrary backend-initiated network connections to an attacker‑supplied destination. Both endpoints are exposed with permission =&gt; 'any', enabling unauthenticated SSRF for internal network scanning and service interaction.

This issue affects OpenSupports: 4.11.0.</description><pubDate>Fri, 03 Oct 2025 20:48:11 +0000</pubDate></item><item><title>CVE-2025-10696 | OpenSupports 4.11.0 — Insecure Direct Object Reference in supervised list</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10696</link><description>OpenSupports exposes an endpoint that allows the list of 'supervised users' for any account to be edited, but it does not validate whether the actor is the owner of that list. A Level 1 staff member can modify the supervision relationship of a third party (the target user), who can then view the tickets of the added 'supervised' users. This breaks the authorization model and filters the content of other users' tickets.This issue affects OpenSupports: 4.11.0.</description><pubDate>Fri, 03 Oct 2025 20:48:11 +0000</pubDate></item><item><title>CVE-2025-10692 | OpenSupports 4.11.0 — SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10692</link><description>The endpoint POST /api/staff/get-new-tickets concatenates the user-controlled parameter departmentId directly into the SQL WHERE clause without parameter binding. As a result, an authenticated staff user (level ≥ 1) can inject SQL to alter the filter logic, effectively bypassing department scoping and disclosing tickets beyond their intended access.This issue affects OpenSupports: 4.11.0.</description><pubDate>Fri, 03 Oct 2025 20:39:24 +0000</pubDate></item><item><title>CVE-2025-59944 | Cursor IDE: Sensitive File Overwrite Bypass is Possible</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59944</link><description>Cursor is a code editor built for programming with AI. Versions 1.6.23 and below contain case-sensitive checks in the way Cursor IDE protects its sensitive files (e.g., */.cursor/mcp.json), which allows attackers to modify the content of these files through prompt injection and achieve remote code execution. A prompt injection can lead to full RCE through modifying sensitive files on case-insensitive fileystems. This issue is fixed in version 1.7.</description><pubDate>Fri, 03 Oct 2025 20:39:25 +0000</pubDate></item><item><title>CVE-2025-59943 | phpMyFAQ duplicate email registration allows multiple accounts with the same email</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59943</link><description>phpMyFAQ is an open source FAQ web application. Versions 4.0-nightly-2025-10-03 and below do not enforce uniqueness of email addresses during user registration. This allows multiple distinct accounts to be created with the same email. Because email is often used as an identifier for password resets, notifications, and administrative actions, this flaw can cause account ambiguity and, in certain configurations, may lead to privilege escalation or account takeover. This issue is fixed in version 4.0.13.</description><pubDate>Fri, 03 Oct 2025 20:26:48 +0000</pubDate></item><item><title>CVE-2025-54374 | Eidos: One-click Remote Code Execution through Custom URL Handling</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54374</link><description>Eidos is an extensible framework for Personal Data Management. Versions 0.21.0 and below contain a one-click remote code execution vulnerability. An attacker can exploit this vulnerability by embedding a specially crafted eidos: URL on any website, including a malicious one they control. When a victim visits such a site or clicks on the link, the browser triggers the app’s custom URL handler (eidos:), causing the Eidos application to launch and process the URL, leading to remote code execution on the victim’s machine. This issue does not have a fix as of October 3, 2025</description><pubDate>Fri, 03 Oct 2025 20:26:49 +0000</pubDate></item><item><title>CVE-2025-59829 | Claude Code: Permission deny bypass is possible through symlink</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59829</link><description>Claude Code is an agentic coding tool. Versions below 1.0.120 failed to account for symlinks when checking permission deny rules. If a user explicitly denied Claude Code access to a file and Claude Code had access to a symlink pointing to that file, it was possible for Claude Code to access the file. Users on standard Claude Code auto-update will have received this fix automatically. Users performing manual updates are advised to update to the latest version. This issue is fixed in version 1.0.120.</description><pubDate>Fri, 03 Oct 2025 20:26:49 +0000</pubDate></item><item><title>CVE-2025-53354 | NiceGUI is vulnerable to Reflected XSS attack</title><link>https://www.cve.org/CVERecord?id=CVE-2025-53354</link><description>NiceGUI is a Python-based UI framework. Versions 2.24.2 and below are at risk for Cross-Site Scripting (XSS) when developers render unescaped user input into the DOM using ui.html(). NiceGUI did not enforce HTML or JavaScript sanitization, so applications that directly combine components like ui.input() with ui.html() or  ui.chat_message with HTML content without escaping may allow attackers to execute arbitrary JavaScript in the user’s browser. Applications that do not pass untrusted input into ui.html() are not affected. This issue is fixed in version 3.0.0.</description><pubDate>Fri, 03 Oct 2025 19:42:35 +0000</pubDate></item><item><title>CVE-2025-49844 | Redis Lua Use-After-Free may lead to remote code execution</title><link>https://www.cve.org/CVERecord?id=CVE-2025-49844</link><description>Redis is an open source, in-memory database that persists on disk. Versions 8.2.1 and below allow an authenticated user to use a specially crafted Lua script to manipulate the garbage collector, trigger a use-after-free and potentially lead to remote code execution. The problem exists in all versions of Redis with Lua scripting. This issue is fixed in version 8.2.2. To workaround this issue without patching the redis-server executable is to prevent users from executing Lua scripts. This can be done using ACL to restrict EVAL and EVALSHA commands.</description><pubDate>Fri, 03 Oct 2025 19:33:40 +0000</pubDate></item><item><title>CVE-2025-46819 | Redis is vulnerable to DoS via specially crafted LUA scripts</title><link>https://www.cve.org/CVERecord?id=CVE-2025-46819</link><description>Redis is an open source, in-memory database that persists on disk. Versions 8.2.1 and below allow an authenticated user to use a specially crafted LUA script to read out-of-bound data or crash the server and subsequent denial of service. The problem exists in all versions of Redis with Lua scripting. This issue is fixed in version 8.2.2. To workaround this issue without patching the redis-server executable is to prevent users from executing Lua scripts. This can be done using ACL to block a script by restricting both the EVAL and FUNCTION command families.</description><pubDate>Fri, 03 Oct 2025 19:23:57 +0000</pubDate></item><item><title>CVE-2025-46818 | Redis: Authenticated users can execute LUA scripts as a different user</title><link>https://www.cve.org/CVERecord?id=CVE-2025-46818</link><description>Redis is an open source, in-memory database that persists on disk. Versions 8.2.1 and below allow an authenticated user to use a specially crafted Lua script to manipulate different LUA objects and potentially run their own code in the context of another user. The problem exists in all versions of Redis with LUA scripting. This issue is fixed in version 8.2.2. A workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing LUA scripts. This can be done using ACL to block a script by restricting both the EVAL and FUNCTION command families.</description><pubDate>Fri, 03 Oct 2025 18:48:06 +0000</pubDate></item><item><title>CVE-2025-44008 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-44008</link><description>A NULL pointer dereference vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:31 +0000</pubDate></item><item><title>CVE-2025-44009 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-44009</link><description>A NULL pointer dereference vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:32 +0000</pubDate></item><item><title>CVE-2025-44010 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-44010</link><description>A NULL pointer dereference vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:32 +0000</pubDate></item><item><title>CVE-2025-44011 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-44011</link><description>A NULL pointer dereference vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:32 +0000</pubDate></item><item><title>CVE-2025-44012 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-44012</link><description>An allocation of resources without limits or throttling vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to prevent other systems, applications, or processes from accessing the same type of resource.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.2 ( 2025/07/31 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:33 +0000</pubDate></item><item><title>CVE-2025-44014 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-44014</link><description>An out-of-bounds write vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to modify or corrupt memory.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:33 +0000</pubDate></item><item><title>CVE-2025-47210 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-47210</link><description>A NULL pointer dereference vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.2 ( 2025/07/31 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:34 +0000</pubDate></item><item><title>CVE-2025-47211 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-47211</link><description>A path traversal vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to read the contents of unexpected files or system data.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:34 +0000</pubDate></item><item><title>CVE-2025-47212 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-47212</link><description>A command injection vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to execute arbitrary commands.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:34 +0000</pubDate></item><item><title>CVE-2025-47213 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-47213</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:35 +0000</pubDate></item><item><title>CVE-2025-47214 | QTS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-47214</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
  and later</description><pubDate>Fri, 03 Oct 2025 18:29:35 +0000</pubDate></item><item><title>CVE-2025-48726 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-48726</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:35 +0000</pubDate></item><item><title>CVE-2025-48727 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-48727</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:36 +0000</pubDate></item><item><title>CVE-2025-48728 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-48728</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:36 +0000</pubDate></item><item><title>CVE-2025-48729 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-48729</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:37 +0000</pubDate></item><item><title>CVE-2025-48730 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-48730</link><description>A use of externally-controlled format string vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to obtain secret data or modify memory.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:37 +0000</pubDate></item><item><title>CVE-2025-52424 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52424</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:37 +0000</pubDate></item><item><title>CVE-2025-52427 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52427</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:38 +0000</pubDate></item><item><title>CVE-2025-52428 | QTS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52428</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:38 +0000</pubDate></item><item><title>CVE-2025-52429 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52429</link><description>A use of externally-controlled format string vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to obtain secret data or modify memory.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:38 +0000</pubDate></item><item><title>CVE-2025-52432 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52432</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
  and later
QuTS hero h5.2.6.3195 build 20250715 and later
QuTS hero h5.3.0.3192 build 20250716 and later</description><pubDate>Fri, 03 Oct 2025 18:29:39 +0000</pubDate></item><item><title>CVE-2025-52433 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52433</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:39 +0000</pubDate></item><item><title>CVE-2025-52654 | HCL MyXalytics product is affected by HTML Injection in the web application</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52654</link><description>A vulnerability in HCL HCL MyXalytics allows HTML InjectionThis issue affects HCL MyXalytics: 6.6.</description><pubDate>Fri, 03 Oct 2025 18:29:40 +0000</pubDate></item><item><title>CVE-2025-52656 | HCL MyXalytics product is affected by Mass Assignment vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52656</link><description>HCL MyXalytics: 6.6.  is affected by Mass Assignment vulnerability. Mass Assignment occurs when user input is automatically bound to application objects without proper validation or access controls, potentially allowing unauthorized modification of sensitive fields.</description><pubDate>Fri, 03 Oct 2025 18:29:40 +0000</pubDate></item><item><title>CVE-2025-52658 | HCL MyXalytics  

6.6.  product is affected by Use of Vulnerable/Outdated Versions Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52658</link><description>HCL MyXalytics  

6.6.  product is affected by Use of Vulnerable/Outdated Versions Vulnerability</description><pubDate>Fri, 03 Oct 2025 18:29:40 +0000</pubDate></item><item><title>CVE-2025-52853 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52853</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:41 +0000</pubDate></item><item><title>CVE-2025-52854 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52854</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:41 +0000</pubDate></item><item><title>CVE-2025-52855 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52855</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:41 +0000</pubDate></item><item><title>CVE-2025-52857 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52857</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:42 +0000</pubDate></item><item><title>CVE-2025-52858 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52858</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:42 +0000</pubDate></item><item><title>CVE-2025-52859 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52859</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:42 +0000</pubDate></item><item><title>CVE-2025-52860 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52860</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:43 +0000</pubDate></item><item><title>CVE-2025-52862 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52862</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:43 +0000</pubDate></item><item><title>CVE-2025-52866 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52866</link><description>A NULL pointer dereference vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:44 +0000</pubDate></item><item><title>CVE-2025-52867 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52867</link><description>An uncontrolled resource consumption vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to launch a denial-of-service (DoS) attack.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.2 ( 2025/07/31 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:44 +0000</pubDate></item><item><title>CVE-2025-53406 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-53406</link><description>A use of externally-controlled format string vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to obtain secret data or modify memory.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:44 +0000</pubDate></item><item><title>CVE-2025-53407 | QTS, QuTS hero</title><link>https://www.cve.org/CVERecord?id=CVE-2025-53407</link><description>A use of externally-controlled format string vulnerability has been reported to affect several QNAP operating system versions. If a remote attacker gains an administrator account, they can then exploit the vulnerability to obtain secret data or modify memory.

We have already fixed the vulnerability in the following versions:
QTS 5.2.6.3195 build 20250715 and later
QuTS hero h5.2.6.3195 build 20250715 and later</description><pubDate>Fri, 03 Oct 2025 18:29:45 +0000</pubDate></item><item><title>CVE-2025-53595 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-53595</link><description>An SQL injection vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to execute unauthorized code or commands.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.2 ( 2025/07/31 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:45 +0000</pubDate></item><item><title>CVE-2025-54153 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54153</link><description>An SQL injection vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to execute unauthorized code or commands.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.2 ( 2025/07/31 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:45 +0000</pubDate></item><item><title>CVE-2025-54154 | QNAP Authenticator</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54154</link><description>An improper authentication vulnerability has been reported to affect QNAP Authenticator. If an attacker gains physical access, they can then exploit the vulnerability to compromise the security of the system.

We have already fixed the vulnerability in the following version:
QNAP Authenticator 1.3.1.1227 and later</description><pubDate>Fri, 03 Oct 2025 18:29:46 +0000</pubDate></item><item><title>CVE-2025-57714 | NetBak Replicator</title><link>https://www.cve.org/CVERecord?id=CVE-2025-57714</link><description>An unquoted search path or element vulnerability has been reported to affect NetBak Replicator. If a local attacker gains a user account, they can then exploit the vulnerability to execute unauthorized code or commands.

We have already fixed the vulnerability in the following version:
NetBak Replicator 4.5.15.0807 and later</description><pubDate>Fri, 03 Oct 2025 18:29:46 +0000</pubDate></item><item><title>CVE-2024-56804 | Video Station</title><link>https://www.cve.org/CVERecord?id=CVE-2024-56804</link><description>An SQL injection vulnerability has been reported to affect Video Station. If a remote attacker gains a user account, they can then exploit the vulnerability to execute unauthorized code or commands.

We have already fixed the vulnerability in the following version:
Video Station 5.8.4 and later</description><pubDate>Fri, 03 Oct 2025 18:29:47 +0000</pubDate></item><item><title>CVE-2025-33034 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-33034</link><description>A path traversal vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to read the contents of unexpected files or system data.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:47 +0000</pubDate></item><item><title>CVE-2025-33039 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-33039</link><description>An allocation of resources without limits or throttling vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to prevent other systems, applications, or processes from accessing the same type of resource.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:48 +0000</pubDate></item><item><title>CVE-2025-33040 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-33040</link><description>An allocation of resources without limits or throttling vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to prevent other systems, applications, or processes from accessing the same type of resource.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:48 +0000</pubDate></item><item><title>CVE-2025-44006 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-44006</link><description>An allocation of resources without limits or throttling vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to prevent other systems, applications, or processes from accessing the same type of resource.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:48 +0000</pubDate></item><item><title>CVE-2025-44007 | Qsync Central</title><link>https://www.cve.org/CVERecord?id=CVE-2025-44007</link><description>An allocation of resources without limits or throttling vulnerability has been reported to affect Qsync Central. If a remote attacker gains a user account, they can then exploit the vulnerability to prevent other systems, applications, or processes from accessing the same type of resource.

We have already fixed the vulnerability in the following version:
Qsync Central 5.0.0.1 ( 2025/07/09 ) and later</description><pubDate>Fri, 03 Oct 2025 18:29:49 +0000</pubDate></item><item><title>CVE-2025-52653 | Cross Site Scripting vulnerability in the web application</title><link>https://www.cve.org/CVERecord?id=CVE-2025-52653</link><description>HCL MyXalytics product is affected by Cross Site Scripting vulnerability in the web application. This can allow the execution of unauthorized scripts, potentially resulting in unauthorized actions or access.</description><pubDate>Fri, 03 Oct 2025 18:29:49 +0000</pubDate></item><item><title>CVE-2025-46817 | Lua library commands may lead to integer overflow and potential RCE</title><link>https://www.cve.org/CVERecord?id=CVE-2025-46817</link><description>Redis is an open source, in-memory database that persists on disk. Versions 8.2.1 and below allow an authenticated user to use a specially crafted Lua script to cause an integer overflow and potentially lead to remote code execution The problem exists in all versions of Redis with Lua scripting. This issue is fixed in version 8.2.2.</description><pubDate>Fri, 03 Oct 2025 18:29:50 +0000</pubDate></item><item><title>CVE-2025-61593 | Cursor CLI Agent: Sensitive File Overwrite Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61593</link><description>Cursor is a code editor built for programming with AI. In versions 1.7 and below, a vulnerability in the way Cursor CLI Agent protects its sensitive files (i.e. */.cursor/cli.json) allows attackers to modify the content of the files through prompt injection, thus achieving remote code execution. A prompt injection can lead to full RCE through modifying sensitive files on case-insensitive filesystems. This issue is fixed in a commit, 25b418f, but has yet to be released as of October 3, 2025.</description><pubDate>Fri, 03 Oct 2025 17:40:12 +0000</pubDate></item><item><title>CVE-2025-61592 | Cursor CLI: Arbitrary Code Execution Possible through Permissive CLI Config</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61592</link><description>Cursor is a code editor built for programming with AI. In versions 1.7 and below, automatic loading of project-specific CLI configuration from the current working directory (/.cursor/cli.json) could override certain global configurations in Cursor CLI. This allowed users running the CLI inside a malicious repository to be vulnerable to Remote Code Execution through a combination of permissive configuration (allowing shell commands) and prompt injection delivered via project-specific Rules (/.cursor/rules/rule.mdc) or other mechanisms. The fix for this issue is currently available as a patch 2025.09.17-25b418f. As of October 3, 2025 there is no release version.</description><pubDate>Fri, 03 Oct 2025 17:29:17 +0000</pubDate></item><item><title>CVE-2025-56551 | An issue in DirectAdmin v1.680 allows unauthorized attackers to manipulate the page layout and replace the legitimate login interface with a...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-56551</link><description>An issue in DirectAdmin v1.680 allows unauthorized attackers to manipulate the page layout and replace the legitimate login interface with arbitrary attacker-controlled content via supplying a crafted GET request.</description><pubDate>Fri, 03 Oct 2025 17:12:16 +0000</pubDate></item><item><title>CVE-2021-42193 | nopCommerce 4.40.3 is vulnerable to XSS in the Product Name at /Admin/Product/Edit/[id]. Each time a user views the product in the shop, the...</title><link>https://www.cve.org/CVERecord?id=CVE-2021-42193</link><description>nopCommerce 4.40.3 is vulnerable to XSS in the Product Name at /Admin/Product/Edit/[id]. Each time a user views the product in the shop, the XSS payload fires.</description><pubDate>Fri, 03 Oct 2025 17:12:17 +0000</pubDate></item><item><title>CVE-2025-61591 | Cursor CLI&amp;#x27;s Cursor Agent MCP OAuth2 Communication is Vulnerable to Remote Code Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61591</link><description>Cursor is a code editor built for programming with AI. In versions 1.7 and below, when MCP uses OAuth authentication with an untrusted MCP server, an attacker can impersonate a malicious MCP server and return crafted, maliciously injected commands during the interaction process, leading to command injection and potential remote code execution. If chained with an untrusted MCP service via OAuth, this command injection vulnerability could allow arbitrary code execution on the host by the agent. This can then be used to directly compromise the system by executing malicious commands with full user privileges. This issue does not currently have a fixed release version, but there is a patch, 2025.09.17-25b418f.</description><pubDate>Fri, 03 Oct 2025 16:55:33 +0000</pubDate></item><item><title>CVE-2025-61590 | Cursor is vulnerable to RCE via .code-workspace files using Prompt Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61590</link><description>Cursor is a code editor built for programming with AI. Versions 1.6 and below are vulnerable to Remote Code Execution (RCE) attacks through Visual Studio Code Workspaces. Workspaces allow users to open more than a single folder and save specific settings (pretty similar to .vscode/settings.json) for the folders / project. An untitled workspace is automatically created by VS Code (untitled.code-workspace), which contains all the folders and workspace settings from the user's current session, opening up an entire new attack vector if the user has a .code-workspace file in path (either untitled created automatically or a saved one). If an attacker is able to hijack the chat context of the victim (such as via a compromised MCP server), they can use prompt injection to make the Cursor Agent write into this file and modify the workspace. This leads to a bypass of CVE-2025-54130 which can lead to RCE by writing to the settings section. This issue is fixed in version 1.7.</description><pubDate>Fri, 03 Oct 2025 16:46:11 +0000</pubDate></item><item><title>CVE-2025-34226 | OpenPLC Runtime v3 Persistent DoS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-34226</link><description>OpenPLC Runtime v3 contains an input validation flaw in the /upload-program-action endpoint: the epoch_time field supplied during program uploads is not validated and can be crafted to induce corruption of the programs database. After a successful malformed upload the runtime continues to operate until a restart; on restart the runtime can fail to start because of corrupted database entries, resulting in persistent denial of service requiring complete rebase of the product to recover. This vulnerability was remediated by commit 095ee09623dd229b64ad3a1db38a901a3772f6fc.</description><pubDate>Fri, 03 Oct 2025 15:42:06 +0000</pubDate></item><item><title>CVE-2025-57423 | A SQL injection vulnerability was discovered in the /articles endpoint of MyClub 0.5, affecting the query parameters Content, GroupName, Per...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-57423</link><description>A SQL injection vulnerability was discovered in the /articles endpoint of MyClub 0.5, affecting the query parameters Content, GroupName, PersonName, lastUpdate, pool, and title. Due to insufficient input sanitisation, an unauthenticated remote attacker could inject arbitrary SQL commands via a crafted GET request, potentially leading to information disclosure or manipulation of the database.</description><pubDate>Fri, 03 Oct 2025 15:42:07 +0000</pubDate></item><item><title>CVE-2025-55972 | A TCL Smart TV running a vulnerable UPnP/DLNA MediaRenderer implementation is affected by a remote, unauthenticated Denial of Service (DoS) ...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-55972</link><description>A TCL Smart TV running a vulnerable UPnP/DLNA MediaRenderer implementation is affected by a remote, unauthenticated Denial of Service (DoS) condition. By sending a flood of malformed or oversized SetAVTransportURI SOAP requests to the UPnP control endpoint, an attacker can cause the device to become unresponsive. This denial persists as long as the attack continues and affects all forms of TV operation. Manual user control and even reboots do not restore functionality unless the flood stops.</description><pubDate>Fri, 03 Oct 2025 15:29:45 +0000</pubDate></item><item><title>CVE-2025-55971 | TCL 65C655 Smart TV, running firmware version V8-R75PT01-LF1V269.001116 (Android TV, Kernel 5.4.242+), is vulnerable to a blind, unauthentic...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-55971</link><description>TCL 65C655 Smart TV, running firmware version V8-R75PT01-LF1V269.001116 (Android TV, Kernel 5.4.242+), is vulnerable to a blind, unauthenticated Server-Side Request Forgery (SSRF) vulnerability via the UPnP MediaRenderer service (AVTransport:1). The device accepts unauthenticated SetAVTransportURI SOAP requests over TCP/16398 and attempts to retrieve externally referenced URIs, including attacker-controlled payloads. The blind SSRF allows for sending requests on behalf of the TV, which can be leveraged to probe for other internal or external services accessible by the device (e.g., 127.0.0.1:16XXX, LAN services, or internet targets), potentially enabling additional exploit chains.</description><pubDate>Fri, 03 Oct 2025 15:11:07 +0000</pubDate></item><item><title>CVE-2025-10729 | Use-after-free vulnerability in Qt SVG qsvghandler.cpp allows denial of service via crafted SVG</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10729</link><description>The module will parse a  node which is not a child of a structural node. The node will be deleted after creation but might be accessed later leading to a use after free.</description><pubDate>Fri, 03 Oct 2025 14:44:40 +0000</pubDate></item><item><title>CVE-2025-60787 | MotionEye v0.43.1b4 and before is vulnerable to OS Command Injection in configuration parameters such as image_file_name. Unsanitized user i...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60787</link><description>MotionEye v0.43.1b4 and before is vulnerable to OS Command Injection in configuration parameters such as image_file_name. Unsanitized user input is written to Motion configuration files, allowing remote authenticated attackers with admin access to achieve code execution when Motion is restarted.</description><pubDate>Fri, 03 Oct 2025 14:44:41 +0000</pubDate></item><item><title>CVE-2025-10728 | Uncontrolled recursion in Qt SVG module</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10728</link><description>When the module renders a Svg file that contains a  element, it might end up rendering it recursively leading to stack overflow DoS</description><pubDate>Fri, 03 Oct 2025 14:44:41 +0000</pubDate></item><item><title>CVE-2025-60447 | A stored Cross-Site Scripting (XSS) vulnerability has been discovered in Emlog Pro 2.5.19. The vulnerability exists in the email template co...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60447</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in Emlog Pro 2.5.19. The vulnerability exists in the email template configuration component located at /admin/setting.php?action=mail, which allows administrators to input HTML code that is not properly sanitized, leading to persistent JavaScript execution.</description><pubDate>Fri, 03 Oct 2025 14:10:11 +0000</pubDate></item><item><title>CVE-2025-60449 | An information disclosure vulnerability has been discovered in SeaCMS 13.1. The vulnerability exists in the admin_safe.php component located...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60449</link><description>An information disclosure vulnerability has been discovered in SeaCMS 13.1. The vulnerability exists in the admin_safe.php component located in the /btcoan/ directory. This security flaw allows authenticated administrators to scan and download not only the application’s source code but also potentially any file accessible on the server’s root directory.</description><pubDate>Fri, 03 Oct 2025 14:10:12 +0000</pubDate></item><item><title>CVE-2025-60448 | A stored Cross-Site Scripting (XSS) vulnerability has been discovered in Emlog Pro 2.5.19. The vulnerability exists due to insufficient vali...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60448</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in Emlog Pro 2.5.19. The vulnerability exists due to insufficient validation of SVG file uploads in the /admin/media.php component, allowing attackers to upload malicious SVG files containing JavaScript code that executes when the uploaded file is viewed.</description><pubDate>Fri, 03 Oct 2025 14:10:13 +0000</pubDate></item><item><title>CVE-2025-60445 | A stored Cross-Site Scripting (XSS) vulnerability has been discovered in XunRuiCMS version 4.7.1. The vulnerability exists due to insufficie...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60445</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in XunRuiCMS version 4.7.1. The vulnerability exists due to insufficient validation of SVG file uploads in the dayrui/Fcms/Library/Upload.php component, allowing attackers to inject malicious JavaScript code that executes when the uploaded file is viewed.</description><pubDate>Fri, 03 Oct 2025 13:53:41 +0000</pubDate></item><item><title>CVE-2025-60450 | A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists due to insufficie...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60450</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists due to insufficient validation and sanitization of SVG file uploads in the app\system\include\module\editor\Uploader.class.php component. This security flaw allows attackers to upload malicious SVG files containing JavaScript code that executes when the uploaded file is viewed or accessed.</description><pubDate>Fri, 03 Oct 2025 13:53:41 +0000</pubDate></item><item><title>CVE-2025-60451 | A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists due to insufficie...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60451</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists due to insufficient validation and sanitization of SVG file uploads in the app\system\include\module\uploadify.class.php component, specifically in the website settings module. This security flaw allows attackers to upload malicious SVG files containing JavaScript code that executes when the uploaded file is viewed or accessed.</description><pubDate>Fri, 03 Oct 2025 13:44:32 +0000</pubDate></item><item><title>CVE-2025-60452 | A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists in the download m...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60452</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists in the download management module, specifically in the app\system\download\admin\download_admin.class.php component. The vulnerability allows attackers to upload malicious SVG files containing JavaScript code that executes when the uploaded file is viewed or accessed by users.</description><pubDate>Fri, 03 Oct 2025 13:44:33 +0000</pubDate></item><item><title>CVE-2025-60453 | A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists in the column man...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60453</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists in the column management module, specifically in the app\system\column\admin\index.class.php component. The vulnerability allows attackers to upload malicious SVG files containing JavaScript code that executes when the uploaded file is viewed or accessed by users.</description><pubDate>Fri, 03 Oct 2025 13:44:33 +0000</pubDate></item><item><title>CVE-2025-60454 | A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists in the image mana...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60454</link><description>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in MetInfo CMS version 8.0. The vulnerability exists in the image management module, specifically in the app\system\img\admin\img_admin.class.php component. The vulnerability allows attackers to upload malicious SVG files containing JavaScript code that executes when the uploaded file is viewed or accessed by users.</description><pubDate>Fri, 03 Oct 2025 13:44:34 +0000</pubDate></item><item><title>CVE-2025-59489 | Unity Editor 2019.1 through 6000.3 could allow remote attackers to exploit file loading and Local File Inclusion (LFI) mechanisms via a craf...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59489</link><description>Unity Editor 2019.1 through 6000.3 could allow remote attackers to exploit file loading and Local File Inclusion (LFI) mechanisms via a crafted local application because of an Untrusted Search Path. This could permit unauthorized manipulation of runtime resources and third-party integrations. The issue could affect applications built using Unity and deployed across Android, Windows, macOS, and Linux platforms.</description><pubDate>Fri, 03 Oct 2025 13:32:09 +0000</pubDate></item><item><title>CVE-2025-10609 | Hardcoded Credentials in Logo Software&amp;#x27;s TigerWings ERP</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10609</link><description>Use of Hard-coded Credentials vulnerability in Logo Software Inc. TigerWings ERP allows Read Sensitive Constants Within an Executable.This issue affects TigerWings ERP: before 3.03.00.</description><pubDate>Fri, 03 Oct 2025 12:25:43 +0000</pubDate></item><item><title>CVE-2025-10547 | CVE-2025-10547</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10547</link><description>An uninitialized variable in the HTTP CGI request arguments processing component of Vigor Routers running DrayOS may allow an attacker the ability to perform RCE on the appliance through memory corruption.</description><pubDate>Fri, 03 Oct 2025 11:37:49 +0000</pubDate></item><item><title>CVE-2025-0876 | XSS in Isin Basi Advertisement &amp;amp; IT&amp;#x27;s Workif</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0876</link><description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Isin Basi Advertisement Information Technologies Trade Inc. IT's Workif allows Cross-Site Scripting (XSS).This issue affects IT's Workif: through 20251003.</description><pubDate>Fri, 03 Oct 2025 11:37:50 +0000</pubDate></item><item><title>CVE-2025-27231 | LDAP &amp;#x27;Bind password&amp;#x27; field value can be leaked by a Zabbix Super Admin</title><link>https://www.cve.org/CVERecord?id=CVE-2025-27231</link><description>The LDAP 'Bind password' value cannot be read after saving, but a Super Admin account can leak it by changing LDAP 'Host' to a rogue LDAP server. To mitigate this, the 'Bind password' value is now reset on 'Host' change.</description><pubDate>Fri, 03 Oct 2025 11:37:51 +0000</pubDate></item><item><title>CVE-2025-27236 | User information disclosure via api_jsonrpc.php on method user.get with param search</title><link>https://www.cve.org/CVERecord?id=CVE-2025-27236</link><description>A regular Zabbix user can search other users in their user group via Zabbix API by select fields the user does not have access to view. This allows data-mining some field values the user does not have access to.</description><pubDate>Fri, 03 Oct 2025 11:37:51 +0000</pubDate></item><item><title>CVE-2025-27237 | DLL injection in Zabbix Agent and Agent 2 via OpenSSL configuration</title><link>https://www.cve.org/CVERecord?id=CVE-2025-27237</link><description>In Zabbix Agent and Agent 2 on Windows, the OpenSSL configuration file is loaded from a path writable by low-privileged users, allowing malicious modification and potential local privilege escalation by injecting a DLL.</description><pubDate>Fri, 03 Oct 2025 11:37:52 +0000</pubDate></item><item><title>CVE-2025-40636 | SQL injection in the mod_vvisit_counter module</title><link>https://www.cve.org/CVERecord?id=CVE-2025-40636</link><description>SQL injection vulnerability in Joomla module mod_vvisit_counter v2.0.4j3. This vulnerability allows an attacker to retrieve database content via the ‘cip_vvisitcounter’ cookie at all endpoints where the plugin counts visits.</description><pubDate>Fri, 03 Oct 2025 11:37:52 +0000</pubDate></item><item><title>CVE-2025-49641 | Insufficient permission check for the problem.view.refresh action</title><link>https://www.cve.org/CVERecord?id=CVE-2025-49641</link><description>A regular Zabbix user with no permission to the Monitoring -&gt; Problems view is still able to call the problem.view.refresh action and therefore still retrieve a list of active problems.</description><pubDate>Fri, 03 Oct 2025 11:37:53 +0000</pubDate></item><item><title>CVE-2025-10053 | TableGen – Data Table Generator &amp;lt;= 1.3.1 - Authenticated (Admin+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10053</link><description>The TableGen – Data Table Generator plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to, and including, 1.3.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Fri, 03 Oct 2025 11:27:11 +0000</pubDate></item><item><title>CVE-2025-10165 | AP Background &amp;lt;= 3.8.2 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10165</link><description>The AP Background plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'adv_parallax_back' shortcode in all versions up to, and including, 3.8.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:11 +0000</pubDate></item><item><title>CVE-2025-10192 | WP Photo Effects &amp;lt;= 1.2.4 - Authenticated (Contributor+) Stored Cross-Site Scripting via Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10192</link><description>The WP Photo Effects plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'wppe_effect' shortcode in all versions up to, and including, 1.2.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:12 +0000</pubDate></item><item><title>CVE-2025-10212 | SiteAlert (Formerly WP Health) &amp;lt;= 1.9.8 - Missing Authorization to Unauthenticated Site Health Information Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10212</link><description>The SiteAlert (Formerly WP Health) plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on multiple functions in all versions up to, and including, 1.9.8. This makes it possible for unauthenticated attackers to view the site health information, including a list of installed and outdated plugins, PHP and Database version, etc.</description><pubDate>Fri, 03 Oct 2025 11:27:12 +0000</pubDate></item><item><title>CVE-2025-10302 | Ultimate Viral Quiz &amp;lt;= 1.0 - Cross-Site Request Forgery to Settings Update</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10302</link><description>The Ultimate Viral Quiz plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0. This is due to missing or incorrect nonce validation on thesave_options() function. This makes it possible for unauthenticated attackers to update the plugin's settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:13 +0000</pubDate></item><item><title>CVE-2025-10306 | Backup Bolt &amp;lt;= 1.4.1 - Authenticated (Admin+) Arbitrary File Download</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10306</link><description>The Backup Bolt plugin for WordPress is vulnerable to arbitrary file downloads and backup location writes in all versions up to, and including, 1.4.1 via the process_backup_batch() function. This makes it possible for authenticated attackers, with Administrator-level access and above, to download directories outside of the webroot and write backup zip files to arbitrary locations.</description><pubDate>Fri, 03 Oct 2025 11:27:13 +0000</pubDate></item><item><title>CVE-2025-10309 | PayPal Forms &amp;lt;= 1.0.3 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10309</link><description>The PayPal Forms plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.3. This is due to missing nonce validation on the form creation and management functions. This makes it possible for unauthenticated attackers to create new PayPal forms and modify PayPal payment settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:13 +0000</pubDate></item><item><title>CVE-2025-10311 | Comment Info Detector &amp;lt;= 1.0.5 - Cross-Site Request Forgery to Settings Update</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10311</link><description>The Comment Info Detector plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.5. This is due to missing nonce validation on the options.php file when handling form submissions. This makes it possible for unauthenticated attackers to modify plugin settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:14 +0000</pubDate></item><item><title>CVE-2025-10582 | WP Dispatcher &amp;lt;= 1.2.0 - Authenticated (Contributor+) SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10582</link><description>The WP Dispatcher plugin for WordPress is vulnerable to SQL Injection via the ‘id’ parameter in all versions up to, and including, 1.2.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Fri, 03 Oct 2025 11:27:14 +0000</pubDate></item><item><title>CVE-2025-10726 | WPRecovery &amp;lt;= 2.0 - Unauthenticated SQL Injection to Arbitrary File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10726</link><description>The WPRecovery plugin for WordPress is vulnerable to SQL Injection via the 'data[id]' parameter in all versions up to, and including, 2.0. This is due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database. Additionally, the result of this SQL injection is passed directly to PHP's unlink() function, allowing attackers to delete arbitrary files on the server by injecting file paths through the SQL query.</description><pubDate>Fri, 03 Oct 2025 11:27:14 +0000</pubDate></item><item><title>CVE-2025-7721 | JoomSport &amp;lt;= 5.7.3 - Unauthenticated Directory Traversal to Local File Inclusion</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7721</link><description>The JoomSport – for Sports: Team &amp; League, Football, Hockey &amp; more plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.7.3 via the task parameter. This makes it possible for unauthenticated attackers to include and execute arbitrary .php files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where .php file types can be uploaded and included.</description><pubDate>Fri, 03 Oct 2025 11:27:15 +0000</pubDate></item><item><title>CVE-2025-7825 | Schema Plugin For Divi, Gutenberg &amp;amp; Shortcodes &amp;lt;= 4.3.2 - Authenticated (Contributor+) Object Instantiation</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7825</link><description>The Schema Plugin For Divi, Gutenberg &amp; Shortcodes plugin for WordPress is vulnerable to Object Instantiation in all versions up to, and including, 4.3.2 via deserialization of untrusted input via the wpt_schema_breadcrumbs shortcode. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software, which means this vulnerability has no impact unless another plugin or theme containing a POP chain is installed on the site. If a POP chain is present via an additional plugin or theme installed on the target system, it may allow the attacker to perform actions like delete arbitrary files, retrieve sensitive data, or execute code depending on the POP chain present.</description><pubDate>Fri, 03 Oct 2025 11:27:15 +0000</pubDate></item><item><title>CVE-2025-8669 | Customify &amp;lt;= 0.4.11 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8669</link><description>The Customify theme for WordPress is vulnerable to Cross-Site Request Forgery in version 0.4.11. This is due to missing or incorrect nonce validation on the reset_customize_section function. This makes it possible for unauthenticated attackers to reset theme customization settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:16 +0000</pubDate></item><item><title>CVE-2025-8776 | Epic Bootstrap Buttons &amp;lt;= 1.0 - Authenticated (Contributor+) Stored Cross-Site Scripting via icol Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8776</link><description>The Epic Bootstrap Buttons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘icol’ parameter in all versions up to, and including, 1.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:16 +0000</pubDate></item><item><title>CVE-2025-9045 | Easy Elementor Addons &amp;lt;= 2.2.8 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9045</link><description>The Easy Elementor Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via several widget parameters in versions less than, or equal to, 2.2.8 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:16 +0000</pubDate></item><item><title>CVE-2025-9077 | Ultra Addons Lite for Elementor &amp;lt;= 1.1.9 - Authenticated (Contributor+) Stored Cross-Site Scripting via Animated Text Field</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9077</link><description>The Ultra Addons Lite for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'Animated Text' field of the Typeout Widget in version 1.1.9 and below due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:17 +0000</pubDate></item><item><title>CVE-2025-9080 | Generic Elements &amp;lt;= 1.2.4 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9080</link><description>The Generic Elements plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple widget fields in version 1.2.4 and earlier. This is due to insufficient input sanitization and output escaping on user-supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:17 +0000</pubDate></item><item><title>CVE-2025-9129 | Flexi &amp;lt;= 4.28 - Authenticated (Contributor+) Stored Cross-Site Scripting via flexi-form-tag Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9129</link><description>The Flexi plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin for WordPress's flexi-form-tag shortcode in all versions up to, and including, 4.28 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:17 +0000</pubDate></item><item><title>CVE-2025-9130 | Unify &amp;lt;= 3.4.7 - Authenticated (Contributor+) Stored Cross-Site Scripting via unify_checkout Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9130</link><description>The Unify plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin for WordPress's unify_checkout shortcode in all versions up to, and including, 3.4.7 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:18 +0000</pubDate></item><item><title>CVE-2025-9194 | Constructor &amp;lt;= 1.6.5 - Missing Authorization to Authenticated (Subscriber+) Theme Clean</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9194</link><description>The Constructor theme for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the clean() function in all versions up to, and including, 1.6.5. This makes it possible for authenticated attackers, with Subscriber-level access and above, to trigger a theme clean.</description><pubDate>Fri, 03 Oct 2025 11:27:18 +0000</pubDate></item><item><title>CVE-2025-9198 | Wp cycle text announcement &amp;lt;= 8.1 - Authenticated (Contributor+) SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9198</link><description>The Wp cycle text announcement plugin for WordPress is vulnerable to SQL Injection via the 'cycle-text' shortcode in all versions up to, and including, 8.1 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Fri, 03 Oct 2025 11:27:18 +0000</pubDate></item><item><title>CVE-2025-9199 | Woo superb slideshow transition gallery with random effect &amp;lt;= 9.1 - Authenticated (Contributor+) SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9199</link><description>The Woo superb slideshow transition gallery with random effect plugin for WordPress is vulnerable to SQL Injection via the 'woo-superb-slideshow' shortcode in all versions up to, and including, 9.1 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Fri, 03 Oct 2025 11:27:19 +0000</pubDate></item><item><title>CVE-2025-9200 | Blappsta Mobile App Plugin – Your native, mobile iPhone App and Android App &amp;lt;= 0.8.8.8 - Unauthenticated SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9200</link><description>The Blappsta Mobile App Plugin – Your native, mobile iPhone App and Android App plugin for WordPress is vulnerable to SQL Injection via the nh_ynaa_comments() function in all versions up to, and including, 0.8.8.8 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Fri, 03 Oct 2025 11:27:19 +0000</pubDate></item><item><title>CVE-2025-9204 | X Addons for Elementor &amp;lt;= 1.0.14 - Authenticated (Contributor+) Stored Cross-Site Scripting via Youtube Video ID Field</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9204</link><description>The X Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Youtube Video ID field in all versions up to, and including, 1.0.14. This is due to insufficient input sanitization and output escaping on the Youtube Video ID parameter. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an affected page.</description><pubDate>Fri, 03 Oct 2025 11:27:20 +0000</pubDate></item><item><title>CVE-2025-9206 | Meks Easy Maps &amp;lt;= 2.1.4 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9206</link><description>The Meks Easy Maps plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the post title field in all version up to, and including, 2.1.4. This is due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the map containing the malicious post.</description><pubDate>Fri, 03 Oct 2025 11:27:20 +0000</pubDate></item><item><title>CVE-2025-9209 | RestroPress – Online Food Ordering System 3.0.0 - 3.1.9.2 - Unauthenticated Information Exposure to Authentication Bypass via Forged JWT</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9209</link><description>The RestroPress – Online Food Ordering System plugin for WordPress is vulnerable to Authentication Bypass in versions 3.0.0 to 3.1.9.2. This is due to the plugin exposing user private tokens and API data via the /wp-json/wp/v2/users REST API endpoint. This makes it possible for unauthenticated attackers to forge JWT tokens for other users, including administrators, and authenticate as them.</description><pubDate>Fri, 03 Oct 2025 11:27:20 +0000</pubDate></item><item><title>CVE-2025-9212 | WP Dispatcher &amp;lt;= 1.2.0 - Authenticated (Subscriber+) Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9212</link><description>The WP Dispatcher plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the wp_dispatcher_process_upload() function in all versions up to, and including, 1.2.0. This makes it possible for authenticated attackers, with Subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible. The directory does have an .htaccess file which limits the ability to achieve remote code execution.</description><pubDate>Fri, 03 Oct 2025 11:27:21 +0000</pubDate></item><item><title>CVE-2025-9213 | TextBuilder 1.0.0 - 1.1.1 - Cross-Site Request Forgery to Privilege Escalation via Account Takeover</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9213</link><description>The TextBuilder plugin for WordPress is vulnerable to Cross-Site Request Forgery in versions 1.0.0 to 1.1.1. This is due to missing or incorrect nonce validation on the 'handleToken' function. This makes it possible for unauthenticated attackers to update a user's authorization token via a forged request granted they can trick a site administrator into performing an action such as clicking on a link. Once the token is updated, an attacker can update the user's password and email address.</description><pubDate>Fri, 03 Oct 2025 11:27:21 +0000</pubDate></item><item><title>CVE-2025-9286 | Appy Pie Connect for WooCommerce &amp;lt;= 1.1.2 - Missing Authorization to Unauthenticated Privilege Escalation via reset_user_password</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9286</link><description>The Appy Pie Connect for WooCommerce plugin for WordPress is vulnerable to Privilege Escalation due to missing authorization within the reset_user_password() REST handler in all versions up to, and including, 1.1.2. This makes it possible for unauthenticated attackers to to reset the password of arbitrary users, including administrators, thereby gaining administrative access.</description><pubDate>Fri, 03 Oct 2025 11:27:21 +0000</pubDate></item><item><title>CVE-2025-9332 | Interactive Medical Drawing of Human Body &amp;lt;= 2.6 - Authenticated (Admin+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9332</link><description>The Interactive Human Anatomy with Clickable Body Parts plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to, and including, 2.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Fri, 03 Oct 2025 11:27:22 +0000</pubDate></item><item><title>CVE-2025-9333 | Smart Docs &amp;lt;= 1.1.1 - Authenticated (Admin+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9333</link><description>The Smart Docs plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to, and including, 1.1.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Fri, 03 Oct 2025 11:27:22 +0000</pubDate></item><item><title>CVE-2025-9372 | Ultimate Multi Design Video Carousel &amp;lt;= 1.4 - Authenticated (Editor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9372</link><description>The Ultimate Multi Design Video Carousel plugin for WordPress is vulnerable to Stored Cross-Site Scripting in all versions up to, and including, 1.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with editor-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description><pubDate>Fri, 03 Oct 2025 11:27:23 +0000</pubDate></item><item><title>CVE-2025-9561 | AP Background 3.8.1 - 3.8.2 - Missing Authorization to Authenticated (Subscriber+) Arbitrary File Upload via advParallaxBackAdminSaveSlider Function</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9561</link><description>The AP Background plugin for WordPress is vulnerable to arbitrary file uploads due to missing authorization and insufficient file validation within the advParallaxBackAdminSaveSlider() handler in versions 3.8.1 to 3.8.2. This makes it possible for authenticated attackers, with Subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Fri, 03 Oct 2025 11:27:23 +0000</pubDate></item><item><title>CVE-2025-9630 | WP SinoType &amp;lt;= 1.0 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9630</link><description>The WP SinoType plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0. This is due to missing or incorrect nonce validation on the sinotype_config function. This makes it possible for unauthenticated attackers to modify typography settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:23 +0000</pubDate></item><item><title>CVE-2025-9854 | A Simple Multilanguage Plugin &amp;lt;= 1.0 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9854</link><description>The A Simple Multilanguage Plugin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'asmp-switcher' shortcode in all versions up to, and including, 1.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:24 +0000</pubDate></item><item><title>CVE-2025-9858 | Auto Bulb Finder for WordPress &amp;lt;= 2.8.0 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9858</link><description>The Auto Bulb Finder for WordPress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'abf_vehicle' shortcode in all versions up to, and including, 2.8.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:24 +0000</pubDate></item><item><title>CVE-2025-9859 | Fintelligence Calculator &amp;lt;= 1.0.3 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9859</link><description>The Fintelligence Calculator plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'fintelligence-calculator' shortcode in all versions up to, and including, 1.0.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:24 +0000</pubDate></item><item><title>CVE-2025-9875 | Event Tickets, RSVPs, Calendar &amp;lt;= 1.0.2 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9875</link><description>The Event Tickets, RSVPs, Calendar plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'ticket_spot' shortcode in all versions up to, and including, 1.0.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:25 +0000</pubDate></item><item><title>CVE-2025-9876 | Ird Slider &amp;lt;= 1.0.2 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9876</link><description>The Ird Slider plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'irdslider' shortcode in all versions up to, and including, 1.0.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 03 Oct 2025 11:27:25 +0000</pubDate></item><item><title>CVE-2025-9884 | Mobile Site Redirect &amp;lt;= 1.2.1 - Cross-Site Request Forgery to Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9884</link><description>The Mobile Site Redirect plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.2.1. This is due to missing or incorrect nonce validation on a function. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:25 +0000</pubDate></item><item><title>CVE-2025-9885 | MPWizard – Create Mercado Pago Payment Links &amp;lt;= 1.2.1 - Cross-Site Request Forgery to Arbitrary Post Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9885</link><description>The MPWizard – Create Mercado Pago Payment Links plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.2.1. This is due to missing or incorrect nonce validation in the '/includes/admin/class-mpwizard-table.php' file. This makes it possible for unauthenticated attackers to delete arbitrary posts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:26 +0000</pubDate></item><item><title>CVE-2025-9889 | ContentMX Content Publisher &amp;lt;= 1.0.6 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9889</link><description>The ContentMX Content Publisher plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.6. This is due to missing or incorrect nonce validation on the cmx_activate_connection function. This makes it possible for unauthenticated attackers to bind their own ContentMX connection via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:26 +0000</pubDate></item><item><title>CVE-2025-9892 | Restrict User Registration &amp;lt;= 1.0.1 - Cross-Site Request Forgery to Settings Update</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9892</link><description>The Restrict User Registration plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.1. This is due to missing or incorrect nonce validation on the update() function. This makes it possible for unauthenticated attackers to update the plugin's settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:27 +0000</pubDate></item><item><title>CVE-2025-9895 | Notification Bar &amp;lt;= 2.2 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9895</link><description>The Notification Bar plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 2.2. This is due to missing or incorrect nonce validation on the 'subscriber-list-empty.php' file. This makes it possible for unauthenticated attackers to empty the subscriber list via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:27 +0000</pubDate></item><item><title>CVE-2025-9897 | AP Background &amp;lt;= 3.8.2 - Cross-Site Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9897</link><description>The AP Background plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 3.8.2. This is due to missing or incorrect nonce validation on the advParallaxBackAdminSaveSlider function. This makes it possible for unauthenticated attackers to create or modify background sliders via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:27 +0000</pubDate></item><item><title>CVE-2025-9945 | Optimize More! – CSS &amp;lt;= 1.0.3 - Cross-Site Request Forgery to Plugin Settings Reset</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9945</link><description>The Optimize More! – CSS plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.3. This is due to missing or incorrect nonce validation on the reset_plugin function. This makes it possible for unauthenticated attackers to reset the plugin's optimization settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 03 Oct 2025 11:27:28 +0000</pubDate></item><item><title>CVE-2025-11234 | Qemu-kvm: vnc websocket handshake use-after-free</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11234</link><description>A flaw was found in QEMU. If the QIOChannelWebsock object is freed while it is waiting to complete a handshake, a GSource is leaked. This can lead to the callback firing later on and triggering a use-after-free in the use of the channel. This can be abused by a malicious client with network access to the VNC WebSocket port to cause a denial of service during the WebSocket handshake prior to the VNC client authentication.</description><pubDate>Fri, 03 Oct 2025 10:39:36 +0000</pubDate></item><item><title>CVE-2025-6388 | Spirit Framework &amp;lt;= 1.2.14 - Authentication Bypass to Account Takeover and Privilege Escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2025-6388</link><description>The Spirit Framework plugin for WordPress is vulnerable to authentication bypass in all versions up to, and including, 1.2.14. This is due to the custom_actions() function not properly validating a user's identity prior to authenticating them to the site. This makes it possible for unauthenticated attackers to log in as any user, including administrators, granted they have access to the administrator's username.</description><pubDate>Fri, 03 Oct 2025 08:33:07 +0000</pubDate></item><item><title>CVE-2025-0616 | SQLi in Teknolojik Center Telecommunication&amp;#x27;s B2B - Netsis Panel</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0616</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Teknolojik Center Telecommunication Industry Trade Co. Ltd. B2B - Netsis Panel allows SQL Injection.This issue affects B2B - Netsis Panel: through 20251003.</description><pubDate>Fri, 03 Oct 2025 08:33:08 +0000</pubDate></item><item><title>CVE-2025-11223 | Installer of 

Panasonic 

AutoDownloader 



 version 1.2.8
contains an issue with the DLL search path, which may lead to loading 

a craft...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11223</link><description>Installer of 

Panasonic 

AutoDownloader 



 version 1.2.8
contains an issue with the DLL search path, which may lead to loading 

a crafted DLL file in the same directory.</description><pubDate>Fri, 03 Oct 2025 08:33:09 +0000</pubDate></item><item><title>CVE-2025-61589 | Cursor: Potential Information Leakage via Mermaid Diagram</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61589</link><description>Cursor is a code editor built for programming with AI. In versions 1.6 and below, Mermaid (a to render diagrams) allows embedding images which then get rendered by Cursor in the chat box. An attacker can use this to exfiltrate sensitive information to a third-party attacker controlled server through an image fetch after successfully performing a prompt injection. A malicious model (or hallucination/backdoor) might also trigger this exploit at will. This issue requires prompt injection from malicious data (web, image upload, source code) in order to exploit. In that case, it can send sensitive information to an attacker-controlled external server. Some additional bypasses not covered in the initial fix to this issue were discovered, see GHSA-43wj-mwcc-x93p. This issue is fixed in version 1.7.</description><pubDate>Fri, 03 Oct 2025 06:51:55 +0000</pubDate></item><item><title>CVE-2025-59536 | Claude Code&amp;#x27;s startup trust dialog could lead to  Command Execution attack</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59536</link><description>Claude Code is an agentic coding tool. Versions before 1.0.111 were vulnerable to Code Injection due to a bug in the startup trust dialog implementation. Claude Code could be tricked to execute code contained in a project before the user accepted the startup trust dialog. Exploiting this requires a user to start Claude Code in an untrusted directory. Users on standard Claude Code auto-update will have received this fix automatically. Users performing manual updates are advised to update to the latest version. This issue is fixed in version 1.0.111.</description><pubDate>Fri, 03 Oct 2025 06:51:56 +0000</pubDate></item><item><title>CVE-2025-61597 | Emlog Pro is vulnerable to stored XSS attack through HTML template injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61597</link><description>Emlog is an open source website building system. In versions 2.5.21 and below, an HTML template injection allows stored cross‑site scripting (XSS) via the mail template settings. Once a malicious payload is saved, any subsequent visit to the settings page in an authenticated admin context will execute attacker‑controlled JavaScript, enabling session/token theft and full admin account takeover. This issue is fixed in version 2.5.22.</description><pubDate>Fri, 03 Oct 2025 06:37:56 +0000</pubDate></item><item><title>CVE-2025-61599 | Emlog is Vulnerable to Stored Cross-Site Scripting (XSS) in &amp;quot;Twitter&amp;quot; Feature via Markdown Input</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61599</link><description>Emlog is an open source website building system. A stored Cross-Site Scripting (XSS) vulnerability exists in the "Twitter"feature of EMLOG Pro 2.5.21 and below. An authenticated user with privileges to post a "Twitter" message can inject arbitrary JavaScript code. The malicious script is stored on the server and gets executed in the browser of any user, including administrators, when they click on the malicious post to view it. This issue does not currently have a fix.</description><pubDate>Fri, 03 Oct 2025 06:37:56 +0000</pubDate></item><item><title>CVE-2025-59297 | File Parsing Out-Of-Bounds Write Vulnerability in DIAScreen</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59297</link><description>Delta Electronics DIAScreen lacks proper validation of the user-supplied file. If a user opens a malicious file, an attacker can leverage this vulnerability to execute code in the context of the current process.</description><pubDate>Fri, 03 Oct 2025 03:05:27 +0000</pubDate></item><item><title>CVE-2025-59298 | File Parsing Out-Of-Bounds Write Vulnerability in DIAScreen</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59298</link><description>Delta Electronics DIAScreen lacks proper validation of the user-supplied file. If a user opens a malicious file, an attacker can leverage this vulnerability to execute code in the context of the current process.</description><pubDate>Fri, 03 Oct 2025 03:05:27 +0000</pubDate></item><item><title>CVE-2025-59299 | File Parsing Out-Of-Bounds Write Vulnerability in DIAScreen</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59299</link><description>Delta Electronics DIAScreen lacks proper validation of the user-supplied file. If a user opens a malicious file, an attacker can leverage this vulnerability to execute code in the context of the current process.</description><pubDate>Fri, 03 Oct 2025 03:05:27 +0000</pubDate></item><item><title>CVE-2025-59300 | File Parsing Out-Of-Bounds Write Vulnerability in DIAScreen</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59300</link><description>Delta Electronics DIAScreen lacks proper validation of the user-supplied file. If a user opens a malicious file, an attacker can leverage this vulnerability to execute code in the context of the current process.</description><pubDate>Fri, 03 Oct 2025 03:05:28 +0000</pubDate></item><item><title>CVE-2025-11241 | Yoast SEO Premium 25.7-25.9 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11241</link><description>The Yoast SEO Premium plugin for WordPress is vulnerable to Stored Cross-Site Scripting in versions 25.7 to 25.9 due to a flawed regex used to remove an attribute in post content, which can be abused to inject arbitrary HTML attributes, including JavaScript event handlers. This vulnerability allows a user with Contributor access or higher to create a post containing a malicious JavaScript payload.</description><pubDate>Fri, 03 Oct 2025 02:12:19 +0000</pubDate></item><item><title>CVE-2025-61668 | @plone/volto vulnerable to potential DoS by invoking specific URL by anonymous user</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61668</link><description>Volto is a ReactJS-based frontend for the Plone Content Management System. Versions 16.34.0 and below, 17.0.0 through 17.22.1, 18.0.0 through 18.27.1, and 19.0.0-alpha.1 through 19.0.0-alpha.5, an anonymous user could cause the NodeJS server part of Volto to quit with an error when visiting a specific URL. This issue is fixed in versions 16.34.1, 17.22.2, 18.27.2 and 19.0.0-alpha.6.</description><pubDate>Thu, 02 Oct 2025 21:52:04 +0000</pubDate></item><item><title>CVE-2025-61600 | Unbounded Memory Allocation in Stalwart IMAP parser</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61600</link><description>Stalwart is a mail and collaboration server. Versions 0.13.3 and below contain an unbounded memory allocation vulnerability in the IMAP protocol parser which allows remote attackers to exhaust server memory, potentially triggering the system's out-of-memory (OOM) killer and causing a denial of service. The CommandParser implementation enforces size limits on its dynamic buffer in most parsing states, but several state handlers omit these validation checks. This issue is fixed in version 0.13.4. A workaround for this issue is to implement rate limiting and connection monitoring at the network level, however this does not provide complete protection.</description><pubDate>Thu, 02 Oct 2025 21:43:36 +0000</pubDate></item><item><title>CVE-2025-61666 | Traccar Unauthenticated Local File Inclusion on Windows - Leakage of Traccar Config File</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61666</link><description>Traccar is an open source GPS tracking system. Default installs of Traccar on Windows between versions 6.1-  6.8.1 and non default installs between versions 5.8 - 6.0 are vulnerable to unauthenticated local file inclusion attacks which can lead to leakage of passwords or any file on the file system including the Traccar configuration file. Versions 5.8 - 6.0 are only vulnerable if ./override is set in the configuration file. Versions 6.1 - 6.8.1 are vulnerable by default as the web override is enabled by default. The vulnerable code is removed in version 6.9.0.</description><pubDate>Thu, 02 Oct 2025 21:24:43 +0000</pubDate></item><item><title>CVE-2025-61665 | WeGIA: Broken Access Control in `get_relatorios_socios.php` Endpoint</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61665</link><description>WeGIA is an open source web manager with a focus on charitable institutions. Versions 3.4.12 and below contain a Broken Access Control vulnerability, identified in the get_relatorios_socios.php endpoint. This vulnerability allows unauthenticated attackers to directly access sensitive personal and financial information of members without requiring authentication or authorization. This issue is fixed in version 3.5.0.</description><pubDate>Thu, 02 Oct 2025 20:53:07 +0000</pubDate></item><item><title>CVE-2025-61606 | WeGIA: Open Redirect Vulnerability in `control.php` endpoint</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61606</link><description>WeGIA is an open source web manager with a focus on charitable institutions. Versions 3.4.12 and below contain an Open Redirect vulnerability, identified in the control.php endpoint, specifically in the nextPage parameter (metodo=listarUmnomeClasse=FuncionarioControle). This vulnerability allows attackers to redirect users to arbitrary external domains, enabling phishing campaigns, malicious payload distribution, or user credential theft. This issue is fixed in version 3.5.0.</description><pubDate>Thu, 02 Oct 2025 20:33:40 +0000</pubDate></item><item><title>CVE-2025-54088 | Open Redirect in Secure Access prior to 14.10</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54088</link><description>CVE-2025-54088 is an open-redirect vulnerability in Secure
Access prior to version 14.10. Attackers with access to the console can
redirect victims to an arbitrary URL. The attack complexity is low, attack
requirements are present, no privileges are required, and users must actively
participate in the attack. Impact to confidentiality is low and there is no
impact to integrity or availability. There are high severity impacts to
confidentiality, integrity, availability in subsequent systems.</description><pubDate>Thu, 02 Oct 2025 20:33:40 +0000</pubDate></item><item><title>CVE-2025-54089 | Cross-site Scripting vulnerability in Secure Access prior to 14.10</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54089</link><description>CVE-2025-54089 is a cross-site scripting vulnerability in versions
of secure access prior to 14.10. Attackers with administrative access to the
console can interfere with another administrator’s access to the console. The
attack complexity is low; there are no attack requirements. Privileges required
to execute the attack are high and the victim must actively participate in the
attack sequence. There is no impact to confidentiality or availability, there
is a low impact to integrity.</description><pubDate>Thu, 02 Oct 2025 20:33:41 +0000</pubDate></item><item><title>CVE-2025-61605 | WeGIA: SQL Injection (Blind Time-Based) Vulnerability in /pet/profile_pet.php Endpoint</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61605</link><description>WeGIA is an open source web manager with a focus on charitable institutions. Versions 3.4.12 and below contain an SQL Injection vulnerability which was identified in the /pet/profile_pet.php endpoint, specifically in the id_pet parameter. This vulnerability allows attackers to execute arbitrary SQL commands, compromising the confidentiality, integrity, and availability of the database. This issue is fixed in version 3.5.0.</description><pubDate>Thu, 02 Oct 2025 20:33:41 +0000</pubDate></item><item><title>CVE-2025-10653 | Raise3D Pro2 Series 3D Printers Authentication Bypass Using an Alternate Path or Channel</title><link>https://www.cve.org/CVERecord?id=CVE-2025-10653</link><description>An unauthenticated debug port may allow access to the device file system.</description><pubDate>Thu, 02 Oct 2025 20:15:44 +0000</pubDate></item><item><title>CVE-2025-54087 | Server-side request forgery in Secure Access</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54087</link><description>CVE-2025-54087 is a server-side request forgery
vulnerability in Secure Access prior to version 14.10. Attackers with
administrative privileges can publish a crafted test HTTP request originating
from the Secure Access server. The attack complexity is high, there are no
attack requirements, and user interaction is required. There is no direct
impact to confidentiality, integrity, or availability. There is a low severity
subsequent system impact to integrity.</description><pubDate>Thu, 02 Oct 2025 20:15:44 +0000</pubDate></item><item><title>CVE-2025-61604 | WeGIA: Cross-Site Request Forgery (CSRF) Vulnerability in `control.php` Endpoint</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61604</link><description>WeGIA is an open source web manager with a focus on charitable institutions. Versions 3.4.12 and below contain a Cross-Site Request Forgery (CSRF) vulnerability. The delete operation for the Almoxarifado entity is exposed via HTTP GET without CSRF protection, allowing a third-party site to trigger the action using the victim’s authenticated session. This issue is fixed in version 3.5.0.</description><pubDate>Thu, 02 Oct 2025 20:15:45 +0000</pubDate></item><item><title>CVE-2025-54086 | Excess Permissions in Warehouse</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54086</link><description>CVE-2025-54086 is an excess permissions vulnerability in the
Warehouse component of Absolute Secure Access prior to version 14.10. Attackers
with access to the local file system can read the Java keystore file. The
attack complexity is low, there are no attack requirements, the privileges
required are low and no user interaction is required. Impact to confidentiality
is low, there is no impact to integrity or availability.</description><pubDate>Thu, 02 Oct 2025 20:15:45 +0000</pubDate></item><item><title>CVE-2025-61603 | WeGIA: SQL Injection (Blind Time-Based) Vulnerability in API `descricao` Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61603</link><description>WeGIA is a Web manager for charitable institutions. Versions 3.4.12 and below include an SQL Injection vulnerability which was identified in the /controle/control.php endpoint, specifically in the descricao parameter. This vulnerability allows attackers to execute arbitrary SQL commands, compromising the confidentiality, integrity, and availability of the database. This issue is fixed in version 3.5.0.</description><pubDate>Thu, 02 Oct 2025 19:55:40 +0000</pubDate></item><item><title>CVE-2025-61595 | MANTRA tx gas limit is not enforced in send hooks</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61595</link><description>MANTRA is a purpose-built RWA Layer 1 Blockchain, capable of adherence to real world regulatory requirements. Versions 4.0.1 and below do not enforce the tx gas limit in its send hooks. Send hooks can spend more gas than what remains in tx, combined with recursive calls in the wasm contract, potentially amplifying the gas consumption exponentially. This is fixed in version 4.0.2.</description><pubDate>Thu, 02 Oct 2025 19:46:53 +0000</pubDate></item><item><title>CVE-2025-59835 | LangBot has a cross-directory file upload vulnerability, which could lead to system takeover</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59835</link><description>LangBot is a global IM bot platform designed for LLMs. In versions 4.1.0 up to but not including 4.3.5, authorized attackers can exploit the /api/v1/files/documents interface to perform arbitrary file uploads. Since this interface does not strictly restrict the storage directory of files on the server, it is possible to upload dangerous files to specific system directories. This is fixed in version 4.3.5.</description><pubDate>Thu, 02 Oct 2025 19:18:46 +0000</pubDate></item><item><title>CVE-2025-32942 | SSH Tectia Server before 6.6.6 sometimes allows attackers to read and alter a user's session traffic.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-32942</link><description>SSH Tectia Server before 6.6.6 sometimes allows attackers to read and alter a user's session traffic.</description><pubDate>Thu, 02 Oct 2025 19:00:15 +0000</pubDate></item><item><title>CVE-2025-49090 | The Matrix specification before 1.16 (i.e., with a room version before 12 and State Resolution before 2.1) has deficient state resolution.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-49090</link><description>The Matrix specification before 1.16 (i.e., with a room version before 12 and State Resolution before 2.1) has deficient state resolution.</description><pubDate>Thu, 02 Oct 2025 18:42:32 +0000</pubDate></item><item><title>CVE-2025-54315 | The Matrix specification before 1.16 (i.e., with a room version before 12) lacks create event uniqueness.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54315</link><description>The Matrix specification before 1.16 (i.e., with a room version before 12) lacks create event uniqueness.</description><pubDate>Thu, 02 Oct 2025 18:42:33 +0000</pubDate></item><item><title>CVE-2025-56019 | An insecure permission vulnerability exists in the Agasta Easytouch+ version 9.3.97 The device allows unauthorized mobile applications to co...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-56019</link><description>An insecure permission vulnerability exists in the Agasta Easytouch+ version 9.3.97 The device allows unauthorized mobile applications to connect via Bluetooth Low Energy (BLE) without authentication. Once an unauthorized connection is established, legitimate applications are unable to connect, causing a denial of service. The attack requires proximity to the device, making it exploitable from an adjacent network location.</description><pubDate>Thu, 02 Oct 2025 17:32:13 +0000</pubDate></item><item><title>CVE-2025-59405 | The Flock Safety Peripheral com.flocksafety.android.peripheral application 7.38.3 for Android (installed on Falcon and Sparrow License Plate...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59405</link><description>The Flock Safety Peripheral com.flocksafety.android.peripheral application 7.38.3 for Android (installed on Falcon and Sparrow License Plate Readers and Bravo Edge AI Compute Devices) contains a cleartext DataDog API key within in its codebase. Because application binaries can be trivially decompiled or inspected, attackers can recover the OAuth secret without special privileges. This secret is intended to remain confidential and should never be embedded directly in client-side software.</description><pubDate>Thu, 02 Oct 2025 17:21:07 +0000</pubDate></item><item><title>CVE-2025-59406 | The Flock Safety Pisco com.flocksafety.android.pisco application 6.21.11 for Android (installed on Falcon and Sparrow License Plate Readers ...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59406</link><description>The Flock Safety Pisco com.flocksafety.android.pisco application 6.21.11 for Android (installed on Falcon and Sparrow License Plate Readers and Bravo Edge AI Compute Devices) has a cleartext Auth0 client secret in its codebase. Because application binaries can be trivially decompiled or inspected, attackers can recover this OAuth secret without special privileges. This secret is intended to remain confidential and should never be embedded directly in client-side software.</description><pubDate>Thu, 02 Oct 2025 17:21:07 +0000</pubDate></item><item><title>CVE-2025-59407 | The Flock Safety DetectionProcessing com.flocksafety.android.objects application 6.35.33 for Android (installed on Falcon and Sparrow Licens...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59407</link><description>The Flock Safety DetectionProcessing com.flocksafety.android.objects application 6.35.33 for Android (installed on Falcon and Sparrow License Plate Readers and Bravo Edge AI Compute Devices) bundles a Java Keystore (flock_rye.bks) along with its hardcoded password (flockhibiki17) in its code. The keystore contains a private key.</description><pubDate>Thu, 02 Oct 2025 17:21:08 +0000</pubDate></item><item><title>CVE-2025-59409 | Flock Safety Falcon and Sparrow License Plate Readers OPM1.171019.026 ship with development Wi-Fi credentials (test_flck) stored in cleartex...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59409</link><description>Flock Safety Falcon and Sparrow License Plate Readers OPM1.171019.026 ship with development Wi-Fi credentials (test_flck) stored in cleartext in production firmware.</description><pubDate>Thu, 02 Oct 2025 17:21:08 +0000</pubDate></item><item><title>CVE-2025-59403 | The Flock Safety Android Collins application (aka com.flocksafety.android.collins) 6.35.31 for Android lacks authentication. It is responsib...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59403</link><description>The Flock Safety Android Collins application (aka com.flocksafety.android.collins) 6.35.31 for Android lacks authentication. It is responsible for the camera feed on Falcon, Sparrow, and Bravo devices, but exposes administrative API endpoints on port 8080 without authentication. Endpoints include but are not limited to: /reboot, /logs, /crashpack, and /adb/enable. This results in multiple impacts including denial of service (DoS) via /reboot, information disclosure via /logs, and remote code execution (RCE) via /adb/enable. The latter specifically results in adb being started over TCP without debugging confirmation, providing an attacker in the LAN/WLAN with shell access.</description><pubDate>Thu, 02 Oct 2025 17:21:09 +0000</pubDate></item><item><title>CVE-2025-34208 | Vasion Print (formerly PrinterLogic) Insecure Password Hashing</title><link>https://www.cve.org/CVERecord?id=CVE-2025-34208</link><description>Vasion Print (formerly PrinterLogic) Virtual Appliance Host and Application (VA/SaaS deployments) store user passwords using unsalted SHA-512 hashes with a fall-back to unsalted SHA-1. The hashing is performed via PHP's `hash()` function in multiple files (server_write_requests_users.php, update_database.php, legacy/Login.php, tests/Unit/Api/IdpControllerTest.php). No per-user salt is used and the fast hash algorithms are unsuitable for password storage. An attacker who obtains the password database can recover cleartext passwords via offline dictionary or rainbow table attacks. The vulnerable code also contains logic that migrates legacy SHA-1 hashes to SHA-512 on login, further exposing users still on the old hash. This vulnerability was partially resolved, but still present within the legacy authentication platform.</description><pubDate>Thu, 02 Oct 2025 16:38:53 +0000</pubDate></item><item><title>CVE-2025-34210 | Vasion Print (formerly PrinterLogic) Readable Cleartext Passwords</title><link>https://www.cve.org/CVERecord?id=CVE-2025-34210</link><description>Vasion Print (formerly PrinterLogic) Virtual Appliance Host and Application (VA/SaaS deployments) store a large number of sensitive credentials (database passwords, MySQL root password, SaaS keys, Portainer admin password, etc.) in cleartext files that are world-readable. Any local user - or any process that can read the host filesystem - can retrieve all of these secrets in plain text, leading to credential theft and full compromise of the appliance. The vendor does not consider this to be a security vulnerability as this product "follows a shared responsibility model, where administrators are expected to configure persistent storage encryption."</description><pubDate>Thu, 02 Oct 2025 16:38:54 +0000</pubDate></item><item><title>CVE-2025-60661 | Tenda AC18 V15.03.05.19 was discovered to contain a stack overflow via the cloneType parameter in the fromAdvSetMacMtuWan function.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60661</link><description>Tenda AC18 V15.03.05.19 was discovered to contain a stack overflow via the cloneType parameter in the fromAdvSetMacMtuWan function.</description><pubDate>Thu, 02 Oct 2025 16:38:54 +0000</pubDate></item><item><title>CVE-2025-60663 | Tenda AC18 V15.03.05.19 was discovered to contain a stack overflow via the wanMTU parameter in the fromAdvSetMacMtuWan function.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60663</link><description>Tenda AC18 V15.03.05.19 was discovered to contain a stack overflow via the wanMTU parameter in the fromAdvSetMacMtuWan function.</description><pubDate>Thu, 02 Oct 2025 16:38:54 +0000</pubDate></item><item><title>CVE-2025-56154 | htmly v3.0.8 is vulnerable to Cross Site Scripting (XSS) in the /author/:name endpoint of the affected application. The name parameter is no...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-56154</link><description>htmly v3.0.8 is vulnerable to Cross Site Scripting (XSS) in the /author/:name endpoint of the affected application. The name parameter is not properly sanitized before being reflected in the HTML response, allowing attackers to inject arbitrary JavaScript payloads.</description><pubDate>Thu, 02 Oct 2025 16:14:48 +0000</pubDate></item><item><title>CVE-2025-57305 | VitaraCharts 5.3.5 is vulnerable to Server-Side Request Forgery in fileLoader.jsp.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-57305</link><description>VitaraCharts 5.3.5 is vulnerable to Server-Side Request Forgery in fileLoader.jsp.</description><pubDate>Thu, 02 Oct 2025 16:14:49 +0000</pubDate></item><item><title>CVE-2025-60660 | Tenda AC18 V15.03.05.19 was discovered to contain a stack overflow via the mac parameter in the fromAdvSetMacMtuWan function.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60660</link><description>Tenda AC18 V15.03.05.19 was discovered to contain a stack overflow via the mac parameter in the fromAdvSetMacMtuWan function.</description><pubDate>Thu, 02 Oct 2025 16:14:49 +0000</pubDate></item><item><title>CVE-2025-60662 | Tenda AC18 V15.03.05.19 was discovered to contain a stack overflow via the wanSpeed parameter in the fromAdvSetMacMtuWan function.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60662</link><description>Tenda AC18 V15.03.05.19 was discovered to contain a stack overflow via the wanSpeed parameter in the fromAdvSetMacMtuWan function.</description><pubDate>Thu, 02 Oct 2025 16:14:49 +0000</pubDate></item><item><title>CVE-2025-56161 | YOSHOP 2.0 allows unauthenticated information disclosure via comment-list API endpoints in the Goods module. The Comment model eagerly loads...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-56161</link><description>YOSHOP 2.0 allows unauthenticated information disclosure via comment-list API endpoints in the Goods module. The Comment model eagerly loads the related User model without field filtering; because User.php defines no $hidden or $visible attributes, sensitive fields (bcrypt password hash, mobile number, pay_money, expend_money.) are exposed in JSON responses. Route names vary per deployment (e.g. /api/goods.pinglun/list), but all call the same vulnerable model logic.</description><pubDate>Thu, 02 Oct 2025 15:54:28 +0000</pubDate></item><item><title>CVE-2025-56162 | YOSHOP 2.0 suffers from an unauthenticated SQL injection in the goodsIds parameter of the /api/goods/listByIds endpoint. The getListByIds fu...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-56162</link><description>YOSHOP 2.0 suffers from an unauthenticated SQL injection in the goodsIds parameter of the /api/goods/listByIds endpoint. The getListByIds function concatenates user input into orderRaw('field(goods_id, ...)'), allowing attackers to: (a) enumerate or modify database data, including dumping admin password hashes; (b) write web-shell files or invoke xp_cmdshell, leading to remote code execution on servers configured with sufficient DB privileges.</description><pubDate>Thu, 02 Oct 2025 15:54:28 +0000</pubDate></item><item><title>CVE-2025-59772 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59772</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_SIL.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:55:36 +0000</pubDate></item><item><title>CVE-2025-59773 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59773</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_TP.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:55:37 +0000</pubDate></item><item><title>CVE-2025-59774 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59774</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_VON.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:55:37 +0000</pubDate></item><item><title>CVE-2025-59768 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59768</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_MNG.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:55:38 +0000</pubDate></item><item><title>CVE-2025-59769 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59769</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_MOL.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:55:39 +0000</pubDate></item><item><title>CVE-2025-59770 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59770</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_MON.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:55:39 +0000</pubDate></item><item><title>CVE-2025-59771 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59771</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_MRK.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:55:40 +0000</pubDate></item><item><title>CVE-2025-61087 | SourceCodester Pet Grooming Management Software 1.0 is vulnerable to Cross Site Scripting (XSS) via the Customer Name field under Customer M...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61087</link><description>SourceCodester Pet Grooming Management Software 1.0 is vulnerable to Cross Site Scripting (XSS) via the Customer Name field under Customer Management Section.</description><pubDate>Thu, 02 Oct 2025 14:55:40 +0000</pubDate></item><item><title>CVE-2025-59757 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59757</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_CATOLD.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:27 +0000</pubDate></item><item><title>CVE-2025-59758 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59758</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_CYLOG.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:27 +0000</pubDate></item><item><title>CVE-2025-59759 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59759</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_DELCROIX.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:28 +0000</pubDate></item><item><title>CVE-2025-59760 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59760</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_DHL.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:28 +0000</pubDate></item><item><title>CVE-2025-59761 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59761</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_DLG.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:28 +0000</pubDate></item><item><title>CVE-2025-59762 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59762</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_DLG.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:29 +0000</pubDate></item><item><title>CVE-2025-59763 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59763</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_EK.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:29 +0000</pubDate></item><item><title>CVE-2025-59764 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59764</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_FCC.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:29 +0000</pubDate></item><item><title>CVE-2025-59765 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59765</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_LF.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:30 +0000</pubDate></item><item><title>CVE-2025-59766 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59766</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_LT.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:30 +0000</pubDate></item><item><title>CVE-2025-59767 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59767</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_LVE.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:46:30 +0000</pubDate></item><item><title>CVE-2025-61096 | PHPGurukul Online Shopping Portal Project v2.1 is vulnerable to SQL Injection in /shopping/login.php via the fullname parameter.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61096</link><description>PHPGurukul Online Shopping Portal Project v2.1 is vulnerable to SQL Injection in /shopping/login.php via the fullname parameter.</description><pubDate>Thu, 02 Oct 2025 14:46:31 +0000</pubDate></item><item><title>CVE-2025-57443 | FrostWire 6.14.0-build-326 for macOS contains permissive entitlements (allow-dyld-environment-variables, disable-library-validation) that al...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-57443</link><description>FrostWire 6.14.0-build-326 for macOS contains permissive entitlements (allow-dyld-environment-variables, disable-library-validation) that allow unprivileged local attackers to inject code into the FrostWire process via the DYLD_INSERT_LIBRARIES environment variable. This allows escalated privileges to arbitrary TCC-approved directories.</description><pubDate>Thu, 02 Oct 2025 14:34:16 +0000</pubDate></item><item><title>CVE-2025-59745 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59745</link><description>Vulnerability in the cryptographic algorithm of AndSoft's e-TMS v25.03, which uses MD5 to encrypt passwords. MD5 is a cryptographically vulnerable hash algorithm and is no longer considered secure for storing or transmitting passwords. It is vulnerable to collision attacks and can be easily cracked with modern hardware, exposing user credentials to potential risks.</description><pubDate>Thu, 02 Oct 2025 14:34:16 +0000</pubDate></item><item><title>CVE-2025-59746 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59746</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'm' parameter in '/lib/asp/alert.asp'.</description><pubDate>Thu, 02 Oct 2025 14:34:16 +0000</pubDate></item><item><title>CVE-2025-59747 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59747</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l' parameter in '/clt/resetPassword.asp'.</description><pubDate>Thu, 02 Oct 2025 14:34:17 +0000</pubDate></item><item><title>CVE-2025-59748 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59748</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l' and 'reset' parameters in '/clt/changepassword.asp'.</description><pubDate>Thu, 02 Oct 2025 14:34:17 +0000</pubDate></item><item><title>CVE-2025-59749 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59749</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l' parameter in '/clt/TRACK_REQUEST.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:17 +0000</pubDate></item><item><title>CVE-2025-59750 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59750</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:18 +0000</pubDate></item><item><title>CVE-2025-59751 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59751</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_DJO.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:18 +0000</pubDate></item><item><title>CVE-2025-59752 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59752</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_LXA.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:19 +0000</pubDate></item><item><title>CVE-2025-59753 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59753</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_BET.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:19 +0000</pubDate></item><item><title>CVE-2025-59754 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59754</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_original.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:19 +0000</pubDate></item><item><title>CVE-2025-59755 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59755</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in '/clt/LOGINFRM_CAT.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:20 +0000</pubDate></item><item><title>CVE-2025-59756 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59756</link><description>Cross-site scripting (XSS) vulnerability reflected in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute JavaScript code in the victim's browser by sending them a malicious URL. The relationship between parameter and assigned identifier is 'l, demo, demo2, TNTLOGIN, UO and SuppConn' parameters in 'SuppConn in /clt/LOGINFRM_CON.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:20 +0000</pubDate></item><item><title>CVE-2025-60782 | PHP Education Manager v1.0 is vulnerable to Cross Site Scripting (XSS) stored Cross-Site Scripting (XSS) vulnerability in the topics managem...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-60782</link><description>PHP Education Manager v1.0 is vulnerable to Cross Site Scripting (XSS) stored Cross-Site Scripting (XSS) vulnerability in the topics management module (topics.php). Attackers can inject malicious JavaScript payloads into the Titlefield during topic creation or updates.</description><pubDate>Thu, 02 Oct 2025 14:34:21 +0000</pubDate></item><item><title>CVE-2025-59741 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59741</link><description>Operating system command injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute operating system commands on the server by sending a POST request. The relationship between parameter and assigned identifier is a 'm' parameter in '/CLT/LOGINERRORFRM.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:21 +0000</pubDate></item><item><title>CVE-2025-59742 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59742</link><description>SQL injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability could allow an attacker to retrieve, create, update, and delete databases by sending a POST request. The relationship between parameter and assigned identifier is a 'USRMAIL' parameter in'/inc/login/TRACK_REQUESTFRMSQL.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:22 +0000</pubDate></item><item><title>CVE-2025-59743 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59743</link><description>SQL injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability could allow an attacker to retrieve, create, update, and delete databases by sending a POST request. The relationship between parameter and assigned identifier is a 'SessionID' cookie  in '/inc/connect/CONNECTION.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:34:22 +0000</pubDate></item><item><title>CVE-2025-59744 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59744</link><description>Path traversal vulnerability in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to access files only within the web root using the “docurl” parameter in “/lib/asp/DOCSAVEASASP.ASP”.</description><pubDate>Thu, 02 Oct 2025 14:34:23 +0000</pubDate></item><item><title>CVE-2025-56379 | A stored cross-site scripting (XSS) vulnerability in the blog post feature of ERPNEXT v15.67.0 allows attackers to execute arbitrary web scr...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-56379</link><description>A stored cross-site scripting (XSS) vulnerability in the blog post feature of ERPNEXT v15.67.0 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the content field.</description><pubDate>Thu, 02 Oct 2025 14:13:03 +0000</pubDate></item><item><title>CVE-2025-56380 | Frappe Framework v15.72.4 was discovered to contain a SQL injection vulnerability via the fieldname parameter in the frappe.client.get_value...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-56380</link><description>Frappe Framework v15.72.4 was discovered to contain a SQL injection vulnerability via the fieldname parameter in the frappe.client.get_value API endpoint and a crafted script to the fieldname parameter</description><pubDate>Thu, 02 Oct 2025 14:13:04 +0000</pubDate></item><item><title>CVE-2025-56381 | ERPNEXT v15.67.0 was discovered to contain multiple SQL injection vulnerabilities in the /api/method/frappe.desk.reportview.get endpoint via...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-56381</link><description>ERPNEXT v15.67.0 was discovered to contain multiple SQL injection vulnerabilities in the /api/method/frappe.desk.reportview.get endpoint via the order_by and group_by parameters.</description><pubDate>Thu, 02 Oct 2025 14:13:04 +0000</pubDate></item><item><title>CVE-2025-59735 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59735</link><description>Operating system command injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute operating system commands on the server by sending a POST request. The relationship between parameter and assigned identifier is a 'm' parameter in '/clt/LOGINFRM.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:13:05 +0000</pubDate></item><item><title>CVE-2025-59736 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59736</link><description>Operating system command injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute operating system commands on the server by sending a POST request. The relationship between parameter and assigned identifier is a 'm' parameter in '/clt/LOGINFRM_DJO.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:13:05 +0000</pubDate></item><item><title>CVE-2025-59737 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59737</link><description>Operating system command injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute operating system commands on the server by sending a POST request. The relationship between parameter and assigned identifier is a 'm' parameter in '/clt/LOGINFRM_LXA.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:13:06 +0000</pubDate></item><item><title>CVE-2025-59738 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59738</link><description>Operating system command injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute operating system commands on the server by sending a POST request. The relationship between parameter and assigned identifier is a 'm' parameter in '/clt/LOGINFRM_BET.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:13:06 +0000</pubDate></item><item><title>CVE-2025-59739 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59739</link><description>Operating system command injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute operating system commands on the server by sending a POST request. The relationship between parameter and assigned identifier is a 'm' parameter in '/clt/LOGINFRM_original.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:13:07 +0000</pubDate></item><item><title>CVE-2025-59740 | Multiple vulnerabilities in AndSoft&amp;#x27;s e-TMS</title><link>https://www.cve.org/CVERecord?id=CVE-2025-59740</link><description>Operating system command injection vulnerability in AndSoft's e-TMS v25.03. This vulnerability allows an attacker to execute operating system commands on the server by sending a POST request. The relationship between parameter and assigned identifier is a 'm' parameter in '/clt/LOGINFRM_CAT.ASP'.</description><pubDate>Thu, 02 Oct 2025 14:13:07 +0000</pubDate></item><item><title>CVE-2025-53881 | SUSE-specific logrotate configuration allows escalation from mail user/group to root</title><link>https://www.cve.org/CVERecord?id=CVE-2025-53881</link><description>A UNIX Symbolic Link (Symlink) Following vulnerability in logrotate config in the exim package allowed privilege escalation from mail user/group to root.This issue affects Tumbleweed: from ? before 4.98.2-lp156.248.1.</description><pubDate>Thu, 02 Oct 2025 13:54:51 +0000</pubDate></item><item><title>CVE-2023-28760 | TP-Link AX1800 WiFi 6 Router (Archer AX21) devices allow unauthenticated attackers (on the LAN) to execute arbitrary code as root via the db...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-28760</link><description>TP-Link AX1800 WiFi 6 Router (Archer AX21) devices allow unauthenticated attackers (on the LAN) to execute arbitrary code as root via the db_dir field to minidlnad. The attacker obtains the ability to modify files.db, and that can be used to reach a stack-based buffer overflow in minidlna-1.1.2/upnpsoap.c. Exploitation requires that a USB flash drive is connected to the router (customers often do this to make a \\192.168.0.1 share available on their local network).</description><pubDate>Thu, 02 Oct 2025 13:34:08 +0000</pubDate></item><item><title>CVE-2025-22862 | An Authentication Bypass Using an Alternate Path or Channel vulnerability [CWE-288] in FortiOS 7.4.0 through 7.4.7, 7.2 all versions, 7.0.6 ...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-22862</link><description>An Authentication Bypass Using an Alternate Path or Channel vulnerability [CWE-288] in FortiOS 7.4.0 through 7.4.7, 7.2 all versions, 7.0.6 and above; and FortiProxy 7.6.0 through 7.6.2, 7.4.0 through 7.4.8, 7.2 all versions, 7.0.5 and above may allow an authenticated attacker to elevate their privileges via triggering a malicious Webhook action in the Automation Stitch component.</description><pubDate>Thu, 02 Oct 2025 13:03:23 +0000</pubDate></item><item><title>CVE-2025-0642 | Hard-coded Credentials in PosCube&amp;#x27;s Assist</title><link>https://www.cve.org/CVERecord?id=CVE-2025-0642</link><description>Use of Hard-coded Credentials, Authorization Bypass Through User-Controlled Key vulnerability in PosCube Hardware Software and Consulting Ltd. Co. Assist allows Excavation, Authentication Bypass.This issue affects Assist: through 10.02.2025.</description><pubDate>Thu, 02 Oct 2025 13:03:24 +0000</pubDate></item><item><title>CVE-2025-11240 | Open redirect vulnerability in KNIME Business Hub</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11240</link><description>An open redirect vulnerability existed in KNIME Business Hub prior to version 1.16.0. An unauthenticated remote attacker could craft a link to a legitimate KNIME Business Hub installation which, when opened by the user, redirects the user to a page of the attackers choice. This might open the possibility for fishing or other similar attacks. The problem has been fixed in KNIME Business Hub 1.16.0.</description><pubDate>Thu, 02 Oct 2025 13:03:24 +0000</pubDate></item><item><title>CVE-2025-11239 | Job details are visible to all team members on KNIME Business Hub</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11239</link><description>Potentially sensitive information in jobs on KNIME Business Hub prior to 1.16.0 were visible to all members of the user's team. Starting with KNIME Business Hub 1.16.0 only metadata of jobs is shown to team members. Only the creator of a job can see all information including in- and output data (if present).</description><pubDate>Thu, 02 Oct 2025 13:03:25 +0000</pubDate></item><item><title>CVE-2025-41010 | Cross-origin resource sharing (CORS) in Hiberus Sintra</title><link>https://www.cve.org/CVERecord?id=CVE-2025-41010</link><description>Incorrect Cross-Origin Resource Sharing (CORS) configuration in Hiberus Sintra. Cross-Origin Resource Sharing (CORS) allows browsers to make cross-domain requests in a controlled manner. This request has an “Origin” header that identifies the domain making the initial request and defines the protocol between a browser and a server to see if the request is allowed. An attacker can exploit this and potentially perform privileged actions and access confidential information when Access-Control-Allow-Credentials is enabled.</description><pubDate>Thu, 02 Oct 2025 13:03:25 +0000</pubDate></item><item><title>CVE-2024-58260 | Rancher update on users can deny the service to the admin</title><link>https://www.cve.org/CVERecord?id=CVE-2024-58260</link><description>A vulnerability has been identified within Rancher Manager where a missing server-side validation on the `.username` field in Rancher can allow users with update permissions on other User resources to cause denial of access for targeted accounts.</description><pubDate>Thu, 02 Oct 2025 12:28:07 +0000</pubDate></item><item><title>CVE-2024-58267 | Rancher CLI SAML authentication is vulnerable to phishing attacks</title><link>https://www.cve.org/CVERecord?id=CVE-2024-58267</link><description>A vulnerability has been identified within Rancher Manager whereby the SAML authentication from the Rancher CLI  tool is vulnerable to phishing attacks. The custom authentication protocol for SAML-based providers can be abused to steal Rancher’s authentication tokens.</description><pubDate>Thu, 02 Oct 2025 12:28:07 +0000</pubDate></item><item><title>CVE-2025-41064 | Incorrect authentication in GTT´s group OpenSIAC</title><link>https://www.cve.org/CVERecord?id=CVE-2025-41064</link><description>Incorrect authentication vulnerability in OpenSIAC, which could allow an attacker to impersonate a person using Cl@ve as an authentication method.</description><pubDate>Thu, 02 Oct 2025 11:27:24 +0000</pubDate></item><item><title>CVE-2025-40992 | Stored XSS in Creativeitem Sociopro</title><link>https://www.cve.org/CVERecord?id=CVE-2025-40992</link><description>Stored XSS vulnerability in Creativeitem Sociopro due to lack of proper validation of user inputs via the endpoint '/sociopro/profile/update_profile', affecting to 'name' parameter via POST. This vulnerability could allow a remote user to send a specially crafted query to an authenticated user and steal his/her cookie session details.</description><pubDate>Thu, 02 Oct 2025 10:57:53 +0000</pubDate></item><item><title>CVE-2025-40990 | Stored XSS in Creativeitem Ekushey CRM</title><link>https://www.cve.org/CVERecord?id=CVE-2025-40990</link><description>Stored Cross Site Scripting vulnerability in Ekushey CRM v5.0 by Creativeitem, due to lack of proper validation of user inputs via the "/ekushey/index.php/client/project_bug/create/xxx", affecting to "title" and "description" parameters via POST. This vulnerability could allow a remote attacker to send a specially crafted query to an authenticated user and steal his/her cookie session details.</description><pubDate>Thu, 02 Oct 2025 10:49:11 +0000</pubDate></item><item><title>CVE-2025-40991 | Stored XSS in Creativeitem Ekushey CRM</title><link>https://www.cve.org/CVERecord?id=CVE-2025-40991</link><description>Stored Cross Site Scripting vulnerability in Ekushey CRM v5.0 by Creativeitem, due to lack of proper validation of user inputs via the "/ekushey/index.php/client/project_file/upload/xxxx", affecting to "description" parameter via POST. This vulnerability could allow a remote attacker to send a specially crafted query to an authenticated user and steal his/her cookie session details.</description><pubDate>Thu, 02 Oct 2025 10:49:11 +0000</pubDate></item><item><title>CVE-2025-54293 | Path Traversal in LXD Instance Log File Retrieval</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54293</link><description>Path Traversal in the log file retrieval function in Canonical LXD 5.0 LTS on Linux allows authenticated remote attackers to read arbitrary files on the host system via crafted log file names or symbolic links.</description><pubDate>Thu, 02 Oct 2025 10:49:12 +0000</pubDate></item><item><title>CVE-2025-40989 | Stored XSS in Creativeitem Ekushey CRM</title><link>https://www.cve.org/CVERecord?id=CVE-2025-40989</link><description>Stored Cross Site Scripting vulnerability in Ekushey CRM v5.0 by Creativeitem, due to lack of proper validation of user inputs via the "/ekushey/index.php/client/project_message/add/xxx", affecting to "message" parameter via POST. This vulnerability could allow a remote attacker to send a specially crafted query to an authenticated user and steal his/her cookie session details.</description><pubDate>Thu, 02 Oct 2025 10:49:12 +0000</pubDate></item><item><title>CVE-2025-54468 | Rancher sends sensitive information to external services through the `/meta/proxy` endpoint</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54468</link><description>A vulnerability has been identified within Rancher Manager whereby `Impersonate-Extra-*` headers are being sent to an external entity, for example `amazonaws.com`, via the `/meta/proxy` Rancher endpoint. These headers may contain identifiable and/or sensitive information e.g. email addresses.</description><pubDate>Thu, 02 Oct 2025 10:26:06 +0000</pubDate></item><item><title>CVE-2025-61733 | Apache Kylin: Authentication bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61733</link><description>Authentication Bypass Using an Alternate Path or Channel vulnerability in Apache Kylin.

This issue affects Apache Kylin: from 4.0.0 through 5.0.2.

Users are recommended to upgrade to version 5.0.3, which fixes the issue.</description><pubDate>Thu, 02 Oct 2025 09:51:43 +0000</pubDate></item><item><title>CVE-2025-61734 | Apache Kylin: improper restriction of file read</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61734</link><description>Files or Directories Accessible to External Parties vulnerability in Apache Kylin.
 You are fine as long as the Kylin's system and project admin access is well protected.

This issue affects Apache Kylin: from 4.0.0 through 5.0.2.

Users are recommended to upgrade to version 5.0.3, which fixes the issue.</description><pubDate>Thu, 02 Oct 2025 09:51:43 +0000</pubDate></item><item><title>CVE-2025-61735 | Apache Kylin: Server-Side Request Forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61735</link><description>Server-Side Request Forgery (SSRF) vulnerability in Apache Kylin.

This issue affects Apache Kylin: from 4.0.0 through 5.0.2. You are fine as long as the Kylin's system and project admin access is well protected.

Users are recommended to upgrade to version 5.0.3, which fixes the issue.</description><pubDate>Thu, 02 Oct 2025 09:51:44 +0000</pubDate></item><item><title>CVE-2025-40645 | Exposure of sensitive information in Viday</title><link>https://www.cve.org/CVERecord?id=CVE-2025-40645</link><description>Exposure of sensitive information in Viday. This vulnerability could allow an unauthenticated attacker to obtain sensitive information about customers by sending an HTTP GET request to “/api/reserva/web/clients” using the “phone” parameter.</description><pubDate>Thu, 02 Oct 2025 09:51:45 +0000</pubDate></item><item><title>CVE-2025-40646 | Exposure of sensitive information in Viday</title><link>https://www.cve.org/CVERecord?id=CVE-2025-40646</link><description>Exposure of sensitive information in Viday. This vulnerability could allow an attacker to obtain sensitive information about customers by intercepting HTTP requests and searching for the JWT containing sensitive user information in the JWT payload.</description><pubDate>Thu, 02 Oct 2025 09:51:45 +0000</pubDate></item><item><title>CVE-2025-54288 | Source Container Identification Vulnerability via cmdline Spoofing in devLXD Server</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54288</link><description>Information Spoofing in devLXD Server in Canonical LXD versions 4.0 and above on Linux container platforms allows attackers with root privileges within any container to impersonate other containers and obtain their metadata, configuration, and device information via spoofed process names in the command line.</description><pubDate>Thu, 02 Oct 2025 09:30:36 +0000</pubDate></item><item><title>CVE-2025-54289 | Privilege Escalation via WebSocket Connection Hijacking in LXD Operations API</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54289</link><description>Privilege Escalation in operations API in Canonical LXD 6.5 on multiple platforms allows attacker with read permissions to hijack terminal or console sessions and execute arbitrary commands via WebSocket connection hijacking format</description><pubDate>Thu, 02 Oct 2025 09:30:37 +0000</pubDate></item><item><title>CVE-2025-54290 | Project Existence Disclosure via Error Handling in LXD Image Export</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54290</link><description>Information disclosure in image export API in Canonical LXD before 6.5 and 5.21.4 on Linux allows network attackers to determine project existence without authentication via crafted requests using wildcard fingerprints.</description><pubDate>Thu, 02 Oct 2025 09:30:37 +0000</pubDate></item><item><title>CVE-2025-54291 | Project existence disclosure in LXD images API</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54291</link><description>Information disclosure in images API in Canonical LXD before 6.5 and 5.21.4 on all platforms allows unauthenticated remote attackers to determine project existence via differing HTTP status code responses.</description><pubDate>Thu, 02 Oct 2025 09:30:37 +0000</pubDate></item><item><title>CVE-2025-54292 | Client-Side Path Traversal in LXD-UI</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54292</link><description>Path traversal in Canonical LXD LXD-UI versions before 6.5 and 5.21.4 on all platforms allows remote authenticated attackers to access or modify unintended resources via crafted resource names embedded in URL paths.</description><pubDate>Thu, 02 Oct 2025 09:30:38 +0000</pubDate></item><item><title>CVE-2025-54286 | CSRF Vulnerability When Using Client Certificate Authentication with the LXD-UI</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54286</link><description>Cross-Site Request Forgery (CSRF) in LXD-UI in Canonical LXD versions &gt;= 5.0 on Linux allows an attacker to create and start container instances without user consent via crafted HTML form submissions exploiting client certificate authentication.</description><pubDate>Thu, 02 Oct 2025 09:30:39 +0000</pubDate></item><item><title>CVE-2025-54287 | Arbitrary File Read via Template Injection in Snapshot Patterns</title><link>https://www.cve.org/CVERecord?id=CVE-2025-54287</link><description>Template Injection in instance snapshot creation component in Canonical LXD (&gt;= 4.0) allows an attacker with instance configuration 
permissions to read arbitrary files on the host system via specially crafted snapshot pattern templates using the Pongo2 template engine.</description><pubDate>Thu, 02 Oct 2025 09:30:39 +0000</pubDate></item><item><title>CVE-2025-9587 | CTL Behance Importer Lite &amp;lt;= 1.0 - Unauthenticated SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9587</link><description>The CTL Behance Importer Lite WordPress plugin through 1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description><pubDate>Thu, 02 Oct 2025 06:24:12 +0000</pubDate></item><item><title>CVE-2025-9697 | Ajax WooSearch &amp;lt;= 1.0.0 - Unauthenticated SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9697</link><description>The Ajax WooSearch WordPress plugin through 1.0.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description><pubDate>Thu, 02 Oct 2025 06:24:12 +0000</pubDate></item><item><title>CVE-2025-58776 | KV Studio versions 12.23 and prior contain a stack-based buffer overflow vulnerability. If the product uses a specially crafted file, arbitr...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-58776</link><description>KV Studio versions 12.23 and prior contain a stack-based buffer overflow vulnerability. If the product uses a specially crafted file, arbitrary code may be executed on the affected product.</description><pubDate>Thu, 02 Oct 2025 06:24:13 +0000</pubDate></item><item><title>CVE-2025-58777 | VT Studio versions 8.53 and prior contain an access of uninitialized pointer vulnerability. If the product uses a specially crafted file, ar...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-58777</link><description>VT Studio versions 8.53 and prior contain an access of uninitialized pointer vulnerability. If the product uses a specially crafted file, arbitrary code may be executed on the affected product.</description><pubDate>Thu, 02 Oct 2025 06:24:14 +0000</pubDate></item><item><title>CVE-2025-61690 | KV STUDIO versions 12.23 and prior contain a buffer underflow vulnerability. If the product uses a specially crafted file, arbitrary code ma...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61690</link><description>KV STUDIO versions 12.23 and prior contain a buffer underflow vulnerability. If the product uses a specially crafted file, arbitrary code may be executed on the affected product.</description><pubDate>Thu, 02 Oct 2025 06:24:14 +0000</pubDate></item><item><title>CVE-2025-61691 | VT STUDIO versions 8.53 and prior contain an out-of-bounds read vulnerability. If the product uses a specially crafted file, arbitrary code ...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61691</link><description>VT STUDIO versions 8.53 and prior contain an out-of-bounds read vulnerability. If the product uses a specially crafted file, arbitrary code may be executed on the affected product.</description><pubDate>Thu, 02 Oct 2025 06:24:15 +0000</pubDate></item><item><title>CVE-2025-61692 | VT STUDIO versions 8.53 and prior contain a use after free vulnerability. If the product uses a specially crafted file, arbitrary code may b...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-61692</link><description>VT STUDIO versions 8.53 and prior contain a use after free vulnerability. If the product uses a specially crafted file, arbitrary code may be executed on the affected product.</description><pubDate>Thu, 02 Oct 2025 06:24:15 +0000</pubDate></item><item><title>CVE-2025-58775 | KV STUDIO and VT5-WX15/WX12 contain a stack-based buffer overflow vulnerability. If the product uses a specially crafted file, arbitrary cod...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-58775</link><description>KV STUDIO and VT5-WX15/WX12 contain a stack-based buffer overflow vulnerability. If the product uses a specially crafted file, arbitrary code may be executed on the affected product.</description><pubDate>Thu, 02 Oct 2025 05:56:09 +0000</pubDate></item><item><title>CVE-2025-11020 | Remote Code Execution in MarkAny SafePC Enterprise</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11020</link><description>An attacker can obtain server information using Path Traversal vulnerability to conduct SQL Injection, which possibly exploits Unrestricted Upload of File with Dangerous Type vulnerability in MarkAny SafePC Enterprise on Windows, Linux.This issue affects SafePC Enterprise: V7.0.* (V7.0.YYYY.MM.DD) before V7.0.1, and V5.*.*.</description><pubDate>Thu, 02 Oct 2025 05:25:38 +0000</pubDate></item><item><title>CVE-2025-11182 | File Download in GTONE ChangeFlow</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11182</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), Download of Code Without Integrity Check vulnerability in GTONE ChangeFlow allows Path Traversal.This issue affects ChangeFlow: All versions to v9.0.1.1.</description><pubDate>Thu, 02 Oct 2025 05:25:39 +0000</pubDate></item><item><title>CVE-2025-11221 | Remote Code Execution in GTONE ChangeFlow</title><link>https://www.cve.org/CVERecord?id=CVE-2025-11221</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), Unrestricted Upload of File with Dangerous Type vulnerability in GTONE ChangeFlow allows Path Traversal, Accessing Functionality Not Properly Constrained by ACLs.This issue affects ChangeFlow: from All versions through v9.0.1.1.</description><pubDate>Thu, 02 Oct 2025 05:25:39 +0000</pubDate></item></channel></rss>