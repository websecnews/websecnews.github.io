<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Sun, 25 Feb 2024 19:16:01 +0000</lastBuildDate><item><title>CVE-2024-0440 | SSRF - file:// unsanitized access to underlying host files</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0440</link><description>Attacker, with permission to submit a link or submits a link via POST  to be collected that is using the file:// protocol can then introspect host files and other relatively stored files.</description><pubDate>Sun, 25 Feb 2024 19:16:03 +0000</pubDate></item><item><title>CVE-2024-0435 | User can submit message to self-XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0435</link><description>User can send a chat that contains an XSS opportunity that will then run when the chat is sent and on subsequent page loads.

Given the minimum requirement for a user to send a chat is to be given access to a workspace via an admin the risk is low. Additionally, the location in which the XSS renders is only limited to the user who submits the XSS. 

Ultimately, this attack is limited to the user attacking themselves. There is no anonymous chat submission unless the user does not take the minimum steps required to protect their instance.</description><pubDate>Sun, 25 Feb 2024 17:23:56 +0000</pubDate></item><item><title>CVE-2024-0798 | Privilege bypass to delete uploaded documents or folders</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0798</link><description>A user with a `default` role given to them by the admin can sent `DELETE` HTTP requests to `remove-folder` and `remove-document` to delete folders and source files from the instance even when their role should explicitly not allow this action on the system.</description><pubDate>Sun, 25 Feb 2024 16:49:51 +0000</pubDate></item><item><title>CVE-2024-0436 | Prevent timing attack for single-user password check</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0436</link><description>Theoretically, it would be possible for an attacker to brute-force the password for an instance in single-user password protection mode via a timing attack given the linear nature of the `!==` used for comparison.

The risk is minified by the additional overhead of the request, which varies in a non-constant nature making the attack less reliable to execute</description><pubDate>Sun, 25 Feb 2024 16:36:16 +0000</pubDate></item><item><title>CVE-2021-46904 | net: hso: fix null-ptr-deref during tty device unregistration</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46904</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hso: fix null-ptr-deref during tty device unregistration

Multiple ttys try to claim the same the minor number causing a double
unregistration of the same device. The first unregistration succeeds
but the next one results in a null-ptr-deref.

The get_free_serial_index() function returns an available minor number
but doesn't assign it immediately. The assignment is done by the caller
later. But before this assignment, calls to get_free_serial_index()
would return the same minor number.

Fix this by modifying get_free_serial_index to assign the minor number
immediately after one is found to be and rename it to obtain_minor()
to better reflect what it does. Similary, rename set_serial_by_index()
to release_minor() and modify it to free up the minor number of the
given hso_serial. Every obtain_minor() should have corresponding
release_minor() call.</description><pubDate>Sun, 25 Feb 2024 14:09:29 +0000</pubDate></item><item><title>CVE-2021-46905 | net: hso: fix NULL-deref on disconnect regression</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46905</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hso: fix NULL-deref on disconnect regression

Commit 8a12f8836145 ("net: hso: fix null-ptr-deref during tty device
unregistration") fixed the racy minor allocation reported by syzbot, but
introduced an unconditional NULL-pointer dereference on every disconnect
instead.

Specifically, the serial device table must no longer be accessed after
the minor has been released by hso_serial_tty_unregister().</description><pubDate>Sun, 25 Feb 2024 14:09:29 +0000</pubDate></item><item><title>CVE-2022-48626 | moxart: fix potential use-after-free on remove path</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48626</link><description>In the Linux kernel, the following vulnerability has been resolved:

moxart: fix potential use-after-free on remove path

It was reported that the mmc host structure could be accessed after it
was freed in moxart_remove(), so fix this by saving the base register of
the device and using it instead of the pointer dereference.</description><pubDate>Sun, 25 Feb 2024 14:09:30 +0000</pubDate></item><item><title>CVE-2023-52465 | power: supply: Fix null pointer dereference in smb2_probe</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52465</link><description>In the Linux kernel, the following vulnerability has been resolved:

power: supply: Fix null pointer dereference in smb2_probe

devm_kasprintf and devm_kzalloc return a pointer to dynamically
allocated memory which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:20 +0000</pubDate></item><item><title>CVE-2023-52466 | PCI: Avoid potential out-of-bounds read in pci_dev_for_each_resource()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52466</link><description>In the Linux kernel, the following vulnerability has been resolved:

PCI: Avoid potential out-of-bounds read in pci_dev_for_each_resource()

Coverity complains that pointer in the pci_dev_for_each_resource() may be
wrong, i.e., might be used for the out-of-bounds read.

There is no actual issue right now because we have another check afterwards
and the out-of-bounds read is not being performed. In any case it's better
code with this fixed, hence the proposed change.

As Jonas pointed out "It probably makes the code slightly less performant
as res will now be checked for being not NULL (which will always be true),
but I doubt it will be significant (or in any hot paths)."</description><pubDate>Sun, 25 Feb 2024 08:26:20 +0000</pubDate></item><item><title>CVE-2023-52467 | mfd: syscon: Fix null pointer dereference in of_syscon_register()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52467</link><description>In the Linux kernel, the following vulnerability has been resolved:

mfd: syscon: Fix null pointer dereference in of_syscon_register()

kasprintf() returns a pointer to dynamically allocated memory
which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52468 | class: fix use-after-free in class_register()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52468</link><description>In the Linux kernel, the following vulnerability has been resolved:

class: fix use-after-free in class_register()

The lock_class_key is still registered and can be found in
lock_keys_hash hlist after subsys_private is freed in error
handler path.A task who iterate over the lock_keys_hash
later may cause use-after-free.So fix that up and unregister
the lock_class_key before kfree(cp).

On our platform, a driver fails to kset_register because of
creating duplicate filename '/class/xxx'.With Kasan enabled,
it prints a invalid-access bug report.

KASAN bug report:

BUG: KASAN: invalid-access in lockdep_register_key+0x19c/0x1bc
Write of size 8 at addr 15ffff808b8c0368 by task modprobe/252
Pointer tag: [15], memory tag: [fe]

CPU: 7 PID: 252 Comm: modprobe Tainted: G        W
 6.6.0-mainline-maybe-dirty #1

Call trace:
dump_backtrace+0x1b0/0x1e4
show_stack+0x2c/0x40
dump_stack_lvl+0xac/0xe0
print_report+0x18c/0x4d8
kasan_report+0xe8/0x148
__hwasan_store8_noabort+0x88/0x98
lockdep_register_key+0x19c/0x1bc
class_register+0x94/0x1ec
init_module+0xbc/0xf48 [rfkill]
do_one_initcall+0x17c/0x72c
do_init_module+0x19c/0x3f8
...
Memory state around the buggy address:
ffffff808b8c0100: 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a
ffffff808b8c0200: 8a 8a 8a 8a 8a 8a 8a 8a fe fe fe fe fe fe fe fe
&gt;ffffff808b8c0300: fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe
                                     ^
ffffff808b8c0400: 03 03 03 03 03 03 03 03 03 03 03 03 03 03 03 03

As CONFIG_KASAN_GENERIC is not set, Kasan reports invalid-access
not use-after-free here.In this case, modprobe is manipulating
the corrupted lock_keys_hash hlish where lock_class_key is already
freed before.

It's worth noting that this only can happen if lockdep is enabled,
which is not true for normal system.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52469 | drivers/amd/pm: fix a use-after-free in kv_parse_power_table</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52469</link><description>In the Linux kernel, the following vulnerability has been resolved:

drivers/amd/pm: fix a use-after-free in kv_parse_power_table

When ps allocated by kzalloc equals to NULL, kv_parse_power_table
frees adev-&gt;pm.dpm.ps that allocated before. However, after the control
flow goes through the following call chains:

kv_parse_power_table
  |-&gt; kv_dpm_init
        |-&gt; kv_dpm_sw_init
	      |-&gt; kv_dpm_fini

The adev-&gt;pm.dpm.ps is used in the for loop of kv_dpm_fini after its
first free in kv_parse_power_table and causes a use-after-free bug.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52470 | drm/radeon: check the alloc_workqueue return value in radeon_crtc_init()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52470</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/radeon: check the alloc_workqueue return value in radeon_crtc_init()

check the alloc_workqueue return value in radeon_crtc_init()
to avoid null-ptr-deref.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52471 | ice: Fix some null pointer dereference issues in ice_ptp.c</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52471</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: Fix some null pointer dereference issues in ice_ptp.c

devm_kasprintf() returns a pointer to dynamically allocated memory
which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52472 | crypto: rsa - add a check for allocation failure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52472</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: rsa - add a check for allocation failure

Static checkers insist that the mpi_alloc() allocation can fail so add
a check to prevent a NULL dereference.  Small allocations like this
can't actually fail in current kernels, but adding a check is very
simple and makes the static checkers happy.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52473 | thermal: core: Fix NULL pointer dereference in zone registration error path</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52473</link><description>In the Linux kernel, the following vulnerability has been resolved:

thermal: core: Fix NULL pointer dereference in zone registration error path

If device_register() in thermal_zone_device_register_with_trips()
returns an error, the tz variable is set to NULL and subsequently
dereferenced in kfree(tz-&gt;tzp).

Commit adc8749b150c ("thermal/drivers/core: Use put_device() if
device_register() fails") added the tz = NULL assignment in question to
avoid a possible double-free after dropping the reference to the zone
device.  However, after commit 4649620d9404 ("thermal: core: Make
thermal_zone_device_unregister() return after freeing the zone"), that
assignment has become redundant, because dropping the reference to the
zone device does not cause the zone object to be freed any more.

Drop it to address the NULL pointer dereference.</description><pubDate>Sun, 25 Feb 2024 08:26:23 +0000</pubDate></item><item><title>CVE-2024-0455 | SSRF on AWS deployed instances of AnythingLLM via /metadata</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0455</link><description>The inclusion of the web scraper for AnythingLLM means that any user with the proper authorization level (manager, admin, and when in single user) could put in the URL
```
http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance
```
which is a special IP and URL that resolves only when the request comes from within an EC2 instance. This would allow the user to see the connection/secret credentials for their specific instance and be able to manage it regardless of who deployed it.

The user would have to have pre-existing knowledge of the hosting infra which the target instance is deployed on, but if sent - would resolve if on EC2 and the proper `iptable` or firewall rule is not configured for their setup.</description><pubDate>Sun, 25 Feb 2024 08:26:23 +0000</pubDate></item><item><title>CVE-2024-27359 | Certain WithSecure products allow a Denial of Service because the engine scanner can go into an infinite loop when processing an archive fil...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27359</link><description>Certain WithSecure products allow a Denial of Service because the engine scanner can go into an infinite loop when processing an archive file. This affects WithSecure Client Security 15, WithSecure Server Security 15, WithSecure Email and Server Security 15, WithSecure Elements Endpoint Protection 17 and later, WithSecure Client Security for Mac 15, WithSecure Elements Endpoint Protection for Mac 17 and later, WithSecure Linux Security 64 12.0, WithSecure Linux Protection 12.0, and WithSecure Atlant 1.0.35-1.</description><pubDate>Sun, 25 Feb 2024 07:02:09 +0000</pubDate></item><item><title>CVE-2024-27350 | Amazon Fire OS 7 before 7.6.6.9 and 8 before 8.1.0.3 allows Fire TV applications to establish local ADB (Android Debug Bridge) connections. ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27350</link><description>Amazon Fire OS 7 before 7.6.6.9 and 8 before 8.1.0.3 allows Fire TV applications to establish local ADB (Android Debug Bridge) connections. NOTE: some third parties dispute whether this has security relevance, because an ADB connection is only possible after the (non-default) ADB Debugging option is enabled, and after the initiator of that specific connection attempt has been approved via a full-screen prompt.</description><pubDate>Sun, 25 Feb 2024 03:51:01 +0000</pubDate></item><item><title>CVE-2024-1871 | SourceCodester Employee Management System Project Assignment Report assignp.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1871</link><description>A vulnerability, which was classified as problematic, was found in SourceCodester Employee Management System 1.0. Affected is an unknown function of the file /process/assignp.php of the component Project Assignment Report. The manipulation of the argument pname leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-254694 is the identifier assigned to this vulnerability.</description><pubDate>Sat, 24 Feb 2024 21:37:45 +0000</pubDate></item><item><title>CVE-2024-0243 | Server-side Request Forgery In Recursive URL Loader</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0243</link><description>With the following crawler configuration:

```python
from bs4 import BeautifulSoup as Soup

url = "https://example.com"
loader = RecursiveUrlLoader(
    url=url, max_depth=2, extractor=lambda x: Soup(x, "html.parser").text
)
docs = loader.load()
```

An attacker in control of the contents of `https://example.com` could place a malicious HTML file in there with links like "https://example.completely.different/my_file.html" and the crawler would proceed to download that file as well even though `prevent_outside=True`.

https://github.com/langchain-ai/langchain/blob/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22/libs/community/langchain_community/document_loaders/recursive_url_loader.py#L51-L51

Resolved in https://github.com/langchain-ai/langchain/pull/15559</description><pubDate>Sat, 24 Feb 2024 18:15:15 +0000</pubDate></item><item><title>CVE-2022-34357 | IBM Cognos Analytics Mobile Server denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2022-34357</link><description>IBM Cognos Analytics Mobile Server 11.1.7, 11.2.4, and 12.0.0 is vulnerable to Denial of Service due to due to weak or absence of rate limiting. By making unlimited http requests, it is possible for a single user to exhaust server resources over a period of time making service unavailable for other legitimate users.  IBM X-Force ID:  230510.</description><pubDate>Sat, 24 Feb 2024 15:43:35 +0000</pubDate></item><item><title>CVE-2023-43051 | IBM Cognos Analytics cross-site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-43051</link><description>IBM Cognos Analytics 11.1.7, 11.2.4, and 12.0.0 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  267451.</description><pubDate>Sat, 24 Feb 2024 15:43:35 +0000</pubDate></item><item><title>CVE-2023-30996 | IBM Cognos Analytics cross-origin resource sharing</title><link>https://www.cve.org/CVERecord?id=CVE-2023-30996</link><description>IBM Cognos Analytics 11.1.7, 11.2.4, and 12.0.0 could be vulnerable to information leakage due to unverified sources in messages sent between Windows objects of different origins.  IBM X-Force ID:  254290.</description><pubDate>Sat, 24 Feb 2024 15:36:46 +0000</pubDate></item><item><title>CVE-2023-32344 | IBM Cognos Analytics cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2023-32344</link><description>IBM Cognos Analytics 11.1.7, 11.2.4, and 12.0.0 is vulnerable to form action hijacking where it is possible to modify the form action to reference an arbitrary path.  IBM X-Force ID:  255898.</description><pubDate>Sat, 24 Feb 2024 15:36:46 +0000</pubDate></item><item><title>CVE-2023-38359 | IBM Cognos Analytics cross-site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38359</link><description>IBM Cognos Analytics 11.1.7, 11.2.4, and 12.0.0 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  260744.</description><pubDate>Sat, 24 Feb 2024 15:36:47 +0000</pubDate></item><item><title>CVE-2024-26605 | PCI/ASPM: Fix deadlock when enabling ASPM</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26605</link><description>In the Linux kernel, the following vulnerability has been resolved:

PCI/ASPM: Fix deadlock when enabling ASPM

A last minute revert in 6.7-final introduced a potential deadlock when
enabling ASPM during probe of Qualcomm PCIe controllers as reported by
lockdep:

  ============================================
  WARNING: possible recursive locking detected
  6.7.0 #40 Not tainted
  --------------------------------------------
  kworker/u16:5/90 is trying to acquire lock:
  ffffacfa78ced000 (pci_bus_sem){++++}-{3:3}, at: pcie_aspm_pm_state_change+0x58/0xdc

              but task is already holding lock:
  ffffacfa78ced000 (pci_bus_sem){++++}-{3:3}, at: pci_walk_bus+0x34/0xbc

              other info that might help us debug this:
   Possible unsafe locking scenario:

         CPU0
         ----
    lock(pci_bus_sem);
    lock(pci_bus_sem);

               *** DEADLOCK ***

  Call trace:
   print_deadlock_bug+0x25c/0x348
   __lock_acquire+0x10a4/0x2064
   lock_acquire+0x1e8/0x318
   down_read+0x60/0x184
   pcie_aspm_pm_state_change+0x58/0xdc
   pci_set_full_power_state+0xa8/0x114
   pci_set_power_state+0xc4/0x120
   qcom_pcie_enable_aspm+0x1c/0x3c [pcie_qcom]
   pci_walk_bus+0x64/0xbc
   qcom_pcie_host_post_init_2_7_0+0x28/0x34 [pcie_qcom]

The deadlock can easily be reproduced on machines like the Lenovo ThinkPad
X13s by adding a delay to increase the race window during asynchronous
probe where another thread can take a write lock.

Add a new pci_set_power_state_locked() and associated helper functions that
can be called with the PCI bus semaphore held to avoid taking the read lock
twice.</description><pubDate>Sat, 24 Feb 2024 15:22:04 +0000</pubDate></item><item><title>CVE-2024-26600 | phy: ti: phy-omap-usb2: Fix NULL pointer dereference for SRP</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26600</link><description>In the Linux kernel, the following vulnerability has been resolved:

phy: ti: phy-omap-usb2: Fix NULL pointer dereference for SRP

If the external phy working together with phy-omap-usb2 does not implement
send_srp(), we may still attempt to call it. This can happen on an idle
Ethernet gadget triggering a wakeup for example:

configfs-gadget.g1 gadget.0: ECM Suspend
configfs-gadget.g1 gadget.0: Port suspended. Triggering wakeup
...
Unable to handle kernel NULL pointer dereference at virtual address
00000000 when execute
...
PC is at 0x0
LR is at musb_gadget_wakeup+0x1d4/0x254 [musb_hdrc]
...
musb_gadget_wakeup [musb_hdrc] from usb_gadget_wakeup+0x1c/0x3c [udc_core]
usb_gadget_wakeup [udc_core] from eth_start_xmit+0x3b0/0x3d4 [u_ether]
eth_start_xmit [u_ether] from dev_hard_start_xmit+0x94/0x24c
dev_hard_start_xmit from sch_direct_xmit+0x104/0x2e4
sch_direct_xmit from __dev_queue_xmit+0x334/0xd88
__dev_queue_xmit from arp_solicit+0xf0/0x268
arp_solicit from neigh_probe+0x54/0x7c
neigh_probe from __neigh_event_send+0x22c/0x47c
__neigh_event_send from neigh_resolve_output+0x14c/0x1c0
neigh_resolve_output from ip_finish_output2+0x1c8/0x628
ip_finish_output2 from ip_send_skb+0x40/0xd8
ip_send_skb from udp_send_skb+0x124/0x340
udp_send_skb from udp_sendmsg+0x780/0x984
udp_sendmsg from __sys_sendto+0xd8/0x158
__sys_sendto from ret_fast_syscall+0x0/0x58

Let's fix the issue by checking for send_srp() and set_vbus() before
calling them. For USB peripheral only cases these both could be NULL.</description><pubDate>Sat, 24 Feb 2024 15:10:18 +0000</pubDate></item><item><title>CVE-2024-26601 | ext4: regenerate buddy after block freeing failed if under fc replay</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26601</link><description>In the Linux kernel, the following vulnerability has been resolved:

ext4: regenerate buddy after block freeing failed if under fc replay

This mostly reverts commit 6bd97bf273bd ("ext4: remove redundant
mb_regenerate_buddy()") and reintroduces mb_regenerate_buddy(). Based on
code in mb_free_blocks(), fast commit replay can end up marking as free
blocks that are already marked as such. This causes corruption of the
buddy bitmap so we need to regenerate it in that case.</description><pubDate>Sat, 24 Feb 2024 15:10:19 +0000</pubDate></item><item><title>CVE-2024-26602 | sched/membarrier: reduce the ability to hammer on sys_membarrier</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26602</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched/membarrier: reduce the ability to hammer on sys_membarrier

On some systems, sys_membarrier can be very expensive, causing overall
slowdowns for everything.  So put a lock on the path in order to
serialize the accesses to prevent the ability for this to be called at
too high of a frequency and saturate the machine.</description><pubDate>Sat, 24 Feb 2024 15:10:19 +0000</pubDate></item><item><title>CVE-2024-26603 | x86/fpu: Stop relying on userspace for info to fault in xsave buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26603</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/fpu: Stop relying on userspace for info to fault in xsave buffer

Before this change, the expected size of the user space buffer was
taken from fx_sw-&gt;xstate_size. fx_sw-&gt;xstate_size can be changed
from user-space, so it is possible construct a sigreturn frame where:

 * fx_sw-&gt;xstate_size is smaller than the size required by valid bits in
   fx_sw-&gt;xfeatures.
 * user-space unmaps parts of the sigrame fpu buffer so that not all of
   the buffer required by xrstor is accessible.

In this case, xrstor tries to restore and accesses the unmapped area
which results in a fault. But fault_in_readable succeeds because buf +
fx_sw-&gt;xstate_size is within the still mapped area, so it goes back and
tries xrstor again. It will spin in this loop forever.

Instead, fault in the maximum size which can be touched by XRSTOR (taken
from fpstate-&gt;user_size).

[ dhansen: tweak subject / changelog ]</description><pubDate>Sat, 24 Feb 2024 15:10:19 +0000</pubDate></item><item><title>CVE-2024-26604 | Revert &amp;quot;kobject: Remove redundant checks for whether ktype is NULL&amp;quot;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26604</link><description>In the Linux kernel, the following vulnerability has been resolved:

Revert "kobject: Remove redundant checks for whether ktype is NULL"

This reverts commit 1b28cb81dab7c1eedc6034206f4e8d644046ad31.

It is reported to cause problems, so revert it for now until the root
cause can be found.</description><pubDate>Sat, 24 Feb 2024 15:10:20 +0000</pubDate></item><item><title>CVE-2024-1165 | The Brizy – Page Builder plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 2.4.39 via the 'id'...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1165</link><description>The Brizy – Page Builder plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 2.4.39 via the 'id'. This makes it possible for authenticated attackers, with contributor-level access and above, to upload files to arbitrary locations on the server</description><pubDate>Sat, 24 Feb 2024 09:46:51 +0000</pubDate></item><item><title>CVE-2024-1710 | The Addon Library plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the onAjaxAction fu...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1710</link><description>The Addon Library plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the onAjaxAction function action in all versions up to, and including, 1.3.76. This makes it possible for authenticated attackers, with subscriber-level access and above, to perform several unauthorized actions including uploading arbitrary files.</description><pubDate>Sat, 24 Feb 2024 09:46:51 +0000</pubDate></item><item><title>CVE-2023-5775 | The BackWPup plugin for WordPress is vulnerable to Plaintext Storage of Backup Destination Password in all versions up to, and including, 4....</title><link>https://www.cve.org/CVERecord?id=CVE-2023-5775</link><description>The BackWPup plugin for WordPress is vulnerable to Plaintext Storage of Backup Destination Password in all versions up to, and including, 4.0.2. This is due to to the plugin improperly storing backup destination passwords in plaintext. This makes it possible for authenticated attackers, with administrator-level access, to retrieve the password from the password input field in the UI or from the options table where the password is stored.</description><pubDate>Sat, 24 Feb 2024 08:43:08 +0000</pubDate></item><item><title>CVE-2024-1758 | The SuperFaktura WooCommerce plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 1.40.3 ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1758</link><description>The SuperFaktura WooCommerce plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 1.40.3 via the wc_sf_url_check function. This makes it possible for authenticated attackers, with subscriber-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.</description><pubDate>Sat, 24 Feb 2024 08:43:09 +0000</pubDate></item><item><title>CVE-2024-21501 | Versions of the package sanitize-html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attri...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21501</link><description>Versions of the package sanitize-html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attribute allowed, allowing enumeration of files in the system (including project dependencies). An attacker could exploit this vulnerability to gather details about the file system structure and dependencies of the targeted server.</description><pubDate>Sat, 24 Feb 2024 05:09:32 +0000</pubDate></item><item><title>CVE-2024-21502 | Versions of the package fastecdsa before 2.3.2 are vulnerable to Use of Uninitialized Variable on the stack, via the curvemath_mul function ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21502</link><description>Versions of the package fastecdsa before 2.3.2 are vulnerable to Use of Uninitialized Variable on the stack, via the curvemath_mul function in src/curveMath.c, due to being used and interpreted as user-defined type. Depending on the variable's actual value it could be arbitrary free(), arbitrary realloc(), null pointer dereference and other. Since the stack can be controlled by the attacker, the vulnerability could be used to corrupt allocator structure, leading to possible heap exploitation. The attacker could cause denial of service by exploiting this vulnerability.</description><pubDate>Sat, 24 Feb 2024 05:09:32 +0000</pubDate></item><item><title>CVE-2024-1810 | The Archivist – Custom Archive Templates plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘shortcode_attributes'...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1810</link><description>The Archivist – Custom Archive Templates plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘shortcode_attributes' parameter in all versions up to, and including, 1.7.5 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Sat, 24 Feb 2024 04:35:30 +0000</pubDate></item><item><title>CVE-2024-22395 | Improper access control vulnerability has been identified in the SMA100 SSL-VPN virtual office portal, which in specific conditions could po...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22395</link><description>Improper access control vulnerability has been identified in the SMA100 SSL-VPN virtual office portal, which in specific conditions could potentially enable a remote authenticated attacker to associate another user's MFA mobile application.</description><pubDate>Fri, 23 Feb 2024 23:42:22 +0000</pubDate></item><item><title>CVE-2024-24681 | Insecure AES key in Yealink Configuration Encrypt Tool below verrsion 1.2. A single, vendorwide, hardcoded AES key in the configuration tool...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24681</link><description>Insecure AES key in Yealink Configuration Encrypt Tool below verrsion 1.2. A single, vendorwide, hardcoded AES key in the configuration tool used to encrypt provisioning documents was leaked leading to a compromise of confidentiality of provisioning documents.</description><pubDate>Fri, 23 Feb 2024 22:45:19 +0000</pubDate></item><item><title>CVE-2024-22988 | An issue in zkteco zkbio WDMS v.8.0.5 allows an attacker to execute arbitrary code via the /files/backup/ component.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22988</link><description>An issue in zkteco zkbio WDMS v.8.0.5 allows an attacker to execute arbitrary code via the /files/backup/ component.</description><pubDate>Fri, 23 Feb 2024 22:38:19 +0000</pubDate></item><item><title>CVE-2024-25469 | SQL Injection vulnerability in CRMEB crmeb_java v.1.3.4 and before allows a remote attacker to obtain sensitive information via the latitude...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25469</link><description>SQL Injection vulnerability in CRMEB crmeb_java v.1.3.4 and before allows a remote attacker to obtain sensitive information via the latitude and longitude parameters in the api/front/store/list component.</description><pubDate>Fri, 23 Feb 2024 22:24:19 +0000</pubDate></item><item><title>CVE-2024-26188 | Microsoft Edge (Chromium-based) Spoofing Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26188</link><description>No english description</description><pubDate>Fri, 23 Feb 2024 22:24:19 +0000</pubDate></item><item><title>CVE-2024-26192 | Microsoft Edge (Chromium-based) Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26192</link><description>No english description</description><pubDate>Fri, 23 Feb 2024 22:24:20 +0000</pubDate></item><item><title>CVE-2024-25730 | Hitron CODA-4582 and CODA-4589 devices have default PSKs that are generated from 5-digit hex values concatenated with a "Hitron" substring, ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25730</link><description>Hitron CODA-4582 and CODA-4589 devices have default PSKs that are generated from 5-digit hex values concatenated with a "Hitron" substring, resulting in insufficient entropy (only about one million possibilities).</description><pubDate>Fri, 23 Feb 2024 22:24:21 +0000</pubDate></item><item><title>CVE-2024-24309 | In the module "Survey TMA" (ecomiz_survey_tma) up to version 2.0.0 from Ecomiz for PrestaShop, a guest can download personal information wit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24309</link><description>In the module "Survey TMA" (ecomiz_survey_tma) up to version 2.0.0 from Ecomiz for PrestaShop, a guest can download personal information without restriction.</description><pubDate>Fri, 23 Feb 2024 22:10:24 +0000</pubDate></item><item><title>CVE-2024-27132 | Insufficient sanitization in MLflow leads to XSS when running an untrusted recipe.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27132</link><description>Insufficient sanitization in MLflow leads to XSS when running an untrusted recipe.

This issue leads to a client-side RCE when running an untrusted recipe in Jupyter Notebook.

The vulnerability stems from lack of sanitization over template variables.</description><pubDate>Fri, 23 Feb 2024 22:10:24 +0000</pubDate></item><item><title>CVE-2024-27133 | Insufficient sanitization in MLflow leads to XSS when running a recipe that uses an untrusted dataset.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27133</link><description>Insufficient sanitization in MLflow leads to XSS when running a recipe that uses an untrusted dataset. This issue leads to a client-side RCE when running the recipe in Jupyter Notebook. The vulnerability stems from lack of sanitization over dataset table fields.</description><pubDate>Fri, 23 Feb 2024 22:10:25 +0000</pubDate></item><item><title>CVE-2024-24310 | In the module "Generate barcode on invoice / delivery slip" (ecgeneratebarcode) from Ether Creation &lt;= 1.2.0 for PrestaShop, a guest can per...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24310</link><description>In the module "Generate barcode on invoice / delivery slip" (ecgeneratebarcode) from Ether Creation &lt;= 1.2.0 for PrestaShop, a guest can perform SQL injection.</description><pubDate>Fri, 23 Feb 2024 22:10:26 +0000</pubDate></item><item><title>CVE-2024-21423 | Microsoft Edge (Chromium-based) Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21423</link><description>No english description</description><pubDate>Fri, 23 Feb 2024 21:37:08 +0000</pubDate></item><item><title>CVE-2024-1834 | SourceCodester Simple Student Attendance System ?page=attendance&amp;amp;class_id=1 cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1834</link><description>A vulnerability was found in SourceCodester Simple Student Attendance System 1.0. It has been classified as problematic. This affects an unknown part of the file ?page=attendance&amp;class_id=1. The manipulation of the argument class_date with the input 2024-02-23%22%3E%3Cscript%3Ealert(1)%3C/script%3E leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-254625 was assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 20:14:30 +0000</pubDate></item><item><title>CVE-2024-1832 | SourceCodester Complete File Management System Admin Login Form sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1832</link><description>A vulnerability has been found in SourceCodester Complete File Management System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file /admin/ of the component Admin Login Form. The manipulation of the argument username with the input torada%27+or+%271%27+%3D+%271%27+--+- leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254623.</description><pubDate>Fri, 23 Feb 2024 19:37:19 +0000</pubDate></item><item><title>CVE-2024-1833 | SourceCodester Employee Management System login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1833</link><description>A vulnerability was found in SourceCodester Employee Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file /Account/login.php. The manipulation of the argument txtusername leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-254624.</description><pubDate>Fri, 23 Feb 2024 19:37:19 +0000</pubDate></item><item><title>CVE-2023-51393 | Potential DoS due to BusFault and Assert in Ember ZNet legacy packet buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51393</link><description>Due to an allocation of resources without limits, an uncontrolled resource consumption vulnerability exists in Silicon Labs Ember ZNet SDK prior to v7.4.0.0 (delivered as part of Silicon Labs Gecko SDK v4.4.0) which may enable attackers to trigger a bus fault and crash of the device, requiring a reboot in order to rejoin the network.</description><pubDate>Fri, 23 Feb 2024 19:23:10 +0000</pubDate></item><item><title>CVE-2023-51394 | Potential DoS for EFR32xxx parts in high traffic environments due to null buffer dereference / crash</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51394</link><description>High traffic environments may result in NULL Pointer Dereference vulnerability in Silicon Labs's Ember ZNet SDK before v7.4.0, causing a system crash.</description><pubDate>Fri, 23 Feb 2024 19:23:10 +0000</pubDate></item><item><title>CVE-2024-1831 | SourceCodester Complete File Management System Login Form index.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1831</link><description>A vulnerability, which was classified as critical, was found in SourceCodester Complete File Management System 1.0. Affected is an unknown function of the file users/index.php of the component Login Form. The manipulation of the argument username with the input torada%27+or+%271%27+%3D+%271%27+--+- leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-254622 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 19:03:53 +0000</pubDate></item><item><title>CVE-2022-43842 | IBM Aspera Console SQL injection</title><link>https://www.cve.org/CVERecord?id=CVE-2022-43842</link><description>IBM Aspera Console 3.4.0 through 3.4.2 is vulnerable to SQL injection. A remote attacker could send specially crafted SQL statements, which could allow the attacker to view, add, modify or delete information in the back-end database.  IBM X-Force ID:  239079.</description><pubDate>Fri, 23 Feb 2024 18:54:28 +0000</pubDate></item><item><title>CVE-2024-1830 | code-projects Library System lost-password.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1830</link><description>A vulnerability was found in code-projects Library System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file Source/librarian/user/student/lost-password.php. The manipulation of the argument email leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-254618 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 18:33:36 +0000</pubDate></item><item><title>CVE-2024-1828 | code-projects Library System registration.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1828</link><description>A vulnerability was found in code-projects Library System 1.0. It has been classified as critical. Affected is an unknown function of the file Source/librarian/user/teacher/registration.php. The manipulation of the argument email/idno/phone/username leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-254616.</description><pubDate>Fri, 23 Feb 2024 18:08:58 +0000</pubDate></item><item><title>CVE-2024-1829 | code-projects Library System registration.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1829</link><description>A vulnerability was found in code-projects Library System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file Source/librarian/user/student/registration.php. The manipulation of the argument email/regno/phone/username leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-254617 was assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 18:08:58 +0000</pubDate></item><item><title>CVE-2024-27319 | Versions of the package onnx before and including 1.15.0 are vulnerable to Out-of-bounds Read as the ONNX_ASSERT and ONNX_ASSERTM functions ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27319</link><description>Versions of the package onnx before and including 1.15.0 are vulnerable to Out-of-bounds Read as the ONNX_ASSERT and ONNX_ASSERTM functions have an off by one string copy.</description><pubDate>Fri, 23 Feb 2024 17:47:49 +0000</pubDate></item><item><title>CVE-2024-27318 | Versions of the package onnx before and including 1.15.0 are vulnerable to Directory Traversal as the external_data field of the tensor prot...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27318</link><description>Versions of the package onnx before and including 1.15.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory. The vulnerability occurs as a bypass for the patch added for CVE-2022-25882.</description><pubDate>Fri, 23 Feb 2024 17:40:52 +0000</pubDate></item><item><title>CVE-2024-1827 | code-projects Library System login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1827</link><description>A vulnerability was found in code-projects Library System 1.0 and classified as critical. This issue affects some unknown processing of the file Source/librarian/user/teacher/login.php. The manipulation of the argument username/password leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254615.</description><pubDate>Fri, 23 Feb 2024 17:33:46 +0000</pubDate></item><item><title>CVE-2024-1826 | code-projects Library System login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1826</link><description>A vulnerability has been found in code-projects Library System 1.0 and classified as critical. This vulnerability affects unknown code of the file Source/librarian/user/student/login.php. The manipulation of the argument username/password leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-254614 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 17:12:31 +0000</pubDate></item><item><title>CVE-2024-23320 | Apache DolphinScheduler: Arbitrary js execution as root for authenticated users</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23320</link><description>Improper Input Validation vulnerability in Apache DolphinScheduler. An authenticated user can cause arbitrary, unsandboxed javascript to be executed on the server.

This issue is a legacy of CVE-2023-49299. We didn't fix it completely in CVE-2023-49299, and we added one more patch to fix it.

This issue affects Apache DolphinScheduler: until 3.2.1.

Users are recommended to upgrade to version 3.2.1, which fixes the issue.</description><pubDate>Fri, 23 Feb 2024 17:12:32 +0000</pubDate></item><item><title>CVE-2024-1825 | CodeAstro House Rental Management System User Registration Page cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1825</link><description>A vulnerability, which was classified as problematic, was found in CodeAstro House Rental Management System 1.0. This affects an unknown part of the component User Registration Page. The manipulation of the argument address with the input &lt;img src="1" onerror="console.log(1)"&gt; leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-254613 was assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 16:38:27 +0000</pubDate></item><item><title>CVE-2023-51392 | Silicon Labs EFR32xxx parts with classic key storage do not use hardware accelerated AES-CCM</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51392</link><description>Ember ZNet between v7.2.0 and v7.4.0 used software AES-CCM instead of integrated hardware cryptographic accelerators, potentially increasing risk of electromagnetic and differential power analysis sidechannel attacks.</description><pubDate>Fri, 23 Feb 2024 16:20:21 +0000</pubDate></item><item><title>CVE-2024-1824 | CodeAstro House Rental Management System signing.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1824</link><description>A vulnerability, which was classified as critical, has been found in CodeAstro House Rental Management System 1.0. Affected by this issue is some unknown functionality of the file signing.php. The manipulation of the argument uname/password leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-254612.</description><pubDate>Fri, 23 Feb 2024 16:20:22 +0000</pubDate></item><item><title>CVE-2024-26150 | `@backstage/backend-common` vulnerable to path traversal through symlinks</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26150</link><description>`@backstage/backend-common` is a common functionality library for backends for Backstage, an open platform for building developer portals. In `@backstage/backend-common` prior to versions 0.21.1, 0.20.2, and 0.19.10, paths checks with the `resolveSafeChildPath` utility were not exhaustive enough, leading to risk of path traversal vulnerabilities if symlinks can be injected by attackers. This issue is patched in `@backstage/backend-common` versions 0.21.1, 0.20.2, and 0.19.10.</description><pubDate>Fri, 23 Feb 2024 15:53:58 +0000</pubDate></item><item><title>CVE-2024-1822 | PHPGurukul Tourism Management System user-bookings.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1822</link><description>A vulnerability classified as problematic has been found in PHPGurukul Tourism Management System 1.0. Affected is an unknown function of the file user-bookings.php. The manipulation of the argument Full Name leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-254610 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 15:40:32 +0000</pubDate></item><item><title>CVE-2024-1823 | CodeAstro Simple Voting System Backend users.php access control</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1823</link><description>A vulnerability classified as critical was found in CodeAstro Simple Voting System 1.0. Affected by this vulnerability is an unknown functionality of the file users.php of the component Backend. The manipulation leads to improper access controls. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254611.</description><pubDate>Fri, 23 Feb 2024 15:40:32 +0000</pubDate></item><item><title>CVE-2024-1820 | code-projects Crime Reporting System inchargelogin.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1820</link><description>A vulnerability was found in code-projects Crime Reporting System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file inchargelogin.php. The manipulation of the argument email/password leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-254608.</description><pubDate>Fri, 23 Feb 2024 15:26:16 +0000</pubDate></item><item><title>CVE-2024-1821 | code-projects Crime Reporting System police_add.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1821</link><description>A vulnerability was found in code-projects Crime Reporting System 1.0. It has been rated as critical. This issue affects some unknown processing of the file police_add.php. The manipulation of the argument police_name/police_id/police_spec/password leads to sql injection. The exploit has been disclosed to the public and may be used. The identifier VDB-254609 was assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 15:26:16 +0000</pubDate></item><item><title>CVE-2024-25629 | c-ares out of bounds read in ares__read_line()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25629</link><description>c-ares is a C library for asynchronous DNS requests. `ares__read_line()` is used to parse local configuration files such as `/etc/resolv.conf`, `/etc/nsswitch.conf`, the `HOSTALIASES` file, and if using a c-ares version prior to 1.27.0, the `/etc/hosts` file. If any of these configuration files has an embedded `NULL` character as the first character in a new line, it can lead to attempting to read memory prior to the start of the given buffer which may result in a crash. This issue is fixed in c-ares 1.27.0. No known workarounds exist.</description><pubDate>Fri, 23 Feb 2024 14:58:36 +0000</pubDate></item><item><title>CVE-2023-52453 | hisi_acc_vfio_pci: Update migration data pointer correctly on saving/resume</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52453</link><description>In the Linux kernel, the following vulnerability has been resolved:

hisi_acc_vfio_pci: Update migration data pointer correctly on saving/resume

When the optional PRE_COPY support was added to speed up the device
compatibility check, it failed to update the saving/resuming data
pointers based on the fd offset. This results in migration data
corruption and when the device gets started on the destination the
following error is reported in some cases,

[  478.907684] arm-smmu-v3 arm-smmu-v3.2.auto: event 0x10 received:
[  478.913691] arm-smmu-v3 arm-smmu-v3.2.auto:  0x0000310200000010
[  478.919603] arm-smmu-v3 arm-smmu-v3.2.auto:  0x000002088000007f
[  478.925515] arm-smmu-v3 arm-smmu-v3.2.auto:  0x0000000000000000
[  478.931425] arm-smmu-v3 arm-smmu-v3.2.auto:  0x0000000000000000
[  478.947552] hisi_zip 0000:31:00.0: qm_axi_rresp [error status=0x1] found
[  478.955930] hisi_zip 0000:31:00.0: qm_db_timeout [error status=0x400] found
[  478.955944] hisi_zip 0000:31:00.0: qm sq doorbell timeout in function 2</description><pubDate>Fri, 23 Feb 2024 14:51:43 +0000</pubDate></item><item><title>CVE-2023-52454 | nvmet-tcp: Fix a kernel panic when host sends an invalid H2C PDU length</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52454</link><description>In the Linux kernel, the following vulnerability has been resolved:

nvmet-tcp: Fix a kernel panic when host sends an invalid H2C PDU length

If the host sends an H2CData command with an invalid DATAL,
the kernel may crash in nvmet_tcp_build_pdu_iovec().

Unable to handle kernel NULL pointer dereference at
virtual address 0000000000000000
lr : nvmet_tcp_io_work+0x6ac/0x718 [nvmet_tcp]
Call trace:
  process_one_work+0x174/0x3c8
  worker_thread+0x2d0/0x3e8
  kthread+0x104/0x110

Fix the bug by raising a fatal error if DATAL isn't coherent
with the packet size.
Also, the PDU length should never exceed the MAXH2CDATA parameter which
has been communicated to the host in nvmet_tcp_handle_icreq().</description><pubDate>Fri, 23 Feb 2024 14:51:43 +0000</pubDate></item><item><title>CVE-2023-52455 | iommu: Don&amp;#x27;t reserve 0-length IOVA region</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52455</link><description>In the Linux kernel, the following vulnerability has been resolved:

iommu: Don't reserve 0-length IOVA region

When the bootloader/firmware doesn't setup the framebuffers, their
address and size are 0 in "iommu-addresses" property. If IOVA region is
reserved with 0 length, then it ends up corrupting the IOVA rbtree with
an entry which has pfn_hi &lt; pfn_lo.
If we intend to use display driver in kernel without framebuffer then
it's causing the display IOMMU mappings to fail as entire valid IOVA
space is reserved when address and length are passed as 0.
An ideal solution would be firmware removing the "iommu-addresses"
property and corresponding "memory-region" if display is not present.
But the kernel should be able to handle this by checking for size of
IOVA region and skipping the IOVA reservation if size is 0. Also, add
a warning if firmware is requesting 0-length IOVA region reservation.</description><pubDate>Fri, 23 Feb 2024 14:51:44 +0000</pubDate></item><item><title>CVE-2023-52456 | serial: imx: fix tx statemachine deadlock</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52456</link><description>In the Linux kernel, the following vulnerability has been resolved:

serial: imx: fix tx statemachine deadlock

When using the serial port as RS485 port, the tx statemachine is used to
control the RTS pin to drive the RS485 transceiver TX_EN pin. When the
TTY port is closed in the middle of a transmission (for instance during
userland application crash), imx_uart_shutdown disables the interface
and disables the Transmission Complete interrupt. afer that,
imx_uart_stop_tx bails on an incomplete transmission, to be retriggered
by the TC interrupt. This interrupt is disabled and therefore the tx
statemachine never transitions out of SEND. The statemachine is in
deadlock now, and the TX_EN remains low, making the interface useless.

imx_uart_stop_tx now checks for incomplete transmission AND whether TC
interrupts are enabled before bailing to be retriggered. This makes sure
the state machine handling is reached, and is properly set to
WAIT_AFTER_SEND.</description><pubDate>Fri, 23 Feb 2024 14:51:44 +0000</pubDate></item><item><title>CVE-2023-52457 | serial: 8250: omap: Don&amp;#x27;t skip resource freeing if pm_runtime_resume_and_get() failed</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52457</link><description>In the Linux kernel, the following vulnerability has been resolved:

serial: 8250: omap: Don't skip resource freeing if pm_runtime_resume_and_get() failed

Returning an error code from .remove() makes the driver core emit the
little helpful error message:

	remove callback returned a non-zero value. This will be ignored.

and then remove the device anyhow. So all resources that were not freed
are leaked in this case. Skipping serial8250_unregister_port() has the
potential to keep enough of the UART around to trigger a use-after-free.

So replace the error return (and with it the little helpful error
message) by a more useful error message and continue to cleanup.</description><pubDate>Fri, 23 Feb 2024 14:51:45 +0000</pubDate></item><item><title>CVE-2023-52458 | block: add check that partition length needs to be aligned with block size</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52458</link><description>In the Linux kernel, the following vulnerability has been resolved:

block: add check that partition length needs to be aligned with block size

Before calling add partition or resize partition, there is no check
on whether the length is aligned with the logical block size.
If the logical block size of the disk is larger than 512 bytes,
then the partition size maybe not the multiple of the logical block size,
and when the last sector is read, bio_truncate() will adjust the bio size,
resulting in an IO error if the size of the read command is smaller than
the logical block size.If integrity data is supported, this will also
result in a null pointer dereference when calling bio_integrity_free.</description><pubDate>Fri, 23 Feb 2024 14:51:45 +0000</pubDate></item><item><title>CVE-2023-52459 | media: v4l: async: Fix duplicated list deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52459</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: v4l: async: Fix duplicated list deletion

The list deletion call dropped here is already called from the
helper function in the line before. Having a second list_del()
call results in either a warning (with CONFIG_DEBUG_LIST=y):

list_del corruption, c46c8198-&gt;next is LIST_POISON1 (00000100)

If CONFIG_DEBUG_LIST is disabled the operation results in a
kernel error due to NULL pointer dereference.</description><pubDate>Fri, 23 Feb 2024 14:51:45 +0000</pubDate></item><item><title>CVE-2023-52460 | drm/amd/display: Fix NULL pointer dereference at hibernate</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52460</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix NULL pointer dereference at hibernate

During hibernate sequence the source context might not have a clk_mgr.
So don't use it to look for DML2 support.</description><pubDate>Fri, 23 Feb 2024 14:51:46 +0000</pubDate></item><item><title>CVE-2023-52461 | drm/sched: Fix bounds limiting when given a malformed entity</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52461</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/sched: Fix bounds limiting when given a malformed entity

If we're given a malformed entity in drm_sched_entity_init()--shouldn't
happen, but we verify--with out-of-bounds priority value, we set it to an
allowed value. Fix the expression which sets this limit.</description><pubDate>Fri, 23 Feb 2024 14:51:46 +0000</pubDate></item><item><title>CVE-2023-52462 | bpf: fix check for attempt to corrupt spilled pointer</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52462</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: fix check for attempt to corrupt spilled pointer

When register is spilled onto a stack as a 1/2/4-byte register, we set
slot_type[BPF_REG_SIZE - 1] (plus potentially few more below it,
depending on actual spill size). So to check if some stack slot has
spilled register we need to consult slot_type[7], not slot_type[0].

To avoid the need to remember and double-check this in the future, just
use is_spilled_reg() helper.</description><pubDate>Fri, 23 Feb 2024 14:51:47 +0000</pubDate></item><item><title>CVE-2023-52463 | efivarfs: force RO when remounting if SetVariable is not supported</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52463</link><description>In the Linux kernel, the following vulnerability has been resolved:

efivarfs: force RO when remounting if SetVariable is not supported

If SetVariable at runtime is not supported by the firmware we never assign
a callback for that function. At the same time mount the efivarfs as
RO so no one can call that.  However, we never check the permission flags
when someone remounts the filesystem as RW. As a result this leads to a
crash looking like this:

$ mount -o remount,rw /sys/firmware/efi/efivars
$ efi-updatevar -f PK.auth PK

[  303.279166] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
[  303.280482] Mem abort info:
[  303.280854]   ESR = 0x0000000086000004
[  303.281338]   EC = 0x21: IABT (current EL), IL = 32 bits
[  303.282016]   SET = 0, FnV = 0
[  303.282414]   EA = 0, S1PTW = 0
[  303.282821]   FSC = 0x04: level 0 translation fault
[  303.283771] user pgtable: 4k pages, 48-bit VAs, pgdp=000000004258c000
[  303.284913] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000
[  303.286076] Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP
[  303.286936] Modules linked in: qrtr tpm_tis tpm_tis_core crct10dif_ce arm_smccc_trng rng_core drm fuse ip_tables x_tables ipv6
[  303.288586] CPU: 1 PID: 755 Comm: efi-updatevar Not tainted 6.3.0-rc1-00108-gc7d0c4695c68 #1
[  303.289748] Hardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.04-00627-g88336918701d 04/01/2023
[  303.291150] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[  303.292123] pc : 0x0
[  303.292443] lr : efivar_set_variable_locked+0x74/0xec
[  303.293156] sp : ffff800008673c10
[  303.293619] x29: ffff800008673c10 x28: ffff0000037e8000 x27: 0000000000000000
[  303.294592] x26: 0000000000000800 x25: ffff000002467400 x24: 0000000000000027
[  303.295572] x23: ffffd49ea9832000 x22: ffff0000020c9800 x21: ffff000002467000
[  303.296566] x20: 0000000000000001 x19: 00000000000007fc x18: 0000000000000000
[  303.297531] x17: 0000000000000000 x16: 0000000000000000 x15: 0000aaaac807ab54
[  303.298495] x14: ed37489f673633c0 x13: 71c45c606de13f80 x12: 47464259e219acf4
[  303.299453] x11: ffff000002af7b01 x10: 0000000000000003 x9 : 0000000000000002
[  303.300431] x8 : 0000000000000010 x7 : ffffd49ea8973230 x6 : 0000000000a85201
[  303.301412] x5 : 0000000000000000 x4 : ffff0000020c9800 x3 : 00000000000007fc
[  303.302370] x2 : 0000000000000027 x1 : ffff000002467400 x0 : ffff000002467000
[  303.303341] Call trace:
[  303.303679]  0x0
[  303.303938]  efivar_entry_set_get_size+0x98/0x16c
[  303.304585]  efivarfs_file_write+0xd0/0x1a4
[  303.305148]  vfs_write+0xc4/0x2e4
[  303.305601]  ksys_write+0x70/0x104
[  303.306073]  __arm64_sys_write+0x1c/0x28
[  303.306622]  invoke_syscall+0x48/0x114
[  303.307156]  el0_svc_common.constprop.0+0x44/0xec
[  303.307803]  do_el0_svc+0x38/0x98
[  303.308268]  el0_svc+0x2c/0x84
[  303.308702]  el0t_64_sync_handler+0xf4/0x120
[  303.309293]  el0t_64_sync+0x190/0x194
[  303.309794] Code: ???????? ???????? ???????? ???????? (????????)
[  303.310612] ---[ end trace 0000000000000000 ]---

Fix this by adding a .reconfigure() function to the fs operations which
we can use to check the requested flags and deny anything that's not RO
if the firmware doesn't implement SetVariable at runtime.</description><pubDate>Fri, 23 Feb 2024 14:51:47 +0000</pubDate></item><item><title>CVE-2023-52464 | EDAC/thunderx: Fix possible out-of-bounds string access</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52464</link><description>In the Linux kernel, the following vulnerability has been resolved:

EDAC/thunderx: Fix possible out-of-bounds string access

Enabling -Wstringop-overflow globally exposes a warning for a common bug
in the usage of strncat():

  drivers/edac/thunderx_edac.c: In function 'thunderx_ocx_com_threaded_isr':
  drivers/edac/thunderx_edac.c:1136:17: error: 'strncat' specified bound 1024 equals destination size [-Werror=stringop-overflow=]
   1136 |                 strncat(msg, other, OCX_MESSAGE_SIZE);
        |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   ...
   1145 |                                 strncat(msg, other, OCX_MESSAGE_SIZE);
   ...
   1150 |                                 strncat(msg, other, OCX_MESSAGE_SIZE);

   ...

Apparently the author of this driver expected strncat() to behave the
way that strlcat() does, which uses the size of the destination buffer
as its third argument rather than the length of the source buffer. The
result is that there is no check on the size of the allocated buffer.

Change it to strlcat().

  [ bp: Trim compiler output, fixup commit message. ]</description><pubDate>Fri, 23 Feb 2024 14:51:47 +0000</pubDate></item><item><title>CVE-2024-26595 | mlxsw: spectrum_acl_tcam: Fix NULL pointer dereference in error path</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26595</link><description>In the Linux kernel, the following vulnerability has been resolved:

mlxsw: spectrum_acl_tcam: Fix NULL pointer dereference in error path

When calling mlxsw_sp_acl_tcam_region_destroy() from an error path after
failing to attach the region to an ACL group, we hit a NULL pointer
dereference upon 'region-&gt;group-&gt;tcam' [1].

Fix by retrieving the 'tcam' pointer using mlxsw_sp_acl_to_tcam().

[1]
BUG: kernel NULL pointer dereference, address: 0000000000000000
[...]
RIP: 0010:mlxsw_sp_acl_tcam_region_destroy+0xa0/0xd0
[...]
Call Trace:
 mlxsw_sp_acl_tcam_vchunk_get+0x88b/0xa20
 mlxsw_sp_acl_tcam_ventry_add+0x25/0xe0
 mlxsw_sp_acl_rule_add+0x47/0x240
 mlxsw_sp_flower_replace+0x1a9/0x1d0
 tc_setup_cb_add+0xdc/0x1c0
 fl_hw_replace_filter+0x146/0x1f0
 fl_change+0xc17/0x1360
 tc_new_tfilter+0x472/0xb90
 rtnetlink_rcv_msg+0x313/0x3b0
 netlink_rcv_skb+0x58/0x100
 netlink_unicast+0x244/0x390
 netlink_sendmsg+0x1e4/0x440
 ____sys_sendmsg+0x164/0x260
 ___sys_sendmsg+0x9a/0xe0
 __sys_sendmsg+0x7a/0xc0
 do_syscall_64+0x40/0xe0
 entry_SYSCALL_64_after_hwframe+0x63/0x6b</description><pubDate>Fri, 23 Feb 2024 14:51:48 +0000</pubDate></item><item><title>CVE-2024-26596 | net: dsa: fix netdev_priv() dereference before check on non-DSA netdevice events</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26596</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: dsa: fix netdev_priv() dereference before check on non-DSA netdevice events

After the blamed commit, we started doing this dereference for every
NETDEV_CHANGEUPPER and NETDEV_PRECHANGEUPPER event in the system.

static inline struct dsa_port *dsa_user_to_port(const struct net_device *dev)
{
	struct dsa_user_priv *p = netdev_priv(dev);

	return p-&gt;dp;
}

Which is obviously bogus, because not all net_devices have a netdev_priv()
of type struct dsa_user_priv. But struct dsa_user_priv is fairly small,
and p-&gt;dp means dereferencing 8 bytes starting with offset 16. Most
drivers allocate that much private memory anyway, making our access not
fault, and we discard the bogus data quickly afterwards, so this wasn't
caught.

But the dummy interface is somewhat special in that it calls
alloc_netdev() with a priv size of 0. So every netdev_priv() dereference
is invalid, and we get this when we emit a NETDEV_PRECHANGEUPPER event
with a VLAN as its new upper:

$ ip link add dummy1 type dummy
$ ip link add link dummy1 name dummy1.100 type vlan id 100
[   43.309174] ==================================================================
[   43.316456] BUG: KASAN: slab-out-of-bounds in dsa_user_prechangeupper+0x30/0xe8
[   43.323835] Read of size 8 at addr ffff3f86481d2990 by task ip/374
[   43.330058]
[   43.342436] Call trace:
[   43.366542]  dsa_user_prechangeupper+0x30/0xe8
[   43.371024]  dsa_user_netdevice_event+0xb38/0xee8
[   43.375768]  notifier_call_chain+0xa4/0x210
[   43.379985]  raw_notifier_call_chain+0x24/0x38
[   43.384464]  __netdev_upper_dev_link+0x3ec/0x5d8
[   43.389120]  netdev_upper_dev_link+0x70/0xa8
[   43.393424]  register_vlan_dev+0x1bc/0x310
[   43.397554]  vlan_newlink+0x210/0x248
[   43.401247]  rtnl_newlink+0x9fc/0xe30
[   43.404942]  rtnetlink_rcv_msg+0x378/0x580

Avoid the kernel oops by dereferencing after the type check, as customary.</description><pubDate>Fri, 23 Feb 2024 14:51:48 +0000</pubDate></item><item><title>CVE-2024-26597 | net: qualcomm: rmnet: fix global oob in rmnet_policy</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26597</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: qualcomm: rmnet: fix global oob in rmnet_policy

The variable rmnet_link_ops assign a *bigger* maxtype which leads to a
global out-of-bounds read when parsing the netlink attributes. See bug
trace below:

==================================================================
BUG: KASAN: global-out-of-bounds in validate_nla lib/nlattr.c:386 [inline]
BUG: KASAN: global-out-of-bounds in __nla_validate_parse+0x24af/0x2750 lib/nlattr.c:600
Read of size 1 at addr ffffffff92c438d0 by task syz-executor.6/84207

CPU: 0 PID: 84207 Comm: syz-executor.6 Tainted: G                 N 6.1.0 #3
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
Call Trace:
 &lt;TASK&gt;
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x8b/0xb3 lib/dump_stack.c:106
 print_address_description mm/kasan/report.c:284 [inline]
 print_report+0x172/0x475 mm/kasan/report.c:395
 kasan_report+0xbb/0x1c0 mm/kasan/report.c:495
 validate_nla lib/nlattr.c:386 [inline]
 __nla_validate_parse+0x24af/0x2750 lib/nlattr.c:600
 __nla_parse+0x3e/0x50 lib/nlattr.c:697
 nla_parse_nested_deprecated include/net/netlink.h:1248 [inline]
 __rtnl_newlink+0x50a/0x1880 net/core/rtnetlink.c:3485
 rtnl_newlink+0x64/0xa0 net/core/rtnetlink.c:3594
 rtnetlink_rcv_msg+0x43c/0xd70 net/core/rtnetlink.c:6091
 netlink_rcv_skb+0x14f/0x410 net/netlink/af_netlink.c:2540
 netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]
 netlink_unicast+0x54e/0x800 net/netlink/af_netlink.c:1345
 netlink_sendmsg+0x930/0xe50 net/netlink/af_netlink.c:1921
 sock_sendmsg_nosec net/socket.c:714 [inline]
 sock_sendmsg+0x154/0x190 net/socket.c:734
 ____sys_sendmsg+0x6df/0x840 net/socket.c:2482
 ___sys_sendmsg+0x110/0x1b0 net/socket.c:2536
 __sys_sendmsg+0xf3/0x1c0 net/socket.c:2565
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3b/0x90 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fdcf2072359
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fdcf13e3168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: ffffffffffffffda RBX: 00007fdcf219ff80 RCX: 00007fdcf2072359
RDX: 0000000000000000 RSI: 0000000020000200 RDI: 0000000000000003
RBP: 00007fdcf20bd493 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007fffbb8d7bdf R14: 00007fdcf13e3300 R15: 0000000000022000
 &lt;/TASK&gt;

The buggy address belongs to the variable:
 rmnet_policy+0x30/0xe0

The buggy address belongs to the physical page:
page:0000000065bdeb3c refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x155243
flags: 0x200000000001000(reserved|node=0|zone=2)
raw: 0200000000001000 ffffea00055490c8 ffffea00055490c8 0000000000000000
raw: 0000000000000000 0000000000000000 00000001ffffffff 0000000000000000
page dumped because: kasan: bad access detected

Memory state around the buggy address:
 ffffffff92c43780: f9 f9 f9 f9 00 00 00 02 f9 f9 f9 f9 00 00 00 07
 ffffffff92c43800: f9 f9 f9 f9 00 00 00 05 f9 f9 f9 f9 06 f9 f9 f9
&gt;ffffffff92c43880: f9 f9 f9 f9 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9
                                                 ^
 ffffffff92c43900: 00 00 00 00 00 00 00 00 07 f9 f9 f9 f9 f9 f9 f9
 ffffffff92c43980: 00 00 00 07 f9 f9 f9 f9 00 00 00 05 f9 f9 f9 f9

According to the comment of `nla_parse_nested_deprecated`, the maxtype
should be len(destination array) - 1. Hence use `IFLA_RMNET_MAX` here.</description><pubDate>Fri, 23 Feb 2024 14:51:49 +0000</pubDate></item><item><title>CVE-2024-26598 | KVM: arm64: vgic-its: Avoid potential UAF in LPI translation cache</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26598</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: arm64: vgic-its: Avoid potential UAF in LPI translation cache

There is a potential UAF scenario in the case of an LPI translation
cache hit racing with an operation that invalidates the cache, such
as a DISCARD ITS command. The root of the problem is that
vgic_its_check_cache() does not elevate the refcount on the vgic_irq
before dropping the lock that serializes refcount changes.

Have vgic_its_check_cache() raise the refcount on the returned vgic_irq
and add the corresponding decrement after queueing the interrupt.</description><pubDate>Fri, 23 Feb 2024 14:51:49 +0000</pubDate></item><item><title>CVE-2024-26599 | pwm: Fix out-of-bounds access in of_pwm_single_xlate()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26599</link><description>In the Linux kernel, the following vulnerability has been resolved:

pwm: Fix out-of-bounds access in of_pwm_single_xlate()

With args-&gt;args_count == 2 args-&gt;args[2] is not defined. Actually the
flags are contained in args-&gt;args[1].</description><pubDate>Fri, 23 Feb 2024 14:51:50 +0000</pubDate></item><item><title>CVE-2024-1818 | CodeAstro Membership Management System Logo unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1818</link><description>A vulnerability was found in CodeAstro Membership Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file /uploads/ of the component Logo Handler. The manipulation leads to unrestricted upload. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-254606 is the identifier assigned to this vulnerability.</description><pubDate>Fri, 23 Feb 2024 14:37:34 +0000</pubDate></item><item><title>CVE-2024-1819 | CodeAstro Membership Management System Add Members Tab unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1819</link><description>A vulnerability was found in CodeAstro Membership Management System 1.0. It has been classified as critical. This affects an unknown part of the component Add Members Tab. The manipulation of the argument Member Photo leads to unrestricted upload. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254607.</description><pubDate>Fri, 23 Feb 2024 14:37:34 +0000</pubDate></item><item><title>CVE-2024-22776 | Wallos 0.9 is vulnerable to Cross Site Scripting (XSS) in all text-based input fields without proper validation, excluding those requiring s...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22776</link><description>Wallos 0.9 is vulnerable to Cross Site Scripting (XSS) in all text-based input fields without proper validation, excluding those requiring specific formats like date fields.</description><pubDate>Fri, 23 Feb 2024 14:23:19 +0000</pubDate></item><item><title>CVE-2024-1817 | Demososo DM Enterprise Website Building System Cookie indexDM_load.php dmlogin improper authentication</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1817</link><description>A vulnerability has been found in Demososo DM Enterprise Website Building System up to 2022.8 and classified as critical. Affected by this vulnerability is the function dmlogin of the file indexDM_load.php of the component Cookie Handler. The manipulation of the argument is_admin with the input y leads to improper authentication. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-254605 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Fri, 23 Feb 2024 14:08:53 +0000</pubDate></item><item><title>CVE-2024-26594 | ksmbd: validate mech token in session setup</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26594</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: validate mech token in session setup

If client send invalid mech token in session setup request, ksmbd
validate and make the error if it is invalid.</description><pubDate>Fri, 23 Feb 2024 13:35:27 +0000</pubDate></item><item><title>CVE-2024-25928 | WordPress Sitepact&amp;#x27;s Contact Form 7 Extension For Klaviyo Plugin &amp;lt;= 1.0.5 is vulnerable to SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25928</link><description>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Sitepact.This issue affects Sitepact: from n/a through 1.0.5.</description><pubDate>Fri, 23 Feb 2024 12:00:00 +0000</pubDate></item><item><title>CVE-2024-25915 | WordPress Pexels: Free Stock Photos Plugin &amp;lt;= 1.2.2 is vulnerable to Server Side Request Forgery (SSRF)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25915</link><description>Server-Side Request Forgery (SSRF) vulnerability in Raaj Trambadia Pexels: Free Stock Photos.This issue affects Pexels: Free Stock Photos: from n/a through 1.2.2.</description><pubDate>Fri, 23 Feb 2024 11:53:17 +0000</pubDate></item><item><title>CVE-2023-24416 | WordPress All In One Favicon Plugin &amp;lt;= 4.7 is vulnerable to Arbitrary File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2023-24416</link><description>Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in Arne Franken All In One Favicon.This issue affects All In One Favicon: from n/a through 4.7.</description><pubDate>Fri, 23 Feb 2024 11:39:08 +0000</pubDate></item><item><title>CVE-2024-1360 | The Colibri WP theme for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.94. This is due to ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1360</link><description>The Colibri WP theme for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.94. This is due to missing or incorrect nonce validation on the colibriwp_install_plugin() function. This makes it possible for unauthenticated attackers to install recommended plugins via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 23 Feb 2024 11:08:36 +0000</pubDate></item><item><title>CVE-2024-1361 | The Colibri Page Builder plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.253. Thi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1361</link><description>The Colibri Page Builder plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.253. This is due to missing or incorrect nonce validation on the apiCall() function. This makes it possible for unauthenticated attackers to call a limited set of functions that can be used to import images, delete posts, or save theme data via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 23 Feb 2024 11:08:37 +0000</pubDate></item><item><title>CVE-2024-1362 | The Colibri Page Builder plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.253. Thi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1362</link><description>The Colibri Page Builder plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.253. This is due to missing or incorrect nonce validation on the cp_shortcode_refresh() function. This makes it possible for unauthenticated attackers to execute arbitrary shortcodes via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 23 Feb 2024 11:08:37 +0000</pubDate></item><item><title>CVE-2024-1590 | The Page Builder: Pagelayer – Drag and Drop website builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1590</link><description>The Page Builder: Pagelayer – Drag and Drop website builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Button Widget in all versions up to, and including, 1.8.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 23 Feb 2024 09:34:48 +0000</pubDate></item><item><title>CVE-2023-4826 | Socialdriver &amp;lt; 2024 - Prototype Pollution to XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2023-4826</link><description>The SocialDriver WordPress theme before version 2024 has a prototype pollution vulnerability that could allow an attacker to inject arbitrary properties resulting in a cross-site scripting (XSS) attack.</description><pubDate>Fri, 23 Feb 2024 09:20:27 +0000</pubDate></item><item><title>CVE-2024-26593 | i2c: i801: Fix block process call transactions</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26593</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: i801: Fix block process call transactions

According to the Intel datasheets, software must reset the block
buffer index twice for block process call transactions: once before
writing the outgoing data to the buffer, and once again before
reading the incoming data from the buffer.

The driver is currently missing the second reset, causing the wrong
portion of the block buffer to be read.</description><pubDate>Fri, 23 Feb 2024 09:20:27 +0000</pubDate></item><item><title>CVE-2024-0563 | Denial of service condition in M-Files Server</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0563</link><description>Denial of service condition in M-Files Server in versions before 24.2 (excluding 23.2 SR7 and 23.8 SR5) allows anonymous user to cause denial of service against other anonymous users.</description><pubDate>Fri, 23 Feb 2024 08:56:47 +0000</pubDate></item><item><title>CVE-2023-37540 | HCL Sametime Chat is affected by an unimplemented feature in the UI </title><link>https://www.cve.org/CVERecord?id=CVE-2023-37540</link><description>Sametime Connect desktop chat client includes, but does not use or require, the use of an Eclipse feature called Secure Storage. Using this Eclipse feature to store sensitive data can lead to exposure of that data.</description><pubDate>Fri, 23 Feb 2024 07:13:24 +0000</pubDate></item><item><title>CVE-2024-1776 | The Admin side data storage for Contact Form 7 plugin for WordPress is vulnerable to SQL Injection via the 'form-id' parameter in all versio...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1776</link><description>The Admin side data storage for Contact Form 7 plugin for WordPress is vulnerable to SQL Injection via the 'form-id' parameter in all versions up to, and including, 1.1.1 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with administrator-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Fri, 23 Feb 2024 06:51:44 +0000</pubDate></item><item><title>CVE-2024-1777 | The Admin side data storage for Contact Form 7 plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and i...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1777</link><description>The Admin side data storage for Contact Form 7 plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.1.1. This is due to missing or incorrect nonce validation on the settings update function. This makes it possible for unauthenticated attackers to update the plugin's settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Fri, 23 Feb 2024 06:51:45 +0000</pubDate></item><item><title>CVE-2024-1778 | The Admin side data storage for Contact Form 7 plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capa...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1778</link><description>The Admin side data storage for Contact Form 7 plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the zt_dcfcf_change_bookmark() function in all versions up to, and including, 1.1.1. This makes it possible for unauthenticated attackers to alter bookmark statuses.</description><pubDate>Fri, 23 Feb 2024 06:51:45 +0000</pubDate></item><item><title>CVE-2024-1779 | The Admin side data storage for Contact Form 7 plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capa...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1779</link><description>The Admin side data storage for Contact Form 7 plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the zt_dcfcf_change_status() function in all versions up to, and including, 1.1.1. This makes it possible for unauthenticated attackers to alter the message read status of messages.</description><pubDate>Fri, 23 Feb 2024 06:51:45 +0000</pubDate></item><item><title>CVE-2024-22243 | CVE-2024-22243: Spring Framework URL Parsing with Host Validation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22243</link><description>Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.</description><pubDate>Fri, 23 Feb 2024 05:11:36 +0000</pubDate></item><item><title>CVE-2024-1784 | Limbas main_admin.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1784</link><description>A vulnerability classified as problematic was found in Limbas 5.2.14. Affected by this vulnerability is an unknown functionality of the file main_admin.php. The manipulation of the argument tab_group leads to sql injection. The complexity of an attack is rather high. The exploitation appears to be difficult. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254575. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Fri, 23 Feb 2024 01:07:48 +0000</pubDate></item><item><title>CVE-2024-1786 | D-Link DIR-600M C1 Telnet Service buffer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1786</link><description>** UNSUPPORTED WHEN ASSIGNED ** A vulnerability, which was classified as critical, has been found in D-Link DIR-600M C1 3.08. Affected by this issue is some unknown functionality of the component Telnet Service. The manipulation of the argument username leads to buffer overflow. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-254576. NOTE: This vulnerability only affects products that are no longer supported by the maintainer. NOTE: Vendor was contacted early and confirmed immediately that the product is end-of-life. It should be retired and replaced.</description><pubDate>Fri, 23 Feb 2024 01:07:48 +0000</pubDate></item><item><title>CVE-2024-1683 | DLL Injection in Tenable Identity Exposure Secure Relay</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1683</link><description>A DLL injection vulnerability exists where an authenticated, low-privileged local attacker could modify application files on the TIE Secure Relay host, which could allow for overriding of the configuration and running of new Secure Relay services.</description><pubDate>Fri, 23 Feb 2024 01:07:49 +0000</pubDate></item><item><title>CVE-2024-1781 | Totolink X6000R AX3000 shttpd cstecgi.cgi setWizardCfg command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1781</link><description>A vulnerability was found in Totolink X6000R AX3000 9.4.0cu.852_20230719. It has been rated as critical. This issue affects the function setWizardCfg of the file /cgi-bin/cstecgi.cgi of the component shttpd. The manipulation leads to command injection. The exploit has been disclosed to the public and may be used. The identifier VDB-254573 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Fri, 23 Feb 2024 01:07:50 +0000</pubDate></item><item><title>CVE-2024-1783 | Totolink LR1200GB Web Interface cstecgi.cgi loginAuth stack-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1783</link><description>A vulnerability classified as critical has been found in Totolink LR1200GB 9.1.0u.6619_B20230130/9.3.5u.6698_B20230810. Affected is the function loginAuth of the file /cgi-bin/cstecgi.cgi of the component Web Interface. The manipulation of the argument http_host leads to stack-based buffer overflow. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-254574 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Fri, 23 Feb 2024 01:07:50 +0000</pubDate></item></channel></rss>