<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Tue, 27 Feb 2024 15:54:54 +0000</lastBuildDate><item><title>CVE-2024-26144 | Possible Sensitive Session Information Leak in Active Storage</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26144</link><description>Rails is a web-application framework. Starting with version 5.2.0, there is a possible sensitive session information leak in Active Storage. By default, Active Storage sends a Set-Cookie header along with the user's session cookie when serving blobs. It also sets Cache-Control to public. Certain proxies may cache the Set-Cookie, leading to an information leak. The vulnerability is fixed in 7.0.8.1 and 6.1.7.7.</description><pubDate>Tue, 27 Feb 2024 15:54:55 +0000</pubDate></item><item><title>CVE-2024-1403 | Authentication Bypass in OpenEdge Authentication Gateway and AdminServer</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1403</link><description>In OpenEdge Authentication Gateway and AdminServer prior to 11.7.19, 12.2.14, 12.8.1 on all platforms supported by the OpenEdge product, an authentication bypass vulnerability has been identified.Â  The
vulnerability is a bypass to authentication based on a failure to properly
handle username and password.  Certain unexpected
content passed into the credentials can lead to unauthorized access without proper
authentication.</description><pubDate>Tue, 27 Feb 2024 15:48:16 +0000</pubDate></item><item><title>CVE-2024-25398 | In Srelay (the SOCKS proxy and Relay) v.0.4.8p3, a specially crafted network payload can trigger a denial of service condition and disrupt t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25398</link><description>In Srelay (the SOCKS proxy and Relay) v.0.4.8p3, a specially crafted network payload can trigger a denial of service condition and disrupt the service.</description><pubDate>Tue, 27 Feb 2024 15:48:16 +0000</pubDate></item><item><title>CVE-2024-26143 | Rails Possible XSS Vulnerability in Action Controller</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26143</link><description>Rails is a web-application framework. There is a possible XSS vulnerability when using the translation helpers in Action Controller. Applications using translation methods like translate, or t on a controller, with a key ending in "_html", a :default key which contains untrusted user input, and the resulting string is used in a view, may be susceptible to an XSS vulnerability. The vulnerability is fixed in 7.1.3.1 and 7.0.8.1.</description><pubDate>Tue, 27 Feb 2024 15:41:09 +0000</pubDate></item><item><title>CVE-2024-27508 | Atheme 7.2.12 contains a memory leak vulnerability in /atheme/src/crypto-benchmark/main.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27508</link><description>Atheme 7.2.12 contains a memory leak vulnerability in /atheme/src/crypto-benchmark/main.c.</description><pubDate>Tue, 27 Feb 2024 15:41:09 +0000</pubDate></item><item><title>CVE-2024-1922 | SourceCodester Online Job Portal Manage Job Page ManageJob.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1922</link><description>A vulnerability has been found in SourceCodester Online Job Portal 1.0 and classified as problematic. Affected by this vulnerability is an unknown functionality of the file /Employer/ManageJob.php of the component Manage Job Page. The manipulation of the argument Qualification/Description leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-254857 was assigned to this vulnerability.</description><pubDate>Tue, 27 Feb 2024 15:34:09 +0000</pubDate></item><item><title>CVE-2024-25399 | Subrion CMS 4.2.1 is vulnerable to Cross Site Scripting (XSS) via adminer.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25399</link><description>Subrion CMS 4.2.1 is vulnerable to Cross Site Scripting (XSS) via adminer.php.</description><pubDate>Tue, 27 Feb 2024 15:34:10 +0000</pubDate></item><item><title>CVE-2024-25400 | Subrion CMS 4.2.1 is vulnerable to SQL Injection via ia.core.mysqli.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25400</link><description>Subrion CMS 4.2.1 is vulnerable to SQL Injection via ia.core.mysqli.php.</description><pubDate>Tue, 27 Feb 2024 15:34:10 +0000</pubDate></item><item><title>CVE-2024-26142 | Rails possible ReDoS vulnerability in Accept header parsing in Action Dispatch</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26142</link><description>Rails is a web-application framework. Starting in version 7.1.0, there is a possible ReDoS vulnerability in the Accept header parsing routines of Action Dispatch. This vulnerability is patched in 7.1.3.1. Ruby 3.2 has mitigations for this problem, so Rails applications using Ruby 3.2 or newer are unaffected.</description><pubDate>Tue, 27 Feb 2024 15:26:44 +0000</pubDate></item><item><title>CVE-2024-26464 | net-snmp 5.9.4 contains a memory leak vulnerability in /net-snmp/apps/snmpvacm.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26464</link><description>net-snmp 5.9.4 contains a memory leak vulnerability in /net-snmp/apps/snmpvacm.c.</description><pubDate>Tue, 27 Feb 2024 15:26:44 +0000</pubDate></item><item><title>CVE-2024-25723 | ZenML Server in the ZenML machine learning package before 0.46.7 for Python allows remote privilege escalation because the /api/v1/users/{us...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25723</link><description>ZenML Server in the ZenML machine learning package before 0.46.7 for Python allows remote privilege escalation because the /api/v1/users/{user_name_or_id}/activate REST API endpoint allows access on the basis of a valid username along with a new password in the request body. These are also patched versions: 0.44.4, 0.43.1, and 0.42.2.</description><pubDate>Tue, 27 Feb 2024 15:19:29 +0000</pubDate></item><item><title>CVE-2024-27507 | libLAS 1.8.1 contains a memory leak vulnerability in /libLAS/apps/ts2las.cpp.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27507</link><description>libLAS 1.8.1 contains a memory leak vulnerability in /libLAS/apps/ts2las.cpp.</description><pubDate>Tue, 27 Feb 2024 15:19:30 +0000</pubDate></item><item><title>CVE-2024-1921 | osuuu LightPicture Setup.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1921</link><description>A vulnerability, which was classified as critical, was found in osuuu LightPicture up to 1.2.2. Affected is an unknown function of the file /app/controller/Setup.php. The manipulation leads to unrestricted upload. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-254856.</description><pubDate>Tue, 27 Feb 2024 15:03:19 +0000</pubDate></item><item><title>CVE-2024-27905 | Apache Aurora: padding oracle can allow construction an authentication cookie</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27905</link><description>** UNSUPPORTED WHEN ASSIGNED ** Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Aurora.

An endpoint exposing internals to unauthenticated users can be used as a "padding oracle" allowing an anonymous attacker to construct a valid authentication cookie. Potentially this could be combined with vulnerabilities in other components to achieve remote code execution.

As this project is retired, we do not plan to release a version that fixes this issue. Users are recommended to find an alternative or restrict access to the instance to trusted users.

NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</description><pubDate>Tue, 27 Feb 2024 14:40:41 +0000</pubDate></item><item><title>CVE-2024-0551 | Download and export of file via default user role</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0551</link><description>Enable exports of the database and associated exported information of the system via the default user role. The attacked would have to have been granted access to the system prior to the attack.

It is worth noting that the deterministic nature of the export name is lower risk as the UI for exporting would start the download at the same time, which once downloaded - deletes the export from the system.

The endpoint for exporting should simply be patched to a higher privilege level.</description><pubDate>Tue, 27 Feb 2024 14:14:07 +0000</pubDate></item><item><title>CVE-2024-0819 | Incomplete protection of personal password settings</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0819</link><description>Improper initialization of default settings in TeamViewer Remote Client prior version 15.51.5 for Windows, Linux and macOS, allow a low privileged user to elevate privileges by changing the personal password setting and establishing a remote connection to a logged-in admin account.</description><pubDate>Tue, 27 Feb 2024 14:14:07 +0000</pubDate></item><item><title>CVE-2024-1919 | SourceCodester Online Job Portal Manage Walkin Page ManageWalkin.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1919</link><description>A vulnerability classified as problematic was found in SourceCodester Online Job Portal 1.0. This vulnerability affects unknown code of the file /Employer/ManageWalkin.php of the component Manage Walkin Page. The manipulation of the argument Job Title leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-254854 is the identifier assigned to this vulnerability.</description><pubDate>Tue, 27 Feb 2024 13:39:43 +0000</pubDate></item><item><title>CVE-2024-1920 | osuuu LightPicture TokenVerify.php handle hard-coded key</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1920</link><description>A vulnerability, which was classified as critical, has been found in osuuu LightPicture up to 1.2.2. This issue affects the function handle of the file /app/middleware/TokenVerify.php. The manipulation leads to use of hard-coded cryptographic key&#13; . The attack may be initiated remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254855.</description><pubDate>Tue, 27 Feb 2024 13:39:44 +0000</pubDate></item><item><title>CVE-2023-51747 | SMTP smuggling in Apache James</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51747</link><description>Apache James prior to versions 3.8.1 and 3.7.5 is vulnerable to SMTP smuggling.

A lenient behaviour in line delimiter handling might create a difference of interpretation between the sender and the receiver which can be exploited by an attacker to forge an SMTP envelop, allowing for instance to bypass SPF checks.

The patch implies enforcement of CRLF as a line delimiter as part of the DATA transaction.

We recommend James users to upgrade to non vulnerable versions.</description><pubDate>Tue, 27 Feb 2024 13:18:53 +0000</pubDate></item><item><title>CVE-2024-1918 | Beijing Baichuo Smart S42 Management Platform userattestation.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1918</link><description>A vulnerability has been found in Beijing Baichuo Smart S42 Management Platform up to 20240219 and classified as critical. Affected by this vulnerability is an unknown functionality of the file /useratte/userattestation.php. The manipulation of the argument hidwel leads to unrestricted upload. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254839. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 27 Feb 2024 13:01:53 +0000</pubDate></item><item><title>CVE-2024-0197 | Privilege Escalation in Thales SafeNet Sentinel HASP LDK</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0197</link><description>A flaw in the installer for Thales SafeNet Sentinel HASP LDK prior to 9.16 on Windows allows an attacker to escalate their privilege level via local access.</description><pubDate>Tue, 27 Feb 2024 13:01:53 +0000</pubDate></item><item><title>CVE-2024-1649 | The Categorify plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the categorifyAj...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1649</link><description>The Categorify plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the categorifyAjaxDeleteCategory function in all versions up to, and including, 1.0.7.4. This makes it possible for authenticated attackers, with subscriber-level access and above, to delete categories.</description><pubDate>Tue, 27 Feb 2024 11:16:37 +0000</pubDate></item><item><title>CVE-2024-1650 | The Categorify plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the categorifyAj...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1650</link><description>The Categorify plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the categorifyAjaxRenameCategory function in all versions up to, and including, 1.0.7.4. This makes it possible for authenticated attackers, with subscriber-level access and above, to rename categories.</description><pubDate>Tue, 27 Feb 2024 11:16:37 +0000</pubDate></item><item><title>CVE-2024-1652 | The Categorify plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the categorifyAj...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1652</link><description>The Categorify plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the categorifyAjaxClearCategory function in all versions up to, and including, 1.0.7.4. This makes it possible for authenticated attackers, with subscriber-level access and above, to clear categories.</description><pubDate>Tue, 27 Feb 2024 11:16:38 +0000</pubDate></item><item><title>CVE-2024-1653 | The Categorify plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the categorifyAj...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1653</link><description>The Categorify plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the categorifyAjaxUpdateFolderPosition in all versions up to, and including, 1.0.7.4. This makes it possible for authenticated attackers, with subscriber-level access and above, to update the folder position of categories as well as update the metadata of other taxonomies.</description><pubDate>Tue, 27 Feb 2024 11:16:38 +0000</pubDate></item><item><title>CVE-2024-1906 | The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1906</link><description>The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due to missing or incorrect nonce validation on the categorifyAjaxAddCategory function. This makes it possible for unauthenticated attackers to add categories via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 27 Feb 2024 11:16:39 +0000</pubDate></item><item><title>CVE-2024-1907 | The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1907</link><description>The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due to missing or incorrect nonce validation on the categorifyAjaxDeleteCategory function. This makes it possible for unauthenticated attackers to delete categories via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 27 Feb 2024 11:16:40 +0000</pubDate></item><item><title>CVE-2024-1909 | The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1909</link><description>The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due to missing or incorrect nonce validation on the categorifyAjaxRenameCategory function. This makes it possible for unauthenticated attackers to rename categories via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 27 Feb 2024 11:16:40 +0000</pubDate></item><item><title>CVE-2024-1910 | The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1910</link><description>The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due to missing or incorrect nonce validation on the categorifyAjaxClearCategory function. This makes it possible for unauthenticated attackers to clear categories via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 27 Feb 2024 11:16:41 +0000</pubDate></item><item><title>CVE-2024-1912 | The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1912</link><description>The Categorify plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.7.4. This is due to missing or incorrect nonce validation on the categorifyAjaxUpdateFolderPosition function. This makes it possible for unauthenticated attackers to update the folder position of categories as well as update the metadata of other taxonomies via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Tue, 27 Feb 2024 11:16:41 +0000</pubDate></item><item><title>CVE-2023-7016 | Privilege Escalation in SafeNet Authentication Client </title><link>https://www.cve.org/CVERecord?id=CVE-2023-7016</link><description>A flaw in Thales SafeNet Authentication Client prior to 10.8 R10 on Windows allows an attacker to execute code at a SYSTEM level via local access.</description><pubDate>Tue, 27 Feb 2024 10:56:15 +0000</pubDate></item><item><title>CVE-2023-5993 | Privilege Escalation in SafeNet Authentication Client Installer</title><link>https://www.cve.org/CVERecord?id=CVE-2023-5993</link><description>A flaw in the Windows Installer in Thales SafeNet Authentication Client prior to 10.8 R10 on Windows allows an attacker to escalate their privilege level via local access.</description><pubDate>Tue, 27 Feb 2024 10:49:20 +0000</pubDate></item><item><title>CVE-2021-46923 | fs/mount_setattr: always cleanup mount_kattr</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46923</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs/mount_setattr: always cleanup mount_kattr

Make sure that finish_mount_kattr() is called after mount_kattr was
succesfully built in both the success and failure case to prevent
leaking any references we took when we built it.  We returned early if
path lookup failed thereby risking to leak an additional reference we
took when building mount_kattr when an idmapped mount was requested.</description><pubDate>Tue, 27 Feb 2024 09:49:50 +0000</pubDate></item><item><title>CVE-2021-46924 | NFC: st21nfca: Fix memory leak in device probe and remove</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46924</link><description>In the Linux kernel, the following vulnerability has been resolved:

NFC: st21nfca: Fix memory leak in device probe and remove

'phy-&gt;pending_skb' is alloced when device probe, but forgot to free
in the error handling path and remove path, this cause memory leak
as follows:

unreferenced object 0xffff88800bc06800 (size 512):
  comm "8", pid 11775, jiffies 4295159829 (age 9.032s)
  hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  backtrace:
    [&lt;00000000d66c09ce&gt;] __kmalloc_node_track_caller+0x1ed/0x450
    [&lt;00000000c93382b3&gt;] kmalloc_reserve+0x37/0xd0
    [&lt;000000005fea522c&gt;] __alloc_skb+0x124/0x380
    [&lt;0000000019f29f9a&gt;] st21nfca_hci_i2c_probe+0x170/0x8f2

Fix it by freeing 'pending_skb' in error and remove.</description><pubDate>Tue, 27 Feb 2024 09:49:51 +0000</pubDate></item><item><title>CVE-2021-46925 | net/smc: fix kernel panic caused by race of smc_sock</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46925</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/smc: fix kernel panic caused by race of smc_sock

A crash occurs when smc_cdc_tx_handler() tries to access smc_sock
but smc_release() has already freed it.

[ 4570.695099] BUG: unable to handle page fault for address: 000000002eae9e88
[ 4570.696048] #PF: supervisor write access in kernel mode
[ 4570.696728] #PF: error_code(0x0002) - not-present page
[ 4570.697401] PGD 0 P4D 0
[ 4570.697716] Oops: 0002 [#1] PREEMPT SMP NOPTI
[ 4570.698228] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.16.0-rc4+ #111
[ 4570.699013] Hardware name: Alibaba Cloud Alibaba Cloud ECS, BIOS 8c24b4c 04/0
[ 4570.699933] RIP: 0010:_raw_spin_lock+0x1a/0x30
&lt;...&gt;
[ 4570.711446] Call Trace:
[ 4570.711746]  &lt;IRQ&gt;
[ 4570.711992]  smc_cdc_tx_handler+0x41/0xc0
[ 4570.712470]  smc_wr_tx_tasklet_fn+0x213/0x560
[ 4570.712981]  ? smc_cdc_tx_dismisser+0x10/0x10
[ 4570.713489]  tasklet_action_common.isra.17+0x66/0x140
[ 4570.714083]  __do_softirq+0x123/0x2f4
[ 4570.714521]  irq_exit_rcu+0xc4/0xf0
[ 4570.714934]  common_interrupt+0xba/0xe0

Though smc_cdc_tx_handler() checked the existence of smc connection,
smc_release() may have already dismissed and released the smc socket
before smc_cdc_tx_handler() further visits it.

smc_cdc_tx_handler()           |smc_release()
if (!conn)                     |
                               |
                               |smc_cdc_tx_dismiss_slots()
                               |      smc_cdc_tx_dismisser()
                               |
                               |sock_put(&amp;smc-&gt;sk) &lt;- last sock_put,
                               |                      smc_sock freed
bh_lock_sock(&amp;smc-&gt;sk) (panic) |

To make sure we won't receive any CDC messages after we free the
smc_sock, add a refcount on the smc_connection for inflight CDC
message(posted to the QP but haven't received related CQE), and
don't release the smc_connection until all the inflight CDC messages
haven been done, for both success or failed ones.

Using refcount on CDC messages brings another problem: when the link
is going to be destroyed, smcr_link_clear() will reset the QP, which
then remove all the pending CQEs related to the QP in the CQ. To make
sure all the CQEs will always come back so the refcount on the
smc_connection can always reach 0, smc_ib_modify_qp_reset() was replaced
by smc_ib_modify_qp_error().
And remove the timeout in smc_wr_tx_wait_no_pending_sends() since we
need to wait for all pending WQEs done, or we may encounter use-after-
free when handling CQEs.

For IB device removal routine, we need to wait for all the QPs on that
device been destroyed before we can destroy CQs on the device, or
the refcount on smc_connection won't reach 0 and smc_sock cannot be
released.</description><pubDate>Tue, 27 Feb 2024 09:49:51 +0000</pubDate></item><item><title>CVE-2021-46926 | ALSA: hda: intel-sdw-acpi: harden detection of controller</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46926</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: hda: intel-sdw-acpi: harden detection of controller

The existing code currently sets a pointer to an ACPI handle before
checking that it's actually a SoundWire controller. This can lead to
issues where the graph walk continues and eventually fails, but the
pointer was set already.

This patch changes the logic so that the information provided to
the caller is set when a controller is found.</description><pubDate>Tue, 27 Feb 2024 09:49:51 +0000</pubDate></item><item><title>CVE-2021-46927 | nitro_enclaves: Use get_user_pages_unlocked() call to handle mmap assert</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46927</link><description>In the Linux kernel, the following vulnerability has been resolved:

nitro_enclaves: Use get_user_pages_unlocked() call to handle mmap assert

After commit 5b78ed24e8ec ("mm/pagemap: add mmap_assert_locked()
annotations to find_vma*()"), the call to get_user_pages() will trigger
the mmap assert.

static inline void mmap_assert_locked(struct mm_struct *mm)
{
	lockdep_assert_held(&amp;mm-&gt;mmap_lock);
	VM_BUG_ON_MM(!rwsem_is_locked(&amp;mm-&gt;mmap_lock), mm);
}

[   62.521410] kernel BUG at include/linux/mmap_lock.h:156!
...........................................................
[   62.538938] RIP: 0010:find_vma+0x32/0x80
...........................................................
[   62.605889] Call Trace:
[   62.608502]  &lt;TASK&gt;
[   62.610956]  ? lock_timer_base+0x61/0x80
[   62.614106]  find_extend_vma+0x19/0x80
[   62.617195]  __get_user_pages+0x9b/0x6a0
[   62.620356]  __gup_longterm_locked+0x42d/0x450
[   62.623721]  ? finish_wait+0x41/0x80
[   62.626748]  ? __kmalloc+0x178/0x2f0
[   62.629768]  ne_set_user_memory_region_ioctl.isra.0+0x225/0x6a0 [nitro_enclaves]
[   62.635776]  ne_enclave_ioctl+0x1cf/0x6d7 [nitro_enclaves]
[   62.639541]  __x64_sys_ioctl+0x82/0xb0
[   62.642620]  do_syscall_64+0x3b/0x90
[   62.645642]  entry_SYSCALL_64_after_hwframe+0x44/0xae

Use get_user_pages_unlocked() when setting the enclave memory regions.
That's a similar pattern as mmap_read_lock() used together with
get_user_pages().</description><pubDate>Tue, 27 Feb 2024 09:49:52 +0000</pubDate></item><item><title>CVE-2021-46928 | parisc: Clear stale IIR value on instruction access rights trap</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46928</link><description>In the Linux kernel, the following vulnerability has been resolved:

parisc: Clear stale IIR value on instruction access rights trap

When a trap 7 (Instruction access rights) occurs, this means the CPU
couldn't execute an instruction due to missing execute permissions on
the memory region.  In this case it seems the CPU didn't even fetched
the instruction from memory and thus did not store it in the cr19 (IIR)
register before calling the trap handler. So, the trap handler will find
some random old stale value in cr19.

This patch simply overwrites the stale IIR value with a constant magic
"bad food" value (0xbaadf00d), in the hope people don't start to try to
understand the various random IIR values in trap 7 dumps.</description><pubDate>Tue, 27 Feb 2024 09:49:52 +0000</pubDate></item><item><title>CVE-2021-46929 | sctp: use call_rcu to free endpoint</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46929</link><description>In the Linux kernel, the following vulnerability has been resolved:

sctp: use call_rcu to free endpoint

This patch is to delay the endpoint free by calling call_rcu() to fix
another use-after-free issue in sctp_sock_dump():

  BUG: KASAN: use-after-free in __lock_acquire+0x36d9/0x4c20
  Call Trace:
    __lock_acquire+0x36d9/0x4c20 kernel/locking/lockdep.c:3218
    lock_acquire+0x1ed/0x520 kernel/locking/lockdep.c:3844
    __raw_spin_lock_bh include/linux/spinlock_api_smp.h:135 [inline]
    _raw_spin_lock_bh+0x31/0x40 kernel/locking/spinlock.c:168
    spin_lock_bh include/linux/spinlock.h:334 [inline]
    __lock_sock+0x203/0x350 net/core/sock.c:2253
    lock_sock_nested+0xfe/0x120 net/core/sock.c:2774
    lock_sock include/net/sock.h:1492 [inline]
    sctp_sock_dump+0x122/0xb20 net/sctp/diag.c:324
    sctp_for_each_transport+0x2b5/0x370 net/sctp/socket.c:5091
    sctp_diag_dump+0x3ac/0x660 net/sctp/diag.c:527
    __inet_diag_dump+0xa8/0x140 net/ipv4/inet_diag.c:1049
    inet_diag_dump+0x9b/0x110 net/ipv4/inet_diag.c:1065
    netlink_dump+0x606/0x1080 net/netlink/af_netlink.c:2244
    __netlink_dump_start+0x59a/0x7c0 net/netlink/af_netlink.c:2352
    netlink_dump_start include/linux/netlink.h:216 [inline]
    inet_diag_handler_cmd+0x2ce/0x3f0 net/ipv4/inet_diag.c:1170
    __sock_diag_cmd net/core/sock_diag.c:232 [inline]
    sock_diag_rcv_msg+0x31d/0x410 net/core/sock_diag.c:263
    netlink_rcv_skb+0x172/0x440 net/netlink/af_netlink.c:2477
    sock_diag_rcv+0x2a/0x40 net/core/sock_diag.c:274

This issue occurs when asoc is peeled off and the old sk is freed after
getting it by asoc-&gt;base.sk and before calling lock_sock(sk).

To prevent the sk free, as a holder of the sk, ep should be alive when
calling lock_sock(). This patch uses call_rcu() and moves sock_put and
ep free into sctp_endpoint_destroy_rcu(), so that it's safe to try to
hold the ep under rcu_read_lock in sctp_transport_traverse_process().

If sctp_endpoint_hold() returns true, it means this ep is still alive
and we have held it and can continue to dump it; If it returns false,
it means this ep is dead and can be freed after rcu_read_unlock, and
we should skip it.

In sctp_sock_dump(), after locking the sk, if this ep is different from
tsp-&gt;asoc-&gt;ep, it means during this dumping, this asoc was peeled off
before calling lock_sock(), and the sk should be skipped; If this ep is
the same with tsp-&gt;asoc-&gt;ep, it means no peeloff happens on this asoc,
and due to lock_sock, no peeloff will happen either until release_sock.

Note that delaying endpoint free won't delay the port release, as the
port release happens in sctp_endpoint_destroy() before calling call_rcu().
Also, freeing endpoint by call_rcu() makes it safe to access the sk by
asoc-&gt;base.sk in sctp_assocs_seq_show() and sctp_rcv().

Thanks Jones to bring this issue up.

v1-&gt;v2:
  - improve the changelog.
  - add kfree(ep) into sctp_endpoint_destroy_rcu(), as Jakub noticed.</description><pubDate>Tue, 27 Feb 2024 09:49:53 +0000</pubDate></item><item><title>CVE-2021-46930 | usb: mtu3: fix list_head check warning</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46930</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: mtu3: fix list_head check warning

This is caused by uninitialization of list_head.

BUG: KASAN: use-after-free in __list_del_entry_valid+0x34/0xe4

Call trace:
dump_backtrace+0x0/0x298
show_stack+0x24/0x34
dump_stack+0x130/0x1a8
print_address_description+0x88/0x56c
__kasan_report+0x1b8/0x2a0
kasan_report+0x14/0x20
__asan_load8+0x9c/0xa0
__list_del_entry_valid+0x34/0xe4
mtu3_req_complete+0x4c/0x300 [mtu3]
mtu3_gadget_stop+0x168/0x448 [mtu3]
usb_gadget_unregister_driver+0x204/0x3a0
unregister_gadget_item+0x44/0xa4</description><pubDate>Tue, 27 Feb 2024 09:49:53 +0000</pubDate></item><item><title>CVE-2021-46931 | net/mlx5e: Wrap the tx reporter dump callback to extract the sq</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46931</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Wrap the tx reporter dump callback to extract the sq

Function mlx5e_tx_reporter_dump_sq() casts its void * argument to struct
mlx5e_txqsq *, but in TX-timeout-recovery flow the argument is actually
of type struct mlx5e_tx_timeout_ctx *.

 mlx5_core 0000:08:00.1 enp8s0f1: TX timeout detected
 mlx5_core 0000:08:00.1 enp8s0f1: TX timeout on queue: 1, SQ: 0x11ec, CQ: 0x146d, SQ Cons: 0x0 SQ Prod: 0x1, usecs since last trans: 21565000
 BUG: stack guard page was hit at 0000000093f1a2de (stack is 00000000b66ea0dc..000000004d932dae)
 kernel stack overflow (page fault): 0000 [#1] SMP NOPTI
 CPU: 5 PID: 95 Comm: kworker/u20:1 Tainted: G W OE 5.13.0_mlnx #1
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
 Workqueue: mlx5e mlx5e_tx_timeout_work [mlx5_core]
 RIP: 0010:mlx5e_tx_reporter_dump_sq+0xd3/0x180
 [mlx5_core]
 Call Trace:
 mlx5e_tx_reporter_dump+0x43/0x1c0 [mlx5_core]
 devlink_health_do_dump.part.91+0x71/0xd0
 devlink_health_report+0x157/0x1b0
 mlx5e_reporter_tx_timeout+0xb9/0xf0 [mlx5_core]
 ? mlx5e_tx_reporter_err_cqe_recover+0x1d0/0x1d0
 [mlx5_core]
 ? mlx5e_health_queue_dump+0xd0/0xd0 [mlx5_core]
 ? update_load_avg+0x19b/0x550
 ? set_next_entity+0x72/0x80
 ? pick_next_task_fair+0x227/0x340
 ? finish_task_switch+0xa2/0x280
   mlx5e_tx_timeout_work+0x83/0xb0 [mlx5_core]
   process_one_work+0x1de/0x3a0
   worker_thread+0x2d/0x3c0
 ? process_one_work+0x3a0/0x3a0
   kthread+0x115/0x130
 ? kthread_park+0x90/0x90
   ret_from_fork+0x1f/0x30
 --[ end trace 51ccabea504edaff ]---
 RIP: 0010:mlx5e_tx_reporter_dump_sq+0xd3/0x180
 PKRU: 55555554
 Kernel panic - not syncing: Fatal exception
 Kernel Offset: disabled
 end Kernel panic - not syncing: Fatal exception

To fix this bug add a wrapper for mlx5e_tx_reporter_dump_sq() which
extracts the sq from struct mlx5e_tx_timeout_ctx and set it as the
TX-timeout-recovery flow dump callback.</description><pubDate>Tue, 27 Feb 2024 09:49:53 +0000</pubDate></item><item><title>CVE-2021-46932 | Input: appletouch - initialize work before device registration</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46932</link><description>In the Linux kernel, the following vulnerability has been resolved:

Input: appletouch - initialize work before device registration

Syzbot has reported warning in __flush_work(). This warning is caused by
work-&gt;func == NULL, which means missing work initialization.

This may happen, since input_dev-&gt;close() calls
cancel_work_sync(&amp;dev-&gt;work), but dev-&gt;work initalization happens _after_
input_register_device() call.

So this patch moves dev-&gt;work initialization before registering input
device</description><pubDate>Tue, 27 Feb 2024 09:49:54 +0000</pubDate></item><item><title>CVE-2021-46933 | usb: gadget: f_fs: Clear ffs_eventfd in ffs_data_clear.</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46933</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: f_fs: Clear ffs_eventfd in ffs_data_clear.

ffs_data_clear is indirectly called from both ffs_fs_kill_sb and
ffs_ep0_release, so it ends up being called twice when userland closes ep0
and then unmounts f_fs.
If userland provided an eventfd along with function's USB descriptors, it
ends up calling eventfd_ctx_put as many times, causing a refcount
underflow.
NULL-ify ffs_eventfd to prevent these extraneous eventfd_ctx_put calls.

Also, set epfiles to NULL right after de-allocating it, for readability.

For completeness, ffs_data_clear actually ends up being called thrice, the
last call being before the whole ffs structure gets freed, so when this
specific sequence happens there is a second underflow happening (but not
being reported):

/sys/kernel/debug/tracing# modprobe usb_f_fs
/sys/kernel/debug/tracing# echo ffs_data_clear &gt; set_ftrace_filter
/sys/kernel/debug/tracing# echo function &gt; current_tracer
/sys/kernel/debug/tracing# echo 1 &gt; tracing_on
(setup gadget, run and kill function userland process, teardown gadget)
/sys/kernel/debug/tracing# echo 0 &gt; tracing_on
/sys/kernel/debug/tracing# cat trace
 smartcard-openp-436     [000] .....  1946.208786: ffs_data_clear &lt;-ffs_data_closed
 smartcard-openp-431     [000] .....  1946.279147: ffs_data_clear &lt;-ffs_data_closed
 smartcard-openp-431     [000] .n...  1946.905512: ffs_data_clear &lt;-ffs_data_put

Warning output corresponding to above trace:
[ 1946.284139] WARNING: CPU: 0 PID: 431 at lib/refcount.c:28 refcount_warn_saturate+0x110/0x15c
[ 1946.293094] refcount_t: underflow; use-after-free.
[ 1946.298164] Modules linked in: usb_f_ncm(E) u_ether(E) usb_f_fs(E) hci_uart(E) btqca(E) btrtl(E) btbcm(E) btintel(E) bluetooth(E) nls_ascii(E) nls_cp437(E) vfat(E) fat(E) bcm2835_v4l2(CE) bcm2835_mmal_vchiq(CE) videobuf2_vmalloc(E) videobuf2_memops(E) sha512_generic(E) videobuf2_v4l2(E) sha512_arm(E) videobuf2_common(E) videodev(E) cpufreq_dt(E) snd_bcm2835(CE) brcmfmac(E) mc(E) vc4(E) ctr(E) brcmutil(E) snd_soc_core(E) snd_pcm_dmaengine(E) drbg(E) snd_pcm(E) snd_timer(E) snd(E) soundcore(E) drm_kms_helper(E) cec(E) ansi_cprng(E) rc_core(E) syscopyarea(E) raspberrypi_cpufreq(E) sysfillrect(E) sysimgblt(E) cfg80211(E) max17040_battery(OE) raspberrypi_hwmon(E) fb_sys_fops(E) regmap_i2c(E) ecdh_generic(E) rfkill(E) ecc(E) bcm2835_rng(E) rng_core(E) vchiq(CE) leds_gpio(E) libcomposite(E) fuse(E) configfs(E) ip_tables(E) x_tables(E) autofs4(E) ext4(E) crc16(E) mbcache(E) jbd2(E) crc32c_generic(E) sdhci_iproc(E) sdhci_pltfm(E) sdhci(E)
[ 1946.399633] CPU: 0 PID: 431 Comm: smartcard-openp Tainted: G         C OE     5.15.0-1-rpi #1  Debian 5.15.3-1
[ 1946.417950] Hardware name: BCM2835
[ 1946.425442] Backtrace:
[ 1946.432048] [&lt;c08d60a0&gt;] (dump_backtrace) from [&lt;c08d62ec&gt;] (show_stack+0x20/0x24)
[ 1946.448226]  r7:00000009 r6:0000001c r5:c04a948c r4:c0a64e2c
[ 1946.458412] [&lt;c08d62cc&gt;] (show_stack) from [&lt;c08d9ae0&gt;] (dump_stack+0x28/0x30)
[ 1946.470380] [&lt;c08d9ab8&gt;] (dump_stack) from [&lt;c0123500&gt;] (__warn+0xe8/0x154)
[ 1946.482067]  r5:c04a948c r4:c0a71dc8
[ 1946.490184] [&lt;c0123418&gt;] (__warn) from [&lt;c08d6948&gt;] (warn_slowpath_fmt+0xa0/0xe4)
[ 1946.506758]  r7:00000009 r6:0000001c r5:c0a71dc8 r4:c0a71e04
[ 1946.517070] [&lt;c08d68ac&gt;] (warn_slowpath_fmt) from [&lt;c04a948c&gt;] (refcount_warn_saturate+0x110/0x15c)
[ 1946.535309]  r8:c0100224 r7:c0dfcb84 r6:ffffffff r5:c3b84c00 r4:c24a17c0
[ 1946.546708] [&lt;c04a937c&gt;] (refcount_warn_saturate) from [&lt;c0380134&gt;] (eventfd_ctx_put+0x48/0x74)
[ 1946.564476] [&lt;c03800ec&gt;] (eventfd_ctx_put) from [&lt;bf5464e8&gt;] (ffs_data_clear+0xd0/0x118 [usb_f_fs])
[ 1946.582664]  r5:c3b84c00 r4:c2695b00
[ 1946.590668] [&lt;bf546418&gt;] (ffs_data_clear [usb_f_fs]) from [&lt;bf547cc0&gt;] (ffs_data_closed+0x9c/0x150 [usb_f_fs])
[ 1946.609608]  r5:bf54d014 r4:c2695b00
[ 1946.617522] [&lt;bf547c24&gt;] (ffs_data_closed [usb_f_fs]) from [&lt;bf547da0&gt;] (ffs_fs_kill_sb+0x2c/0x30 [usb_f_fs])
[ 1946.636217]  r7:c0dfcb
---truncated---</description><pubDate>Tue, 27 Feb 2024 09:49:54 +0000</pubDate></item><item><title>CVE-2021-46934 | i2c: validate user data in compat ioctl</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46934</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: validate user data in compat ioctl

Wrong user data may cause warning in i2c_transfer(), ex: zero msgs.
Userspace should not be able to trigger warnings, so this patch adds
validation checks for user data in compact ioctl to prevent reported
warnings</description><pubDate>Tue, 27 Feb 2024 09:49:55 +0000</pubDate></item><item><title>CVE-2021-46935 | binder: fix async_free_space accounting for empty parcels</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46935</link><description>In the Linux kernel, the following vulnerability has been resolved:

binder: fix async_free_space accounting for empty parcels

In 4.13, commit 74310e06be4d ("android: binder: Move buffer out of area shared with user space")
fixed a kernel structure visibility issue. As part of that patch,
sizeof(void *) was used as the buffer size for 0-length data payloads so
the driver could detect abusive clients sending 0-length asynchronous
transactions to a server by enforcing limits on async_free_size.

Unfortunately, on the "free" side, the accounting of async_free_space
did not add the sizeof(void *) back. The result was that up to 8-bytes of
async_free_space were leaked on every async transaction of 8-bytes or
less.  These small transactions are uncommon, so this accounting issue
has gone undetected for several years.

The fix is to use "buffer_size" (the allocated buffer size) instead of
"size" (the logical buffer size) when updating the async_free_space
during the free operation. These are the same except for this
corner case of asynchronous transactions with payloads &lt; 8 bytes.</description><pubDate>Tue, 27 Feb 2024 09:49:55 +0000</pubDate></item><item><title>CVE-2021-46936 | net: fix use-after-free in tw_timer_handler</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46936</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: fix use-after-free in tw_timer_handler

A real world panic issue was found as follow in Linux 5.4.

    BUG: unable to handle page fault for address: ffffde49a863de28
    PGD 7e6fe62067 P4D 7e6fe62067 PUD 7e6fe63067 PMD f51e064067 PTE 0
    RIP: 0010:tw_timer_handler+0x20/0x40
    Call Trace:
     &lt;IRQ&gt;
     call_timer_fn+0x2b/0x120
     run_timer_softirq+0x1ef/0x450
     __do_softirq+0x10d/0x2b8
     irq_exit+0xc7/0xd0
     smp_apic_timer_interrupt+0x68/0x120
     apic_timer_interrupt+0xf/0x20

This issue was also reported since 2017 in the thread [1],
unfortunately, the issue was still can be reproduced after fixing
DCCP.

The ipv4_mib_exit_net is called before tcp_sk_exit_batch when a net
namespace is destroyed since tcp_sk_ops is registered befrore
ipv4_mib_ops, which means tcp_sk_ops is in the front of ipv4_mib_ops
in the list of pernet_list. There will be a use-after-free on
net-&gt;mib.net_statistics in tw_timer_handler after ipv4_mib_exit_net
if there are some inflight time-wait timers.

This bug is not introduced by commit f2bf415cfed7 ("mib: add net to
NET_ADD_STATS_BH") since the net_statistics is a global variable
instead of dynamic allocation and freeing. Actually, commit
61a7e26028b9 ("mib: put net statistics on struct net") introduces
the bug since it put net statistics on struct net and free it when
net namespace is destroyed.

Moving init_ipv4_mibs() to the front of tcp_init() to fix this bug
and replace pr_crit() with panic() since continuing is meaningless
when init_ipv4_mibs() fails.

[1] https://groups.google.com/g/syzkaller/c/p1tn-_Kc6l4/m/smuL_FMAAgAJ?pli=1</description><pubDate>Tue, 27 Feb 2024 09:49:55 +0000</pubDate></item><item><title>CVE-2021-46937 | mm/damon/dbgfs: fix &amp;#x27;struct pid&amp;#x27; leaks in &amp;#x27;dbgfs_target_ids_write()&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46937</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm/damon/dbgfs: fix 'struct pid' leaks in 'dbgfs_target_ids_write()'

DAMON debugfs interface increases the reference counts of 'struct pid's
for targets from the 'target_ids' file write callback
('dbgfs_target_ids_write()'), but decreases the counts only in DAMON
monitoring termination callback ('dbgfs_before_terminate()').

Therefore, when 'target_ids' file is repeatedly written without DAMON
monitoring start/termination, the reference count is not decreased and
therefore memory for the 'struct pid' cannot be freed.  This commit
fixes this issue by decreasing the reference counts when 'target_ids' is
written.</description><pubDate>Tue, 27 Feb 2024 09:49:56 +0000</pubDate></item><item><title>CVE-2021-46921 | locking/qrwlock: Fix ordering in queued_write_lock_slowpath()</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46921</link><description>In the Linux kernel, the following vulnerability has been resolved:

locking/qrwlock: Fix ordering in queued_write_lock_slowpath()

While this code is executed with the wait_lock held, a reader can
acquire the lock without holding wait_lock.  The writer side loops
checking the value with the atomic_cond_read_acquire(), but only truly
acquires the lock when the compare-and-exchange is completed
successfully which isnât ordered. This exposes the window between the
acquire and the cmpxchg to an A-B-A problem which allows reads
following the lock acquisition to observe values speculatively before
the write lock is truly acquired.

We've seen a problem in epoll where the reader does a xchg while
holding the read lock, but the writer can see a value change out from
under it.

  Writer                                | Reader
  --------------------------------------------------------------------------------
  ep_scan_ready_list()                  |
  |- write_lock_irq()                   |
      |- queued_write_lock_slowpath()   |
	|- atomic_cond_read_acquire()   |
				        | read_lock_irqsave(&amp;ep-&gt;lock, flags);
     --&gt; (observes value before unlock) |  chain_epi_lockless()
     |                                  |    epi-&gt;next = xchg(&amp;ep-&gt;ovflist, epi);
     |                                  | read_unlock_irqrestore(&amp;ep-&gt;lock, flags);
     |                                  |
     |     atomic_cmpxchg_relaxed()     |
     |-- READ_ONCE(ep-&gt;ovflist);        |

A core can order the read of the ovflist ahead of the
atomic_cmpxchg_relaxed(). Switching the cmpxchg to use acquire
semantics addresses this issue at which point the atomic_cond_read can
be switched to use relaxed semantics.

[peterz: use try_cmpxchg()]</description><pubDate>Tue, 27 Feb 2024 09:42:49 +0000</pubDate></item><item><title>CVE-2021-46922 | KEYS: trusted: Fix TPM reservation for seal/unseal</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46922</link><description>In the Linux kernel, the following vulnerability has been resolved:

KEYS: trusted: Fix TPM reservation for seal/unseal

The original patch 8c657a0590de ("KEYS: trusted: Reserve TPM for seal
and unseal operations") was correct on the mailing list:

https://lore.kernel.org/linux-integrity/20210128235621.127925-4-jarkko@kernel.org/

But somehow got rebased so that the tpm_try_get_ops() in
tpm2_seal_trusted() got lost.  This causes an imbalanced put of the
TPM ops and causes oopses on TIS based hardware.

This fix puts back the lost tpm_try_get_ops()</description><pubDate>Tue, 27 Feb 2024 09:42:49 +0000</pubDate></item><item><title>CVE-2023-51518 | Apache James server: Privilege escalation via JMX pre-authentication deserialisation</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51518</link><description>Apache James prior to version 3.7.5 and 3.8.0 exposes a JMX endpoint on localhost subject to pre-authentication deserialisation of untrusted data.
Given a deserialisation gadjet, this could be leveraged as part of an exploit chain that could result in privilege escalation.
Note that by default JMX endpoint is only bound locally.

We recommend users to:
Â - Upgrade to a non-vulnerable Apache James version

Â - Run Apache James isolated from other processes (docker - dedicated virtual machine)
Â - If possible turn off JMX</description><pubDate>Tue, 27 Feb 2024 09:20:40 +0000</pubDate></item><item><title>CVE-2023-6584 | JobSearch WP Job Board &amp;lt; 2.3.4 - Authentication Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6584</link><description>The WP JobSearch WordPress plugin before 2.3.4 does not prevent attackers from logging-in as any users with the only knowledge of that user's email address.</description><pubDate>Tue, 27 Feb 2024 08:41:07 +0000</pubDate></item><item><title>CVE-2023-6585 | JobSearch WP Job Board &amp;lt; 2.3.4 - Arbitrary File Upload to RCE</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6585</link><description>The WP JobSearch WordPress plugin before 2.3.4 does not validate files to be uploaded, which could allow unauthenticated attackers to upload arbitrary files such as PHP on the server</description><pubDate>Tue, 27 Feb 2024 08:41:07 +0000</pubDate></item><item><title>CVE-2023-7115 | PageLayer &amp;lt; 1.8.1 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7115</link><description>The Page Builder: Pagelayer WordPress plugin before 1.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Tue, 27 Feb 2024 08:41:08 +0000</pubDate></item><item><title>CVE-2023-7165 | JetBackup &amp;lt; 2.0.9.9 - Directory Listing Exposing Backups</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7165</link><description>The JetBackup WordPress plugin before 2.0.9.9 doesn't use index files to prevent public directory listing of sensitive directories in certain configurations, which allows malicious actors to leak backup files.</description><pubDate>Tue, 27 Feb 2024 08:41:08 +0000</pubDate></item><item><title>CVE-2023-7167 | Persian Fonts &amp;lt;= 1.6 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7167</link><description>The Persian Fonts WordPress plugin through 1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description><pubDate>Tue, 27 Feb 2024 08:41:09 +0000</pubDate></item><item><title>CVE-2023-7198 | WPDashboardNotes &amp;lt; 1.0.11 - Unauthorised Deletion of Private Notes</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7198</link><description>The WP Dashboard Notes WordPress plugin before 1.0.11 is vulnerable to Insecure Direct Object References (IDOR) in post_id= parameter. Authenticated users are able to delete private notes associated with different user accounts. This poses a significant security risk as it violates the principle of least privilege and compromises the integrity and privacy of user data.</description><pubDate>Tue, 27 Feb 2024 08:41:09 +0000</pubDate></item><item><title>CVE-2023-7202 | Fatal Error Notify &amp;lt; 1.5.3 - Subscriber+ Test Error Email Sending</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7202</link><description>The Fatal Error Notify WordPress plugin before 1.5.3 does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages. The issue is also exploitable via CSRF</description><pubDate>Tue, 27 Feb 2024 08:41:09 +0000</pubDate></item><item><title>CVE-2023-7203 | Smart Forms &amp;lt; 2.6.87 - Subscriber+ Arbitrary Entry Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7203</link><description>The Smart Forms WordPress plugin before 2.6.87 does not have authorisation in various AJAX actions, which could allow users with a role as low as subscriber to call them and perform unauthorised actions such as deleting entries. The plugin also lacks CSRF checks in some places which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as deleting entries.</description><pubDate>Tue, 27 Feb 2024 08:41:10 +0000</pubDate></item><item><title>CVE-2024-0855 | Spiffy Calendar &amp;lt; 4.9.9 - Broken Access Control</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0855</link><description>The Spiffy Calendar WordPress plugin before 4.9.9 doesn't check the event_author parameter, and allows any user to alter it when creating an event, leading to deceiving users/admins that a page was created by a Contributor+.</description><pubDate>Tue, 27 Feb 2024 08:41:10 +0000</pubDate></item><item><title>CVE-2024-1106 | Shariff Wrapper &amp;lt; 4.6.10 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1106</link><description>The Shariff Wrapper WordPress plugin before 4.6.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Tue, 27 Feb 2024 08:41:11 +0000</pubDate></item><item><title>CVE-2023-50379 | Apache Ambari: authenticated users could perform command injection to perform RCE</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50379</link><description>Malicious code injection in Apache Ambari in prior to 2.7.8.Â Users are recommended to upgrade to version 2.7.8, which fixes this issue.

Impact:
A Cluster Operator can manipulate the request by adding a malicious code injection and gain a root over the cluster main host.</description><pubDate>Tue, 27 Feb 2024 08:34:12 +0000</pubDate></item><item><title>CVE-2021-46920 | dmaengine: idxd: Fix clobbering of SWERR overflow bit on writeback</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46920</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: idxd: Fix clobbering of SWERR overflow bit on writeback

Current code blindly writes over the SWERR and the OVERFLOW bits. Write
back the bits actually read instead so the driver avoids clobbering the
OVERFLOW bit that comes after the register is read.</description><pubDate>Tue, 27 Feb 2024 07:12:21 +0000</pubDate></item><item><title>CVE-2021-46907 | KVM: VMX: Don&amp;#x27;t use vcpu-&amp;gt;run-&amp;gt;internal.ndata as an array index</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46907</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: VMX: Don't use vcpu-&gt;run-&gt;internal.ndata as an array index

__vmx_handle_exit() uses vcpu-&gt;run-&gt;internal.ndata as an index for
an array access.  Since vcpu-&gt;run is (can be) mapped to a user address
space with a writer permission, the 'ndata' could be updated by the
user process at anytime (the user process can set it to outside the
bounds of the array).
So, it is not safe that __vmx_handle_exit() uses the 'ndata' that way.</description><pubDate>Tue, 27 Feb 2024 06:57:36 +0000</pubDate></item><item><title>CVE-2021-46908 | bpf: Use correct permission flag for mixed signed bounds arithmetic</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46908</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Use correct permission flag for mixed signed bounds arithmetic

We forbid adding unknown scalars with mixed signed bounds due to the
spectre v1 masking mitigation. Hence this also needs bypass_spec_v1
flag instead of allow_ptr_leaks.</description><pubDate>Tue, 27 Feb 2024 06:57:36 +0000</pubDate></item><item><title>CVE-2021-46909 | ARM: footbridge: fix PCI interrupt mapping</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46909</link><description>In the Linux kernel, the following vulnerability has been resolved:

ARM: footbridge: fix PCI interrupt mapping

Since commit 30fdfb929e82 ("PCI: Add a call to pci_assign_irq() in
pci_device_probe()"), the PCI code will call the IRQ mapping function
whenever a PCI driver is probed. If these are marked as __init, this
causes an oops if a PCI driver is loaded or bound after the kernel has
initialised.</description><pubDate>Tue, 27 Feb 2024 06:57:36 +0000</pubDate></item><item><title>CVE-2021-46910 | ARM: 9063/1: mm: reduce maximum number of CPUs if DEBUG_KMAP_LOCAL is enabled</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46910</link><description>In the Linux kernel, the following vulnerability has been resolved:

ARM: 9063/1: mm: reduce maximum number of CPUs if DEBUG_KMAP_LOCAL is enabled

The debugging code for kmap_local() doubles the number of per-CPU fixmap
slots allocated for kmap_local(), in order to use half of them as guard
regions. This causes the fixmap region to grow downwards beyond the start
of its reserved window if the supported number of CPUs is large, and collide
with the newly added virtual DT mapping right below it, which is obviously
not good.

One manifestation of this is EFI boot on a kernel built with NR_CPUS=32
and CONFIG_DEBUG_KMAP_LOCAL=y, which may pass the FDT in highmem, resulting
in block entries below the fixmap region that the fixmap code misidentifies
as fixmap table entries, and subsequently tries to dereference using a
phys-to-virt translation that is only valid for lowmem. This results in a
cryptic splat such as the one below.

  ftrace: allocating 45548 entries in 89 pages
  8&lt;--- cut here ---
  Unable to handle kernel paging request at virtual address fc6006f0
  pgd = (ptrval)
  [fc6006f0] *pgd=80000040207003, *pmd=00000000
  Internal error: Oops: a06 [#1] SMP ARM
  Modules linked in:
  CPU: 0 PID: 0 Comm: swapper Not tainted 5.11.0+ #382
  Hardware name: Generic DT based system
  PC is at cpu_ca15_set_pte_ext+0x24/0x30
  LR is at __set_fixmap+0xe4/0x118
  pc : [&lt;c041ac9c&gt;]    lr : [&lt;c04189d8&gt;]    psr: 400000d3
  sp : c1601ed8  ip : 00400000  fp : 00800000
  r10: 0000071f  r9 : 00421000  r8 : 00c00000
  r7 : 00c00000  r6 : 0000071f  r5 : ffade000  r4 : 4040171f
  r3 : 00c00000  r2 : 4040171f  r1 : c041ac78  r0 : fc6006f0
  Flags: nZcv  IRQs off  FIQs off  Mode SVC_32  ISA ARM  Segment none
  Control: 30c5387d  Table: 40203000  DAC: 00000001
  Process swapper (pid: 0, stack limit = 0x(ptrval))

So let's limit CONFIG_NR_CPUS to 16 when CONFIG_DEBUG_KMAP_LOCAL=y. Also,
fix the BUILD_BUG_ON() check that was supposed to catch this, by checking
whether the region grows below the start address rather than above the end
address.</description><pubDate>Tue, 27 Feb 2024 06:57:37 +0000</pubDate></item><item><title>CVE-2021-46911 | ch_ktls: Fix kernel panic</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46911</link><description>In the Linux kernel, the following vulnerability has been resolved:

ch_ktls: Fix kernel panic

Taking page refcount is not ideal and causes kernel panic
sometimes. It's better to take tx_ctx lock for the complete
skb transmit, to avoid page cleanup if ACK received in middle.</description><pubDate>Tue, 27 Feb 2024 06:57:37 +0000</pubDate></item><item><title>CVE-2021-46912 | net: Make tcp_allowed_congestion_control readonly in non-init netns</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46912</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: Make tcp_allowed_congestion_control readonly in non-init netns

Currently, tcp_allowed_congestion_control is global and writable;
writing to it in any net namespace will leak into all other net
namespaces.

tcp_available_congestion_control and tcp_allowed_congestion_control are
the only sysctls in ipv4_net_table (the per-netns sysctl table) with a
NULL data pointer; their handlers (proc_tcp_available_congestion_control
and proc_allowed_congestion_control) have no other way of referencing a
struct net. Thus, they operate globally.

Because ipv4_net_table does not use designated initializers, there is no
easy way to fix up this one "bad" table entry. However, the data pointer
updating logic shouldn't be applied to NULL pointers anyway, so we
instead force these entries to be read-only.

These sysctls used to exist in ipv4_table (init-net only), but they were
moved to the per-net ipv4_net_table, presumably without realizing that
tcp_allowed_congestion_control was writable and thus introduced a leak.

Because the intent of that commit was only to know (i.e. read) "which
congestion algorithms are available or allowed", this read-only solution
should be sufficient.

The logic added in recent commit
31c4d2f160eb: ("net: Ensure net namespace isolation of sysctls")
does not and cannot check for NULL data pointers, because
other table entries (e.g. /proc/sys/net/netfilter/nf_log/) have
.data=NULL but use other methods (.extra2) to access the struct net.</description><pubDate>Tue, 27 Feb 2024 06:57:37 +0000</pubDate></item><item><title>CVE-2021-46913 | netfilter: nftables: clone set element expression template</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46913</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nftables: clone set element expression template

memcpy() breaks when using connlimit in set elements. Use
nft_expr_clone() to initialize the connlimit expression list, otherwise
connlimit garbage collector crashes when walking on the list head copy.

[  493.064656] Workqueue: events_power_efficient nft_rhash_gc [nf_tables]
[  493.064685] RIP: 0010:find_or_evict+0x5a/0x90 [nf_conncount]
[  493.064694] Code: 2b 43 40 83 f8 01 77 0d 48 c7 c0 f5 ff ff ff 44 39 63 3c 75 df 83 6d 18 01 48 8b 43 08 48 89 de 48 8b 13 48 8b 3d ee 2f 00 00 &lt;48&gt; 89 42 08 48 89 10 48 b8 00 01 00 00 00 00 ad de 48 89 03 48 83
[  493.064699] RSP: 0018:ffffc90000417dc0 EFLAGS: 00010297
[  493.064704] RAX: 0000000000000000 RBX: ffff888134f38410 RCX: 0000000000000000
[  493.064708] RDX: 0000000000000000 RSI: ffff888134f38410 RDI: ffff888100060cc0
[  493.064711] RBP: ffff88812ce594a8 R08: ffff888134f38438 R09: 00000000ebb9025c
[  493.064714] R10: ffffffff8219f838 R11: 0000000000000017 R12: 0000000000000001
[  493.064718] R13: ffffffff82146740 R14: ffff888134f38410 R15: 0000000000000000
[  493.064721] FS:  0000000000000000(0000) GS:ffff88840e440000(0000) knlGS:0000000000000000
[  493.064725] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  493.064729] CR2: 0000000000000008 CR3: 00000001330aa002 CR4: 00000000001706e0
[  493.064733] Call Trace:
[  493.064737]  nf_conncount_gc_list+0x8f/0x150 [nf_conncount]
[  493.064746]  nft_rhash_gc+0x106/0x390 [nf_tables]</description><pubDate>Tue, 27 Feb 2024 06:57:38 +0000</pubDate></item><item><title>CVE-2021-46914 | ixgbe: fix unbalanced device enable/disable in suspend/resume</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46914</link><description>In the Linux kernel, the following vulnerability has been resolved:

ixgbe: fix unbalanced device enable/disable in suspend/resume

pci_disable_device() called in __ixgbe_shutdown() decreases
dev-&gt;enable_cnt by 1. pci_enable_device_mem() which increases
dev-&gt;enable_cnt by 1, was removed from ixgbe_resume() in commit
6f82b2558735 ("ixgbe: use generic power management"). This caused
unbalanced increase/decrease. So add pci_enable_device_mem() back.

Fix the following call trace.

  ixgbe 0000:17:00.1: disabling already-disabled device
  Call Trace:
   __ixgbe_shutdown+0x10a/0x1e0 [ixgbe]
   ixgbe_suspend+0x32/0x70 [ixgbe]
   pci_pm_suspend+0x87/0x160
   ? pci_pm_freeze+0xd0/0xd0
   dpm_run_callback+0x42/0x170
   __device_suspend+0x114/0x460
   async_suspend+0x1f/0xa0
   async_run_entry_fn+0x3c/0xf0
   process_one_work+0x1dd/0x410
   worker_thread+0x34/0x3f0
   ? cancel_delayed_work+0x90/0x90
   kthread+0x14c/0x170
   ? kthread_park+0x90/0x90
   ret_from_fork+0x1f/0x30</description><pubDate>Tue, 27 Feb 2024 06:57:38 +0000</pubDate></item><item><title>CVE-2021-46915 | netfilter: nft_limit: avoid possible divide error in nft_limit_init</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46915</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nft_limit: avoid possible divide error in nft_limit_init

div_u64() divides u64 by u32.

nft_limit_init() wants to divide u64 by u64, use the appropriate
math function (div64_u64)

divide error: 0000 [#1] PREEMPT SMP KASAN
CPU: 1 PID: 8390 Comm: syz-executor188 Not tainted 5.12.0-rc4-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:div_u64_rem include/linux/math64.h:28 [inline]
RIP: 0010:div_u64 include/linux/math64.h:127 [inline]
RIP: 0010:nft_limit_init+0x2a2/0x5e0 net/netfilter/nft_limit.c:85
Code: ef 4c 01 eb 41 0f 92 c7 48 89 de e8 38 a5 22 fa 4d 85 ff 0f 85 97 02 00 00 e8 ea 9e 22 fa 4c 0f af f3 45 89 ed 31 d2 4c 89 f0 &lt;49&gt; f7 f5 49 89 c6 e8 d3 9e 22 fa 48 8d 7d 48 48 b8 00 00 00 00 00
RSP: 0018:ffffc90009447198 EFLAGS: 00010246
RAX: 0000000000000000 RBX: 0000200000000000 RCX: 0000000000000000
RDX: 0000000000000000 RSI: ffffffff875152e6 RDI: 0000000000000003
RBP: ffff888020f80908 R08: 0000200000000000 R09: 0000000000000000
R10: ffffffff875152d8 R11: 0000000000000000 R12: ffffc90009447270
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
FS:  000000000097a300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000200001c4 CR3: 0000000026a52000 CR4: 00000000001506e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 nf_tables_newexpr net/netfilter/nf_tables_api.c:2675 [inline]
 nft_expr_init+0x145/0x2d0 net/netfilter/nf_tables_api.c:2713
 nft_set_elem_expr_alloc+0x27/0x280 net/netfilter/nf_tables_api.c:5160
 nf_tables_newset+0x1997/0x3150 net/netfilter/nf_tables_api.c:4321
 nfnetlink_rcv_batch+0x85a/0x21b0 net/netfilter/nfnetlink.c:456
 nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:580 [inline]
 nfnetlink_rcv+0x3af/0x420 net/netfilter/nfnetlink.c:598
 netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
 netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
 netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
 sock_sendmsg_nosec net/socket.c:654 [inline]
 sock_sendmsg+0xcf/0x120 net/socket.c:674
 ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
 ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
 __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
 do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xae</description><pubDate>Tue, 27 Feb 2024 06:57:38 +0000</pubDate></item><item><title>CVE-2021-46916 | ixgbe: Fix NULL pointer dereference in ethtool loopback test</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46916</link><description>In the Linux kernel, the following vulnerability has been resolved:

ixgbe: Fix NULL pointer dereference in ethtool loopback test

The ixgbe driver currently generates a NULL pointer dereference when
performing the ethtool loopback test. This is due to the fact that there
isn't a q_vector associated with the test ring when it is setup as
interrupts are not normally added to the test rings.

To address this I have added code that will check for a q_vector before
returning a napi_id value. If a q_vector is not present it will return a
value of 0.</description><pubDate>Tue, 27 Feb 2024 06:57:39 +0000</pubDate></item><item><title>CVE-2021-46917 | dmaengine: idxd: fix wq cleanup of WQCFG registers</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46917</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: idxd: fix wq cleanup of WQCFG registers

A pre-release silicon erratum workaround where wq reset does not clear
WQCFG registers was leaked into upstream code. Use wq reset command
instead of blasting the MMIO region. This also address an issue where
we clobber registers in future devices.</description><pubDate>Tue, 27 Feb 2024 06:57:39 +0000</pubDate></item><item><title>CVE-2021-46918 | dmaengine: idxd: clear MSIX permission entry on shutdown</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46918</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: idxd: clear MSIX permission entry on shutdown

Add disabling/clearing of MSIX permission entries on device shutdown to
mirror the enabling of the MSIX entries on probe. Current code left the
MSIX enabled and the pasid entries still programmed at device shutdown.</description><pubDate>Tue, 27 Feb 2024 06:57:40 +0000</pubDate></item><item><title>CVE-2021-46919 | dmaengine: idxd: fix wq size store permission state</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46919</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: idxd: fix wq size store permission state

WQ size can only be changed when the device is disabled. Current code
allows change when device is enabled but wq is disabled. Change the check
to detect device state.</description><pubDate>Tue, 27 Feb 2024 06:57:40 +0000</pubDate></item><item><title>CVE-2024-1686 | The Thank You Page Customizer for WooCommerce â Increase Your Sales plugin for WordPress is vulnerable to missing authorization e in all ver...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1686</link><description>The Thank You Page Customizer for WooCommerce â Increase Your Sales plugin for WordPress is vulnerable to missing authorization e in all versions up to, and including, 1.1.2 via the apply_layout function due to a missing capability check. This makes it possible for authenticated attackers, with subscriber-level access and above, to retrieve arbitrary order data which may contain PII.</description><pubDate>Tue, 27 Feb 2024 05:39:34 +0000</pubDate></item><item><title>CVE-2024-1687 | The Thank You Page Customizer for WooCommerce â Increase Your Sales plugin for WordPress is vulnerable to unauthorized execution of shortcod...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1687</link><description>The Thank You Page Customizer for WooCommerce â Increase Your Sales plugin for WordPress is vulnerable to unauthorized execution of shortcodes due to a missing capability check on the get_text_editor_content() function in all versions up to, and including, 1.1.2. This makes it possible for authenticated attackers, with subscriber-level access and above, to execute arbitrary shortcodes.</description><pubDate>Tue, 27 Feb 2024 05:39:35 +0000</pubDate></item><item><title>CVE-2024-1698 | The NotificationX â Best FOMO, Social Proof, WooCommerce Sales Popup &amp; Notification Bar Plugin With Elementor plugin for WordPress is vulner...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1698</link><description>The NotificationX â Best FOMO, Social Proof, WooCommerce Sales Popup &amp; Notification Bar Plugin With Elementor plugin for WordPress is vulnerable to SQL Injection via the 'type' parameter in all versions up to, and including, 2.8.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Tue, 27 Feb 2024 05:39:35 +0000</pubDate></item><item><title>CVE-2024-0759 | Collection of internally resolving IPs</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0759</link><description>Should an instance of AnythingLLM be hosted on an internal network and the attacked be explicitly granted a permission level of manager or admin, they could link-scrape internally resolving IPs of other services that are on the same network as AnythingLLM.

This would require the attacker also be able to guess these internal IPs as `/*` ranging is not possible, but could be brute forced.

There is a duty of care that other services on the same network would not be fully open and accessible via a simple CuRL with zero authentication as it is not possible to set headers or access via the link collector.</description><pubDate>Tue, 27 Feb 2024 05:25:27 +0000</pubDate></item><item><title>CVE-2024-1323 | The Orbit Fox by ThemeIsle plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Post Type Grid Widget Title in...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1323</link><description>The Orbit Fox by ThemeIsle plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Post Type Grid Widget Title in all versions up to, and including, 2.10.30 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 27 Feb 2024 04:43:11 +0000</pubDate></item><item><title>CVE-2023-7033 | Insufficient Resource Pool vulnerability in Ethernet function of Mitsubishi Electric Corporation MELSEC iQ-F Series CPU modules allows a rem...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-7033</link><description>Insufficient Resource Pool vulnerability in Ethernet function of Mitsubishi Electric Corporation MELSEC iQ-F Series CPU modules allows a remote attacker to cause a temporary Denial of Service condition for a certain period of time in Ethernet communication of the products by performing TCP SYN Flood attack.</description><pubDate>Tue, 27 Feb 2024 03:52:12 +0000</pubDate></item><item><title>CVE-2024-24099 | Code-projects Scholars Tracking System 1.0 is vulnerable to SQL Injection under Employment Status Information Update.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24099</link><description>Code-projects Scholars Tracking System 1.0 is vulnerable to SQL Injection under Employment Status Information Update.</description><pubDate>Tue, 27 Feb 2024 02:23:15 +0000</pubDate></item><item><title>CVE-2024-24096 | Code-projects Computer Book Store 1.0 is vulnerable to SQL Injection via BookSBIN.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24096</link><description>Code-projects Computer Book Store 1.0 is vulnerable to SQL Injection via BookSBIN.</description><pubDate>Tue, 27 Feb 2024 02:03:38 +0000</pubDate></item><item><title>CVE-2024-24100 | Code-projects Computer Book Store 1.0 is vulnerable to SQL Injection via PublisherID.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24100</link><description>Code-projects Computer Book Store 1.0 is vulnerable to SQL Injection via PublisherID.</description><pubDate>Tue, 27 Feb 2024 02:03:39 +0000</pubDate></item><item><title>CVE-2023-41506 | An arbitrary file upload vulnerability in the Update/Edit Student's Profile Picture function of Student Enrollment In PHP v1.0 allows attack...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-41506</link><description>An arbitrary file upload vulnerability in the Update/Edit Student's Profile Picture function of Student Enrollment In PHP v1.0 allows attackers to execute arbitrary code via uploading a crafted PHP file.</description><pubDate>Tue, 27 Feb 2024 01:32:43 +0000</pubDate></item><item><title>CVE-2024-22917 | SQL injection vulnerability in Dynamic Lab Management System Project in PHP v.1.0 allows a remote attacker to execute arbitrary code via a c...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22917</link><description>SQL injection vulnerability in Dynamic Lab Management System Project in PHP v.1.0 allows a remote attacker to execute arbitrary code via a crafted script.</description><pubDate>Tue, 27 Feb 2024 01:32:43 +0000</pubDate></item><item><title>CVE-2024-24095 | Code-projects Simple Stock System 1.0 is vulnerable to SQL Injection.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24095</link><description>Code-projects Simple Stock System 1.0 is vulnerable to SQL Injection.</description><pubDate>Tue, 27 Feb 2024 01:32:43 +0000</pubDate></item><item><title>CVE-2024-22543 | An issue was discovered in Linksys Router E1700 1.0.04 (build 3), allows authenticated attackers to escalate privileges via a crafted GET re...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22543</link><description>An issue was discovered in Linksys Router E1700 1.0.04 (build 3), allows authenticated attackers to escalate privileges via a crafted GET request to the /goform/* URI or via the ExportSettings function.</description><pubDate>Tue, 27 Feb 2024 01:32:44 +0000</pubDate></item><item><title>CVE-2024-22544 | An issue was discovered in Linksys Router E1700 version 1.0.04 (build 3), allows authenticated attackers to execute arbitrary code via the s...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22544</link><description>An issue was discovered in Linksys Router E1700 version 1.0.04 (build 3), allows authenticated attackers to execute arbitrary code via the setDateTime function.</description><pubDate>Tue, 27 Feb 2024 01:32:44 +0000</pubDate></item><item><title>CVE-2024-24720 | An issue was discovered on Innovaphone PBX before 14r1 devices. It provides different responses to incoming requests in a way that reveals i...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24720</link><description>An issue was discovered on Innovaphone PBX before 14r1 devices. It provides different responses to incoming requests in a way that reveals information to an attacker.</description><pubDate>Tue, 27 Feb 2024 00:36:18 +0000</pubDate></item><item><title>CVE-2024-25166 | Cross Site Scripting vulnerability in 71CMS v.1.0.0 allows a remote attacker to execute arbitrary code via the uploadfile action parameter i...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25166</link><description>Cross Site Scripting vulnerability in 71CMS v.1.0.0 allows a remote attacker to execute arbitrary code via the uploadfile action parameter in the controller.php file.</description><pubDate>Tue, 27 Feb 2024 00:36:18 +0000</pubDate></item><item><title>CVE-2024-27356 | An issue was discovered on certain GL-iNet devices. Attackers can download files such as logs via commands, potentially obtaining critical u...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27356</link><description>An issue was discovered on certain GL-iNet devices. Attackers can download files such as logs via commands, potentially obtaining critical user information. This affects MT6000 4.5.5, XE3000 4.4.4, X3000 4.4.5, MT3000 4.5.0, MT2500 4.5.0, AXT1800 4.5.0, AX1800 4.5.0, A1300 4.5.0, S200 4.1.4-0300, X750 4.3.7, SFT1200 4.3.7, XE300 4.3.7, MT1300 4.3.10, AR750 4.3.10, AR750S 4.3.10, AR300M 4.3.10, AR300M16 4.3.10, B1300 4.3.10, MT300N-v2 4.3.10, X300B 3.217, S1300 3.216, SF1200 3.216, MV1000 3.216, N300 3.216, B2200 3.216, and X1200 3.203.</description><pubDate>Tue, 27 Feb 2024 00:36:19 +0000</pubDate></item><item><title>CVE-2024-24721 | An issue was discovered on Innovaphone PBX before 14r1 devices. The password form, used to authenticate, allows a Brute Force Attack through...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24721</link><description>An issue was discovered on Innovaphone PBX before 14r1 devices. The password form, used to authenticate, allows a Brute Force Attack through which an attacker may be able to access the administration panel</description><pubDate>Tue, 27 Feb 2024 00:36:19 +0000</pubDate></item><item><title>CVE-2024-25247 | SQL Injection vulnerability in /app/api/controller/Store.php in Niushop B2B2C V5 allows attackers to run arbitrary SQL commands via latitude...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25247</link><description>SQL Injection vulnerability in /app/api/controller/Store.php in Niushop B2B2C V5 allows attackers to run arbitrary SQL commands via latitude and longitude parameters.</description><pubDate>Mon, 26 Feb 2024 22:33:40 +0000</pubDate></item><item><title>CVE-2024-25248 | SQL Injection vulnerability in the orderGoodsDelivery() function in Niushop B2B2C V5 allows attackers to run arbitrary SQL commands via the ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25248</link><description>SQL Injection vulnerability in the orderGoodsDelivery() function in Niushop B2B2C V5 allows attackers to run arbitrary SQL commands via the order_id parameter.</description><pubDate>Mon, 26 Feb 2024 22:26:26 +0000</pubDate></item><item><title>CVE-2024-27093 | Minder trusts client-provided mapping from repo name to upstream ID</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27093</link><description>Minder is a Software Supply Chain Security Platform. In version 0.0.31 and earlier, it is possible for an attacker to register a repository with a invalid or differing upstream ID, which causes Minder to report the repository as registered, but not remediate any future changes which conflict with policy (because the webhooks for the repo do not match any known repository in the database).  When attempting to register a repo with a different repo ID, the registered provider must have admin on the named repo, or a 404 error will result.  Similarly, if the stored provider token does not have repo access, then the remediations will not apply successfully.  Lastly, it appears that reconciliation actions do not execute against repos with this type of mismatch. This appears to primarily be a potential denial-of-service vulnerability.  This vulnerability is patched in version 0.20240226.1425+ref.53868a8.</description><pubDate>Mon, 26 Feb 2024 21:57:46 +0000</pubDate></item><item><title>CVE-2023-36237 | Cross Site Request Forgery vulnerability in Bagisto before v.1.5.1 allows an attacker to execute arbitrary code via a crafted HTML script.</title><link>https://www.cve.org/CVERecord?id=CVE-2023-36237</link><description>Cross Site Request Forgery vulnerability in Bagisto before v.1.5.1 allows an attacker to execute arbitrary code via a crafted HTML script.</description><pubDate>Mon, 26 Feb 2024 21:57:47 +0000</pubDate></item><item><title>CVE-2024-25751 | A Stack Based Buffer Overflow vulnerability in Tenda AC9 v.3.0 with firmware version v.15.03.06.42_multi allows a remote attacker to execute...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25751</link><description>A Stack Based Buffer Overflow vulnerability in Tenda AC9 v.3.0 with firmware version v.15.03.06.42_multi allows a remote attacker to execute arbitrary code via the fromSetSysTime function.</description><pubDate>Mon, 26 Feb 2024 21:29:34 +0000</pubDate></item><item><title>CVE-2024-24564 | Vyper extract32 can ready dirty memory</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24564</link><description>Vyper is a pythonic Smart Contract Language for the ethereum virtual machine. When using the built-in `extract32(b, start)`, if the `start` index provided has for side effect to update `b`, the byte array to extract `32` bytes from, it could be that some dirty memory is read and returned by `extract32`. This vulnerability affects 0.3.10 and earlier versions.</description><pubDate>Mon, 26 Feb 2024 20:24:44 +0000</pubDate></item><item><title>CVE-2024-26149 | Vyper _abi_decode Memory Overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26149</link><description>Vyper is a pythonic Smart Contract Language for the ethereum virtual machine. If an excessively large value is specified as the starting index for an array in `_abi_decode`, it can cause the read position to overflow. This results in the decoding of values outside the intended array bounds, potentially leading to exploitations in contracts that use arrays within `_abi_decode`. This vulnerability affects 0.3.10 and earlier versions.</description><pubDate>Mon, 26 Feb 2024 20:24:44 +0000</pubDate></item><item><title>CVE-2024-27092 | Content spoofing - real Hoppscotch emails</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27092</link><description>Hoppscotch is an API development ecosystem.  Due to lack of validation for fields like Label (Edit Team) - TeamName, bad actors can send emails with Spoofed Content as Hoppscotch. Part of payload (external link) is presented in clickable form - easier to achieve own goals by malicious actors.  This issue is fixed in 2023.12.6.</description><pubDate>Mon, 26 Feb 2024 19:44:56 +0000</pubDate></item><item><title>CVE-2024-26458 | Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26458</link><description>Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.</description><pubDate>Mon, 26 Feb 2024 19:30:53 +0000</pubDate></item><item><title>CVE-2024-26461 | Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26461</link><description>Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.</description><pubDate>Mon, 26 Feb 2024 19:23:58 +0000</pubDate></item><item><title>CVE-2024-26462 | Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26462</link><description>Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.</description><pubDate>Mon, 26 Feb 2024 19:16:52 +0000</pubDate></item><item><title>CVE-2024-1899 | Showdownjs Denial of Service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1899</link><description>An issue in the anchors subparser of Showdownjs versions &lt;= 2.1.0 could allow a remote attacker to cause denial of service conditions.</description><pubDate>Mon, 26 Feb 2024 18:50:47 +0000</pubDate></item><item><title>CVE-2024-26455 | fluent-bit 2.2.2 contains a Use-After-Free vulnerability in /fluent-bit/plugins/custom_calyptia/calyptia.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26455</link><description>fluent-bit 2.2.2 contains a Use-After-Free vulnerability in /fluent-bit/plugins/custom_calyptia/calyptia.c.</description><pubDate>Mon, 26 Feb 2024 18:18:21 +0000</pubDate></item><item><title>CVE-2024-25770 | libming 0.4.8 contains a memory leak vulnerability in /libming/src/actioncompiler/listaction.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25770</link><description>libming 0.4.8 contains a memory leak vulnerability in /libming/src/actioncompiler/listaction.c.</description><pubDate>Mon, 26 Feb 2024 18:18:22 +0000</pubDate></item><item><title>CVE-2024-25768 | OpenDMARC 1.4.2 contains a null pointer dereference vulnerability in /OpenDMARC/libopendmarc/opendmarc_policy.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25768</link><description>OpenDMARC 1.4.2 contains a null pointer dereference vulnerability in /OpenDMARC/libopendmarc/opendmarc_policy.c.</description><pubDate>Mon, 26 Feb 2024 17:59:35 +0000</pubDate></item><item><title>CVE-2019-25160 | netlabel: fix out-of-bounds memory accesses</title><link>https://www.cve.org/CVERecord?id=CVE-2019-25160</link><description>In the Linux kernel, the following vulnerability has been resolved:

netlabel: fix out-of-bounds memory accesses

There are two array out-of-bounds memory accesses, one in
cipso_v4_map_lvl_valid(), the other in netlbl_bitmap_walk().  Both
errors are embarassingly simple, and the fixes are straightforward.

As a FYI for anyone backporting this patch to kernels prior to v4.8,
you'll want to apply the netlbl_bitmap_walk() patch to
cipso_v4_bitmap_walk() as netlbl_bitmap_walk() doesn't exist before
Linux v4.8.</description><pubDate>Mon, 26 Feb 2024 17:31:50 +0000</pubDate></item><item><title>CVE-2019-25162 | i2c: Fix a potential use after free</title><link>https://www.cve.org/CVERecord?id=CVE-2019-25162</link><description>In the Linux kernel, the following vulnerability has been resolved:

i2c: Fix a potential use after free

Free the adap structure only after we are done using it.
This patch just moves the put_device() down a bit to avoid the
use after free.

[wsa: added comment to the code, added Fixes tag]</description><pubDate>Mon, 26 Feb 2024 17:31:50 +0000</pubDate></item><item><title>CVE-2020-36775 | f2fs: fix to avoid potential deadlock</title><link>https://www.cve.org/CVERecord?id=CVE-2020-36775</link><description>In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to avoid potential deadlock

Using f2fs_trylock_op() in f2fs_write_compressed_pages() to avoid potential
deadlock like we did in f2fs_write_single_data_page().</description><pubDate>Mon, 26 Feb 2024 17:31:51 +0000</pubDate></item><item><title>CVE-2021-46906 | HID: usbhid: fix info leak in hid_submit_ctrl</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46906</link><description>In the Linux kernel, the following vulnerability has been resolved:

HID: usbhid: fix info leak in hid_submit_ctrl

In hid_submit_ctrl(), the way of calculating the report length doesn't
take into account that report-&gt;size can be zero. When running the
syzkaller reproducer, a report of size 0 causes hid_submit_ctrl) to
calculate transfer_buffer_length as 16384. When this urb is passed to
the usb core layer, KMSAN reports an info leak of 16384 bytes.

To fix this, first modify hid_report_len() to account for the zero
report size case by using DIV_ROUND_UP for the division. Then, call it
from hid_submit_ctrl().</description><pubDate>Mon, 26 Feb 2024 17:31:51 +0000</pubDate></item><item><title>CVE-2023-52474 | IB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52474</link><description>In the Linux kernel, the following vulnerability has been resolved:

IB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests

hfi1 user SDMA request processing has two bugs that can cause data
corruption for user SDMA requests that have multiple payload iovecs
where an iovec other than the tail iovec does not run up to the page
boundary for the buffer pointed to by that iovec.a

Here are the specific bugs:
1. user_sdma_txadd() does not use struct user_sdma_iovec-&gt;iov.iov_len.
   Rather, user_sdma_txadd() will add up to PAGE_SIZE bytes from iovec
   to the packet, even if some of those bytes are past
   iovec-&gt;iov.iov_len and are thus not intended to be in the packet.
2. user_sdma_txadd() and user_sdma_send_pkts() fail to advance to the
   next iovec in user_sdma_request-&gt;iovs when the current iovec
   is not PAGE_SIZE and does not contain enough data to complete the
   packet. The transmitted packet will contain the wrong data from the
   iovec pages.

This has not been an issue with SDMA packets from hfi1 Verbs or PSM2
because they only produce iovecs that end short of PAGE_SIZE as the tail
iovec of an SDMA request.

Fixing these bugs exposes other bugs with the SDMA pin cache
(struct mmu_rb_handler) that get in way of supporting user SDMA requests
with multiple payload iovecs whose buffers do not end at PAGE_SIZE. So
this commit fixes those issues as well.

Here are the mmu_rb_handler bugs that non-PAGE_SIZE-end multi-iovec
payload user SDMA requests can hit:
1. Overlapping memory ranges in mmu_rb_handler will result in duplicate
   pinnings.
2. When extending an existing mmu_rb_handler entry (struct mmu_rb_node),
   the mmu_rb code (1) removes the existing entry under a lock, (2)
   releases that lock, pins the new pages, (3) then reacquires the lock
   to insert the extended mmu_rb_node.

   If someone else comes in and inserts an overlapping entry between (2)
   and (3), insert in (3) will fail.

   The failure path code in this case unpins _all_ pages in either the
   original mmu_rb_node or the new mmu_rb_node that was inserted between
   (2) and (3).
3. In hfi1_mmu_rb_remove_unless_exact(), mmu_rb_node-&gt;refcount is
   incremented outside of mmu_rb_handler-&gt;lock. As a result, mmu_rb_node
   could be evicted by another thread that gets mmu_rb_handler-&gt;lock and
   checks mmu_rb_node-&gt;refcount before mmu_rb_node-&gt;refcount is
   incremented.
4. Related to #2 above, SDMA request submission failure path does not
   check mmu_rb_node-&gt;refcount before freeing mmu_rb_node object.

   If there are other SDMA requests in progress whose iovecs have
   pointers to the now-freed mmu_rb_node(s), those pointers to the
   now-freed mmu_rb nodes will be dereferenced when those SDMA requests
   complete.</description><pubDate>Mon, 26 Feb 2024 17:31:52 +0000</pubDate></item><item><title>CVE-2024-25767 | nanomq 0.21.2 contains a Use-After-Free vulnerability in /nanomq/nng/src/core/socket.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25767</link><description>nanomq 0.21.2 contains a Use-After-Free vulnerability in /nanomq/nng/src/core/socket.c.</description><pubDate>Mon, 26 Feb 2024 16:53:46 +0000</pubDate></item><item><title>CVE-2024-27088 | es5-ext Regular Expression Denial of Service in `function#copy` and `function#toStringTokens`</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27088</link><description>es5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into `function#copy` or `function#toStringTokens` may cause the script to stall. The vulnerability is patched in v0.10.63.</description><pubDate>Mon, 26 Feb 2024 16:53:47 +0000</pubDate></item><item><title>CVE-2024-27087 | Kirby cross-site scripting (XSS) in the link field &amp;quot;Custom&amp;quot; type</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27087</link><description>Kirby is a content management system. The new link field introduced in Kirby 4 allows several different link types that each validate the entered link to the relevant URL format. It also includes a "Custom" link type for advanced use cases that don't fit any of the pre-defined link formats.  As the "Custom" link type is meant to be flexible, it also allows the javascript: URL scheme. In some use cases this can be intended, but it can also be misused by attackers to execute arbitrary JavaScript code when a user or visitor clicks on a link that is generated from the contents of the link field. This vulnerability is patched in 4.1.1.</description><pubDate>Mon, 26 Feb 2024 16:46:46 +0000</pubDate></item><item><title>CVE-2024-27081 | ESPHome remote code execution via arbitrary file write</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27081</link><description>ESPHome is a system to control your ESP8266/ESP32. A security misconfiguration in the edit configuration file API in the dashboard component of ESPHome version 2023.12.9 (command line installation) allows authenticated remote attackers to read and write arbitrary files under the configuration directory rendering remote code execution possible.  This vulnerability is patched in 2024.2.1.</description><pubDate>Mon, 26 Feb 2024 16:39:42 +0000</pubDate></item><item><title>CVE-2024-24401 | SQL Injection vulnerability in Nagios XI 2024R1.01 allows a remote attacker to execute arbitrary code via a crafted payload to the monitorin...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24401</link><description>SQL Injection vulnerability in Nagios XI 2024R1.01 allows a remote attacker to execute arbitrary code via a crafted payload to the monitoringwizard.php component.</description><pubDate>Mon, 26 Feb 2024 16:31:43 +0000</pubDate></item><item><title>CVE-2024-24402 | An issue in Nagios XI 2024R1.01 allows a remote attacker to escalate privileges via a crafted script to the /usr/local/nagios/bin/npcd compo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24402</link><description>An issue in Nagios XI 2024R1.01 allows a remote attacker to escalate privileges via a crafted script to the /usr/local/nagios/bin/npcd component.</description><pubDate>Mon, 26 Feb 2024 16:31:44 +0000</pubDate></item><item><title>CVE-2024-22201 | Jetty connection leaking on idle timeout when TCP congested</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22201</link><description>Jetty is a Java based web server and servlet engine. An HTTP/2 SSL connection that is established and TCP congested will be leaked when it times out. An attacker can cause many connections to end up in this state, and the server may run out of file descriptors, eventually causing the server to stop accepting new connections from valid clients. The vulnerability is patched in 9.4.54, 10.0.20, 11.0.20, and 12.0.6.</description><pubDate>Mon, 26 Feb 2024 16:18:36 +0000</pubDate></item><item><title>CVE-2024-22873 | Tencent Blueking CMDB v3.2.x to v3.9.x was discovered to contain a Server-Side Request Forgery (SSRF) via the event subscription function (/...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22873</link><description>Tencent Blueking CMDB v3.2.x to v3.9.x was discovered to contain a Server-Side Request Forgery (SSRF) via the event subscription function (/service/subscription.go). This vulnerability allows attackers to access internal requests via a crafted POST request.</description><pubDate>Mon, 26 Feb 2024 16:18:37 +0000</pubDate></item><item><title>CVE-2024-23837 | LibHTP unbounded folded header handling leads to denial service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23837</link><description>LibHTP is a security-aware parser for the HTTP protocol. Crafted traffic can cause excessive processing time of HTTP headers, leading to denial of service. This issue is addressed in 0.5.46.</description><pubDate>Mon, 26 Feb 2024 16:18:37 +0000</pubDate></item><item><title>CVE-2024-21802 | A heap-based buffer overflow vulnerability exists in the GGUF library info-&amp;gt;ne functionality of llama.cpp Commit 18c2e17. A specially cra...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21802</link><description>A heap-based buffer overflow vulnerability exists in the GGUF library info-&amp;gt;ne functionality of llama.cpp Commit 18c2e17. A specially crafted .gguf file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.</description><pubDate>Mon, 26 Feb 2024 16:18:38 +0000</pubDate></item><item><title>CVE-2024-21825 | A heap-based buffer overflow vulnerability exists in the GGUF library GGUF_TYPE_ARRAY/GGUF_TYPE_STRING parsing functionality of llama.cpp Co...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21825</link><description>A heap-based buffer overflow vulnerability exists in the GGUF library GGUF_TYPE_ARRAY/GGUF_TYPE_STRING parsing functionality of llama.cpp Commit 18c2e17. A specially crafted .gguf file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.</description><pubDate>Mon, 26 Feb 2024 16:18:38 +0000</pubDate></item><item><title>CVE-2024-21836 | A heap-based buffer overflow vulnerability exists in the GGUF library header.n_tensors functionality of llama.cpp Commit 18c2e17. A speciall...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21836</link><description>A heap-based buffer overflow vulnerability exists in the GGUF library header.n_tensors functionality of llama.cpp Commit 18c2e17. A specially crafted .gguf file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.</description><pubDate>Mon, 26 Feb 2024 16:18:39 +0000</pubDate></item><item><title>CVE-2024-23496 | A heap-based buffer overflow vulnerability exists in the GGUF library gguf_fread_str functionality of llama.cpp Commit 18c2e17. A specially ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23496</link><description>A heap-based buffer overflow vulnerability exists in the GGUF library gguf_fread_str functionality of llama.cpp Commit 18c2e17. A specially crafted .gguf file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.</description><pubDate>Mon, 26 Feb 2024 16:18:39 +0000</pubDate></item><item><title>CVE-2024-23605 | A heap-based buffer overflow vulnerability exists in the GGUF library header.n_kv functionality of llama.cpp Commit 18c2e17. A specially cra...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23605</link><description>A heap-based buffer overflow vulnerability exists in the GGUF library header.n_kv functionality of llama.cpp Commit 18c2e17. A specially crafted .gguf file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.</description><pubDate>Mon, 26 Feb 2024 16:18:40 +0000</pubDate></item><item><title>CVE-2024-25410 | flusity-CMS 2.33 is vulnerable to Unrestricted Upload of File with Dangerous Type in update_setting.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25410</link><description>flusity-CMS 2.33 is vulnerable to Unrestricted Upload of File with Dangerous Type in update_setting.php.</description><pubDate>Mon, 26 Feb 2024 16:18:40 +0000</pubDate></item><item><title>CVE-2024-1436 | WordPress WooCommerce Coupon Popup, SmartBar, Slide In | MyShopKit Plugin &amp;lt;= 1.0.9 is vulnerable to Sensitive Data Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1436</link><description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Wiloke WooCommerce Coupon Popup, SmartBar, Slide In | MyShopKit.This issue affects WooCommerce Coupon Popup, SmartBar, Slide In | MyShopKit: from n/a through 1.0.9.</description><pubDate>Mon, 26 Feb 2024 16:18:41 +0000</pubDate></item><item><title>CVE-2024-24568 | Suricata http2: header handling evasion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24568</link><description>Suricata is a network Intrusion Detection System, Intrusion Prevention System and Network Security Monitoring engine.  Prior to 7.0.3, the rules inspecting HTTP2 headers can get bypassed by crafted traffic. The vulnerability has been patched in 7.0.3.</description><pubDate>Mon, 26 Feb 2024 16:18:41 +0000</pubDate></item><item><title>CVE-2024-23836 | crafted traffic can cause denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23836</link><description>Suricata is a network Intrusion Detection System, Intrusion Prevention System and Network Security Monitoring engine. Prior to versions 6.0.16 and 7.0.3, an attacker can craft traffic to cause Suricata to use far more CPU and memory for processing the traffic than needed, which can lead to extreme slow downs and denial of service.  This vulnerability is patched in 6.0.16 or 7.0.3.  Workarounds include disabling the affected protocol app-layer parser in the yaml and reducing the `stream.reassembly.depth` value helps reduce the severity of the issue.</description><pubDate>Mon, 26 Feb 2024 15:52:53 +0000</pubDate></item><item><title>CVE-2024-23839 | Suricata http: heap use after free with  http.request_header and http.response_header keywords</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23839</link><description>Suricata is a network Intrusion Detection System, Intrusion Prevention System and Network Security Monitoring engine.  Prior to 7.0.3, specially crafted traffic can cause a heap use after free if the ruleset uses the http.request_header or http.response_header keyword.  The vulnerability has been patched in 7.0.3.  To work around the vulnerability, avoid the http.request_header and http.response_header keywords.</description><pubDate>Mon, 26 Feb 2024 15:52:53 +0000</pubDate></item><item><title>CVE-2024-24714 | WordPress Icons Font Loader Plugin &amp;lt;= 1.1.4 is vulnerable to Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24714</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in bPlugins LLC Icons Font Loader.This issue affects Icons Font Loader: from n/a through 1.1.4.</description><pubDate>Mon, 26 Feb 2024 15:45:57 +0000</pubDate></item><item><title>CVE-2024-23835 | Suricata&amp;#x27;s pgsql: memory exhaustion use on record parsing</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23835</link><description>Suricata is a network Intrusion Detection System, Intrusion Prevention System and Network Security Monitoring engine.  Prior to version 7.0.3, excessive memory use during pgsql parsing could lead to OOM-related crashes.  This vulnerability is patched in 7.0.3.  As workaround, users can disable the pgsql app layer parser.</description><pubDate>Mon, 26 Feb 2024 15:38:56 +0000</pubDate></item><item><title>CVE-2024-25763 | openNDS 10.2.0 is vulnerable to Use-After-Free via /openNDS/src/auth.c.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25763</link><description>openNDS 10.2.0 is vulnerable to Use-After-Free via /openNDS/src/auth.c.</description><pubDate>Mon, 26 Feb 2024 15:38:56 +0000</pubDate></item><item><title>CVE-2024-25909 | WordPress WP Media folder Plugin &amp;lt;= 5.7.2 is vulnerable to Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25909</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in JoomUnited WP Media folder.This issue affects WP Media folder: from n/a through 5.7.2.</description><pubDate>Mon, 26 Feb 2024 15:31:53 +0000</pubDate></item><item><title>CVE-2024-25344 | Cross Site Scripting vulnerability in ITFlow.org before commit v.432488eca3998c5be6b6b9e8f8ba01f54bc12378 allows a remtoe attacker to execut...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25344</link><description>Cross Site Scripting vulnerability in ITFlow.org before commit v.432488eca3998c5be6b6b9e8f8ba01f54bc12378 allows a remtoe attacker to execute arbitrary code and obtain sensitive information via the settings.php, settings+company.php, settings_defaults.php,settings_integrations.php, settings_invoice.php, settings_localization.php, settings_mail.php components.</description><pubDate>Mon, 26 Feb 2024 15:31:54 +0000</pubDate></item><item><title>CVE-2024-25913 | WordPress MoveTo Plugin &amp;lt;= 6.2 is vulnerable to Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25913</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in Skymoonlabs MoveTo.This issue affects MoveTo: from n/a through 6.2.</description><pubDate>Mon, 26 Feb 2024 15:24:50 +0000</pubDate></item><item><title>CVE-2023-49959 | In Indo-Sol PROFINET-INspektor NT through 2.4.0, a command injection vulnerability in the gedtupdater service of the firmware allows remote ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49959</link><description>In Indo-Sol PROFINET-INspektor NT through 2.4.0, a command injection vulnerability in the gedtupdater service of the firmware allows remote attackers to execute arbitrary system commands with root privileges via a crafted filename parameter in POST requests to the /api/updater/ctrl/start_update endpoint.</description><pubDate>Mon, 26 Feb 2024 15:16:02 +0000</pubDate></item><item><title>CVE-2023-49960 | In Indo-Sol PROFINET-INspektor NT through 2.4.0, a path traversal vulnerability in the httpuploadd service of the firmware allows remote att...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49960</link><description>In Indo-Sol PROFINET-INspektor NT through 2.4.0, a path traversal vulnerability in the httpuploadd service of the firmware allows remote attackers to write to arbitrary files via a crafted filename parameter in requests to the /upload endpoint.</description><pubDate>Mon, 26 Feb 2024 15:16:03 +0000</pubDate></item><item><title>CVE-2024-25925 | WordPress WooCommerce Easy Checkout Field Editor, Fees &amp;amp; Discounts Plugin &amp;lt;= 3.5.12 is vulnerable to Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25925</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in SYSBASICS WooCommerce Easy Checkout Field Editor, Fees &amp; Discounts.This issue affects WooCommerce Easy Checkout Field Editor, Fees &amp; Discounts: from n/a through 3.5.12.</description><pubDate>Mon, 26 Feb 2024 15:16:03 +0000</pubDate></item><item><title>CVE-2024-26606 | binder: signal epoll threads of self-work</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26606</link><description>In the Linux kernel, the following vulnerability has been resolved:

binder: signal epoll threads of self-work

In (e)poll mode, threads often depend on I/O events to determine when
data is ready for consumption. Within binder, a thread may initiate a
command via BINDER_WRITE_READ without a read buffer and then make use
of epoll_wait() or similar to consume any responses afterwards.

It is then crucial that epoll threads are signaled via wakeup when they
queue their own work. Otherwise, they risk waiting indefinitely for an
event leaving their work unhandled. What is worse, subsequent commands
won't trigger a wakeup either as the thread has pending work.</description><pubDate>Mon, 26 Feb 2024 14:46:28 +0000</pubDate></item><item><title>CVE-2024-1890 | Clickjacking  vulnerability in Sunny Webbox</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1890</link><description>Vulnerability whereby an attacker could send a malicious link to an authenticated operator, which could allow remote attackers to perform a clickjacking attack on Sunny WebBox firmware version 1.6.1 and earlier.</description><pubDate>Mon, 26 Feb 2024 13:49:22 +0000</pubDate></item><item><title>CVE-2024-1622 | Routinator terminates when RTR connection is reset too quickly after opening</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1622</link><description>Due to a mistake in error checking, Routinator will terminate when an incoming RTR connection is reset by the peer too quickly after opening.</description><pubDate>Mon, 26 Feb 2024 13:42:27 +0000</pubDate></item><item><title>CVE-2024-1889 | Cross-Site Request Forgery vulnerability in SMA Cluster Controller</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1889</link><description>Cross-Site Request Forgery vulnerability in SMA Cluster Controller, affecting version 01.05.01.R. This vulnerability could allow an attacker to send a malicious link to an authenticated user to perform actions with these user permissions on the affected device.</description><pubDate>Mon, 26 Feb 2024 13:42:28 +0000</pubDate></item><item><title>CVE-2024-26465 | A DOM based cross-site scripting (XSS) vulnerability in the component /beep/Beep.Instrument.js of stewdio beep.js before commit ef22ad7 allo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26465</link><description>A DOM based cross-site scripting (XSS) vulnerability in the component /beep/Beep.Instrument.js of stewdio beep.js before commit ef22ad7 allows attackers to execute arbitrary Javascript via sending a crafted URL.</description><pubDate>Mon, 26 Feb 2024 13:42:28 +0000</pubDate></item><item><title>CVE-2024-26466 | A DOM based cross-site scripting (XSS) vulnerability in the component /dom/ranges/Range-test-iframe.html of web-platform-tests/wpt before co...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26466</link><description>A DOM based cross-site scripting (XSS) vulnerability in the component /dom/ranges/Range-test-iframe.html of web-platform-tests/wpt before commit 938e843 allows attackers to execute arbitrary Javascript via sending a crafted URL.</description><pubDate>Mon, 26 Feb 2024 13:42:29 +0000</pubDate></item><item><title>CVE-2024-26467 | A DOM based cross-site scripting (XSS) vulnerability in the component generator.html of tabatkins/railroad-diagrams before commit ea9a123 al...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26467</link><description>A DOM based cross-site scripting (XSS) vulnerability in the component generator.html of tabatkins/railroad-diagrams before commit ea9a123 allows attackers to execute arbitrary Javascript via sending a crafted URL.</description><pubDate>Mon, 26 Feb 2024 13:42:29 +0000</pubDate></item><item><title>CVE-2024-26468 | A DOM based cross-site scripting (XSS) vulnerability in the component index.html of jstrieb/urlpages before commit 035b647 allows attackers ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26468</link><description>A DOM based cross-site scripting (XSS) vulnerability in the component index.html of jstrieb/urlpages before commit 035b647 allows attackers to execute arbitrary Javascript via sending a crafted URL.</description><pubDate>Mon, 26 Feb 2024 13:42:29 +0000</pubDate></item><item><title>CVE-2024-0387 | EDS-4000/G4000 Series IP Forwarding Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0387</link><description>The EDS-4000/G4000 Series prior to version 3.2 includes IP forwarding capabilities that users cannot deactivate. An attacker may be able to send requests to the product and have it forwarded to the target. An attacker can bypass access controls or hide the source of malicious requests.</description><pubDate>Mon, 26 Feb 2024 13:28:46 +0000</pubDate></item><item><title>CVE-2023-49114 | Local Privilege Escalation via DLL Hijacking</title><link>https://www.cve.org/CVERecord?id=CVE-2023-49114</link><description>A DLL hijacking vulnerability was identified in the Qognify VMS Client Viewer version 7.1 or higher, which allows local users to execute arbitrary code and obtain higher privileges via careful placement of a malicious DLL, if someÂ specific pre-conditions are met.</description><pubDate>Mon, 26 Feb 2024 12:26:39 +0000</pubDate></item><item><title>CVE-2024-22371 | Apache Camel issue on ExchangeCreatedEvent</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22371</link><description>Exposure of sensitive data by by crafting a malicious EventFactory and providing a custom ExchangeCreatedEvent that exposes sensitive data. Vulnerability in Apache Camel.This issue affects Apache Camel: from 3.21.X through 3.21.3, from 3.22.X through 3.22.0, from 4.0.X through 4.0.3, from 4.X through 4.3.0.

Users are recommended to upgrade to version 3.21.4, 3.22.1, 4.0.4 or 4.4.0, which fixes the issue.</description><pubDate>Mon, 26 Feb 2024 09:33:05 +0000</pubDate></item><item><title>CVE-2024-25081 | Splinefont in FontForge through 20230101 allows command injection via crafted filenames.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25081</link><description>Splinefont in FontForge through 20230101 allows command injection via crafted filenames.</description><pubDate>Mon, 26 Feb 2024 08:46:16 +0000</pubDate></item><item><title>CVE-2024-25082 | Splinefont in FontForge through 20230101 allows command injection via crafted archives or compressed files.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25082</link><description>Splinefont in FontForge through 20230101 allows command injection via crafted archives or compressed files.</description><pubDate>Mon, 26 Feb 2024 08:46:17 +0000</pubDate></item><item><title>CVE-2024-1886 | Absolute path traversal attack on LG Signage TV</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1886</link><description>This vulnerability allows remote attackers to traverse the directory on the affected webOS of LG Signage TV.</description><pubDate>Mon, 26 Feb 2024 07:59:16 +0000</pubDate></item><item><title>CVE-2024-1885 | Remote Code Execution attack on LG Signage TV</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1885</link><description>This vulnerability allows remote attackers to execute arbitrary code on the affected webOS of LG Signage TV.</description><pubDate>Mon, 26 Feb 2024 07:45:16 +0000</pubDate></item><item><title>CVE-2024-1735 | A vulnerability has been identified in armeria-saml versions less than 1.27.2, allowing the use of malicious SAML messages to bypass authent...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1735</link><description>A vulnerability has been identified in armeria-saml versions less than 1.27.2, allowing the use of malicious SAML messages to bypass authentication. All users who rely on armeria-saml older than version 1.27.2 must upgrade to 1.27.2 or later.</description><pubDate>Mon, 26 Feb 2024 07:38:17 +0000</pubDate></item><item><title>CVE-2024-27456 | rack-cors (aka Rack CORS Middleware) 2.0.1 has 0666 permissions for the .rb files.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27456</link><description>rack-cors (aka Rack CORS Middleware) 2.0.1 has 0666 permissions for the .rb files.</description><pubDate>Mon, 26 Feb 2024 07:15:58 +0000</pubDate></item><item><title>CVE-2024-27455 | In the Bentley ALIM Web application, certain configuration settings can cause exposure of a user's ALIM session token when the user attempts...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27455</link><description>In the Bentley ALIM Web application, certain configuration settings can cause exposure of a user's ALIM session token when the user attempts to download files. This is fixed in Assetwise ALIM Web 23.00.02.03 and Assetwise Information Integrity Server 23.00.04.04.</description><pubDate>Mon, 26 Feb 2024 05:53:31 +0000</pubDate></item><item><title>CVE-2024-27454 | orjson.loads in orjson before 3.9.15 does not limit recursion for deeply nested JSON documents.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27454</link><description>orjson.loads in orjson before 3.9.15 does not limit recursion for deeply nested JSON documents.</description><pubDate>Mon, 26 Feb 2024 05:53:32 +0000</pubDate></item><item><title>CVE-2024-27447 | pretix before 2024.1.1 mishandles file validation.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27447</link><description>pretix before 2024.1.1 mishandles file validation.</description><pubDate>Mon, 26 Feb 2024 05:25:54 +0000</pubDate></item><item><title>CVE-2024-27444 | langchain_experimental (aka LangChain Experimental) in LangChain before 0.1.8 allows an attacker to bypass the CVE-2023-44467 fix and execut...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27444</link><description>langchain_experimental (aka LangChain Experimental) in LangChain before 0.1.8 allows an attacker to bypass the CVE-2023-44467 fix and execute arbitrary code via the __import__, __subclasses__, __builtins__, __globals__, __getattribute__, __bases__, __mro__, or __base__ attribute in Python code. These are not prohibited by pal_chain/base.py.</description><pubDate>Mon, 26 Feb 2024 04:50:34 +0000</pubDate></item><item><title>CVE-2024-1877 | SourceCodester Employee Management System cancel.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1877</link><description>A vulnerability was found in SourceCodester Employee Management System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /cancel.php. The manipulation of the argument id with the input 1%20or%201=1 leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-254725 was assigned to this vulnerability.</description><pubDate>Mon, 26 Feb 2024 01:33:51 +0000</pubDate></item><item><title>CVE-2024-1878 | SourceCodester Employee Management System myprofile.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1878</link><description>A vulnerability was found in SourceCodester Employee Management System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file /myprofile.php. The manipulation of the argument id with the input 1%20or%201=1 leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-254726 is the identifier assigned to this vulnerability.</description><pubDate>Mon, 26 Feb 2024 01:33:52 +0000</pubDate></item><item><title>CVE-2024-1876 | SourceCodester Employee Management System psubmit.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1876</link><description>A vulnerability was found in SourceCodester Employee Management System 1.0. It has been classified as critical. Affected is an unknown function of the file /psubmit.php. The manipulation of the argument pid with the input '+or+1%3d1%23 leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-254724.</description><pubDate>Mon, 26 Feb 2024 01:33:52 +0000</pubDate></item><item><title>CVE-2024-1875 | SourceCodester Complaint Management System Lodge Complaint Section register-complaint.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1875</link><description>A vulnerability was found in SourceCodester Complaint Management System 1.0 and classified as critical. This issue affects some unknown processing of the file users/register-complaint.php of the component Lodge Complaint Section. The manipulation leads to unrestricted upload. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-254723.</description><pubDate>Sun, 25 Feb 2024 23:33:34 +0000</pubDate></item><item><title>CVE-2024-0439 | User can manually send request at manager permission to modify system configurations</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0439</link><description>As a manager, you should not be able to modify a series of settings. In the UI this is indeed hidden as a convenience for the role since most managers would not be savvy enough to modify these settings. They can use their token to still modify those settings though through a standard HTTP request

While this is not a critical vulnerability, it does indeed need to be patched to enforce the expected permission level.</description><pubDate>Sun, 25 Feb 2024 19:51:16 +0000</pubDate></item><item><title>CVE-2024-0440 | SSRF - file:// unsanitized access to underlying host files</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0440</link><description>Attacker, with permission to submit a link or submits a link via POST  to be collected that is using the file:// protocol can then introspect host files and other relatively stored files.</description><pubDate>Sun, 25 Feb 2024 19:16:03 +0000</pubDate></item><item><title>CVE-2024-0435 | User can submit message to self-XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0435</link><description>User can send a chat that contains an XSS opportunity that will then run when the chat is sent and on subsequent page loads.

Given the minimum requirement for a user to send a chat is to be given access to a workspace via an admin the risk is low. Additionally, the location in which the XSS renders is only limited to the user who submits the XSS. 

Ultimately, this attack is limited to the user attacking themselves. There is no anonymous chat submission unless the user does not take the minimum steps required to protect their instance.</description><pubDate>Sun, 25 Feb 2024 17:23:56 +0000</pubDate></item><item><title>CVE-2024-0798 | Privilege bypass to delete uploaded documents or folders</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0798</link><description>A user with a `default` role given to them by the admin can sent `DELETE` HTTP requests to `remove-folder` and `remove-document` to delete folders and source files from the instance even when their role should explicitly not allow this action on the system.</description><pubDate>Sun, 25 Feb 2024 16:49:51 +0000</pubDate></item><item><title>CVE-2024-0436 | Prevent timing attack for single-user password check</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0436</link><description>Theoretically, it would be possible for an attacker to brute-force the password for an instance in single-user password protection mode via a timing attack given the linear nature of the `!==` used for comparison.

The risk is minified by the additional overhead of the request, which varies in a non-constant nature making the attack less reliable to execute</description><pubDate>Sun, 25 Feb 2024 16:36:16 +0000</pubDate></item><item><title>CVE-2021-46904 | net: hso: fix null-ptr-deref during tty device unregistration</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46904</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hso: fix null-ptr-deref during tty device unregistration

Multiple ttys try to claim the same the minor number causing a double
unregistration of the same device. The first unregistration succeeds
but the next one results in a null-ptr-deref.

The get_free_serial_index() function returns an available minor number
but doesn't assign it immediately. The assignment is done by the caller
later. But before this assignment, calls to get_free_serial_index()
would return the same minor number.

Fix this by modifying get_free_serial_index to assign the minor number
immediately after one is found to be and rename it to obtain_minor()
to better reflect what it does. Similary, rename set_serial_by_index()
to release_minor() and modify it to free up the minor number of the
given hso_serial. Every obtain_minor() should have corresponding
release_minor() call.</description><pubDate>Sun, 25 Feb 2024 14:09:29 +0000</pubDate></item><item><title>CVE-2021-46905 | net: hso: fix NULL-deref on disconnect regression</title><link>https://www.cve.org/CVERecord?id=CVE-2021-46905</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hso: fix NULL-deref on disconnect regression

Commit 8a12f8836145 ("net: hso: fix null-ptr-deref during tty device
unregistration") fixed the racy minor allocation reported by syzbot, but
introduced an unconditional NULL-pointer dereference on every disconnect
instead.

Specifically, the serial device table must no longer be accessed after
the minor has been released by hso_serial_tty_unregister().</description><pubDate>Sun, 25 Feb 2024 14:09:29 +0000</pubDate></item><item><title>CVE-2022-48626 | moxart: fix potential use-after-free on remove path</title><link>https://www.cve.org/CVERecord?id=CVE-2022-48626</link><description>In the Linux kernel, the following vulnerability has been resolved:

moxart: fix potential use-after-free on remove path

It was reported that the mmc host structure could be accessed after it
was freed in moxart_remove(), so fix this by saving the base register of
the device and using it instead of the pointer dereference.</description><pubDate>Sun, 25 Feb 2024 14:09:30 +0000</pubDate></item><item><title>CVE-2023-52465 | power: supply: Fix null pointer dereference in smb2_probe</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52465</link><description>In the Linux kernel, the following vulnerability has been resolved:

power: supply: Fix null pointer dereference in smb2_probe

devm_kasprintf and devm_kzalloc return a pointer to dynamically
allocated memory which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:20 +0000</pubDate></item><item><title>CVE-2023-52466 | PCI: Avoid potential out-of-bounds read in pci_dev_for_each_resource()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52466</link><description>In the Linux kernel, the following vulnerability has been resolved:

PCI: Avoid potential out-of-bounds read in pci_dev_for_each_resource()

Coverity complains that pointer in the pci_dev_for_each_resource() may be
wrong, i.e., might be used for the out-of-bounds read.

There is no actual issue right now because we have another check afterwards
and the out-of-bounds read is not being performed. In any case it's better
code with this fixed, hence the proposed change.

As Jonas pointed out "It probably makes the code slightly less performant
as res will now be checked for being not NULL (which will always be true),
but I doubt it will be significant (or in any hot paths)."</description><pubDate>Sun, 25 Feb 2024 08:26:20 +0000</pubDate></item><item><title>CVE-2023-52467 | mfd: syscon: Fix null pointer dereference in of_syscon_register()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52467</link><description>In the Linux kernel, the following vulnerability has been resolved:

mfd: syscon: Fix null pointer dereference in of_syscon_register()

kasprintf() returns a pointer to dynamically allocated memory
which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52468 | class: fix use-after-free in class_register()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52468</link><description>In the Linux kernel, the following vulnerability has been resolved:

class: fix use-after-free in class_register()

The lock_class_key is still registered and can be found in
lock_keys_hash hlist after subsys_private is freed in error
handler path.A task who iterate over the lock_keys_hash
later may cause use-after-free.So fix that up and unregister
the lock_class_key before kfree(cp).

On our platform, a driver fails to kset_register because of
creating duplicate filename '/class/xxx'.With Kasan enabled,
it prints a invalid-access bug report.

KASAN bug report:

BUG: KASAN: invalid-access in lockdep_register_key+0x19c/0x1bc
Write of size 8 at addr 15ffff808b8c0368 by task modprobe/252
Pointer tag: [15], memory tag: [fe]

CPU: 7 PID: 252 Comm: modprobe Tainted: G        W
 6.6.0-mainline-maybe-dirty #1

Call trace:
dump_backtrace+0x1b0/0x1e4
show_stack+0x2c/0x40
dump_stack_lvl+0xac/0xe0
print_report+0x18c/0x4d8
kasan_report+0xe8/0x148
__hwasan_store8_noabort+0x88/0x98
lockdep_register_key+0x19c/0x1bc
class_register+0x94/0x1ec
init_module+0xbc/0xf48 [rfkill]
do_one_initcall+0x17c/0x72c
do_init_module+0x19c/0x3f8
...
Memory state around the buggy address:
ffffff808b8c0100: 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a 8a
ffffff808b8c0200: 8a 8a 8a 8a 8a 8a 8a 8a fe fe fe fe fe fe fe fe
&gt;ffffff808b8c0300: fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe
                                     ^
ffffff808b8c0400: 03 03 03 03 03 03 03 03 03 03 03 03 03 03 03 03

As CONFIG_KASAN_GENERIC is not set, Kasan reports invalid-access
not use-after-free here.In this case, modprobe is manipulating
the corrupted lock_keys_hash hlish where lock_class_key is already
freed before.

It's worth noting that this only can happen if lockdep is enabled,
which is not true for normal system.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52469 | drivers/amd/pm: fix a use-after-free in kv_parse_power_table</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52469</link><description>In the Linux kernel, the following vulnerability has been resolved:

drivers/amd/pm: fix a use-after-free in kv_parse_power_table

When ps allocated by kzalloc equals to NULL, kv_parse_power_table
frees adev-&gt;pm.dpm.ps that allocated before. However, after the control
flow goes through the following call chains:

kv_parse_power_table
  |-&gt; kv_dpm_init
        |-&gt; kv_dpm_sw_init
	      |-&gt; kv_dpm_fini

The adev-&gt;pm.dpm.ps is used in the for loop of kv_dpm_fini after its
first free in kv_parse_power_table and causes a use-after-free bug.</description><pubDate>Sun, 25 Feb 2024 08:26:21 +0000</pubDate></item><item><title>CVE-2023-52470 | drm/radeon: check the alloc_workqueue return value in radeon_crtc_init()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52470</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/radeon: check the alloc_workqueue return value in radeon_crtc_init()

check the alloc_workqueue return value in radeon_crtc_init()
to avoid null-ptr-deref.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52471 | ice: Fix some null pointer dereference issues in ice_ptp.c</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52471</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: Fix some null pointer dereference issues in ice_ptp.c

devm_kasprintf() returns a pointer to dynamically allocated memory
which can be NULL upon failure.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52472 | crypto: rsa - add a check for allocation failure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52472</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: rsa - add a check for allocation failure

Static checkers insist that the mpi_alloc() allocation can fail so add
a check to prevent a NULL dereference.  Small allocations like this
can't actually fail in current kernels, but adding a check is very
simple and makes the static checkers happy.</description><pubDate>Sun, 25 Feb 2024 08:26:22 +0000</pubDate></item><item><title>CVE-2023-52473 | thermal: core: Fix NULL pointer dereference in zone registration error path</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52473</link><description>In the Linux kernel, the following vulnerability has been resolved:

thermal: core: Fix NULL pointer dereference in zone registration error path

If device_register() in thermal_zone_device_register_with_trips()
returns an error, the tz variable is set to NULL and subsequently
dereferenced in kfree(tz-&gt;tzp).

Commit adc8749b150c ("thermal/drivers/core: Use put_device() if
device_register() fails") added the tz = NULL assignment in question to
avoid a possible double-free after dropping the reference to the zone
device.  However, after commit 4649620d9404 ("thermal: core: Make
thermal_zone_device_unregister() return after freeing the zone"), that
assignment has become redundant, because dropping the reference to the
zone device does not cause the zone object to be freed any more.

Drop it to address the NULL pointer dereference.</description><pubDate>Sun, 25 Feb 2024 08:26:23 +0000</pubDate></item><item><title>CVE-2024-0455 | SSRF on AWS deployed instances of AnythingLLM via /metadata</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0455</link><description>The inclusion of the web scraper for AnythingLLM means that any user with the proper authorization level (manager, admin, and when in single user) could put in the URL
```
http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance
```
which is a special IP and URL that resolves only when the request comes from within an EC2 instance. This would allow the user to see the connection/secret credentials for their specific instance and be able to manage it regardless of who deployed it.

The user would have to have pre-existing knowledge of the hosting infra which the target instance is deployed on, but if sent - would resolve if on EC2 and the proper `iptable` or firewall rule is not configured for their setup.</description><pubDate>Sun, 25 Feb 2024 08:26:23 +0000</pubDate></item><item><title>CVE-2024-27359 | Certain WithSecure products allow a Denial of Service because the engine scanner can go into an infinite loop when processing an archive fil...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27359</link><description>Certain WithSecure products allow a Denial of Service because the engine scanner can go into an infinite loop when processing an archive file. This affects WithSecure Client Security 15, WithSecure Server Security 15, WithSecure Email and Server Security 15, WithSecure Elements Endpoint Protection 17 and later, WithSecure Client Security for Mac 15, WithSecure Elements Endpoint Protection for Mac 17 and later, WithSecure Linux Security 64 12.0, WithSecure Linux Protection 12.0, and WithSecure Atlant 1.0.35-1.</description><pubDate>Sun, 25 Feb 2024 07:02:09 +0000</pubDate></item><item><title>CVE-2024-27350 | Amazon Fire OS 7 before 7.6.6.9 and 8 before 8.1.0.3 allows Fire TV applications to establish local ADB (Android Debug Bridge) connections. ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27350</link><description>Amazon Fire OS 7 before 7.6.6.9 and 8 before 8.1.0.3 allows Fire TV applications to establish local ADB (Android Debug Bridge) connections. NOTE: some third parties dispute whether this has security relevance, because an ADB connection is only possible after the (non-default) ADB Debugging option is enabled, and after the initiator of that specific connection attempt has been approved via a full-screen prompt.</description><pubDate>Sun, 25 Feb 2024 03:51:01 +0000</pubDate></item></channel></rss>