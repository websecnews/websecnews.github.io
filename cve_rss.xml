<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Mon, 18 Aug 2025 14:28:45 +0000</lastBuildDate><item><title>CVE-2025-33100 | IBM Concert Software information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2025-33100</link><description>IBM Concert Software 1.0.0 through 1.1.0 

contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</description><pubDate>Mon, 18 Aug 2025 14:28:47 +0000</pubDate></item><item><title>CVE-2025-1759 | IBM Concert Software information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2025-1759</link><description>IBM Concert Software 1.0.0 through 1.1.0 could allow a remote attacker to obtain sensitive information from allocated memory due to improper clearing of heap memory.</description><pubDate>Mon, 18 Aug 2025 14:28:48 +0000</pubDate></item><item><title>CVE-2025-27909 | IBM Concert Software cross-origin resource sharing</title><link>https://www.cve.org/CVERecord?id=CVE-2025-27909</link><description>IBM Concert Software 1.0.0 through 1.1.0 uses cross-origin resource sharing (CORS) which could allow an attacker to carry out privileged actions as the domain name is not being limited to only trusted domains.</description><pubDate>Mon, 18 Aug 2025 14:28:48 +0000</pubDate></item><item><title>CVE-2025-33090 | IBM Concert Software denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2025-33090</link><description>IBM Concert Software 1.0.0 through 1.1.0 could allow a remote attacker to cause a denial of service using a specially crafted regular expression that would cause excessive resource consumption.</description><pubDate>Mon, 18 Aug 2025 14:28:48 +0000</pubDate></item><item><title>CVE-2024-49827 | IBM Concert Software information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49827</link><description>IBM Concert Software 1.0.0 through 1.1.0 is vulnerable to excessive data exposure, allowing attackers to access sensitive information without proper filtering.</description><pubDate>Mon, 18 Aug 2025 13:47:23 +0000</pubDate></item><item><title>CVE-2025-36120 | IBM Storage Virtualize privilege escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2025-36120</link><description>IBM Storage Virtualize 8.4, 8.5, 8.6, and 8.7 could allow an authenticated user to escalate their privileges in an SSH session due to incorrect authorization checks to access resources.</description><pubDate>Mon, 18 Aug 2025 13:47:23 +0000</pubDate></item><item><title>CVE-2025-4962 | IDOR Vulnerability in Template Creation via `projectId` Manipulation in lunary-ai/lunary</title><link>https://www.cve.org/CVERecord?id=CVE-2025-4962</link><description>An Insecure Direct Object Reference (IDOR) vulnerability was identified in the `POST /v1/templates` endpoint of the Lunary API, affecting versions up to 0.8.8. This vulnerability allows authenticated users to create templates in another user's project by altering the `projectId` query parameter. The root cause of this issue is the absence of server-side validation to ensure that the authenticated user owns the specified `projectId`. The vulnerability has been addressed in version 1.9.23.</description><pubDate>Mon, 18 Aug 2025 13:47:24 +0000</pubDate></item><item><title>CVE-2025-43732 | Liferay Portal 7.4.0 through 7.4.3.132, and Liferay DXP 2025.Q1.0 through 2025.Q1.10, 2024.Q4.0 through 2024.Q4.7, 2024.Q3.1 through 2024.Q3...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-43732</link><description>Liferay Portal 7.4.0 through 7.4.3.132, and Liferay DXP 2025.Q1.0 through 2025.Q1.10, 2024.Q4.0 through 2024.Q4.7, 2024.Q3.1 through 2024.Q3.13, 2024.Q2.1 through 2024.Q2.13, 2024.Q1.1 through 2024.Q1.17 and 7.4 GA through update 92 is vulnerable to Insecure Direct Object Reference (IDOR) in the groupId parameter of the _com_liferay_roles_selector_web_portlet_RolesSelectorPortlet_groupId. When an organization administrator modifies this parameter id value, they can gain unauthorized access to user lists from other organizations.</description><pubDate>Mon, 18 Aug 2025 13:47:24 +0000</pubDate></item><item><title>CVE-2025-43733 | A reflected cross-site scripting (XSS) vulnerability in the Liferay Portal 7.4.3.132, and Liferay DXP 2025.Q1.0 through 2025.Q1.7 allows a r...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-43733</link><description>A reflected cross-site scripting (XSS) vulnerability in the Liferay Portal 7.4.3.132, and Liferay DXP 2025.Q1.0 through 2025.Q1.7 allows a remote authenticated attacker to inject JavaScript code via the content page's name field. This malicious payload is then reflected and executed within the user's browser when viewing the "document View Usages" page.</description><pubDate>Mon, 18 Aug 2025 12:22:11 +0000</pubDate></item><item><title>CVE-2025-41242 | CVE-2025-41242: Path traversal vulnerability on non-compliant Servlet containers</title><link>https://www.cve.org/CVERecord?id=CVE-2025-41242</link><description>Spring Framework MVC applications can be vulnerable to a “Path Traversal Vulnerability” when deployed on a non-compliant Servlet container.

An application can be vulnerable when all the following are true:

  *  the application is deployed as a WAR or with an embedded Servlet container
  *  the Servlet container  does not reject suspicious sequences https://jakarta.ee/specifications/servlet/6.1/jakarta-servlet-spec-6.1.html#uri-path-canonicalization 
  *  the application  serves static resources https://docs.spring.io/spring-framework/reference/web/webmvc/mvc-config/static-resources.html#page-title  with Spring resource handling


We have verified that applications deployed on Apache Tomcat or Eclipse Jetty are not vulnerable, as long as default security features are not disabled in the configuration. Because we cannot check exploits against all Servlet containers and configuration variants, we strongly recommend upgrading your application.</description><pubDate>Mon, 18 Aug 2025 09:15:34 +0000</pubDate></item><item><title>CVE-2025-47206 | File Station 5</title><link>https://www.cve.org/CVERecord?id=CVE-2025-47206</link><description>An out-of-bounds write vulnerability has been reported to affect File Station 5. If a remote attacker gains a user account, they can then exploit the vulnerability to modify or corrupt memory.

We have already fixed the vulnerability in the following version:
File Station 5 5.5.6.4933 and later</description><pubDate>Mon, 18 Aug 2025 08:53:13 +0000</pubDate></item><item><title>CVE-2025-5296 | CWE-59: Improper Link Resolution Before File Access ('Link Following') vulnerability exists that could cause 
arbitrary data to be written t...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-5296</link><description>CWE-59: Improper Link Resolution Before File Access ('Link Following') vulnerability exists that could cause 
arbitrary data to be written to protected locations, potentially leading to escalation of privilege, arbitrary file 
corruption, exposure of application and system information or persistent denial of service when a low-privileged 
attacker tampers with the installation folder.</description><pubDate>Mon, 18 Aug 2025 07:35:29 +0000</pubDate></item><item><title>CVE-2025-6625 | CWE-20: Improper Input Validation vulnerability exists that could cause a Denial Of Service when specific
crafted FTP command is sent to the...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-6625</link><description>CWE-20: Improper Input Validation vulnerability exists that could cause a Denial Of Service when specific
crafted FTP command is sent to the device.</description><pubDate>Mon, 18 Aug 2025 07:13:49 +0000</pubDate></item><item><title>CVE-2025-57702 | Reflected Cross-site Scripting in DIAEnergie</title><link>https://www.cve.org/CVERecord?id=CVE-2025-57702</link><description>DIAEnergie - Reflected Cross-site Scripting</description><pubDate>Mon, 18 Aug 2025 07:13:50 +0000</pubDate></item><item><title>CVE-2025-57703 | Reflected Cross-site Scripting in DIAEnergie</title><link>https://www.cve.org/CVERecord?id=CVE-2025-57703</link><description>DIAEnergie - Reflected Cross-site Scripting</description><pubDate>Mon, 18 Aug 2025 07:13:50 +0000</pubDate></item><item><title>CVE-2025-57700 | Stored Cross-site Scripting in DIAEnergie</title><link>https://www.cve.org/CVERecord?id=CVE-2025-57700</link><description>DIAEnergie - Stored Cross-site Scripting</description><pubDate>Mon, 18 Aug 2025 06:52:25 +0000</pubDate></item><item><title>CVE-2025-57701 | Reflected Cross-site Scripting in DIAEnergie</title><link>https://www.cve.org/CVERecord?id=CVE-2025-57701</link><description>DIAEnergie - Reflected Cross-site Scripting</description><pubDate>Mon, 18 Aug 2025 06:52:26 +0000</pubDate></item><item><title>CVE-2025-9109 | Portabilis i-Diario Password Recovery Endpoint email observable response discrepancy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9109</link><description>A security flaw has been discovered in Portabilis i-Diario up to 1.5.0. Affected by this vulnerability is an unknown functionality of the file /password/email of the component Password Recovery Endpoint. The manipulation results in observable response discrepancy. It is possible to launch the attack remotely. This attack is characterized by high complexity. The exploitation appears to be difficult. The exploit has been released to the public and may be exploited.</description><pubDate>Mon, 18 Aug 2025 06:19:29 +0000</pubDate></item><item><title>CVE-2025-9108 | Portabilis i-Diario Login Page ui layer</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9108</link><description>Affected is an unknown function of the component Login Page. The manipulation leads to improper restriction of rendered ui layers. It is possible to launch the attack remotely.</description><pubDate>Mon, 18 Aug 2025 05:41:29 +0000</pubDate></item><item><title>CVE-2025-9107 | Portabilis i-Diario search_autocomplete cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9107</link><description>A vulnerability was determined in Portabilis i-Diario up to 1.5.0. This issue affects some unknown processing of the file /alunos/search_autocomplete. The manipulation of the argument q leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 18 Aug 2025 05:13:36 +0000</pubDate></item><item><title>CVE-2025-9106 | Portabilis i-Diario Informações Adicionais /planos-de-ensino-por-disciplina cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9106</link><description>A vulnerability was found in Portabilis i-Diario up to 1.5.0. This vulnerability affects unknown code of the file /planos-de-ensino-por-disciplina/ of the component Informações Adicionais Page. The manipulation of the argument Parecer/Conteúdos/Objetivos leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 18 Aug 2025 04:48:24 +0000</pubDate></item><item><title>CVE-2025-9105 | Portabilis i-Diario Informações Adicionais /planos-de-ensino-por-areas-de-conhecimento cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9105</link><description>A vulnerability has been found in Portabilis i-Diario up to 1.5.0. This affects an unknown part of the file /planos-de-ensino-por-areas-de-conhecimento/ of the component Informações Adicionais Page. The manipulation of the argument Parecer/Conteúdos/Objetivos leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 18 Aug 2025 04:48:25 +0000</pubDate></item><item><title>CVE-2025-9104 | Portabilis i-Diario Informações Adicionais /planos-de-aulas-por-disciplina cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9104</link><description>A flaw has been found in Portabilis i-Diario up to 1.5.0. Affected by this issue is some unknown functionality of the file /planos-de-aulas-por-disciplina/ of the component Informações Adicionais Page. The manipulation of the argument Parecer/Objeto de Conhecimento/Habilidades leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 18 Aug 2025 04:05:50 +0000</pubDate></item><item><title>CVE-2025-9103 | ZenCart CKEditor cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9103</link><description>A vulnerability was detected in ZenCart 2.1.0. Affected by this vulnerability is an unknown functionality of the component CKEditor. The manipulation leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The vendor declares this as "intended behavior, allowed for authorized administrators".</description><pubDate>Mon, 18 Aug 2025 04:05:51 +0000</pubDate></item><item><title>CVE-2025-9101 | zhenfeng13 My-Blog Tag save cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9101</link><description>A weakness has been identified in zhenfeng13 My-Blog up to 1.0.0. This issue affects some unknown processing of the file /admin/tags/save of the component Tag Handler. The manipulation leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 18 Aug 2025 03:03:00 +0000</pubDate></item><item><title>CVE-2025-9102 | 1&amp;amp;1 Mail &amp;amp; Media mail.com App com.mail.mobile.android.mail AndroidManifest.xml improper export of android application components</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9102</link><description>A security vulnerability has been detected in 1&amp;1 Mail &amp; Media mail.com App 8.8.0 on Android. Affected is an unknown function of the file AndroidManifest.xml of the component com.mail.mobile.android.mail. The manipulation leads to improper export of android application components. It is possible to launch the attack on the local host. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 18 Aug 2025 03:03:00 +0000</pubDate></item><item><title>CVE-2025-9100 | zhenfeng13 My-Blog Frontend Blog Article Comment comment authentication replay</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9100</link><description>A security flaw has been discovered in zhenfeng13 My-Blog 1.0.0. This vulnerability affects unknown code of the file /blog/comment of the component Frontend Blog Article Comment Handler. The manipulation leads to authentication bypass by capture-replay. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Mon, 18 Aug 2025 03:03:01 +0000</pubDate></item><item><title>CVE-2025-9099 | Acrel Environmental Monitoring Cloud Platform UploadNewsImg unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9099</link><description>A vulnerability was identified in Acrel Environmental Monitoring Cloud Platform up to 20250804. This affects an unknown part of the file /NewsManage/UploadNewsImg. The manipulation of the argument File leads to unrestricted upload. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 18 Aug 2025 03:03:02 +0000</pubDate></item><item><title>CVE-2025-31713 | In engineer mode service, there is a possible command injection due to improper input validation. This could lead to local escalation of pri...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-31713</link><description>In engineer mode service, there is a possible command injection due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed.</description><pubDate>Mon, 18 Aug 2025 01:01:26 +0000</pubDate></item><item><title>CVE-2025-31714 | In Developer Tools, there is a possible missing verification incorrect input. This could lead to local escalation of privilege with no addit...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-31714</link><description>In Developer Tools, there is a possible missing verification incorrect input. This could lead to local escalation of privilege with no additional execution privileges needed.</description><pubDate>Mon, 18 Aug 2025 01:01:26 +0000</pubDate></item><item><title>CVE-2025-31715 | In vowifi service, there is a possible command injection due to improper input validation. This could lead to remote escalation of privilege...</title><link>https://www.cve.org/CVERecord?id=CVE-2025-31715</link><description>In vowifi service, there is a possible command injection due to improper input validation. This could lead to remote escalation of privilege with no additional execution privileges needed.</description><pubDate>Mon, 18 Aug 2025 01:01:26 +0000</pubDate></item><item><title>CVE-2025-9098 | Elseplus File Recovery App AndroidManifest.xml improper export of android application components</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9098</link><description>A vulnerability was determined in Elseplus File Recovery App 4.4.21 on Android. Affected by this issue is some unknown functionality of the file AndroidManifest.xml. The manipulation leads to improper export of android application components. The attack needs to be approached locally. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 18 Aug 2025 01:01:27 +0000</pubDate></item><item><title>CVE-2025-9097 | Euro Information CIC banque et compte en ligne App com.cic_prod.bad AndroidManifest.xml improper export of android application components</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9097</link><description>A vulnerability was found in Euro Information CIC banque et compte en ligne App 12.56.0 on Android. Affected by this vulnerability is an unknown functionality of the file AndroidManifest.xml of the component com.cic_prod.bad. The manipulation leads to improper export of android application components. It is possible to launch the attack on the local host. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 18 Aug 2025 01:01:27 +0000</pubDate></item><item><title>CVE-2025-9096 | ExpressGateway express-gateway REST Endpoint apps.js cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9096</link><description>A vulnerability has been found in ExpressGateway express-gateway up to 1.16.10. Affected is an unknown function in the library lib/rest/routes/apps.js of the component REST Endpoint. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Sun, 17 Aug 2025 23:45:34 +0000</pubDate></item><item><title>CVE-2025-7342 | VM images built with Kubernetes Image Builder Nutanix or OVA providers use default credentials for Windows images if user did not override</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7342</link><description>A security issue was discovered in the Kubernetes Image Builder where default credentials are enabled during the image build process. Additionally, virtual machine images built using the Nutanix or the OVA provider do not disable these default credentials, and nodes using the resulting images may be accessible via these default credentials. The credentials can be used to gain root access. Kubernetes clusters are only affected if their Windows nodes use VM images created via the Image Builder project with its Nutanix or OVA provider.</description><pubDate>Sun, 17 Aug 2025 23:16:18 +0000</pubDate></item><item><title>CVE-2025-9095 | ExpressGateway express-gateway REST Endpoint users.js cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9095</link><description>A flaw has been found in ExpressGateway express-gateway up to 1.16.10. This issue affects some unknown processing in the library lib/rest/routes/users.js of the component REST Endpoint. The manipulation leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Sun, 17 Aug 2025 23:16:18 +0000</pubDate></item><item><title>CVE-2025-9094 | ThingsBoard Add Gateway special elements used in a template engine</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9094</link><description>A vulnerability was detected in ThingsBoard 4.1. This vulnerability affects unknown code of the component Add Gateway Handler. The manipulation leads to improper neutralization of special elements used in a template engine. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor replies, that "[t]he fix will come within upcoming release (v4.2) and will be inherited by maintenance releases of LTS versions (starting 4.0)."</description><pubDate>Sun, 17 Aug 2025 22:47:35 +0000</pubDate></item><item><title>CVE-2025-9093 | BuzzFeed App com.buzzfeed.android AndroidManifest.xml improper export of android application components</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9093</link><description>A security vulnerability has been detected in BuzzFeed App 2024.9 on Android. This affects an unknown part of the file AndroidManifest.xml of the component com.buzzfeed.android. The manipulation leads to improper export of android application components. The attack needs to be approached locally. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 17 Aug 2025 22:33:16 +0000</pubDate></item><item><title>CVE-2025-9090 | Tenda AC20 Telnet Service telnet websFormDefine command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9090</link><description>A vulnerability was identified in Tenda AC20 16.03.08.12. Affected is the function websFormDefine of the file /goform/telnet of the component Telnet Service. The manipulation leads to command injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 17 Aug 2025 02:48:09 +0000</pubDate></item><item><title>CVE-2025-9091 | Tenda AC20 shadow hard-coded credentials</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9091</link><description>A security flaw has been discovered in Tenda AC20 16.03.08.12. Affected by this vulnerability is an unknown functionality of the file /etc_ro/shadow. The manipulation leads to hard-coded credentials. It is possible to launch the attack on the local host. The complexity of an attack is rather high. The exploitation appears to be difficult. The exploit has been disclosed to the public and may be used.</description><pubDate>Sun, 17 Aug 2025 02:48:09 +0000</pubDate></item><item><title>CVE-2025-9089 | Tenda AC20 SetIpMacBind sub_48E628 stack-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9089</link><description>A vulnerability was determined in Tenda AC20 16.03.08.12. This issue affects the function sub_48E628 of the file /goform/SetIpMacBind. The manipulation of the argument list leads to stack-based buffer overflow. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sat, 16 Aug 2025 23:44:07 +0000</pubDate></item><item><title>CVE-2025-9088 | Tenda AC20 formSetVirtualSer save_virtualser_data stack-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9088</link><description>A vulnerability was found in Tenda AC20 16.03.08.12. This vulnerability affects the function save_virtualser_data of the file /goform/formSetVirtualSer. The manipulation of the argument list leads to stack-based buffer overflow. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sat, 16 Aug 2025 23:18:49 +0000</pubDate></item><item><title>CVE-2025-9087 | Tenda AC20 SetNetControlList Endpoint set_qosMib_list stack-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9087</link><description>A vulnerability has been found in Tenda AC20 16.03.08.12. This affects the function set_qosMib_list of the file /goform/SetNetControlList of the component SetNetControlList Endpoint. The manipulation of the argument list leads to stack-based buffer overflow. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Sat, 16 Aug 2025 22:39:37 +0000</pubDate></item><item><title>CVE-2023-32246 | ksmbd: call rcu_barrier() in ksmbd_server_exit()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-32246</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: call rcu_barrier() in ksmbd_server_exit()

racy issue is triggered the bug by racing between closing a connection
and rmmod. In ksmbd, rcu_barrier() is not called at module unload time,
so nothing prevents ksmbd from getting unloaded while it still has RCU
callbacks pending. It leads to trigger unintended execution of kernel
code locally and use to defeat protections such as Kernel Lockdown</description><pubDate>Sat, 16 Aug 2025 13:33:26 +0000</pubDate></item><item><title>CVE-2023-32249 | ksmbd: not allow guest user on multichannel</title><link>https://www.cve.org/CVERecord?id=CVE-2023-32249</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: not allow guest user on multichannel

This patch return STATUS_NOT_SUPPORTED if binding session is guest.</description><pubDate>Sat, 16 Aug 2025 13:33:26 +0000</pubDate></item><item><title>CVE-2023-3865 | ksmbd: fix out-of-bound read in smb2_write</title><link>https://www.cve.org/CVERecord?id=CVE-2023-3865</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: fix out-of-bound read in smb2_write

ksmbd_smb2_check_message doesn't validate hdr-&gt;NextCommand. If
-&gt;NextCommand is bigger than Offset + Length of smb2 write, It will
allow oversized smb2 write length. It will cause OOB read in smb2_write.</description><pubDate>Sat, 16 Aug 2025 13:33:26 +0000</pubDate></item><item><title>CVE-2023-3866 | ksmbd: validate session id and tree id in the compound request</title><link>https://www.cve.org/CVERecord?id=CVE-2023-3866</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: validate session id and tree id in the compound request

This patch validate session id and tree id in compound request.
If first operation in the compound is SMB2 ECHO request, ksmbd bypass
session and tree validation. So work-&gt;sess and work-&gt;tcon could be NULL.
If secound request in the compound access work-&gt;sess or tcon, It cause
NULL pointer dereferecing error.</description><pubDate>Sat, 16 Aug 2025 13:33:27 +0000</pubDate></item><item><title>CVE-2023-3867 | ksmbd: fix out of bounds read in smb2_sess_setup</title><link>https://www.cve.org/CVERecord?id=CVE-2023-3867</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: fix out of bounds read in smb2_sess_setup

ksmbd does not consider the case of that smb2 session setup is
in compound request. If this is the second payload of the compound,
OOB read issue occurs while processing the first payload in
the smb2_sess_setup().</description><pubDate>Sat, 16 Aug 2025 13:33:27 +0000</pubDate></item><item><title>CVE-2023-4130 | ksmbd: fix wrong next length validation of ea buffer in smb2_set_ea()</title><link>https://www.cve.org/CVERecord?id=CVE-2023-4130</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: fix wrong next length validation of ea buffer in smb2_set_ea()

There are multiple smb2_ea_info buffers in FILE_FULL_EA_INFORMATION request
from client. ksmbd find next smb2_ea_info using -&gt;NextEntryOffset of
current smb2_ea_info. ksmbd need to validate buffer length Before
accessing the next ea. ksmbd should check buffer length using buf_len,
not next variable. next is the start offset of current ea that got from
previous ea.</description><pubDate>Sat, 16 Aug 2025 13:33:28 +0000</pubDate></item><item><title>CVE-2023-4515 | ksmbd: validate command request size</title><link>https://www.cve.org/CVERecord?id=CVE-2023-4515</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: validate command request size

In commit 2b9b8f3b68ed ("ksmbd: validate command payload size"), except
for SMB2_OPLOCK_BREAK_HE command, the request size of other commands
is not checked, it's not expected. Fix it by add check for request
size of other commands.</description><pubDate>Sat, 16 Aug 2025 13:33:28 +0000</pubDate></item><item><title>CVE-2025-38547 | iio: adc: axp20x_adc: Add missing sentinel to AXP717 ADC channel maps</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38547</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: axp20x_adc: Add missing sentinel to AXP717 ADC channel maps

The AXP717 ADC channel maps is missing a sentinel entry at the end. This
causes a KASAN warning.

Add the missing sentinel entry.</description><pubDate>Sat, 16 Aug 2025 11:46:04 +0000</pubDate></item><item><title>CVE-2025-38548 | hwmon: (corsair-cpro) Validate the size of the received input buffer</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38548</link><description>In the Linux kernel, the following vulnerability has been resolved:

hwmon: (corsair-cpro) Validate the size of the received input buffer

Add buffer_recv_size to store the size of the received bytes.
Validate buffer_recv_size in send_usb_cmd().</description><pubDate>Sat, 16 Aug 2025 11:46:04 +0000</pubDate></item><item><title>CVE-2025-38549 | efivarfs: Fix memory leak of efivarfs_fs_info in fs_context error paths</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38549</link><description>In the Linux kernel, the following vulnerability has been resolved:

efivarfs: Fix memory leak of efivarfs_fs_info in fs_context error paths

When processing mount options, efivarfs allocates efivarfs_fs_info (sfi)
early in fs_context initialization. However, sfi is associated with the
superblock and typically freed when the superblock is destroyed. If the
fs_context is released (final put) before fill_super is called—such as
on error paths or during reconfiguration—the sfi structure would leak,
as ownership never transfers to the superblock.

Implement the .free callback in efivarfs_context_ops to ensure any
allocated sfi is properly freed if the fs_context is torn down before
fill_super, preventing this memory leak.</description><pubDate>Sat, 16 Aug 2025 11:46:05 +0000</pubDate></item><item><title>CVE-2025-38550 | ipv6: mcast: Delay put pmc-&amp;gt;idev in mld_del_delrec()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38550</link><description>In the Linux kernel, the following vulnerability has been resolved:

ipv6: mcast: Delay put pmc-&gt;idev in mld_del_delrec()

pmc-&gt;idev is still used in ip6_mc_clear_src(), so as mld_clear_delrec()
does, the reference should be put after ip6_mc_clear_src() return.</description><pubDate>Sat, 16 Aug 2025 11:46:05 +0000</pubDate></item><item><title>CVE-2025-38551 | virtio-net: fix recursived rtnl_lock() during probe()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38551</link><description>In the Linux kernel, the following vulnerability has been resolved:

virtio-net: fix recursived rtnl_lock() during probe()

The deadlock appears in a stack trace like:

  virtnet_probe()
    rtnl_lock()
    virtio_config_changed_work()
      netdev_notify_peers()
        rtnl_lock()

It happens if the VMM sends a VIRTIO_NET_S_ANNOUNCE request while the
virtio-net driver is still probing.

The config_work in probe() will get scheduled until virtnet_open() enables
the config change notification via virtio_config_driver_enable().</description><pubDate>Sat, 16 Aug 2025 11:46:05 +0000</pubDate></item><item><title>CVE-2025-38552 | mptcp: plug races between subflow fail and subflow creation</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38552</link><description>In the Linux kernel, the following vulnerability has been resolved:

mptcp: plug races between subflow fail and subflow creation

We have races similar to the one addressed by the previous patch between
subflow failing and additional subflow creation. They are just harder to
trigger.

The solution is similar. Use a separate flag to track the condition
'socket state prevent any additional subflow creation' protected by the
fallback lock.

The socket fallback makes such flag true, and also receiving or sending
an MP_FAIL option.

The field 'allow_infinite_fallback' is now always touched under the
relevant lock, we can drop the ONCE annotation on write.</description><pubDate>Sat, 16 Aug 2025 11:46:06 +0000</pubDate></item><item><title>CVE-2025-38540 | HID: quirks: Add quirk for 2 Chicony Electronics HP 5MP Cameras</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38540</link><description>In the Linux kernel, the following vulnerability has been resolved:

HID: quirks: Add quirk for 2 Chicony Electronics HP 5MP Cameras

The Chicony Electronics HP 5MP Cameras (USB ID 04F2:B824 &amp; 04F2:B82C)
report a HID sensor interface that is not actually implemented.
Attempting to access this non-functional sensor via iio_info causes
system hangs as runtime PM tries to wake up an unresponsive sensor.

Add these 2 devices to the HID ignore list since the sensor interface is
non-functional by design and should not be exposed to userspace.</description><pubDate>Sat, 16 Aug 2025 11:26:20 +0000</pubDate></item><item><title>CVE-2025-38541 | wifi: mt76: mt7925: Fix null-ptr-deref in mt7925_thermal_init()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38541</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mt76: mt7925: Fix null-ptr-deref in mt7925_thermal_init()

devm_kasprintf() returns NULL on error. Currently, mt7925_thermal_init()
does not check for this case, which results in a NULL pointer
dereference.

Add NULL check after devm_kasprintf() to prevent this issue.</description><pubDate>Sat, 16 Aug 2025 11:26:20 +0000</pubDate></item><item><title>CVE-2025-38542 | net: appletalk: Fix device refcount leak in atrtr_create()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38542</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: appletalk: Fix device refcount leak in atrtr_create()

When updating an existing route entry in atrtr_create(), the old device
reference was not being released before assigning the new device,
leading to a device refcount leak. Fix this by calling dev_put() to
release the old device reference before holding the new one.</description><pubDate>Sat, 16 Aug 2025 11:26:21 +0000</pubDate></item><item><title>CVE-2025-38543 | drm/tegra: nvdec: Fix dma_alloc_coherent error check</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38543</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/tegra: nvdec: Fix dma_alloc_coherent error check

Check for NULL return value with dma_alloc_coherent, in line with
Robin's fix for vic.c in 'drm/tegra: vic: Fix DMA API misuse'.</description><pubDate>Sat, 16 Aug 2025 11:26:21 +0000</pubDate></item><item><title>CVE-2025-38544 | rxrpc: Fix bug due to prealloc collision</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38544</link><description>In the Linux kernel, the following vulnerability has been resolved:

rxrpc: Fix bug due to prealloc collision

When userspace is using AF_RXRPC to provide a server, it has to preallocate
incoming calls and assign to them call IDs that will be used to thread
related recvmsg() and sendmsg() together.  The preallocated call IDs will
automatically be attached to calls as they come in until the pool is empty.

To the kernel, the call IDs are just arbitrary numbers, but userspace can
use the call ID to hold a pointer to prepared structs.  In any case, the
user isn't permitted to create two calls with the same call ID (call IDs
become available again when the call ends) and EBADSLT should result from
sendmsg() if an attempt is made to preallocate a call with an in-use call
ID.

However, the cleanup in the error handling will trigger both assertions in
rxrpc_cleanup_call() because the call isn't marked complete and isn't
marked as having been released.

Fix this by setting the call state in rxrpc_service_prealloc_one() and then
marking it as being released before calling the cleanup function.</description><pubDate>Sat, 16 Aug 2025 11:26:22 +0000</pubDate></item><item><title>CVE-2025-38545 | net: ethernet: ti: am65-cpsw-nuss: Fix skb size by accounting for skb_shared_info</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38545</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: ethernet: ti: am65-cpsw-nuss: Fix skb size by accounting for skb_shared_info

While transitioning from netdev_alloc_ip_align() to build_skb(), memory
for the "skb_shared_info" member of an "skb" was not allocated. Fix this
by allocating "PAGE_SIZE" as the skb length, accounting for the packet
length, headroom and tailroom, thereby including the required memory space
for skb_shared_info.</description><pubDate>Sat, 16 Aug 2025 11:26:22 +0000</pubDate></item><item><title>CVE-2025-38546 | atm: clip: Fix memory leak of struct clip_vcc.</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38546</link><description>In the Linux kernel, the following vulnerability has been resolved:

atm: clip: Fix memory leak of struct clip_vcc.

ioctl(ATMARP_MKIP) allocates struct clip_vcc and set it to
vcc-&gt;user_back.

The code assumes that vcc_destroy_socket() passes NULL skb
to vcc-&gt;push() when the socket is close()d, and then clip_push()
frees clip_vcc.

However, ioctl(ATMARPD_CTRL) sets NULL to vcc-&gt;push() in
atm_init_atmarp(), resulting in memory leak.

Let's serialise two ioctl() by lock_sock() and check vcc-&gt;push()
in atm_init_atmarp() to prevent memleak.</description><pubDate>Sat, 16 Aug 2025 11:26:23 +0000</pubDate></item><item><title>CVE-2025-38522 | sched/ext: Prevent update_locked_rq() calls with NULL rq</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38522</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched/ext: Prevent update_locked_rq() calls with NULL rq

Avoid invoking update_locked_rq() when the runqueue (rq) pointer is NULL
in the SCX_CALL_OP and SCX_CALL_OP_RET macros.

Previously, calling update_locked_rq(NULL) with preemption enabled could
trigger the following warning:

    BUG: using __this_cpu_write() in preemptible [00000000]

This happens because __this_cpu_write() is unsafe to use in preemptible
context.

rq is NULL when an ops invoked from an unlocked context. In such cases, we
don't need to store any rq, since the value should already be NULL
(unlocked). Ensure that update_locked_rq() is only called when rq is
non-NULL, preventing calling __this_cpu_write() on preemptible context.</description><pubDate>Sat, 16 Aug 2025 11:26:24 +0000</pubDate></item><item><title>CVE-2025-38523 | cifs: Fix the smbd_response slab to allow usercopy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38523</link><description>In the Linux kernel, the following vulnerability has been resolved:

cifs: Fix the smbd_response slab to allow usercopy

The handling of received data in the smbdirect client code involves using
copy_to_iter() to copy data from the smbd_reponse struct's packet trailer
to a folioq buffer provided by netfslib that encapsulates a chunk of
pagecache.

If, however, CONFIG_HARDENED_USERCOPY=y, this will result in the checks
then performed in copy_to_iter() oopsing with something like the following:

 CIFS: Attempting to mount //172.31.9.1/test
 CIFS: VFS: RDMA transport established
 usercopy: Kernel memory exposure attempt detected from SLUB object 'smbd_response_0000000091e24ea1' (offset 81, size 63)!
 ------------[ cut here ]------------
 kernel BUG at mm/usercopy.c:102!
 ...
 RIP: 0010:usercopy_abort+0x6c/0x80
 ...
 Call Trace:
  
  __check_heap_object+0xe3/0x120
  __check_object_size+0x4dc/0x6d0
  smbd_recv+0x77f/0xfe0 [cifs]
  cifs_readv_from_socket+0x276/0x8f0 [cifs]
  cifs_read_from_socket+0xcd/0x120 [cifs]
  cifs_demultiplex_thread+0x7e9/0x2d50 [cifs]
  kthread+0x396/0x830
  ret_from_fork+0x2b8/0x3b0
  ret_from_fork_asm+0x1a/0x30

The problem is that the smbd_response slab's packet field isn't marked as
being permitted for usercopy.

Fix this by passing parameters to kmem_slab_create() to indicate that
copy_to_iter() is permitted from the packet region of the smbd_response
slab objects, less the header space.</description><pubDate>Sat, 16 Aug 2025 11:26:24 +0000</pubDate></item><item><title>CVE-2025-38524 | rxrpc: Fix recv-recv race of completed call</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38524</link><description>In the Linux kernel, the following vulnerability has been resolved:

rxrpc: Fix recv-recv race of completed call

If a call receives an event (such as incoming data), the call gets placed
on the socket's queue and a thread in recvmsg can be awakened to go and
process it.  Once the thread has picked up the call off of the queue,
further events will cause it to be requeued, and once the socket lock is
dropped (recvmsg uses call-&gt;user_mutex to allow the socket to be used in
parallel), a second thread can come in and its recvmsg can pop the call off
the socket queue again.

In such a case, the first thread will be receiving stuff from the call and
the second thread will be blocked on call-&gt;user_mutex.  The first thread
can, at this point, process both the event that it picked call for and the
event that the second thread picked the call for and may see the call
terminate - in which case the call will be "released", decoupling the call
from the user call ID assigned to it (RXRPC_USER_CALL_ID in the control
message).

The first thread will return okay, but then the second thread will wake up
holding the user_mutex and, if it sees that the call has been released by
the first thread, it will BUG thusly:

	kernel BUG at net/rxrpc/recvmsg.c:474!

Fix this by just dequeuing the call and ignoring it if it is seen to be
already released.  We can't tell userspace about it anyway as the user call
ID has become stale.</description><pubDate>Sat, 16 Aug 2025 11:26:25 +0000</pubDate></item><item><title>CVE-2025-38525 | rxrpc: Fix irq-disabled in local_bh_enable()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38525</link><description>In the Linux kernel, the following vulnerability has been resolved:

rxrpc: Fix irq-disabled in local_bh_enable()

The rxrpc_assess_MTU_size() function calls down into the IP layer to find
out the MTU size for a route.  When accepting an incoming call, this is
called from rxrpc_new_incoming_call() which holds interrupts disabled
across the code that calls down to it.  Unfortunately, the IP layer uses
local_bh_enable() which, config dependent, throws a warning if IRQs are
enabled:

WARNING: CPU: 1 PID: 5544 at kernel/softirq.c:387 __local_bh_enable_ip+0x43/0xd0
...
RIP: 0010:__local_bh_enable_ip+0x43/0xd0
...
Call Trace:
 
 rt_cache_route+0x7e/0xa0
 rt_set_nexthop.isra.0+0x3b3/0x3f0
 __mkroute_output+0x43a/0x460
 ip_route_output_key_hash+0xf7/0x140
 ip_route_output_flow+0x1b/0x90
 rxrpc_assess_MTU_size.isra.0+0x2a0/0x590
 rxrpc_new_incoming_peer+0x46/0x120
 rxrpc_alloc_incoming_call+0x1b1/0x400
 rxrpc_new_incoming_call+0x1da/0x5e0
 rxrpc_input_packet+0x827/0x900
 rxrpc_io_thread+0x403/0xb60
 kthread+0x2f7/0x310
 ret_from_fork+0x2a/0x230
 ret_from_fork_asm+0x1a/0x30
...
hardirqs last  enabled at (23): _raw_spin_unlock_irq+0x24/0x50
hardirqs last disabled at (24): _raw_read_lock_irq+0x17/0x70
softirqs last  enabled at (0): copy_process+0xc61/0x2730
softirqs last disabled at (25): rt_add_uncached_list+0x3c/0x90

Fix this by moving the call to rxrpc_assess_MTU_size() out of
rxrpc_init_peer() and further up the stack where it can be done without
interrupts disabled.

It shouldn't be a problem for rxrpc_new_incoming_call() to do it after the
locks are dropped as pmtud is going to be performed by the I/O thread - and
we're in the I/O thread at this point.</description><pubDate>Sat, 16 Aug 2025 11:26:25 +0000</pubDate></item><item><title>CVE-2025-38526 | ice: add NULL check in eswitch lag check</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38526</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: add NULL check in eswitch lag check

The function ice_lag_is_switchdev_running() is being called from outside of
the LAG event handler code.  This results in the lag-&gt;upper_netdev being
NULL sometimes.  To avoid a NULL-pointer dereference, there needs to be a
check before it is dereferenced.</description><pubDate>Sat, 16 Aug 2025 11:26:25 +0000</pubDate></item><item><title>CVE-2025-38527 | smb: client: fix use-after-free in cifs_oplock_break</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38527</link><description>In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix use-after-free in cifs_oplock_break

A race condition can occur in cifs_oplock_break() leading to a
use-after-free of the cinode structure when unmounting:

  cifs_oplock_break()
    _cifsFileInfo_put(cfile)
      cifsFileInfo_put_final()
        cifs_sb_deactive()
          [last ref, start releasing sb]
            kill_sb()
              kill_anon_super()
                generic_shutdown_super()
                  evict_inodes()
                    dispose_list()
                      evict()
                        destroy_inode()
                          call_rcu(&amp;amp;inode-&gt;i_rcu, i_callback)
    spin_lock(&amp;amp;cinode-&gt;open_file_lock)  &lt;- OK
                            [later] i_callback()
                              cifs_free_inode()
                                kmem_cache_free(cinode)
    spin_unlock(&amp;amp;cinode-&gt;open_file_lock)  &lt;- UAF
    cifs_done_oplock_break(cinode)       &lt;- UAF

The issue occurs when umount has already released its reference to the
superblock. When _cifsFileInfo_put() calls cifs_sb_deactive(), this
releases the last reference, triggering the immediate cleanup of all
inodes under RCU. However, cifs_oplock_break() continues to access the
cinode after this point, resulting in use-after-free.

Fix this by holding an extra reference to the superblock during the
entire oplock break operation. This ensures that the superblock and
its inodes remain valid until the oplock break completes.</description><pubDate>Sat, 16 Aug 2025 11:26:26 +0000</pubDate></item><item><title>CVE-2025-38528 | bpf: Reject %p% format string in bprintf-like helpers</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38528</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Reject %p% format string in bprintf-like helpers

static const char fmt[] = "%p%";
    bpf_trace_printk(fmt, sizeof(fmt));

The above BPF program isn't rejected and causes a kernel warning at
runtime:

    Please remove unsupported %\x00 in format string
    WARNING: CPU: 1 PID: 7244 at lib/vsprintf.c:2680 format_decode+0x49c/0x5d0

This happens because bpf_bprintf_prepare skips over the second %,
detected as punctuation, while processing %p. This patch fixes it by
not skipping over punctuation. %\x00 is then processed in the next
iteration and rejected.</description><pubDate>Sat, 16 Aug 2025 11:26:26 +0000</pubDate></item><item><title>CVE-2025-38529 | comedi: aio_iiro_16: Fix bit shift out of bounds</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38529</link><description>In the Linux kernel, the following vulnerability has been resolved:

comedi: aio_iiro_16: Fix bit shift out of bounds

When checking for a supported IRQ number, the following test is used:

	if ((1 &lt;&lt; it-&gt;options[1]) &amp; 0xdcfc) {

However, `it-&gt;options[i]` is an unchecked `int` value from userspace, so
the shift amount could be negative or out of bounds.  Fix the test by
requiring `it-&gt;options[1]` to be within bounds before proceeding with
the original test.  Valid `it-&gt;options[1]` values that select the IRQ
will be in the range [1,15]. The value 0 explicitly disables the use of
interrupts.</description><pubDate>Sat, 16 Aug 2025 11:26:27 +0000</pubDate></item><item><title>CVE-2025-38530 | comedi: pcl812: Fix bit shift out of bounds</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38530</link><description>In the Linux kernel, the following vulnerability has been resolved:

comedi: pcl812: Fix bit shift out of bounds

When checking for a supported IRQ number, the following test is used:

	if ((1 &lt;&lt; it-&gt;options[1]) &amp; board-&gt;irq_bits) {

However, `it-&gt;options[i]` is an unchecked `int` value from userspace, so
the shift amount could be negative or out of bounds.  Fix the test by
requiring `it-&gt;options[1]` to be within bounds before proceeding with
the original test.  Valid `it-&gt;options[1]` values that select the IRQ
will be in the range [1,15]. The value 0 explicitly disables the use of
interrupts.</description><pubDate>Sat, 16 Aug 2025 11:26:27 +0000</pubDate></item><item><title>CVE-2025-38531 | iio: common: st_sensors: Fix use of uninitialize device structs</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38531</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: common: st_sensors: Fix use of uninitialize device structs

Throughout the various probe functions &amp;amp;indio_dev-&gt;dev is used before it
is initialized. This caused a kernel panic in st_sensors_power_enable()
when the call to devm_regulator_bulk_get_enable() fails and then calls
dev_err_probe() with the uninitialized device.

This seems to only cause a panic with dev_err_probe(), dev_err(),
dev_warn() and dev_info() don't seem to cause a panic, but are fixed
as well.

The issue is reported and traced here: [1]</description><pubDate>Sat, 16 Aug 2025 11:26:28 +0000</pubDate></item><item><title>CVE-2025-38532 | net: libwx: properly reset Rx ring descriptor</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38532</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: libwx: properly reset Rx ring descriptor

When device reset is triggered by feature changes such as toggling Rx
VLAN offload, wx-&gt;do_reset() is called to reinitialize Rx rings. The
hardware descriptor ring may retain stale values from previous sessions.
And only set the length to 0 in rx_desc[0] would result in building
malformed SKBs. Fix it to ensure a clean slate after device reset.

[  549.186435] [     C16] ------------[ cut here ]------------
[  549.186457] [     C16] kernel BUG at net/core/skbuff.c:2814!
[  549.186468] [     C16] Oops: invalid opcode: 0000 [#1] SMP NOPTI
[  549.186472] [     C16] CPU: 16 UID: 0 PID: 0 Comm: swapper/16 Kdump: loaded Not tainted 6.16.0-rc4+ #23 PREEMPT(voluntary)
[  549.186476] [     C16] Hardware name: Micro-Star International Co., Ltd. MS-7E16/X670E GAMING PLUS WIFI (MS-7E16), BIOS 1.90 12/31/2024
[  549.186478] [     C16] RIP: 0010:__pskb_pull_tail+0x3ff/0x510
[  549.186484] [     C16] Code: 06 f0 ff 4f 34 74 7b 4d 8b 8c 24 c8 00 00 00 45 8b 84 24 c0 00 00 00 e9 c8 fd ff ff 48 c7 44 24 08 00 00 00 00 e9 5e fe ff ff &lt;0f&gt; 0b 31 c0 e9 23 90 5b ff 41 f7 c6 ff 0f 00 00 75 bf 49 8b 06 a8
[  549.186487] [     C16] RSP: 0018:ffffb391c0640d70 EFLAGS: 00010282
[  549.186490] [     C16] RAX: 00000000fffffff2 RBX: ffff8fe7e4d40200 RCX: 00000000fffffff2
[  549.186492] [     C16] RDX: ffff8fe7c3a4bf8e RSI: 0000000000000180 RDI: ffff8fe7c3a4bf40
[  549.186494] [     C16] RBP: ffffb391c0640da8 R08: ffff8fe7c3a4c0c0 R09: 000000000000000e
[  549.186496] [     C16] R10: ffffb391c0640d88 R11: 000000000000000e R12: ffff8fe7e4d40200
[  549.186497] [     C16] R13: 00000000fffffff2 R14: ffff8fe7fa01a000 R15: 00000000fffffff2
[  549.186499] [     C16] FS:  0000000000000000(0000) GS:ffff8fef5ae40000(0000) knlGS:0000000000000000
[  549.186502] [     C16] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  549.186503] [     C16] CR2: 00007f77d81d6000 CR3: 000000051a032000 CR4: 0000000000750ef0
[  549.186505] [     C16] PKRU: 55555554
[  549.186507] [     C16] Call Trace:
[  549.186510] [     C16]  
[  549.186513] [     C16]  ? srso_alias_return_thunk+0x5/0xfbef5
[  549.186517] [     C16]  __skb_pad+0xc7/0xf0
[  549.186523] [     C16]  wx_clean_rx_irq+0x355/0x3b0 [libwx]
[  549.186533] [     C16]  wx_poll+0x92/0x120 [libwx]
[  549.186540] [     C16]  __napi_poll+0x28/0x190
[  549.186544] [     C16]  net_rx_action+0x301/0x3f0
[  549.186548] [     C16]  ? srso_alias_return_thunk+0x5/0xfbef5
[  549.186551] [     C16]  ? __raw_spin_lock_irqsave+0x1e/0x50
[  549.186554] [     C16]  ? srso_alias_return_thunk+0x5/0xfbef5
[  549.186557] [     C16]  ? wake_up_nohz_cpu+0x35/0x160
[  549.186559] [     C16]  ? srso_alias_return_thunk+0x5/0xfbef5
[  549.186563] [     C16]  handle_softirqs+0xf9/0x2c0
[  549.186568] [     C16]  __irq_exit_rcu+0xc7/0x130
[  549.186572] [     C16]  common_interrupt+0xb8/0xd0
[  549.186576] [     C16]  
[  549.186577] [     C16]  
[  549.186579] [     C16]  asm_common_interrupt+0x22/0x40
[  549.186582] [     C16] RIP: 0010:cpuidle_enter_state+0xc2/0x420
[  549.186585] [     C16] Code: 00 00 e8 11 0e 5e ff e8 ac f0 ff ff 49 89 c5 0f 1f 44 00 00 31 ff e8 0d ed 5c ff 45 84 ff 0f 85 40 02 00 00 fb 0f 1f 44 00 00 &lt;45&gt; 85 f6 0f 88 84 01 00 00 49 63 d6 48 8d 04 52 48 8d 04 82 49 8d
[  549.186587] [     C16] RSP: 0018:ffffb391c0277e78 EFLAGS: 00000246
[  549.186590] [     C16] RAX: ffff8fef5ae40000 RBX: 0000000000000003 RCX: 0000000000000000
[  549.186591] [     C16] RDX: 0000007fde0faac5 RSI: ffffffff826e53f6 RDI: ffffffff826fa9b3
[  549.186593] [     C16] RBP: ffff8fe7c3a20800 R08: 0000000000000002 R09: 0000000000000000
[  549.186595] [     C16] R10: 0000000000000000 R11: 000000000000ffff R12: ffffffff82ed7a40
[  549.186596] [     C16] R13: 0000007fde0faac5 R14: 0000000000000003 R15: 0000000000000000
[  549.186601] [     C16]  ? cpuidle_enter_state+0xb3/0x420
[  549.186605] [     C16]  cpuidle_en
---truncated---</description><pubDate>Sat, 16 Aug 2025 11:26:28 +0000</pubDate></item><item><title>CVE-2025-38533 | net: libwx: fix the using of Rx buffer DMA</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38533</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: libwx: fix the using of Rx buffer DMA

The wx_rx_buffer structure contained two DMA address fields: 'dma' and
'page_dma'. However, only 'page_dma' was actually initialized and used
to program the Rx descriptor. But 'dma' was uninitialized and used in
some paths.

This could lead to undefined behavior, including DMA errors or
use-after-free, if the uninitialized 'dma' was used. Althrough such
error has not yet occurred, it is worth fixing in the code.</description><pubDate>Sat, 16 Aug 2025 11:26:29 +0000</pubDate></item><item><title>CVE-2025-38534 | netfs: Fix copy-to-cache so that it performs collection with ceph+fscache</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38534</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfs: Fix copy-to-cache so that it performs collection with ceph+fscache

The netfs copy-to-cache that is used by Ceph with local caching sets up a
new request to write data just read to the cache.  The request is started
and then left to look after itself whilst the app continues.  The request
gets notified by the backing fs upon completion of the async DIO write, but
then tries to wake up the app because NETFS_RREQ_OFFLOAD_COLLECTION isn't
set - but the app isn't waiting there, and so the request just hangs.

Fix this by setting NETFS_RREQ_OFFLOAD_COLLECTION which causes the
notification from the backing filesystem to put the collection onto a work
queue instead.</description><pubDate>Sat, 16 Aug 2025 11:26:29 +0000</pubDate></item><item><title>CVE-2025-38535 | phy: tegra: xusb: Fix unbalanced regulator disable in UTMI PHY mode</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38535</link><description>In the Linux kernel, the following vulnerability has been resolved:

phy: tegra: xusb: Fix unbalanced regulator disable in UTMI PHY mode

When transitioning from USB_ROLE_DEVICE to USB_ROLE_NONE, the code
assumed that the regulator should be disabled. However, if the regulator
is marked as always-on, regulator_is_enabled() continues to return true,
leading to an incorrect attempt to disable a regulator which is not
enabled.

This can result in warnings such as:

[  250.155624] WARNING: CPU: 1 PID: 7326 at drivers/regulator/core.c:3004
_regulator_disable+0xe4/0x1a0
[  250.155652] unbalanced disables for VIN_SYS_5V0

To fix this, we move the regulator control logic into
tegra186_xusb_padctl_id_override() function since it's directly related
to the ID override state. The regulator is now only disabled when the role
transitions from USB_ROLE_HOST to USB_ROLE_NONE, by checking the VBUS_ID
register. This ensures that regulator enable/disable operations are
properly balanced and only occur when actually transitioning to/from host
mode.</description><pubDate>Sat, 16 Aug 2025 11:26:30 +0000</pubDate></item><item><title>CVE-2025-38536 | net: airoha: fix potential use-after-free in airoha_npu_get()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38536</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: airoha: fix potential use-after-free in airoha_npu_get()

np-&gt;name was being used after calling of_node_put(np), which
releases the node and can lead to a use-after-free bug.
Previously, of_node_put(np) was called unconditionally after
of_find_device_by_node(np), which could result in a use-after-free if
pdev is NULL.

This patch moves of_node_put(np) after the error check to ensure
the node is only released after both the error and success cases
are handled appropriately, preventing potential resource issues.</description><pubDate>Sat, 16 Aug 2025 11:26:30 +0000</pubDate></item><item><title>CVE-2025-38537 | net: phy: Don&amp;#x27;t register LEDs for genphy</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38537</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: phy: Don't register LEDs for genphy

If a PHY has no driver, the genphy driver is probed/removed directly in
phy_attach/detach. If the PHY's ofnode has an "leds" subnode, then the
LEDs will be (un)registered when probing/removing the genphy driver.
This could occur if the leds are for a non-generic driver that isn't
loaded for whatever reason. Synchronously removing the PHY device in
phy_detach leads to the following deadlock:

rtnl_lock()
ndo_close()
    ...
    phy_detach()
        phy_remove()
            phy_leds_unregister()
                led_classdev_unregister()
                    led_trigger_set()
                        netdev_trigger_deactivate()
                            unregister_netdevice_notifier()
                                rtnl_lock()

There is a corresponding deadlock on the open/register side of things
(and that one is reported by lockdep), but it requires a race while this
one is deterministic.

Generic PHYs do not support LEDs anyway, so don't bother registering
them.</description><pubDate>Sat, 16 Aug 2025 11:26:30 +0000</pubDate></item><item><title>CVE-2025-38538 | dmaengine: nbpfaxi: Fix memory corruption in probe()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38538</link><description>In the Linux kernel, the following vulnerability has been resolved:

dmaengine: nbpfaxi: Fix memory corruption in probe()

The nbpf-&gt;chan[] array is allocated earlier in the nbpf_probe() function
and it has "num_channels" elements.  These three loops iterate one
element farther than they should and corrupt memory.

The changes to the second loop are more involved.  In this case, we're
copying data from the irqbuf[] array into the nbpf-&gt;chan[] array.  If
the data in irqbuf[i] is the error IRQ then we skip it, so the iterators
are not in sync.  I added a check to ensure that we don't go beyond the
end of the irqbuf[] array.  I'm pretty sure this can't happen, but it
seemed harmless to add a check.

On the other hand, after the loop has ended there is a check to ensure
that the "chan" iterator is where we expect it to be.  In the original
code we went one element beyond the end of the array so the iterator
wasn't in the correct place and it would always return -EINVAL.  However,
now it will always be in the correct place.  I deleted the check since
we know the result.</description><pubDate>Sat, 16 Aug 2025 11:26:31 +0000</pubDate></item><item><title>CVE-2025-38539 | tracing: Add down_write(trace_event_sem) when adding trace event</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38539</link><description>In the Linux kernel, the following vulnerability has been resolved:

tracing: Add down_write(trace_event_sem) when adding trace event

When a module is loaded, it adds trace events defined by the module. It
may also need to modify the modules trace printk formats to replace enum
names with their values.

If two modules are loaded at the same time, the adding of the event to the
ftrace_events list can corrupt the walking of the list in the code that is
modifying the printk format strings and crash the kernel.

The addition of the event should take the trace_event_sem for write while
it adds the new event.

Also add a lockdep_assert_held() on that semaphore in
__trace_add_event_dirs() as it iterates the list.</description><pubDate>Sat, 16 Aug 2025 11:26:31 +0000</pubDate></item><item><title>CVE-2025-8105 | Soledad &amp;lt;= 8.6.7 - Unauthenticated Arbitrary Shortcode Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8105</link><description>The The Soledad theme for WordPress is vulnerable to arbitrary shortcode execution in all versions up to, and including, 8.6.7. This is due to the software allowing users to execute an action that does not properly validate a value before running do_shortcode. This makes it possible for unauthenticated attackers to execute arbitrary shortcodes.</description><pubDate>Sat, 16 Aug 2025 11:26:32 +0000</pubDate></item><item><title>CVE-2025-8142 | Soledad &amp;lt;= 8.6.7 - Authenticated (Contributor+) Local File Inclusion via &amp;#x27;header_layout&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8142</link><description>The Soledad theme for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 8.6.7 via the 'header_layout' parameter. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary .php files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where .php file types can be uploaded and included.</description><pubDate>Sat, 16 Aug 2025 11:26:32 +0000</pubDate></item><item><title>CVE-2025-8143 | Soledad &amp;lt;= 8.6.7 - Authenticated (Contributor+) Stored Cross-Site Scripting via &amp;#x27;pcsml_smartlists_h&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8143</link><description>The Soledad theme for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘pcsml_smartlists_h’ parameter in all versions up to, and including, 8.6.7 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 11:26:33 +0000</pubDate></item><item><title>CVE-2025-8878 | Paid Membership Plugin, Ecommerce, User Registration Form, Login Form, User Profile &amp;amp; Restrict Content  – ProfilePress &amp;lt;= 4.16.4 - Unauthenticated Arbitrary Shortcode Execution</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8878</link><description>The The Paid Membership Plugin, Ecommerce, User Registration Form, Login Form, User Profile &amp; Restrict Content – ProfilePress plugin for WordPress is vulnerable to arbitrary shortcode execution in all versions up to, and including, 4.16.4. This is due to the software allowing users to execute an action that does not properly validate a value before running do_shortcode. This makes it possible for unauthenticated attackers to execute arbitrary shortcodes.</description><pubDate>Sat, 16 Aug 2025 11:26:33 +0000</pubDate></item><item><title>CVE-2025-38503 | btrfs: fix assertion when building free space tree</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38503</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix assertion when building free space tree

When building the free space tree with the block group tree feature
enabled, we can hit an assertion failure like this:

  BTRFS info (device loop0 state M): rebuilding free space tree
  assertion failed: ret == 0, in fs/btrfs/free-space-tree.c:1102
  ------------[ cut here ]------------
  kernel BUG at fs/btrfs/free-space-tree.c:1102!
  Internal error: Oops - BUG: 00000000f2000800 [#1]  SMP
  Modules linked in:
  CPU: 1 UID: 0 PID: 6592 Comm: syz-executor322 Not tainted 6.15.0-rc7-syzkaller-gd7fa1af5b33e #0 PREEMPT
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025
  pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
  pc : populate_free_space_tree+0x514/0x518 fs/btrfs/free-space-tree.c:1102
  lr : populate_free_space_tree+0x514/0x518 fs/btrfs/free-space-tree.c:1102
  sp : ffff8000a4ce7600
  x29: ffff8000a4ce76e0 x28: ffff0000c9bc6000 x27: ffff0000ddfff3d8
  x26: ffff0000ddfff378 x25: dfff800000000000 x24: 0000000000000001
  x23: ffff8000a4ce7660 x22: ffff70001499cecc x21: ffff0000e1d8c160
  x20: ffff0000e1cb7800 x19: ffff0000e1d8c0b0 x18: 00000000ffffffff
  x17: ffff800092f39000 x16: ffff80008ad27e48 x15: ffff700011e740c0
  x14: 1ffff00011e740c0 x13: 0000000000000004 x12: ffffffffffffffff
  x11: ffff700011e740c0 x10: 0000000000ff0100 x9 : 94ef24f55d2dbc00
  x8 : 94ef24f55d2dbc00 x7 : 0000000000000001 x6 : 0000000000000001
  x5 : ffff8000a4ce6f98 x4 : ffff80008f415ba0 x3 : ffff800080548ef0
  x2 : 0000000000000000 x1 : 0000000100000000 x0 : 000000000000003e
  Call trace:
   populate_free_space_tree+0x514/0x518 fs/btrfs/free-space-tree.c:1102 (P)
   btrfs_rebuild_free_space_tree+0x14c/0x54c fs/btrfs/free-space-tree.c:1337
   btrfs_start_pre_rw_mount+0xa78/0xe10 fs/btrfs/disk-io.c:3074
   btrfs_remount_rw fs/btrfs/super.c:1319 [inline]
   btrfs_reconfigure+0x828/0x2418 fs/btrfs/super.c:1543
   reconfigure_super+0x1d4/0x6f0 fs/super.c:1083
   do_remount fs/namespace.c:3365 [inline]
   path_mount+0xb34/0xde0 fs/namespace.c:4200
   do_mount fs/namespace.c:4221 [inline]
   __do_sys_mount fs/namespace.c:4432 [inline]
   __se_sys_mount fs/namespace.c:4409 [inline]
   __arm64_sys_mount+0x3e8/0x468 fs/namespace.c:4409
   __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]
   invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:49
   el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:132
   do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:151
   el0_svc+0x58/0x17c arch/arm64/kernel/entry-common.c:767
   el0t_64_sync_handler+0x78/0x108 arch/arm64/kernel/entry-common.c:786
   el0t_64_sync+0x198/0x19c arch/arm64/kernel/entry.S:600
  Code: f0047182 91178042 528089c3 9771d47b (d4210000)
  ---[ end trace 0000000000000000 ]---

This happens because we are processing an empty block group, which has
no extents allocated from it, there are no items for this block group,
including the block group item since block group items are stored in a
dedicated tree when using the block group tree feature. It also means
this is the block group with the highest start offset, so there are no
higher keys in the extent root, hence btrfs_search_slot_for_read()
returns 1 (no higher key found).

Fix this by asserting 'ret' is 0 only if the block group tree feature
is not enabled, in which case we should find a block group item for
the block group since it's stored in the extent root and block group
item keys are greater than extent item keys (the value for
BTRFS_BLOCK_GROUP_ITEM_KEY is 192 and for BTRFS_EXTENT_ITEM_KEY and
BTRFS_METADATA_ITEM_KEY the values are 168 and 169 respectively).
In case 'ret' is 1, we just need to add a record to the free space
tree which spans the whole block group, and we can achieve this by
making 'ret == 0' as the while loop's condition.</description><pubDate>Sat, 16 Aug 2025 11:11:25 +0000</pubDate></item><item><title>CVE-2025-38504 | io_uring/zcrx: fix pp destruction warnings</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38504</link><description>In the Linux kernel, the following vulnerability has been resolved:

io_uring/zcrx: fix pp destruction warnings

With multiple page pools and in some other cases we can have allocated
niovs on page pool destruction. Remove a misplaced warning checking that
all niovs are returned to zcrx on io_pp_zc_destroy(). It was reported
before but apparently got lost.</description><pubDate>Sat, 16 Aug 2025 11:11:26 +0000</pubDate></item><item><title>CVE-2025-38505 | wifi: mwifiex: discard erroneous disassoc frames on STA interface</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38505</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mwifiex: discard erroneous disassoc frames on STA interface

When operating in concurrent STA/AP mode with host MLME enabled,
the firmware incorrectly sends disassociation frames to the STA
interface when clients disconnect from the AP interface.
This causes kernel warnings as the STA interface processes
disconnect events that don't apply to it:

[ 1303.240540] WARNING: CPU: 0 PID: 513 at net/wireless/mlme.c:141 cfg80211_process_disassoc+0x78/0xec [cfg80211]
[ 1303.250861] Modules linked in: 8021q garp stp mrp llc rfcomm bnep btnxpuart nls_iso8859_1 nls_cp437 onboard_us
[ 1303.327651] CPU: 0 UID: 0 PID: 513 Comm: kworker/u9:2 Not tainted 6.16.0-rc1+ #3 PREEMPT
[ 1303.335937] Hardware name: Toradex Verdin AM62 WB on Verdin Development Board (DT)
[ 1303.343588] Workqueue: MWIFIEX_RX_WORK_QUEUE mwifiex_rx_work_queue [mwifiex]
[ 1303.350856] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[ 1303.357904] pc : cfg80211_process_disassoc+0x78/0xec [cfg80211]
[ 1303.364065] lr : cfg80211_process_disassoc+0x70/0xec [cfg80211]
[ 1303.370221] sp : ffff800083053be0
[ 1303.373590] x29: ffff800083053be0 x28: 0000000000000000 x27: 0000000000000000
[ 1303.380855] x26: 0000000000000000 x25: 00000000ffffffff x24: ffff000002c5b8ae
[ 1303.388120] x23: ffff000002c5b884 x22: 0000000000000001 x21: 0000000000000008
[ 1303.395382] x20: ffff000002c5b8ae x19: ffff0000064dd408 x18: 0000000000000006
[ 1303.402646] x17: 3a36333a61623a30 x16: 32206d6f72662063 x15: ffff800080bfe048
[ 1303.409910] x14: ffff000003625300 x13: 0000000000000001 x12: 0000000000000000
[ 1303.417173] x11: 0000000000000002 x10: ffff000003958600 x9 : ffff000003625300
[ 1303.424434] x8 : ffff00003fd9ef40 x7 : ffff0000039fc280 x6 : 0000000000000002
[ 1303.431695] x5 : ffff0000038976d4 x4 : 0000000000000000 x3 : 0000000000003186
[ 1303.438956] x2 : 000000004836ba20 x1 : 0000000000006986 x0 : 00000000d00479de
[ 1303.446221] Call trace:
[ 1303.448722]  cfg80211_process_disassoc+0x78/0xec [cfg80211] (P)
[ 1303.454894]  cfg80211_rx_mlme_mgmt+0x64/0xf8 [cfg80211]
[ 1303.460362]  mwifiex_process_mgmt_packet+0x1ec/0x460 [mwifiex]
[ 1303.466380]  mwifiex_process_sta_rx_packet+0x1bc/0x2a0 [mwifiex]
[ 1303.472573]  mwifiex_handle_rx_packet+0xb4/0x13c [mwifiex]
[ 1303.478243]  mwifiex_rx_work_queue+0x158/0x198 [mwifiex]
[ 1303.483734]  process_one_work+0x14c/0x28c
[ 1303.487845]  worker_thread+0x2cc/0x3d4
[ 1303.491680]  kthread+0x12c/0x208
[ 1303.495014]  ret_from_fork+0x10/0x20

Add validation in the STA receive path to verify that disassoc/deauth
frames originate from the connected AP. Frames that fail this check
are discarded early, preventing them from reaching the MLME layer and
triggering WARN_ON().

This filtering logic is similar with that used in the
ieee80211_rx_mgmt_disassoc() function in mac80211, which drops
disassoc frames that don't match the current BSSID
(!ether_addr_equal(mgmt-&gt;bssid, sdata-&gt;vif.cfg.ap_addr)), ensuring
only relevant frames are processed.

Tested on:
- 8997 with FW 16.68.1.p197</description><pubDate>Sat, 16 Aug 2025 11:11:26 +0000</pubDate></item><item><title>CVE-2025-38506 | KVM: Allow CPU to reschedule while setting per-page memory attributes</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38506</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: Allow CPU to reschedule while setting per-page memory attributes

When running an SEV-SNP guest with a sufficiently large amount of memory (1TB+),
the host can experience CPU soft lockups when running an operation in
kvm_vm_set_mem_attributes() to set memory attributes on the whole
range of guest memory.

watchdog: BUG: soft lockup - CPU#8 stuck for 26s! [qemu-kvm:6372]
CPU: 8 UID: 0 PID: 6372 Comm: qemu-kvm Kdump: loaded Not tainted 6.15.0-rc7.20250520.el9uek.rc1.x86_64 #1 PREEMPT(voluntary)
Hardware name: Oracle Corporation ORACLE SERVER E4-2c/Asm,MB Tray,2U,E4-2c, BIOS 78016600 11/13/2024
RIP: 0010:xas_create+0x78/0x1f0
Code: 00 00 00 41 80 fc 01 0f 84 82 00 00 00 ba 06 00 00 00 bd 06 00 00 00 49 8b 45 08 4d 8d 65 08 41 39 d6 73 20 83 ed 06 48 85 c0 &lt;74&gt; 67 48 89 c2 83 e2 03 48 83 fa 02 75 0c 48 3d 00 10 00 00 0f 87
RSP: 0018:ffffad890a34b940 EFLAGS: 00000286
RAX: ffff96f30b261daa RBX: ffffad890a34b9c8 RCX: 0000000000000000
RDX: 000000000000001e RSI: 0000000000000000 RDI: 0000000000000000
RBP: 0000000000000018 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: ffffad890a356868
R13: ffffad890a356860 R14: 0000000000000000 R15: ffffad890a356868
FS:  00007f5578a2a400(0000) GS:ffff97ed317e1000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f015c70fb18 CR3: 00000001109fd006 CR4: 0000000000f70ef0
PKRU: 55555554
Call Trace:
 
 xas_store+0x58/0x630
 __xa_store+0xa5/0x130
 xa_store+0x2c/0x50
 kvm_vm_set_mem_attributes+0x343/0x710 [kvm]
 kvm_vm_ioctl+0x796/0xab0 [kvm]
 __x64_sys_ioctl+0xa3/0xd0
 do_syscall_64+0x8c/0x7a0
 entry_SYSCALL_64_after_hwframe+0x76/0x7e
RIP: 0033:0x7f5578d031bb
Code: ff ff ff 85 c0 79 9b 49 c7 c4 ff ff ff ff 5b 5d 4c 89 e0 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa b8 10 00 00 00 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d 2d 4c 0f 00 f7 d8 64 89 01 48
RSP: 002b:00007ffe0a742b88 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 000000004020aed2 RCX: 00007f5578d031bb
RDX: 00007ffe0a742c80 RSI: 000000004020aed2 RDI: 000000000000000b
RBP: 0000010000000000 R08: 0000010000000000 R09: 0000017680000000
R10: 0000000000000080 R11: 0000000000000246 R12: 00005575e5f95120
R13: 00007ffe0a742c80 R14: 0000000000000008 R15: 00005575e5f961e0

While looping through the range of memory setting the attributes,
call cond_resched() to give the scheduler a chance to run a higher
priority task on the runqueue if necessary and avoid staying in
kernel mode long enough to trigger the lockup.</description><pubDate>Sat, 16 Aug 2025 11:11:27 +0000</pubDate></item><item><title>CVE-2025-38507 | HID: nintendo: avoid bluetooth suspend/resume stalls</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38507</link><description>In the Linux kernel, the following vulnerability has been resolved:

HID: nintendo: avoid bluetooth suspend/resume stalls

Ensure we don't stall or panic the kernel when using bluetooth-connected
controllers. This was reported as an issue on android devices using
kernel 6.6 due to the resume hook which had been added for usb joycons.

First, set a new state value to JOYCON_CTLR_STATE_SUSPENDED in a
newly-added nintendo_hid_suspend. This makes sure we will not stall out
the kernel waiting for input reports during led classdev suspend. The
stalls could happen if connectivity is unreliable or lost to the
controller prior to suspend.

Second, since we lose connectivity during suspend, do not try
joycon_init() for bluetooth controllers in the nintendo_hid_resume path.

Tested via multiple suspend/resume flows when using the controller both
in USB and bluetooth modes.</description><pubDate>Sat, 16 Aug 2025 11:11:27 +0000</pubDate></item><item><title>CVE-2025-38508 | x86/sev: Use TSC_FACTOR for Secure TSC frequency calculation</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38508</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/sev: Use TSC_FACTOR for Secure TSC frequency calculation

When using Secure TSC, the GUEST_TSC_FREQ MSR reports a frequency based on
the nominal P0 frequency, which deviates slightly (typically ~0.2%) from
the actual mean TSC frequency due to clocking parameters.

Over extended VM uptime, this discrepancy accumulates, causing clock skew
between the hypervisor and a SEV-SNP VM, leading to early timer interrupts as
perceived by the guest.

The guest kernel relies on the reported nominal frequency for TSC-based
timekeeping, while the actual frequency set during SNP_LAUNCH_START may
differ. This mismatch results in inaccurate time calculations, causing the
guest to perceive hrtimers as firing earlier than expected.

Utilize the TSC_FACTOR from the SEV firmware's secrets page (see "Secrets
Page Format" in the SNP Firmware ABI Specification) to calculate the mean
TSC frequency, ensuring accurate timekeeping and mitigating clock skew in
SEV-SNP VMs.

Use early_ioremap_encrypted() to map the secrets page as
ioremap_encrypted() uses kmalloc() which is not available during early TSC
initialization and causes a panic.

  [ bp: Drop the silly dummy var:
    https://lore.kernel.org/r/20250630192726.GBaGLlHl84xIopx4Pt@fat_crate.local ]</description><pubDate>Sat, 16 Aug 2025 11:11:27 +0000</pubDate></item><item><title>CVE-2025-38509 | wifi: mac80211: reject VHT opmode for unsupported channel widths</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38509</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: reject VHT opmode for unsupported channel widths

VHT operating mode notifications are not defined for channel widths
below 20 MHz. In particular, 5 MHz and 10 MHz are not valid under the
VHT specification and must be rejected.

Without this check, malformed notifications using these widths may
reach ieee80211_chan_width_to_rx_bw(), leading to a WARN_ON due to
invalid input. This issue was reported by syzbot.

Reject these unsupported widths early in sta_link_apply_parameters()
when opmode_notif is used. The accepted set includes 20, 40, 80, 160,
and 80+80 MHz, which are valid for VHT. While 320 MHz is not defined
for VHT, it is allowed to avoid rejecting HE or EHT clients that may
still send a VHT opmode notification.</description><pubDate>Sat, 16 Aug 2025 11:11:28 +0000</pubDate></item><item><title>CVE-2025-38510 | kasan: remove kasan_find_vm_area() to prevent possible deadlock</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38510</link><description>In the Linux kernel, the following vulnerability has been resolved:

kasan: remove kasan_find_vm_area() to prevent possible deadlock

find_vm_area() couldn't be called in atomic_context.  If find_vm_area() is
called to reports vm area information, kasan can trigger deadlock like:

CPU0                                CPU1
vmalloc();
 alloc_vmap_area();
  spin_lock(&amp;amp;vn-&gt;busy.lock)
                                    spin_lock_bh(&amp;amp;some_lock);
   
   
   spin_lock(&amp;amp;some_lock);
                                    
                                    kasan_report();
                                     print_report();
                                      print_address_description();
                                       kasan_find_vm_area();
                                        find_vm_area();
                                         spin_lock(&amp;amp;vn-&gt;busy.lock) // deadlock!

To prevent possible deadlock while kasan reports, remove kasan_find_vm_area().</description><pubDate>Sat, 16 Aug 2025 11:11:28 +0000</pubDate></item><item><title>CVE-2025-38511 | drm/xe/pf: Clear all LMTT pages on alloc</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38511</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/xe/pf: Clear all LMTT pages on alloc

Our LMEM buffer objects are not cleared by default on alloc
and during VF provisioning we only setup LMTT PTEs for the
actually provisioned LMEM range. But beyond that valid range
we might leave some stale data that could either point to some
other VFs allocations or even to the PF pages.

Explicitly clear all new LMTT page to avoid the risk that a
malicious VF would try to exploit that gap.

While around add asserts to catch any undesired PTE overwrites
and low-level debug traces to track LMTT PT life-cycle.

(cherry picked from commit 3fae6918a3e27cce20ded2551f863fb05d4bef8d)</description><pubDate>Sat, 16 Aug 2025 11:11:29 +0000</pubDate></item><item><title>CVE-2025-38512 | wifi: prevent A-MSDU attacks in mesh networks</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38512</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: prevent A-MSDU attacks in mesh networks

This patch is a mitigation to prevent the A-MSDU spoofing vulnerability
for mesh networks. The initial update to the IEEE 802.11 standard, in
response to the FragAttacks, missed this case (CVE-2025-27558). It can
be considered a variant of CVE-2020-24588 but for mesh networks.

This patch tries to detect if a standard MSDU was turned into an A-MSDU
by an adversary. This is done by parsing a received A-MSDU as a standard
MSDU, calculating the length of the Mesh Control header, and seeing if
the 6 bytes after this header equal the start of an rfc1042 header. If
equal, this is a strong indication of an ongoing attack attempt.

This defense was tested with mac80211_hwsim against a mesh network that
uses an empty Mesh Address Extension field, i.e., when four addresses
are used, and when using a 12-byte Mesh Address Extension field, i.e.,
when six addresses are used. Functionality of normal MSDUs and A-MSDUs
was also tested, and confirmed working, when using both an empty and
12-byte Mesh Address Extension field.

It was also tested with mac80211_hwsim that A-MSDU attacks in non-mesh
networks keep being detected and prevented.

Note that the vulnerability being patched, and the defense being
implemented, was also discussed in the following paper and in the
following IEEE 802.11 presentation:

https://papers.mathyvanhoef.com/wisec2025.pdf
https://mentor.ieee.org/802.11/dcn/25/11-25-0949-00-000m-a-msdu-mesh-spoof-protection.docx</description><pubDate>Sat, 16 Aug 2025 11:11:29 +0000</pubDate></item><item><title>CVE-2025-38513 | wifi: zd1211rw: Fix potential NULL pointer dereference in zd_mac_tx_to_dev()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38513</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: zd1211rw: Fix potential NULL pointer dereference in zd_mac_tx_to_dev()

There is a potential NULL pointer dereference in zd_mac_tx_to_dev(). For
example, the following is possible:

    	T0			    		T1
zd_mac_tx_to_dev()
  /* len == skb_queue_len(q) */
  while (len &gt; ZD_MAC_MAX_ACK_WAITERS) {

					  filter_ack()
					    spin_lock_irqsave(&amp;amp;q-&gt;lock, flags);
					    /* position == skb_queue_len(q) */
					    for (i=1; itype == NL80211_IFTYPE_AP)
					      skb = __skb_dequeue(q);
					    spin_unlock_irqrestore(&amp;amp;q-&gt;lock, flags);

    skb_dequeue() -&gt; NULL

Since there is a small gap between checking skb queue length and skb being
unconditionally dequeued in zd_mac_tx_to_dev(), skb_dequeue() can return NULL.
Then the pointer is passed to zd_mac_tx_status() where it is dereferenced.

In order to avoid potential NULL pointer dereference due to situations like
above, check if skb is not NULL before passing it to zd_mac_tx_status().

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Sat, 16 Aug 2025 11:11:29 +0000</pubDate></item><item><title>CVE-2025-38514 | rxrpc: Fix oops due to non-existence of prealloc backlog struct</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38514</link><description>In the Linux kernel, the following vulnerability has been resolved:

rxrpc: Fix oops due to non-existence of prealloc backlog struct

If an AF_RXRPC service socket is opened and bound, but calls are
preallocated, then rxrpc_alloc_incoming_call() will oops because the
rxrpc_backlog struct doesn't get allocated until the first preallocation is
made.

Fix this by returning NULL from rxrpc_alloc_incoming_call() if there is no
backlog struct.  This will cause the incoming call to be aborted.</description><pubDate>Sat, 16 Aug 2025 11:11:30 +0000</pubDate></item><item><title>CVE-2025-38515 | drm/sched: Increment job count before swapping tail spsc queue</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38515</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/sched: Increment job count before swapping tail spsc queue

A small race exists between spsc_queue_push and the run-job worker, in
which spsc_queue_push may return not-first while the run-job worker has
already idled due to the job count being zero. If this race occurs, job
scheduling stops, leading to hangs while waiting on the job’s DMA
fences.

Seal this race by incrementing the job count before appending to the
SPSC queue.

This race was observed on a drm-tip 6.16-rc1 build with the Xe driver in
an SVM test case.</description><pubDate>Sat, 16 Aug 2025 11:11:30 +0000</pubDate></item><item><title>CVE-2025-38516 | pinctrl: qcom: msm: mark certain pins as invalid for interrupts</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38516</link><description>In the Linux kernel, the following vulnerability has been resolved:

pinctrl: qcom: msm: mark certain pins as invalid for interrupts

On some platforms, the UFS-reset pin has no interrupt logic in TLMM but
is nevertheless registered as a GPIO in the kernel. This enables the
user-space to trigger a BUG() in the pinctrl-msm driver by running, for
example: `gpiomon -c 0 113` on RB2.

The exact culprit is requesting pins whose intr_detection_width setting
is not 1 or 2 for interrupts. This hits a BUG() in
msm_gpio_irq_set_type(). Potentially crashing the kernel due to an
invalid request from user-space is not optimal, so let's go through the
pins and mark those that would fail the check as invalid for the irq chip
as we should not even register them as available irqs.

This function can be extended if we determine that there are more
corner-cases like this.</description><pubDate>Sat, 16 Aug 2025 11:11:31 +0000</pubDate></item><item><title>CVE-2025-38517 | lib/alloc_tag: do not acquire non-existent lock in alloc_tag_top_users()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38517</link><description>In the Linux kernel, the following vulnerability has been resolved:

lib/alloc_tag: do not acquire non-existent lock in alloc_tag_top_users()

alloc_tag_top_users() attempts to lock alloc_tag_cttype-&gt;mod_lock even
when the alloc_tag_cttype is not allocated because:

  1) alloc tagging is disabled because mem profiling is disabled
     (!alloc_tag_cttype)
  2) alloc tagging is enabled, but not yet initialized (!alloc_tag_cttype)
  3) alloc tagging is enabled, but failed initialization
     (!alloc_tag_cttype or IS_ERR(alloc_tag_cttype))

In all cases, alloc_tag_cttype is not allocated, and therefore
alloc_tag_top_users() should not attempt to acquire the semaphore.

This leads to a crash on memory allocation failure by attempting to
acquire a non-existent semaphore:

  Oops: general protection fault, probably for non-canonical address 0xdffffc000000001b: 0000 [#3] SMP KASAN NOPTI
  KASAN: null-ptr-deref in range [0x00000000000000d8-0x00000000000000df]
  CPU: 2 UID: 0 PID: 1 Comm: systemd Tainted: G      D             6.16.0-rc2 #1 VOLUNTARY
  Tainted: [D]=DIE
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04/01/2014
  RIP: 0010:down_read_trylock+0xaa/0x3b0
  Code: d0 7c 08 84 d2 0f 85 a0 02 00 00 8b 0d df 31 dd 04 85 c9 75 29 48 b8 00 00 00 00 00 fc ff df 48 8d 6b 68 48 89 ea 48 c1 ea 03 &lt;80&gt; 3c 02 00 0f 85 88 02 00 00 48 3b 5b 68 0f 85 53 01 00 00 65 ff
  RSP: 0000:ffff8881002ce9b8 EFLAGS: 00010016
  RAX: dffffc0000000000 RBX: 0000000000000070 RCX: 0000000000000000
  RDX: 000000000000001b RSI: 000000000000000a RDI: 0000000000000070
  RBP: 00000000000000d8 R08: 0000000000000001 R09: ffffed107dde49d1
  R10: ffff8883eef24e8b R11: ffff8881002cec20 R12: 1ffff11020059d37
  R13: 00000000003fff7b R14: ffff8881002cec20 R15: dffffc0000000000
  FS:  00007f963f21d940(0000) GS:ffff888458ca6000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 00007f963f5edf71 CR3: 000000010672c000 CR4: 0000000000350ef0
  Call Trace:
   
   codetag_trylock_module_list+0xd/0x20
   alloc_tag_top_users+0x369/0x4b0
   __show_mem+0x1cd/0x6e0
   warn_alloc+0x2b1/0x390
   __alloc_frozen_pages_noprof+0x12b9/0x21a0
   alloc_pages_mpol+0x135/0x3e0
   alloc_slab_page+0x82/0xe0
   new_slab+0x212/0x240
   ___slab_alloc+0x82a/0xe00
   

As David Wang points out, this issue became easier to trigger after commit
780138b12381 ("alloc_tag: check mem_profiling_support in alloc_tag_init").

Before the commit, the issue occurred only when it failed to allocate and
initialize alloc_tag_cttype or if a memory allocation fails before
alloc_tag_init() is called.  After the commit, it can be easily triggered
when memory profiling is compiled but disabled at boot.

To properly determine whether alloc_tag_init() has been called and its
data structures initialized, verify that alloc_tag_cttype is a valid
pointer before acquiring the semaphore.  If the variable is NULL or an
error value, it has not been properly initialized.  In such a case, just
skip and do not attempt to acquire the semaphore.

[harry.yoo@oracle.com: v3]</description><pubDate>Sat, 16 Aug 2025 11:11:31 +0000</pubDate></item><item><title>CVE-2025-38518 | x86/CPU/AMD: Disable INVLPGB on Zen2</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38518</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/CPU/AMD: Disable INVLPGB on Zen2

AMD Cyan Skillfish (Family 17h, Model 47h, Stepping 0h) has an issue
that causes system oopses and panics when performing TLB flush using
INVLPGB.

However, the problem is that that machine has misconfigured CPUID and
should not report the INVLPGB bit in the first place. So zap the
kernel's representation of the flag so that nothing gets confused.

  [ bp: Massage. ]</description><pubDate>Sat, 16 Aug 2025 11:11:31 +0000</pubDate></item><item><title>CVE-2025-38519 | mm/damon: fix divide by zero in damon_get_intervals_score()</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38519</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm/damon: fix divide by zero in damon_get_intervals_score()

The current implementation allows having zero size regions with no special
reasons, but damon_get_intervals_score() gets crashed by divide by zero
when the region size is zero.

  [   29.403950] Oops: divide error: 0000 [#1] SMP NOPTI

This patch fixes the bug, but does not disallow zero size regions to keep
the backward compatibility since disallowing zero size regions might be a
breaking change for some users.

In addition, the same crash can happen when intervals_goal.access_bp is
zero so this should be fixed in stable trees as well.</description><pubDate>Sat, 16 Aug 2025 11:11:32 +0000</pubDate></item><item><title>CVE-2025-38520 | drm/amdkfd: Don&amp;#x27;t call mmput from MMU notifier callback</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38520</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdkfd: Don't call mmput from MMU notifier callback

If the process is exiting, the mmput inside mmu notifier callback from
compactd or fork or numa balancing could release the last reference
of mm struct to call exit_mmap and free_pgtable, this triggers deadlock
with below backtrace.

The deadlock will leak kfd process as mmu notifier release is not called
and cause VRAM leaking.

The fix is to take mm reference mmget_non_zero when adding prange to the
deferred list to pair with mmput in deferred list work.

If prange split and add into pchild list, the pchild work_item.mm is not
used, so remove the mm parameter from svm_range_unmap_split and
svm_range_add_child.

The backtrace of hung task:

 INFO: task python:348105 blocked for more than 64512 seconds.
 Call Trace:
  __schedule+0x1c3/0x550
  schedule+0x46/0xb0
  rwsem_down_write_slowpath+0x24b/0x4c0
  unlink_anon_vmas+0xb1/0x1c0
  free_pgtables+0xa9/0x130
  exit_mmap+0xbc/0x1a0
  mmput+0x5a/0x140
  svm_range_cpu_invalidate_pagetables+0x2b/0x40 [amdgpu]
  mn_itree_invalidate+0x72/0xc0
  __mmu_notifier_invalidate_range_start+0x48/0x60
  try_to_unmap_one+0x10fa/0x1400
  rmap_walk_anon+0x196/0x460
  try_to_unmap+0xbb/0x210
  migrate_page_unmap+0x54d/0x7e0
  migrate_pages_batch+0x1c3/0xae0
  migrate_pages_sync+0x98/0x240
  migrate_pages+0x25c/0x520
  compact_zone+0x29d/0x590
  compact_zone_order+0xb6/0xf0
  try_to_compact_pages+0xbe/0x220
  __alloc_pages_direct_compact+0x96/0x1a0
  __alloc_pages_slowpath+0x410/0x930
  __alloc_pages_nodemask+0x3a9/0x3e0
  do_huge_pmd_anonymous_page+0xd7/0x3e0
  __handle_mm_fault+0x5e3/0x5f0
  handle_mm_fault+0xf7/0x2e0
  hmm_vma_fault.isra.0+0x4d/0xa0
  walk_pmd_range.isra.0+0xa8/0x310
  walk_pud_range+0x167/0x240
  walk_pgd_range+0x55/0x100
  __walk_page_range+0x87/0x90
  walk_page_range+0xf6/0x160
  hmm_range_fault+0x4f/0x90
  amdgpu_hmm_range_get_pages+0x123/0x230 [amdgpu]
  amdgpu_ttm_tt_get_user_pages+0xb1/0x150 [amdgpu]
  init_user_pages+0xb1/0x2a0 [amdgpu]
  amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu+0x543/0x7d0 [amdgpu]
  kfd_ioctl_alloc_memory_of_gpu+0x24c/0x4e0 [amdgpu]
  kfd_ioctl+0x29d/0x500 [amdgpu]

(cherry picked from commit a29e067bd38946f752b0ef855f3dfff87e77bec7)</description><pubDate>Sat, 16 Aug 2025 11:11:32 +0000</pubDate></item><item><title>CVE-2025-38521 | drm/imagination: Fix kernel crash when hard resetting the GPU</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38521</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/imagination: Fix kernel crash when hard resetting the GPU

The GPU hard reset sequence calls pm_runtime_force_suspend() and
pm_runtime_force_resume(), which according to their documentation should
only be used during system-wide PM transitions to sleep states.

The main issue though is that depending on some internal runtime PM
state as seen by pm_runtime_force_suspend() (whether the usage count is
&lt;= 1), pm_runtime_force_resume() might not resume the device unless
needed. If that happens, the runtime PM resume callback
pvr_power_device_resume() is not called, the GPU clocks are not
re-enabled, and the kernel crashes on the next attempt to access GPU
registers as part of the power-on sequence.

Replace calls to pm_runtime_force_suspend() and
pm_runtime_force_resume() with direct calls to the driver's runtime PM
callbacks, pvr_power_device_suspend() and pvr_power_device_resume(),
to ensure clocks are re-enabled and avoid the kernel crash.</description><pubDate>Sat, 16 Aug 2025 11:11:33 +0000</pubDate></item><item><title>CVE-2025-9092 | Hybrid Module Deployment in Multi-JVM Environments Leading to Resource Exhaustion</title><link>https://www.cve.org/CVERecord?id=CVE-2025-9092</link><description>Uncontrolled Resource Consumption vulnerability in Legion of the Bouncy Castle Inc. Bouncy Castle for Java - BC-FJA 2.1.0 bc-fips (API modules) allows Excessive Allocation. This vulnerability is associated with program files org.Bouncycastle.Crypto.Fips.NativeLoader.

This issue affects Bouncy Castle for Java - BC-FJA 2.1.0: from BC-FJA 2.1.0 through 2.1.0.</description><pubDate>Sat, 16 Aug 2025 10:33:42 +0000</pubDate></item><item><title>CVE-2025-38502 | bpf: Fix oob access in cgroup local storage</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38502</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix oob access in cgroup local storage

Lonial reported that an out-of-bounds access in cgroup local storage
can be crafted via tail calls. Given two programs each utilizing a
cgroup local storage with a different value size, and one program
doing a tail call into the other. The verifier will validate each of
the indivial programs just fine. However, in the runtime context
the bpf_cg_run_ctx holds an bpf_prog_array_item which contains the
BPF program as well as any cgroup local storage flavor the program
uses. Helpers such as bpf_get_local_storage() pick this up from the
runtime context:

  ctx = container_of(current-&gt;bpf_ctx, struct bpf_cg_run_ctx, run_ctx);
  storage = ctx-&gt;prog_item-&gt;cgroup_storage[stype];

  if (stype == BPF_CGROUP_STORAGE_SHARED)
    ptr = &amp;amp;READ_ONCE(storage-&gt;buf)-&gt;data[0];
  else
    ptr = this_cpu_ptr(storage-&gt;percpu_buf);

For the second program which was called from the originally attached
one, this means bpf_get_local_storage() will pick up the former
program's map, not its own. With mismatching sizes, this can result
in an unintended out-of-bounds access.

To fix this issue, we need to extend bpf_map_owner with an array of
storage_cookie[] to match on i) the exact maps from the original
program if the second program was using bpf_get_local_storage(), or
ii) allow the tail call combination if the second program was not
using any of the cgroup local storage maps.</description><pubDate>Sat, 16 Aug 2025 09:44:29 +0000</pubDate></item><item><title>CVE-2025-8719 | Translate This - Google Translate Web Element Shortcode &amp;lt;= 1.0 - Authenticated (Contributor+) Stored Cross-Site Scripting via base_lang Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8719</link><description>The Translate This gTranslate Shortcode plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘base_lang’ parameter in all versions up to, and including, 1.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 08:46:11 +0000</pubDate></item><item><title>CVE-2025-7499 | BetterDocs  &amp;lt;= 4.1.1 - Missing Authorization to Private And Password-Protected Posts Information Disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7499</link><description>The BetterDocs – Advanced AI-Driven Documentation, FAQ &amp; Knowledge Base Tool for Elementor &amp; Gutenberg with Encyclopedia, AI Support, Instant Answers plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the get_response function in all versions up to and including 4.1.1. This makes it possible for unauthenticated attackers to retrieve passwords for password-protected documents as well as the metadata of private and draft documents.</description><pubDate>Sat, 16 Aug 2025 07:28:40 +0000</pubDate></item><item><title>CVE-2025-8464 | Drag and Drop Multiple File Upload for Contact Form 7 &amp;lt;= 1.3.9.0 - Directory Traversal via `wpcf7_guest_user_id` Cookie</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8464</link><description>The Drag and Drop Multiple File Upload for Contact Form 7 plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 1.3.9.0 via the wpcf7_guest_user_id cookie. This makes it possible for unauthenticated attackers to upload and delete files outside of the originally intended directory. The impact of this vulnerability is limited, as file types are validated and only safe ones can be uploaded, while deletion is limited to the plugin's uploads folder.</description><pubDate>Sat, 16 Aug 2025 07:28:40 +0000</pubDate></item><item><title>CVE-2025-8089 | Advanced iFrame &amp;lt;= 2025.6 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8089</link><description>The Advanced iFrame plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'additional' parameter in version less than, or equal to, 2025.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 06:54:10 +0000</pubDate></item><item><title>CVE-2025-8896 | User Profile Builder – Beautiful User Registration Forms, User Profiles &amp;amp; User Role Editor &amp;lt;= 3.14.3 - Authenticated (Subscriber+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8896</link><description>The User Profile Builder – Beautiful User Registration Forms, User Profiles &amp; User Role Editor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'gdpr_communication_preferences[]' parameter in all versions up to, and including, 3.14.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Subscriber-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This is only exploitable when the GDPR Communication Preferences module is enabled and at least one GDPR Communication Preferences field has been added to the edit profile form.</description><pubDate>Sat, 16 Aug 2025 06:54:10 +0000</pubDate></item><item><title>CVE-2025-8898 | Taxi Booking Manager for Woocommerce | E-cab &amp;lt;= 1.3.0 - Missing Authorization to Unauthenticated Privilege Escalation via Account Takeover</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8898</link><description>The Taxi Booking Manager for Woocommerce | E-cab plugin for WordPress is vulnerable to privilege escalation via account takeover in all versions up to, and including, 1.3.0. This is due to the plugin not properly validating a user's capabilities prior to updating a plugin setting or their identity prior to updating their details like email address. This makes it possible for unauthenticated attackers to change arbitrary user's email addresses, including administrators, and leverage that to reset the user's password and gain access to their account.</description><pubDate>Sat, 16 Aug 2025 06:54:11 +0000</pubDate></item><item><title>CVE-2025-8113 | Ebook Store &amp;lt; 5.8015 - Reflected XSS via $_SERVER[&amp;#x27;REQUEST_URI&amp;#x27;]</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8113</link><description>The Ebook Store WordPress plugin before 5.8015 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers.</description><pubDate>Sat, 16 Aug 2025 06:35:19 +0000</pubDate></item><item><title>CVE-2025-38501 | ksmbd: limit repeated connections from clients with the same IP</title><link>https://www.cve.org/CVERecord?id=CVE-2025-38501</link><description>In the Linux kernel, the following vulnerability has been resolved:

ksmbd: limit repeated connections from clients with the same IP

Repeated connections from clients with the same IP address may exhaust
the max connections and prevent other normal client connections.
This patch limit repeated connections from clients with the same IP.</description><pubDate>Sat, 16 Aug 2025 05:41:50 +0000</pubDate></item><item><title>CVE-2024-12612 | School Management System for Wordpress &amp;lt;= 93.2.0 - Unauthenticated SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-12612</link><description>The School Management System for Wordpress plugin for WordPress is vulnerable to SQL Injection via several parameters across multiple AJAX action in all versions up to, and including, 93.2.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Sat, 16 Aug 2025 03:45:25 +0000</pubDate></item><item><title>CVE-2024-8393 | Woocommerce Blocks – Woolook &amp;lt;= 1.7.0 - Authenticated (Admin+) Local File Inclusion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8393</link><description>The Woocommerce Blocks – Woolook plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.7.0 via the via the 'tab' parameter. This makes it possible for authenticated attackers, with Administrator-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included. Please note that this can also be exploited via CSRF techniques.</description><pubDate>Sat, 16 Aug 2025 03:45:25 +0000</pubDate></item><item><title>CVE-2025-3671 | WPGYM - Wordpress Gym Management System &amp;lt;= 67.7.0 - Authenticated (Subscriber+) Local File Inclusion to Privilege Escalation via Password Update</title><link>https://www.cve.org/CVERecord?id=CVE-2025-3671</link><description>The WPGYM - Wordpress Gym Management System plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 67.7.0 via the 'page' parameter. This makes it possible for authenticated attackers, with Subscriber-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included. The Local File Inclusion exploit can be chained to include various dashboard view files in the plugin. One in particular reported by the researcher can be leveraged to update the password of Super Administrator accounts in Multisite environments making privilege escalation possible.</description><pubDate>Sat, 16 Aug 2025 03:45:26 +0000</pubDate></item><item><title>CVE-2025-6079 | School Management System &amp;lt;= 93.2.0 - Authenticated (Student+) Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2025-6079</link><description>The School Management System for Wordpress plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the homework.php file in all versions up to, and including, 93.2.0. This makes it possible for authenticated attackers, with Student-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Sat, 16 Aug 2025 03:45:26 +0000</pubDate></item><item><title>CVE-2025-6080 | WPGYM &amp;lt;= 67.7.0 - Missing Authorization to Admin Account Creation</title><link>https://www.cve.org/CVERecord?id=CVE-2025-6080</link><description>The WPGYM - Wordpress Gym Management System plugin for WordPress is vulnerable to unauthorized admin account creation in all versions up to, and including, 67.7.0. This is due to the plugin not properly validating a user's capabilities prior to adding users. This makes it possible for authenticated attackers, with Subscriber-level access and above, to create new users, including admins.</description><pubDate>Sat, 16 Aug 2025 03:45:26 +0000</pubDate></item><item><title>CVE-2025-6221 | Embed Bokun &amp;lt;= 0.23 - Authenticated (Contributor+) Stored Cross-Site Scripting via align Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2025-6221</link><description>The Embed Bokun plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘align’ parameter in all versions up to, and including, 0.23 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 03:45:27 +0000</pubDate></item><item><title>CVE-2025-7439 | Anber Elementor Addon &amp;lt;= 1.0.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Banner button link</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7439</link><description>Anber Elementor Addon plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the $anber_item['button_link']['url']’ parameter in all versions up to, and including, 1.0.1 to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 03:45:27 +0000</pubDate></item><item><title>CVE-2025-7440 | Anber Elementor Addon &amp;lt;= 1.0.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Carousel button link</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7440</link><description>The Anber Elementor Addon plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the $item['button_link']['url'] parameter in all versions up to, and including, 1.0.1 to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 03:45:28 +0000</pubDate></item><item><title>CVE-2025-7441 | StoryChief &amp;lt;= 1.0.42 - Unauthenticated Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7441</link><description>The StoryChief plugin for WordPress is vulnerable to arbitrary file uploads in all versions up to, and including, 1.0.42. This vulnerability occurs through the /wp-json/storychief/webhook REST-API endpoint that does not have sufficient filetype validation. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Sat, 16 Aug 2025 03:45:28 +0000</pubDate></item><item><title>CVE-2025-7649 | Surbma | Recent Comments Shortcode &amp;lt;= 2.0 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7649</link><description>The Surbma | Recent Comments Shortcode plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'recent-comments' shortcode in all versions up to, and including, 2.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 03:45:29 +0000</pubDate></item><item><title>CVE-2025-7651 | Earnware Connect &amp;lt;= 1.0.73 - Authenticated (Contributor+) Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7651</link><description>The Earnware Connect plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'ew_hasrole' shortcode in all versions up to, and including, 1.0.73 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 03:45:29 +0000</pubDate></item><item><title>CVE-2025-7664 | Al Pack &amp;lt;= 1.0.2 - Missing Authorization to Unauthenticated Premium Feature Activation via check_activate_permission Function</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7664</link><description>The AL Pack plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on the check_activate_permission() permission callback for the /wp-json/presslearn/v1/activate REST API endpoint in all versions up to, and including, 1.0.2. The callback reads the client-supplied Origin header and, after parsing, allows the request if it matches one of the trusted domains, without ever verifying user authentication, capabilities, or nonce tokens. This makes it possible for unauthenticated attackers to activate premium features by simply spoofing the Origin header.</description><pubDate>Sat, 16 Aug 2025 03:45:29 +0000</pubDate></item><item><title>CVE-2025-7668 | Linux Promotional Plugin &amp;lt;= 1.4 - Cross-Site Request Forgery to Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7668</link><description>The Linux Promotional Plugin plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.4. This is due to missing or incorrect nonce validation on the 'inux-promotional-plugin.php' page. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Sat, 16 Aug 2025 03:45:30 +0000</pubDate></item><item><title>CVE-2025-7683 | LatestCheckins &amp;lt;= 1 - Cross-Site Request Forgery to Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7683</link><description>The LatestCheckins plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1. This is due to missing or incorrect nonce validation on the 'LatestCheckins' page. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Sat, 16 Aug 2025 03:45:30 +0000</pubDate></item><item><title>CVE-2025-7684 | Last.fm Recent Album Artwork &amp;lt;= 1.0.2 - Cross-Site Request Forgery to Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7684</link><description>The Last.fm Recent Album Artwork plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.2. This is due to missing or incorrect nonce validation on the 'lastfm_albums_artwork.php' page. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Sat, 16 Aug 2025 03:45:31 +0000</pubDate></item><item><title>CVE-2025-7686 | weichuncai(WP伪春菜) &amp;lt;= 1.5 - Cross-Site Request Forgery to Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2025-7686</link><description>The weichuncai(WP伪春菜) plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.5. This is due to missing or incorrect nonce validation on the sm-options.php page. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Sat, 16 Aug 2025 03:45:31 +0000</pubDate></item><item><title>CVE-2025-8293 | Intl DateTime Calendar &amp;lt;= 1.0.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via date Parameter</title><link>https://www.cve.org/CVERecord?id=CVE-2025-8293</link><description>The Intl DateTime Calendar plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘date’ parameter in all versions up to, and including, 1.0.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Sat, 16 Aug 2025 03:45:31 +0000</pubDate></item><item><title>CVE-2024-12575 | Poll Maker – Versus Polls, Anonymous Polls, Image Polls &amp;lt;= 5.8.9 - Unauthenticated Basic Information Exposure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-12575</link><description>The Poll Maker – Versus Polls, Anonymous Polls, Image Polls plugin for WordPress is vulnerable to Basic Information Exposure in all versions up to, and including, 5.8.9 via the 'ays_finish_poll' AJAX action. This makes it possible for unauthenticated attackers to retrieve admin email information which is exposed in the poll response.</description><pubDate>Sat, 16 Aug 2025 03:45:32 +0000</pubDate></item><item><title>CVE-2025-49895 | WordPress ServerBuddy by PluginBuddy.com plugin &amp;lt;= 1.0.5 - CSRF to PHP Object Injection vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2025-49895</link><description>Cross-Site Request Forgery (CSRF) vulnerability in iThemes ServerBuddy by PluginBuddy.Com allows Object Injection.This issue affects ServerBuddy by PluginBuddy.Com: from n/a through 1.0.5.</description><pubDate>Sat, 16 Aug 2025 03:45:33 +0000</pubDate></item><item><title>CVE-2025-55284 | Claude Code&amp;#x27;s Permissive Default Allowlist Enables Unauthorized File Read and Network Exfiltration in Claude Code</title><link>https://www.cve.org/CVERecord?id=CVE-2025-55284</link><description>Claude Code is an agentic coding tool. Prior to version 1.0.4, it's possible to bypass the Claude Code confirmation prompts to read a file and then send file contents over the network without user confirmation due to an overly broad allowlist of safe commands. Reliably exploiting this requires the ability to add untrusted content into a Claude Code context window. Users on standard Claude Code auto-update received this fix automatically after release. Current users of Claude Code are unaffected, as versions prior to 1.0.24 are deprecated and have been forced to update.</description><pubDate>Sat, 16 Aug 2025 02:57:08 +0000</pubDate></item><item><title>CVE-2025-55286 | z2d OOB drawing with new multi-sample anti-aliasing could lead to invalid memory access and corruption</title><link>https://www.cve.org/CVERecord?id=CVE-2025-55286</link><description>z2d is a pure Zig 2D graphics library. z2d v0.7.0 released with a new multi-sample anti-aliasing (MSAA) method, which uses a new buffering mechanism for storing coverage data. This differs from the standard alpha mask surface used for the previous super-sample anti-aliasing (SSAA) method. Under certain circumstances where the path being drawn existed in whole or partly outside of the rendering surface, incorrect bounding could cause out-of-bounds access within the coverage buffer. This affects the higher-level drawing operations, such as Context.fill, Context.stroke, painter.fill, and painter.stroke, when either the .default or .multisample_4x anti-aliasing modes were used. .supersample_4x was not affected, nor was drawing without anti-aliasing. In non-safe optimization modes (consumers compiling with ReleaseFast or ReleaseSmall), this could potentially lead to invalid memory accesses or corruption. z2d v0.7.1 fixes this issue, and it's recommended to upgrade to v0.7.1, or, given the small period of time v0.7.0 has been released, use v0.7.1 immediately, skipping v0.7.0.</description><pubDate>Sat, 16 Aug 2025 01:25:57 +0000</pubDate></item></channel></rss>