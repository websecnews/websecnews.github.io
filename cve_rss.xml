<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Fri, 08 Nov 2024 09:41:13 +0000</lastBuildDate><item><title>CVE-2024-10187 | myCred &amp;lt;= 2.7.4 - Authenticated (Contributor+) Stored Cross-Site Scripting via mycred_link Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10187</link><description>The myCred – Loyalty Points and Rewards plugin for WordPress and WooCommerce – Give Points, Ranks, Badges, Cashback, WooCommerce rewards, and WooCommerce credits for Gamification plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's mycred_link shortcode in all versions up to, and including, 2.7.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 08 Nov 2024 09:41:15 +0000</pubDate></item><item><title>CVE-2024-50588 | Unprotected Exposed Firebird Database with default credentials</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50588</link><description>An unauthenticated attacker with access to the local network of the 
medical office can use known default credentials to gain remote DBA 
access to the Elefant Firebird database. The data in the database 
includes patient data and login credentials among other sensitive data. 
In addition, this enables an attacker to create and overwrite arbitrary 
files on the server filesystem with the rights of the Firebird database 
("NT AUTHORITY\SYSTEM").</description><pubDate>Fri, 08 Nov 2024 08:44:22 +0000</pubDate></item><item><title>CVE-2024-10999 | CodeAstro Real Estate Management System About Us Page aboutadd.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10999</link><description>A vulnerability classified as problematic has been found in CodeAstro Real Estate Management System 1.0. Affected is an unknown function of the file /aboutadd.php of the component About Us Page. The manipulation of the argument aimage leads to unrestricted upload. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 08:29:54 +0000</pubDate></item><item><title>CVE-2024-11000 | CodeAstro Real Estate Management System About Us Page aboutedit.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-11000</link><description>A vulnerability classified as problematic was found in CodeAstro Real Estate Management System 1.0. Affected by this vulnerability is an unknown functionality of the file /aboutedit.php of the component About Us Page. The manipulation of the argument aimage leads to unrestricted upload. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 08:29:54 +0000</pubDate></item><item><title>CVE-2024-24409 | Privilege Escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24409</link><description>Zohocorp ManageEngine ADManager Plus versions 7203 and prior are vulnerable to Privilege Escalation in the Modify Computers option.</description><pubDate>Fri, 08 Nov 2024 08:29:55 +0000</pubDate></item><item><title>CVE-2024-10998 | 1000 Projects Bookstore Management System process_category_add.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10998</link><description>A vulnerability was found in 1000 Projects Bookstore Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file /admin/process_category_add.php. The manipulation of the argument cat leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 07:41:30 +0000</pubDate></item><item><title>CVE-2024-10997 | 1000 Projects Bookstore Management System book_list.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10997</link><description>A vulnerability was found in 1000 Projects Bookstore Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file /book_list.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 07:21:32 +0000</pubDate></item><item><title>CVE-2024-10269 | Easy SVG Support &amp;lt;= 3.7 - Authenticated (Author+) Stored Cross-Site Scripting via SVG File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10269</link><description>The Easy SVG Support plugin for WordPress is vulnerable to Stored Cross-Site Scripting via REST API SVG File uploads in all versions up to, and including, 3.7 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.</description><pubDate>Fri, 08 Nov 2024 06:50:59 +0000</pubDate></item><item><title>CVE-2024-10995 | Codezips Hospital Appointment System removeDoctorResult.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10995</link><description>A vulnerability was found in Codezips Hospital Appointment System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file /removeDoctorResult.php. The manipulation of the argument Name leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 06:39:27 +0000</pubDate></item><item><title>CVE-2024-10996 | 1000 Projects Bookstore Management System process_category_edit.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10996</link><description>A vulnerability was found in 1000 Projects Bookstore Management System 1.0. It has been classified as critical. This affects an unknown part of the file /admin/process_category_edit.php. The manipulation of the argument cat leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 06:39:27 +0000</pubDate></item><item><title>CVE-2024-10994 | Codezips Online Institute Management System edit_user.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10994</link><description>A vulnerability has been found in Codezips Online Institute Management System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file /edit_user.php. The manipulation of the argument image leads to unrestricted upload. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 06:15:24 +0000</pubDate></item><item><title>CVE-2024-50203 | bpf, arm64: Fix address emission with tag-based KASAN enabled</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50203</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf, arm64: Fix address emission with tag-based KASAN enabled

When BPF_TRAMP_F_CALL_ORIG is enabled, the address of a bpf_tramp_image
struct on the stack is passed during the size calculation pass and
an address on the heap is passed during code generation. This may
cause a heap buffer overflow if the heap address is tagged because
emit_a64_mov_i64() will emit longer code than it did during the size
calculation pass. The same problem could occur without tag-based
KASAN if one of the 16-bit words of the stack address happened to
be all-ones during the size calculation pass. Fix the problem by
assuming the worst case (4 instructions) when calculating the size
of the bpf_tramp_image address emission.</description><pubDate>Fri, 08 Nov 2024 06:15:24 +0000</pubDate></item><item><title>CVE-2024-50204 | fs: don&amp;#x27;t try and remove empty rbtree node</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50204</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs: don't try and remove empty rbtree node

When copying a namespace we won't have added the new copy into the
namespace rbtree until after the copy succeeded. Calling free_mnt_ns()
will try to remove the copy from the rbtree which is invalid. Simply
free the namespace skeleton directly.</description><pubDate>Fri, 08 Nov 2024 06:15:24 +0000</pubDate></item><item><title>CVE-2024-50205 | ALSA: firewire-lib: Avoid division by zero in apply_constraint_to_size()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50205</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: firewire-lib: Avoid division by zero in apply_constraint_to_size()

The step variable is initialized to zero. It is changed in the loop,
but if it's not changed it will remain zero. Add a variable check
before the division.

The observed behavior was introduced by commit 826b5de90c0b
("ALSA: firewire-lib: fix insufficient PCM rule for period/buffer size"),
and it is difficult to show that any of the interval parameters will
satisfy the snd_interval_test() condition with data from the
amdtp_rate_table[] table.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Fri, 08 Nov 2024 06:15:25 +0000</pubDate></item><item><title>CVE-2024-50206 | net: ethernet: mtk_eth_soc: fix memory corruption during fq dma init</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50206</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: ethernet: mtk_eth_soc: fix memory corruption during fq dma init

The loop responsible for allocating up to MTK_FQ_DMA_LENGTH buffers must
only touch as many descriptors, otherwise it ends up corrupting unrelated
memory. Fix the loop iteration count accordingly.</description><pubDate>Fri, 08 Nov 2024 06:15:25 +0000</pubDate></item><item><title>CVE-2024-50207 | ring-buffer: Fix reader locking when changing the sub buffer order</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50207</link><description>In the Linux kernel, the following vulnerability has been resolved:

ring-buffer: Fix reader locking when changing the sub buffer order

The function ring_buffer_subbuf_order_set() updates each
ring_buffer_per_cpu and installs new sub buffers that match the requested
page order. This operation may be invoked concurrently with readers that
rely on some of the modified data, such as the head bit (RB_PAGE_HEAD), or
the ring_buffer_per_cpu.pages and reader_page pointers. However, no
exclusive access is acquired by ring_buffer_subbuf_order_set(). Modifying
the mentioned data while a reader also operates on them can then result in
incorrect memory access and various crashes.

Fix the problem by taking the reader_lock when updating a specific
ring_buffer_per_cpu in ring_buffer_subbuf_order_set().</description><pubDate>Fri, 08 Nov 2024 06:15:26 +0000</pubDate></item><item><title>CVE-2024-50208 | RDMA/bnxt_re: Fix a bug while setting up Level-2 PBL pages</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50208</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/bnxt_re: Fix a bug while setting up Level-2 PBL pages

Avoid memory corruption while setting up Level-2 PBL pages for the non MR
resources when num_pages &gt; 256K.

There will be a single PDE page address (contiguous pages in the case of &gt;
PAGE_SIZE), but, current logic assumes multiple pages, leading to invalid
memory access after 256K PBL entries in the PDE.</description><pubDate>Fri, 08 Nov 2024 06:15:26 +0000</pubDate></item><item><title>CVE-2024-50209 | RDMA/bnxt_re: Add a check for memory allocation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50209</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/bnxt_re: Add a check for memory allocation

__alloc_pbl() can return error when memory allocation fails.
Driver is not checking the status on one of the instances.</description><pubDate>Fri, 08 Nov 2024 06:15:27 +0000</pubDate></item><item><title>CVE-2024-50210 | posix-clock: posix-clock: Fix unbalanced locking in pc_clock_settime()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50210</link><description>In the Linux kernel, the following vulnerability has been resolved:

posix-clock: posix-clock: Fix unbalanced locking in pc_clock_settime()

If get_clock_desc() succeeds, it calls fget() for the clockid's fd,
and get the clk-&gt;rwsem read lock, so the error path should release
the lock to make the lock balance and fput the clockid's fd to make
the refcount balance and release the fd related resource.

However the below commit left the error path locked behind resulting in
unbalanced locking. Check timespec64_valid_strict() before
get_clock_desc() to fix it, because the "ts" is not changed
after that.

[pabeni@redhat.com: fixed commit message typo]</description><pubDate>Fri, 08 Nov 2024 06:15:27 +0000</pubDate></item><item><title>CVE-2024-50211 | udf: refactor inode_bmap() to handle error</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50211</link><description>In the Linux kernel, the following vulnerability has been resolved:

udf: refactor inode_bmap() to handle error

Refactor inode_bmap() to handle error since udf_next_aext() can return
error now. On situations like ftruncate, udf_extend_file() can now
detect errors and bail out early without resorting to checking for
particular offsets and assuming internal behavior of these functions.</description><pubDate>Fri, 08 Nov 2024 06:15:27 +0000</pubDate></item><item><title>CVE-2024-7982 | Registrations for The Events Calendar &amp;lt; 2.12.4 - Unauthenticated Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7982</link><description>The Registrations for the Events Calendar  WordPress plugin before 2.12.4 does not sanitise and escape some parameters when accepting event registrations, which could allow unauthenticated users to perform Cross-Site Scripting attacks.</description><pubDate>Fri, 08 Nov 2024 06:15:28 +0000</pubDate></item><item><title>CVE-2024-50192 | irqchip/gic-v4: Don&amp;#x27;t allow a VMOVP on a dying VPE</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50192</link><description>In the Linux kernel, the following vulnerability has been resolved:

irqchip/gic-v4: Don't allow a VMOVP on a dying VPE

Kunkun Jiang reported that there is a small window of opportunity for
userspace to force a change of affinity for a VPE while the VPE has already
been unmapped, but the corresponding doorbell interrupt still visible in
/proc/irq/.

Plug the race by checking the value of vmapp_count, which tracks whether
the VPE is mapped ot not, and returning an error in this case.

This involves making vmapp_count common to both GICv4.1 and its v4.0
ancestor.</description><pubDate>Fri, 08 Nov 2024 06:15:29 +0000</pubDate></item><item><title>CVE-2024-50193 | x86/entry_32: Clear CPU buffers after register restore in NMI return</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50193</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/entry_32: Clear CPU buffers after register restore in NMI return

CPU buffers are currently cleared after call to exc_nmi, but before
register state is restored. This may be okay for MDS mitigation but not for
RDFS. Because RDFS mitigation requires CPU buffers to be cleared when
registers don't have any sensitive data.

Move CLEAR_CPU_BUFFERS after RESTORE_ALL_NMI.</description><pubDate>Fri, 08 Nov 2024 06:15:29 +0000</pubDate></item><item><title>CVE-2024-50194 | arm64: probes: Fix uprobes for big-endian kernels</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50194</link><description>In the Linux kernel, the following vulnerability has been resolved:

arm64: probes: Fix uprobes for big-endian kernels

The arm64 uprobes code is broken for big-endian kernels as it doesn't
convert the in-memory instruction encoding (which is always
little-endian) into the kernel's native endianness before analyzing and
simulating instructions. This may result in a few distinct problems:

* The kernel may may erroneously reject probing an instruction which can
  safely be probed.

* The kernel may erroneously erroneously permit stepping an
  instruction out-of-line when that instruction cannot be stepped
  out-of-line safely.

* The kernel may erroneously simulate instruction incorrectly dur to
  interpretting the byte-swapped encoding.

The endianness mismatch isn't caught by the compiler or sparse because:

* The arch_uprobe::{insn,ixol} fields are encoded as arrays of u8, so
  the compiler and sparse have no idea these contain a little-endian
  32-bit value. The core uprobes code populates these with a memcpy()
  which similarly does not handle endianness.

* While the uprobe_opcode_t type is an alias for __le32, both
  arch_uprobe_analyze_insn() and arch_uprobe_skip_sstep() cast from u8[]
  to the similarly-named probe_opcode_t, which is an alias for u32.
  Hence there is no endianness conversion warning.

Fix this by changing the arch_uprobe::{insn,ixol} fields to __le32 and
adding the appropriate __le32_to_cpu() conversions prior to consuming
the instruction encoding. The core uprobes copies these fields as opaque
ranges of bytes, and so is unaffected by this change.

At the same time, remove MAX_UINSN_BYTES and consistently use
AARCH64_INSN_SIZE for clarity.

Tested with the following:

| #include 
| #include 
|
| #define noinline __attribute__((noinline))
|
| static noinline void *adrp_self(void)
| {
|         void *addr;
|
|         asm volatile(
|         "       adrp    %x0, adrp_self\n"
|         "       add     %x0, %x0, :lo12:adrp_self\n"
|         : "=r" (addr));
| }
|
|
| int main(int argc, char *argv)
| {
|         void *ptr = adrp_self();
|         bool equal = (ptr == adrp_self);
|
|         printf("adrp_self   =&gt; %p\n"
|                "adrp_self() =&gt; %p\n"
|                "%s\n",
|                adrp_self, ptr, equal ? "EQUAL" : "NOT EQUAL");
|
|         return 0;
| }

.... where the adrp_self() function was compiled to:

| 00000000004007e0 :
|   4007e0:       90000000        adrp    x0, 400000 &lt;__ehdr_start&gt;
|   4007e4:       911f8000        add     x0, x0, #0x7e0
|   4007e8:       d65f03c0        ret

Before this patch, the ADRP is not recognized, and is assumed to be
steppable, resulting in corruption of the result:

| # ./adrp-self
| adrp_self   =&gt; 0x4007e0
| adrp_self() =&gt; 0x4007e0
| EQUAL
| # echo 'p /root/adrp-self:0x007e0' &gt; /sys/kernel/tracing/uprobe_events
| # echo 1 &gt; /sys/kernel/tracing/events/uprobes/enable
| # ./adrp-self
| adrp_self   =&gt; 0x4007e0
| adrp_self() =&gt; 0xffffffffff7e0
| NOT EQUAL

After this patch, the ADRP is correctly recognized and simulated:

| # ./adrp-self
| adrp_self   =&gt; 0x4007e0
| adrp_self() =&gt; 0x4007e0
| EQUAL
| #
| # echo 'p /root/adrp-self:0x007e0' &gt; /sys/kernel/tracing/uprobe_events
| # echo 1 &gt; /sys/kernel/tracing/events/uprobes/enable
| # ./adrp-self
| adrp_self   =&gt; 0x4007e0
| adrp_self() =&gt; 0x4007e0
| EQUAL</description><pubDate>Fri, 08 Nov 2024 06:15:30 +0000</pubDate></item><item><title>CVE-2024-50195 | posix-clock: Fix missing timespec64 check in pc_clock_settime()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50195</link><description>In the Linux kernel, the following vulnerability has been resolved:

posix-clock: Fix missing timespec64 check in pc_clock_settime()

As Andrew pointed out, it will make sense that the PTP core
checked timespec64 struct's tv_sec and tv_nsec range before calling
ptp-&gt;info-&gt;settime64().

As the man manual of clock_settime() said, if tp.tv_sec is negative or
tp.tv_nsec is outside the range [0..999,999,999], it should return EINVAL,
which include dynamic clocks which handles PTP clock, and the condition is
consistent with timespec64_valid(). As Thomas suggested, timespec64_valid()
only check the timespec is valid, but not ensure that the time is
in a valid range, so check it ahead using timespec64_valid_strict()
in pc_clock_settime() and return -EINVAL if not valid.

There are some drivers that use tp-&gt;tv_sec and tp-&gt;tv_nsec directly to
write registers without validity checks and assume that the higher layer
has checked it, which is dangerous and will benefit from this, such as
hclge_ptp_settime(), igb_ptp_settime_i210(), _rcar_gen4_ptp_settime(),
and some drivers can remove the checks of itself.</description><pubDate>Fri, 08 Nov 2024 06:15:30 +0000</pubDate></item><item><title>CVE-2024-50196 | pinctrl: ocelot: fix system hang on level based interrupts</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50196</link><description>In the Linux kernel, the following vulnerability has been resolved:

pinctrl: ocelot: fix system hang on level based interrupts

The current implementation only calls chained_irq_enter() and
chained_irq_exit() if it detects pending interrupts.

```
for (i = 0; i &lt; info-&gt;stride; i++) {
	uregmap_read(info-&gt;map, id_reg + 4 * i, &amp;reg;);
	if (!reg)
		continue;

	chained_irq_enter(parent_chip, desc);
```

However, in case of GPIO pin configured in level mode and the parent
controller configured in edge mode, GPIO interrupt might be lowered by the
hardware. In the result, if the interrupt is short enough, the parent
interrupt is still pending while the GPIO interrupt is cleared;
chained_irq_enter() never gets called and the system hangs trying to
service the parent interrupt.

Moving chained_irq_enter() and chained_irq_exit() outside the for loop
ensures that they are called even when GPIO interrupt is lowered by the
hardware.

The similar code with chained_irq_enter() / chained_irq_exit() functions
wrapping interrupt checking loop may be found in many other drivers:
```
grep -r -A 10 chained_irq_enter drivers/pinctrl
```</description><pubDate>Fri, 08 Nov 2024 06:15:30 +0000</pubDate></item><item><title>CVE-2024-50197 | pinctrl: intel: platform: fix error path in device_for_each_child_node()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50197</link><description>In the Linux kernel, the following vulnerability has been resolved:

pinctrl: intel: platform: fix error path in device_for_each_child_node()

The device_for_each_child_node() loop requires calls to
fwnode_handle_put() upon early returns to decrement the refcount of
the child node and avoid leaking memory if that error path is triggered.

There is one early returns within that loop in
intel_platform_pinctrl_prepare_community(), but fwnode_handle_put() is
missing.

Instead of adding the missing call, the scoped version of the loop can
be used to simplify the code and avoid mistakes in the future if new
early returns are added, as the child node is only used for parsing, and
it is never assigned.</description><pubDate>Fri, 08 Nov 2024 06:15:31 +0000</pubDate></item><item><title>CVE-2024-50198 | iio: light: veml6030: fix IIO device retrieval from embedded device</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50198</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: light: veml6030: fix IIO device retrieval from embedded device

The dev pointer that is received as an argument in the
in_illuminance_period_available_show function references the device
embedded in the IIO device, not in the i2c client.

dev_to_iio_dev() must be used to accessthe right data. The current
implementation leads to a segmentation fault on every attempt to read
the attribute because indio_dev gets a NULL assignment.

This bug has been present since the first appearance of the driver,
apparently since the last version (V6) before getting applied. A
constant attribute was used until then, and the last modifications might
have not been tested again.</description><pubDate>Fri, 08 Nov 2024 06:15:31 +0000</pubDate></item><item><title>CVE-2024-50199 | mm/swapfile: skip HugeTLB pages for unuse_vma</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50199</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm/swapfile: skip HugeTLB pages for unuse_vma

I got a bad pud error and lost a 1GB HugeTLB when calling swapoff.  The
problem can be reproduced by the following steps:

 1. Allocate an anonymous 1GB HugeTLB and some other anonymous memory.
 2. Swapout the above anonymous memory.
 3. run swapoff and we will get a bad pud error in kernel message:

  mm/pgtable-generic.c:42: bad pud 00000000743d215d(84000001400000e7)

We can tell that pud_clear_bad is called by pud_none_or_clear_bad in
unuse_pud_range() by ftrace.  And therefore the HugeTLB pages will never
be freed because we lost it from page table.  We can skip HugeTLB pages
for unuse_vma to fix it.</description><pubDate>Fri, 08 Nov 2024 06:15:32 +0000</pubDate></item><item><title>CVE-2024-50200 | maple_tree: correct tree corruption on spanning store</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50200</link><description>In the Linux kernel, the following vulnerability has been resolved:

maple_tree: correct tree corruption on spanning store

Patch series "maple_tree: correct tree corruption on spanning store", v3.

There has been a nasty yet subtle maple tree corruption bug that appears
to have been in existence since the inception of the algorithm.

This bug seems far more likely to happen since commit f8d112a4e657
("mm/mmap: avoid zeroing vma tree in mmap_region()"), which is the point
at which reports started to be submitted concerning this bug.

We were made definitely aware of the bug thanks to the kind efforts of
Bert Karwatzki who helped enormously in my being able to track this down
and identify the cause of it.

The bug arises when an attempt is made to perform a spanning store across
two leaf nodes, where the right leaf node is the rightmost child of the
shared parent, AND the store completely consumes the right-mode node.

This results in mas_wr_spanning_store() mitakenly duplicating the new and
existing entries at the maximum pivot within the range, and thus maple
tree corruption.

The fix patch corrects this by detecting this scenario and disallowing the
mistaken duplicate copy.

The fix patch commit message goes into great detail as to how this occurs.

This series also includes a test which reliably reproduces the issue, and
asserts that the fix works correctly.

Bert has kindly tested the fix and confirmed it resolved his issues.  Also
Mikhail Gavrilov kindly reported what appears to be precisely the same
bug, which this fix should also resolve.


This patch (of 2):

There has been a subtle bug present in the maple tree implementation from
its inception.

This arises from how stores are performed - when a store occurs, it will
overwrite overlapping ranges and adjust the tree as necessary to
accommodate this.

A range may always ultimately span two leaf nodes.  In this instance we
walk the two leaf nodes, determine which elements are not overwritten to
the left and to the right of the start and end of the ranges respectively
and then rebalance the tree to contain these entries and the newly
inserted one.

This kind of store is dubbed a 'spanning store' and is implemented by
mas_wr_spanning_store().

In order to reach this stage, mas_store_gfp() invokes
mas_wr_preallocate(), mas_wr_store_type() and mas_wr_walk() in turn to
walk the tree and update the object (mas) to traverse to the location
where the write should be performed, determining its store type.

When a spanning store is required, this function returns false stopping at
the parent node which contains the target range, and mas_wr_store_type()
marks the mas-&gt;store_type as wr_spanning_store to denote this fact.

When we go to perform the store in mas_wr_spanning_store(), we first
determine the elements AFTER the END of the range we wish to store (that
is, to the right of the entry to be inserted) - we do this by walking to
the NEXT pivot in the tree (i.e.  r_mas.last + 1), starting at the node we
have just determined contains the range over which we intend to write.

We then turn our attention to the entries to the left of the entry we are
inserting, whose state is represented by l_mas, and copy these into a 'big
node', which is a special node which contains enough slots to contain two
leaf node's worth of data.

We then copy the entry we wish to store immediately after this - the copy
and the insertion of the new entry is performed by mas_store_b_node().

After this we copy the elements to the right of the end of the range which
we are inserting, if we have not exceeded the length of the node (i.e. 
r_mas.offset &lt;= r_mas.end).

Herein lies the bug - under very specific circumstances, this logic can
break and corrupt the maple tree.

Consider the following tree:

Height
  0                             Root Node
                                 /      \
                 pivot = 0xffff /        \ pivot = ULONG_MAX
                               /          
---truncated---</description><pubDate>Fri, 08 Nov 2024 06:15:32 +0000</pubDate></item><item><title>CVE-2024-50201 | drm/radeon: Fix encoder-&amp;gt;possible_clones</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50201</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/radeon: Fix encoder-&gt;possible_clones

Include the encoder itself in its possible_clones bitmask.
In the past nothing validated that drivers were populating
possible_clones correctly, but that changed in commit
74d2aacbe840 ("drm: Validate encoder-&gt;possible_clones").
Looks like radeon never got the memo and is still not
following the rules 100% correctly.

This results in some warnings during driver initialization:
Bogus possible_clones: [ENCODER:46:TV-46] possible_clones=0x4 (full encoder mask=0x7)
WARNING: CPU: 0 PID: 170 at drivers/gpu/drm/drm_mode_config.c:615 drm_mode_config_validate+0x113/0x39c
...

(cherry picked from commit 3b6e7d40649c0d75572039aff9d0911864c689db)</description><pubDate>Fri, 08 Nov 2024 06:15:33 +0000</pubDate></item><item><title>CVE-2024-50202 | nilfs2: propagate directory read errors from nilfs_find_entry()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50202</link><description>In the Linux kernel, the following vulnerability has been resolved:

nilfs2: propagate directory read errors from nilfs_find_entry()

Syzbot reported that a task hang occurs in vcs_open() during a fuzzing
test for nilfs2.

The root cause of this problem is that in nilfs_find_entry(), which
searches for directory entries, ignores errors when loading a directory
page/folio via nilfs_get_folio() fails.

If the filesystem images is corrupted, and the i_size of the directory
inode is large, and the directory page/folio is successfully read but
fails the sanity check, for example when it is zero-filled,
nilfs_check_folio() may continue to spit out error messages in bursts.

Fix this issue by propagating the error to the callers when loading a
page/folio fails in nilfs_find_entry().

The current interface of nilfs_find_entry() and its callers is outdated
and cannot propagate error codes such as -EIO and -ENOMEM returned via
nilfs_find_entry(), so fix it together.</description><pubDate>Fri, 08 Nov 2024 06:15:33 +0000</pubDate></item><item><title>CVE-2024-50189 | HID: amd_sfh: Switch to device-managed dmam_alloc_coherent()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50189</link><description>In the Linux kernel, the following vulnerability has been resolved:

HID: amd_sfh: Switch to device-managed dmam_alloc_coherent()

Using the device-managed version allows to simplify clean-up in probe()
error path.

Additionally, this device-managed ensures proper cleanup, which helps to
resolve memory errors, page faults, btrfs going read-only, and btrfs
disk corruption.</description><pubDate>Fri, 08 Nov 2024 05:53:16 +0000</pubDate></item><item><title>CVE-2024-50190 | ice: fix memleak in ice_init_tx_topology()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50190</link><description>In the Linux kernel, the following vulnerability has been resolved:

ice: fix memleak in ice_init_tx_topology()

Fix leak of the FW blob (DDP pkg).

Make ice_cfg_tx_topo() const-correct, so ice_init_tx_topology() can avoid
copying whole FW blob. Copy just the topology section, and only when
needed. Reuse the buffer allocated for the read of the current topology.

This was found by kmemleak, with the following trace for each PF:
    [] kmemdup_noprof+0x1d/0x50
    [] ice_init_ddp_config+0x100/0x220 [ice]
    [] ice_init_dev+0x6f/0x200 [ice]
    [] ice_init+0x29/0x560 [ice]
    [] ice_probe+0x21d/0x310 [ice]

Constify ice_cfg_tx_topo() @buf parameter.
This cascades further down to few more functions.</description><pubDate>Fri, 08 Nov 2024 05:53:17 +0000</pubDate></item><item><title>CVE-2024-50191 | ext4: don&amp;#x27;t set SB_RDONLY after filesystem errors</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50191</link><description>In the Linux kernel, the following vulnerability has been resolved:

ext4: don't set SB_RDONLY after filesystem errors

When the filesystem is mounted with errors=remount-ro, we were setting
SB_RDONLY flag to stop all filesystem modifications. We knew this misses
proper locking (sb-&gt;s_umount) and does not go through proper filesystem
remount procedure but it has been the way this worked since early ext2
days and it was good enough for catastrophic situation damage
mitigation. Recently, syzbot has found a way (see link) to trigger
warnings in filesystem freezing because the code got confused by
SB_RDONLY changing under its hands. Since these days we set
EXT4_FLAGS_SHUTDOWN on the superblock which is enough to stop all
filesystem modifications, modifying SB_RDONLY shouldn't be needed. So
stop doing that.</description><pubDate>Fri, 08 Nov 2024 05:53:17 +0000</pubDate></item><item><title>CVE-2024-50180 | fbdev: sisfb: Fix strbuf array overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50180</link><description>In the Linux kernel, the following vulnerability has been resolved:

fbdev: sisfb: Fix strbuf array overflow

The values of the variables xres and yres are placed in strbuf.
These variables are obtained from strbuf1.
The strbuf1 array contains digit characters
and a space if the array contains non-digit characters.
Then, when executing sprintf(strbuf, "%ux%ux8", xres, yres);
more than 16 bytes will be written to strbuf.
It is suggested to increase the size of the strbuf array to 24.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Fri, 08 Nov 2024 05:53:18 +0000</pubDate></item><item><title>CVE-2024-50181 | clk: imx: Remove CLK_SET_PARENT_GATE for DRAM mux for i.MX7D</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50181</link><description>In the Linux kernel, the following vulnerability has been resolved:

clk: imx: Remove CLK_SET_PARENT_GATE for DRAM mux for i.MX7D

For i.MX7D DRAM related mux clock, the clock source change should ONLY
be done done in low level asm code without accessing DRAM, and then
calling clk API to sync the HW clock status with clk tree, it should never
touch real clock source switch via clk API, so CLK_SET_PARENT_GATE flag
should NOT be added, otherwise, DRAM's clock parent will be disabled when
DRAM is active, and system will hang.</description><pubDate>Fri, 08 Nov 2024 05:53:18 +0000</pubDate></item><item><title>CVE-2024-50182 | secretmem: disable memfd_secret() if arch cannot set direct map</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50182</link><description>In the Linux kernel, the following vulnerability has been resolved:

secretmem: disable memfd_secret() if arch cannot set direct map

Return -ENOSYS from memfd_secret() syscall if !can_set_direct_map().  This
is the case for example on some arm64 configurations, where marking 4k
PTEs in the direct map not present can only be done if the direct map is
set up at 4k granularity in the first place (as ARM's break-before-make
semantics do not easily allow breaking apart large/gigantic pages).

More precisely, on arm64 systems with !can_set_direct_map(),
set_direct_map_invalid_noflush() is a no-op, however it returns success
(0) instead of an error.  This means that memfd_secret will seemingly
"work" (e.g.  syscall succeeds, you can mmap the fd and fault in pages),
but it does not actually achieve its goal of removing its memory from the
direct map.

Note that with this patch, memfd_secret() will start erroring on systems
where can_set_direct_map() returns false (arm64 with
CONFIG_RODATA_FULL_DEFAULT_ENABLED=n, CONFIG_DEBUG_PAGEALLOC=n and
CONFIG_KFENCE=n), but that still seems better than the current silent
failure.  Since CONFIG_RODATA_FULL_DEFAULT_ENABLED defaults to 'y', most
arm64 systems actually have a working memfd_secret() and aren't be
affected.

From going through the iterations of the original memfd_secret patch
series, it seems that disabling the syscall in these scenarios was the
intended behavior [1] (preferred over having
set_direct_map_invalid_noflush return an error as that would result in
SIGBUSes at page-fault time), however the check for it got dropped between
v16 [2] and v17 [3], when secretmem moved away from CMA allocations.

[1]: https://lore.kernel.org/lkml/20201124164930.GK8537@kernel.org/
[2]: https://lore.kernel.org/lkml/20210121122723.3446-11-rppt@kernel.org/#t
[3]: https://lore.kernel.org/lkml/20201125092208.12544-10-rppt@kernel.org/</description><pubDate>Fri, 08 Nov 2024 05:53:19 +0000</pubDate></item><item><title>CVE-2024-50183 | scsi: lpfc: Ensure DA_ID handling completion before deleting an NPIV instance</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50183</link><description>In the Linux kernel, the following vulnerability has been resolved:

scsi: lpfc: Ensure DA_ID handling completion before deleting an NPIV instance

Deleting an NPIV instance requires all fabric ndlps to be released before
an NPIV's resources can be torn down.  Failure to release fabric ndlps
beforehand opens kref imbalance race conditions.  Fix by forcing the DA_ID
to complete synchronously with usage of wait_queue.</description><pubDate>Fri, 08 Nov 2024 05:53:19 +0000</pubDate></item><item><title>CVE-2024-50184 | virtio_pmem: Check device status before requesting flush</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50184</link><description>In the Linux kernel, the following vulnerability has been resolved:

virtio_pmem: Check device status before requesting flush

If a pmem device is in a bad status, the driver side could wait for
host ack forever in virtio_pmem_flush(), causing the system to hang.

So add a status check in the beginning of virtio_pmem_flush() to return
early if the device is not activated.</description><pubDate>Fri, 08 Nov 2024 05:53:20 +0000</pubDate></item><item><title>CVE-2024-50185 | mptcp: handle consistently DSS corruption</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50185</link><description>In the Linux kernel, the following vulnerability has been resolved:

mptcp: handle consistently DSS corruption

Bugged peer implementation can send corrupted DSS options, consistently
hitting a few warning in the data path. Use DEBUG_NET assertions, to
avoid the splat on some builds and handle consistently the error, dumping
related MIBs and performing fallback and/or reset according to the
subflow type.</description><pubDate>Fri, 08 Nov 2024 05:53:20 +0000</pubDate></item><item><title>CVE-2024-50186 | net: explicitly clear the sk pointer, when pf-&amp;gt;create fails</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50186</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: explicitly clear the sk pointer, when pf-&gt;create fails

We have recently noticed the exact same KASAN splat as in commit
6cd4a78d962b ("net: do not leave a dangling sk pointer, when socket
creation fails"). The problem is that commit did not fully address the
problem, as some pf-&gt;create implementations do not use sk_common_release
in their error paths.

For example, we can use the same reproducer as in the above commit, but
changing ping to arping. arping uses AF_PACKET socket and if packet_create
fails, it will just sk_free the allocated sk object.

While we could chase all the pf-&gt;create implementations and make sure they
NULL the freed sk object on error from the socket, we can't guarantee
future protocols will not make the same mistake.

So it is easier to just explicitly NULL the sk pointer upon return from
pf-&gt;create in __sock_create. We do know that pf-&gt;create always releases the
allocated sk object on error, so if the pointer is not NULL, it is
definitely dangling.</description><pubDate>Fri, 08 Nov 2024 05:53:21 +0000</pubDate></item><item><title>CVE-2024-50187 | drm/vc4: Stop the active perfmon before being destroyed</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50187</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/vc4: Stop the active perfmon before being destroyed

Upon closing the file descriptor, the active performance monitor is not
stopped. Although all perfmons are destroyed in `vc4_perfmon_close_file()`,
the active performance monitor's pointer (`vc4-&gt;active_perfmon`) is still
retained.

If we open a new file descriptor and submit a few jobs with performance
monitors, the driver will attempt to stop the active performance monitor
using the stale pointer in `vc4-&gt;active_perfmon`. However, this pointer
is no longer valid because the previous process has already terminated,
and all performance monitors associated with it have been destroyed and
freed.

To fix this, when the active performance monitor belongs to a given
process, explicitly stop it before destroying and freeing it.</description><pubDate>Fri, 08 Nov 2024 05:53:21 +0000</pubDate></item><item><title>CVE-2024-50188 | net: phy: dp83869: fix memory corruption when enabling fiber</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50188</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: phy: dp83869: fix memory corruption when enabling fiber

When configuring the fiber port, the DP83869 PHY driver incorrectly
calls linkmode_set_bit() with a bit mask (1 &lt;&lt; 10) rather than a bit
number (10). This corrupts some other memory location -- in case of
arm64 the priv pointer in the same structure.

Since the advertising flags are updated from supported at the end of the
function the incorrect line isn't needed at all and can be removed.</description><pubDate>Fri, 08 Nov 2024 05:53:21 +0000</pubDate></item><item><title>CVE-2024-10621 | Simple Shortcode for Google Maps &amp;lt;= 1.5.4 - Authenticated (Contributor+) Stored Cross-Site Scripting via Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10621</link><description>The Simple Shortcode for Google Maps plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's pw_map shortcode in all versions up to, and including, 1.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Fri, 08 Nov 2024 05:43:25 +0000</pubDate></item><item><title>CVE-2024-10993 | Codezips Online Institute Management System manage_website.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10993</link><description>A vulnerability, which was classified as critical, was found in Codezips Online Institute Management System 1.0. Affected is an unknown function of the file /manage_website.php. The manipulation of the argument website_image leads to unrestricted upload. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 05:43:25 +0000</pubDate></item><item><title>CVE-2024-50173 | drm/panthor: Fix access to uninitialized variable in tick_ctx_cleanup()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50173</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/panthor: Fix access to uninitialized variable in tick_ctx_cleanup()

The group variable can't be used to retrieve ptdev in our second loop,
because it points to the previously iterated list_head, not a valid
group. Get the ptdev object from the scheduler instead.</description><pubDate>Fri, 08 Nov 2024 05:33:37 +0000</pubDate></item><item><title>CVE-2024-50174 | drm/panthor: Fix race when converting group handle to group object</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50174</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/panthor: Fix race when converting group handle to group object

XArray provides it's own internal lock which protects the internal array
when entries are being simultaneously added and removed. However there
is still a race between retrieving the pointer from the XArray and
incrementing the reference count.

To avoid this race simply hold the internal XArray lock when
incrementing the reference count, this ensures there cannot be a racing
call to xa_erase().</description><pubDate>Fri, 08 Nov 2024 05:33:38 +0000</pubDate></item><item><title>CVE-2024-50175 | media: qcom: camss: Remove use_count guard in stop_streaming</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50175</link><description>In the Linux kernel, the following vulnerability has been resolved:

media: qcom: camss: Remove use_count guard in stop_streaming

The use_count check was introduced so that multiple concurrent Raw Data
Interfaces RDIs could be driven by different virtual channels VCs on the
CSIPHY input driving the video pipeline.

This is an invalid use of use_count though as use_count pertains to the
number of times a video entity has been opened by user-space not the number
of active streams.

If use_count and stream-on count don't agree then stop_streaming() will
break as is currently the case and has become apparent when using CAMSS
with libcamera's released softisp 0.3.

The use of use_count like this is a bit hacky and right now breaks regular
usage of CAMSS for a single stream case. Stopping qcam results in the splat
below, and then it cannot be started again and any attempts to do so fails
with -EBUSY.

[ 1265.509831] WARNING: CPU: 5 PID: 919 at drivers/media/common/videobuf2/videobuf2-core.c:2183 __vb2_queue_cancel+0x230/0x2c8 [videobuf2_common]
...
[ 1265.510630] Call trace:
[ 1265.510636]  __vb2_queue_cancel+0x230/0x2c8 [videobuf2_common]
[ 1265.510648]  vb2_core_streamoff+0x24/0xcc [videobuf2_common]
[ 1265.510660]  vb2_ioctl_streamoff+0x5c/0xa8 [videobuf2_v4l2]
[ 1265.510673]  v4l_streamoff+0x24/0x30 [videodev]
[ 1265.510707]  __video_do_ioctl+0x190/0x3f4 [videodev]
[ 1265.510732]  video_usercopy+0x304/0x8c4 [videodev]
[ 1265.510757]  video_ioctl2+0x18/0x34 [videodev]
[ 1265.510782]  v4l2_ioctl+0x40/0x60 [videodev]
...
[ 1265.510944] videobuf2_common: driver bug: stop_streaming operation is leaving buffer 0 in active state
[ 1265.511175] videobuf2_common: driver bug: stop_streaming operation is leaving buffer 1 in active state
[ 1265.511398] videobuf2_common: driver bug: stop_streaming operation is leaving buffer 2 in active st

One CAMSS specific way to handle multiple VCs on the same RDI might be:

- Reference count each pipeline enable for CSIPHY, CSID, VFE and RDIx.
- The video buffers are already associated with msm_vfeN_rdiX so
  release video buffers when told to do so by stop_streaming.
- Only release the power-domains for the CSIPHY, CSID and VFE when
  their internal refcounts drop.

Either way refusing to release video buffers based on use_count is
erroneous and should be reverted. The silicon enabling code for selecting
VCs is perfectly fine. Its a "known missing feature" that concurrent VCs
won't work with CAMSS right now.

Initial testing with this code didn't show an error but, SoftISP and "real"
usage with Google Hangouts breaks the upstream code pretty quickly, we need
to do a partial revert and take another pass at VCs.

This commit partially reverts commit 89013969e232 ("media: camss: sm8250:
Pipeline starting and stopping for multiple virtual channels")</description><pubDate>Fri, 08 Nov 2024 05:33:38 +0000</pubDate></item><item><title>CVE-2024-50176 | remoteproc: k3-r5: Fix error handling when power-up failed</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50176</link><description>In the Linux kernel, the following vulnerability has been resolved:

remoteproc: k3-r5: Fix error handling when power-up failed

By simply bailing out, the driver was violating its rule and internal
assumptions that either both or no rproc should be initialized. E.g.,
this could cause the first core to be available but not the second one,
leading to crashes on its shutdown later on while trying to dereference
that second instance.</description><pubDate>Fri, 08 Nov 2024 05:33:38 +0000</pubDate></item><item><title>CVE-2024-50177 | drm/amd/display: fix a UBSAN warning in DML2.1</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50177</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: fix a UBSAN warning in DML2.1

When programming phantom pipe, since cursor_width is explicity set to 0,
this causes calculation logic to trigger overflow for an unsigned int
triggering the kernel's UBSAN check as below:

[   40.962845] UBSAN: shift-out-of-bounds in /tmp/amd.EfpumTkO/amd/amdgpu/../display/dc/dml2/dml21/src/dml2_core/dml2_core_dcn4_calcs.c:3312:34
[   40.962849] shift exponent 4294967170 is too large for 32-bit type 'unsigned int'
[   40.962852] CPU: 1 PID: 1670 Comm: gnome-shell Tainted: G        W  OE      6.5.0-41-generic #41~22.04.2-Ubuntu
[   40.962854] Hardware name: Gigabyte Technology Co., Ltd. X670E AORUS PRO X/X670E AORUS PRO X, BIOS F21 01/10/2024
[   40.962856] Call Trace:
[   40.962857]  
[   40.962860]  dump_stack_lvl+0x48/0x70
[   40.962870]  dump_stack+0x10/0x20
[   40.962872]  __ubsan_handle_shift_out_of_bounds+0x1ac/0x360
[   40.962878]  calculate_cursor_req_attributes.cold+0x1b/0x28 [amdgpu]
[   40.963099]  dml_core_mode_support+0x6b91/0x16bc0 [amdgpu]
[   40.963327]  ? srso_alias_return_thunk+0x5/0x7f
[   40.963331]  ? CalculateWatermarksMALLUseAndDRAMSpeedChangeSupport+0x18b8/0x2790 [amdgpu]
[   40.963534]  ? srso_alias_return_thunk+0x5/0x7f
[   40.963536]  ? dml_core_mode_support+0xb3db/0x16bc0 [amdgpu]
[   40.963730]  dml2_core_calcs_mode_support_ex+0x2c/0x90 [amdgpu]
[   40.963906]  ? srso_alias_return_thunk+0x5/0x7f
[   40.963909]  ? dml2_core_calcs_mode_support_ex+0x2c/0x90 [amdgpu]
[   40.964078]  core_dcn4_mode_support+0x72/0xbf0 [amdgpu]
[   40.964247]  dml2_top_optimization_perform_optimization_phase+0x1d3/0x2a0 [amdgpu]
[   40.964420]  dml2_build_mode_programming+0x23d/0x750 [amdgpu]
[   40.964587]  dml21_validate+0x274/0x770 [amdgpu]
[   40.964761]  ? srso_alias_return_thunk+0x5/0x7f
[   40.964763]  ? resource_append_dpp_pipes_for_plane_composition+0x27c/0x3b0 [amdgpu]
[   40.964942]  dml2_validate+0x504/0x750 [amdgpu]
[   40.965117]  ? dml21_copy+0x95/0xb0 [amdgpu]
[   40.965291]  ? srso_alias_return_thunk+0x5/0x7f
[   40.965295]  dcn401_validate_bandwidth+0x4e/0x70 [amdgpu]
[   40.965491]  update_planes_and_stream_state+0x38d/0x5c0 [amdgpu]
[   40.965672]  update_planes_and_stream_v3+0x52/0x1e0 [amdgpu]
[   40.965845]  ? srso_alias_return_thunk+0x5/0x7f
[   40.965849]  dc_update_planes_and_stream+0x71/0xb0 [amdgpu]

Fix this by adding a guard for checking cursor width before triggering
the size calculation.</description><pubDate>Fri, 08 Nov 2024 05:33:39 +0000</pubDate></item><item><title>CVE-2024-50178 | cpufreq: loongson3: Use raw_smp_processor_id() in do_service_request()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50178</link><description>In the Linux kernel, the following vulnerability has been resolved:

cpufreq: loongson3: Use raw_smp_processor_id() in do_service_request()

Use raw_smp_processor_id() instead of plain smp_processor_id() in
do_service_request(), otherwise we may get some errors with the driver
enabled:

 BUG: using smp_processor_id() in preemptible [00000000] code: (udev-worker)/208
 caller is loongson3_cpufreq_probe+0x5c/0x250 [loongson3_cpufreq]</description><pubDate>Fri, 08 Nov 2024 05:33:39 +0000</pubDate></item><item><title>CVE-2024-50179 | ceph: remove the incorrect Fw reference check when dirtying pages</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50179</link><description>In the Linux kernel, the following vulnerability has been resolved:

ceph: remove the incorrect Fw reference check when dirtying pages

When doing the direct-io reads it will also try to mark pages dirty,
but for the read path it won't hold the Fw caps and there is case
will it get the Fw reference.</description><pubDate>Fri, 08 Nov 2024 05:33:39 +0000</pubDate></item><item><title>CVE-2024-10991 | Codezips Hospital Appointment System editBranchResult.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10991</link><description>A vulnerability, which was classified as critical, has been found in Codezips Hospital Appointment System 1.0. This issue affects some unknown processing of the file /editBranchResult.php. The manipulation of the argument ID leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 05:15:40 +0000</pubDate></item><item><title>CVE-2024-21538 | Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input saniti...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21538</link><description>Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.</description><pubDate>Fri, 08 Nov 2024 05:15:41 +0000</pubDate></item><item><title>CVE-2024-10990 | SourceCodester Online Veterinary Appointment System view_service.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10990</link><description>A vulnerability classified as critical was found in SourceCodester Online Veterinary Appointment System 1.0. This vulnerability affects unknown code of the file /admin/services/view_service.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 04:45:17 +0000</pubDate></item><item><title>CVE-2020-8007 | The pwrstudio web application of EV Charger (in the server in Circontrol Raption through 5.6.2) is vulnerable to OS command injection via th...</title><link>https://www.cve.org/CVERecord?id=CVE-2020-8007</link><description>The pwrstudio web application of EV Charger (in the server in Circontrol Raption through 5.6.2) is vulnerable to OS command injection via three fields of the configuration menu for ntpserver0, ntpserver1, and pingip.</description><pubDate>Fri, 08 Nov 2024 04:33:25 +0000</pubDate></item><item><title>CVE-2023-27195 | Trimble TM4Web 22.2.0 allows unauthenticated attackers to access /inc/tm_ajax.msw?func=UserfromUUID&amp;uuid= to retrieve the last registration ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-27195</link><description>Trimble TM4Web 22.2.0 allows unauthenticated attackers to access /inc/tm_ajax.msw?func=UserfromUUID&amp;amp;uuid= to retrieve the last registration access code and use this access code to register a valid account. via a PUT /inc/tm_ajax.msw request. If the access code was used to create an Administrator account, attackers are also able to register new Administrator accounts with full privileges.</description><pubDate>Fri, 08 Nov 2024 04:33:25 +0000</pubDate></item><item><title>CVE-2024-10988 | code-projects E-Health Care System doctor_login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10988</link><description>A vulnerability was found in code-projects E-Health Care System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file /Doctor/doctor_login.php. The manipulation of the argument email leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well.</description><pubDate>Fri, 08 Nov 2024 04:12:54 +0000</pubDate></item><item><title>CVE-2024-10989 | code-projects E-Health Care System detail.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10989</link><description>A vulnerability classified as critical has been found in code-projects E-Health Care System 1.0. This affects an unknown part of the file /Admin/detail.php. The manipulation of the argument s_id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The initial researcher advisory confuses the vulnerability class of this issue.</description><pubDate>Fri, 08 Nov 2024 04:12:54 +0000</pubDate></item><item><title>CVE-2024-10987 | code-projects E-Health Care System user_appointment.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10987</link><description>A vulnerability was found in code-projects E-Health Care System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /Doctor/user_appointment.php. The manipulation of the argument schedule_id/schedule_date/schedule_day/start_time/end_time/booking leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Fri, 08 Nov 2024 03:43:01 +0000</pubDate></item><item><title>CVE-2024-48010 | Dell PowerProtect DD, versions prior to 8.1.0.0, 7.13.1.10, 7.10.1.40, and 7.7.5.50, contains an access control vulnerability. A remote high...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48010</link><description>Dell PowerProtect DD, versions prior to 8.1.0.0, 7.13.1.10, 7.10.1.40, and 7.7.5.50, contains an access control vulnerability. A remote high privileged attacker could potentially exploit this vulnerability, leading to escalation of privilege on the application.</description><pubDate>Fri, 08 Nov 2024 03:29:02 +0000</pubDate></item><item><title>CVE-2024-45759 | Dell PowerProtect Data Domain, versions prior to 8.1.0.0, 7.13.1.10, 7.10.1.40, and 7.7.5.50, contains an escalation of privilege vulnerabil...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45759</link><description>Dell PowerProtect Data Domain, versions prior to 8.1.0.0, 7.13.1.10, 7.10.1.40, and 7.7.5.50, contains an escalation of privilege vulnerability. A local low privileged attacker could potentially exploit this vulnerability, leading to unauthorized execution of certain commands to overwrite system config of the application. Exploitation may lead to denial of service of system.</description><pubDate>Fri, 08 Nov 2024 03:03:09 +0000</pubDate></item><item><title>CVE-2024-48011 | Dell PowerProtect DD, versions prior to 7.7.5.50, contains an Exposure of Sensitive Information to an Unauthorized Actor vulnerability. A lo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48011</link><description>Dell PowerProtect DD, versions prior to 7.7.5.50, contains an Exposure of Sensitive Information to an Unauthorized Actor vulnerability. A low privileged attacker with remote access could potentially exploit this vulnerability, leading to Information disclosure.</description><pubDate>Fri, 08 Nov 2024 02:41:16 +0000</pubDate></item><item><title>CVE-2024-47072 | XStream is vulnerable to a Denial of Service attack due to stack overflow from a manipulated binary input stream</title><link>https://www.cve.org/CVERecord?id=CVE-2024-47072</link><description>XStream is a simple library to serialize objects to XML and back again. This vulnerability may allow a remote attacker to terminate the application with a stack overflow error resulting in a denial of service only by manipulating the processed input stream when XStream is configured to use the BinaryStreamDriver. XStream 1.4.21 has been patched to detect the manipulation in the binary input stream causing the the stack overflow and raises an InputManipulationException instead. Users are advised to upgrade. Users unable to upgrade may catch the StackOverflowError in the client code calling XStream if XStream is configured to use the BinaryStreamDriver.</description><pubDate>Thu, 07 Nov 2024 23:49:30 +0000</pubDate></item><item><title>CVE-2024-51987 | HTTP Client uses incorrect token after refresh in Duende.AccessTokenManagement.OpenIdConnect</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51987</link><description>Duende.AccessTokenManagement.OpenIdConnect is a set of .NET libraries that manage OAuth and OpenId Connect access tokens. HTTP Clients created by `AddUserAccessTokenHttpClient` may use a different user's access token after a token refresh occurs. This occurs because a refreshed token will be captured in pooled `HttpClient` instances, which may be used by a different user. Instead of using `AddUserAccessTokenHttpClient` to create an `HttpClient` that automatically adds a managed token to outgoing requests, you can use the `HttpConext.GetUserAccessTokenAsync` extension method or the `IUserTokenManagementService.GetAccessTokenAsync` method. This issue is fixed in Duende.AccessTokenManagement.OpenIdConnect 3.0.1. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Thu, 07 Nov 2024 23:39:25 +0000</pubDate></item><item><title>CVE-2024-51998 | Path traversal using file URI scheme without supplying hostname in changedetection.io</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51998</link><description>changedetection.io is a free open source web page change detection tool. The validation for the file URI scheme falls short, and results in an attacker being able to read any file on the system. This issue only affects instances with a webdriver enabled, and `ALLOW_FILE_URI` false or not defined. The check used for URL protocol, `is_safe_url`, allows `file:` as a URL scheme. It later checks if local files are permitted, but one of the preconditions for the check is that the URL starts with `file://`. The issue comes with the fact that the file URI scheme is not required to have double slashes. This issue has been addressed in version 0.47.06 and all users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Thu, 07 Nov 2024 23:39:25 +0000</pubDate></item><item><title>CVE-2024-8424 | WatchGuard Endpoint Protection Privilege Escalation in PSANHost Enables Arbitrary File Delete as SYSTEM</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8424</link><description>Improper Privilege Management vulnerability in WatchGuard EPDR, Panda AD360 and Panda Dome on Windows (PSANHost.exe module) allows arbitrary file delete with SYSTEM permissions.
This issue affects EPDR: before 8.00.23.0000; Panda AD360: before 8.00.23.0000; Panda Dome: before 22.03.00.</description><pubDate>Thu, 07 Nov 2024 23:39:26 +0000</pubDate></item><item><title>CVE-2024-36064 | The NLL com.nll.cb (aka ACR Phone) application through 0.330-playStore-NoAccessibility-arm8 for Android allows any installed application (wi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36064</link><description>The NLL com.nll.cb (aka ACR Phone) application through 0.330-playStore-NoAccessibility-arm8 for Android allows any installed application (with no permissions) to place phone calls without user interaction by sending a crafted intent via the com.nll.cb.dialer.dialer.DialerActivity component.</description><pubDate>Thu, 07 Nov 2024 22:15:24 +0000</pubDate></item><item><title>CVE-2024-46960 | The ASD com.rocks.video.downloader (aka HD Video Downloader All Format) application through 7.0.129 for Android allows an attacker to execut...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-46960</link><description>The ASD com.rocks.video.downloader (aka HD Video Downloader All Format) application through 7.0.129 for Android allows an attacker to execute arbitrary JavaScript code via the com.rocks.video.downloader.MainBrowserActivity component.</description><pubDate>Thu, 07 Nov 2024 21:56:04 +0000</pubDate></item><item><title>CVE-2024-46961 | The Inshot com.downloader.privatebrowser (aka Video Downloader - XDownloader) application through 1.3.5 for Android allows an attacker to ex...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-46961</link><description>The Inshot com.downloader.privatebrowser (aka Video Downloader - XDownloader) application through 1.3.5 for Android allows an attacker to execute arbitrary JavaScript code via the com.downloader.privatebrowser.activity.PrivateMainActivity component.</description><pubDate>Thu, 07 Nov 2024 21:56:05 +0000</pubDate></item><item><title>CVE-2024-36062 | The com.callassistant.android (aka AI Call Assistant &amp; Screener) application 1.174 for Android enables any installed application (with no pe...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36062</link><description>The com.callassistant.android (aka AI Call Assistant &amp; Screener) application 1.174 for Android enables any installed application (with no permissions) to place phone calls without user interaction by sending a crafted intent via the com.callassistant.android.ui.call.incall.InCallActivity component.</description><pubDate>Thu, 07 Nov 2024 21:56:06 +0000</pubDate></item><item><title>CVE-2024-36063 | The Goodwy com.goodwy.dialer (aka Right Dialer) application through 5.1.0 for Android enables any application (with no permissions) to place...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-36063</link><description>The Goodwy com.goodwy.dialer (aka Right Dialer) application through 5.1.0 for Android enables any application (with no permissions) to place phone calls without user interaction by sending a crafted intent via the com.goodwy.dialer.activities.DialerActivity component.</description><pubDate>Thu, 07 Nov 2024 21:46:09 +0000</pubDate></item><item><title>CVE-2024-49523 | Adobe Experience Manager | Cross-site Scripting (Stored XSS) (CWE-79)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49523</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim’s browser when they browse to the page containing the vulnerable field.</description><pubDate>Thu, 07 Nov 2024 21:46:10 +0000</pubDate></item><item><title>CVE-2024-49524 | Adobe Experience Manager | Cross-site Scripting (DOM-based XSS) (CWE-79)</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49524</link><description>Adobe Experience Manager versions 6.5.20 and earlier are affected by a DOM-based Cross-Site Scripting (XSS) vulnerability that could be exploited by an attacker to execute arbitrary code in the context of the victim's browser session. By manipulating a DOM element through a crafted URL or user input, the attacker can inject malicious scripts that run when the page is rendered. This type of attack requires user interaction, as the victim would need to access a manipulated URL or provide specific input to trigger the vulnerability.</description><pubDate>Thu, 07 Nov 2024 21:46:10 +0000</pubDate></item><item><title>CVE-2024-51434 | Inconsistent &lt;plaintext&gt; tag parsing allows for XSS in Froala WYSIWYG editor 4.3.0 and earlier.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51434</link><description>Inconsistent  tag parsing allows for XSS in Froala WYSIWYG editor 4.3.0 and earlier.</description><pubDate>Thu, 07 Nov 2024 21:36:17 +0000</pubDate></item><item><title>CVE-2024-8810 | Privilege Management vulnerability was identified in GitHub Enterprise Server that allowed GitHub Apps to grant themselves write access</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8810</link><description>A GitHub App installed in organizations could upgrade some permissions from read to write access without approval from an organization administrator. An attacker would require an account with administrator access to install a malicious GitHub App. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.14 and was fixed in versions 3.14.1, 3.13.4, 3.12.9, 3.11.15, and 3.10.17. This vulnerability was reported via the GitHub Bug Bounty program.</description><pubDate>Thu, 07 Nov 2024 21:36:17 +0000</pubDate></item><item><title>CVE-2024-10824 | Authorization Bypass Vulnerability was Identified in GitHub Enterprise Server that Allowed Unauthorized Internal Users to Access Secret Scanning Alert Data</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10824</link><description>An authorization bypass vulnerability was identified in GitHub Enterprise Server that allowed unauthorized internal users to access sensitive secret scanning alert data intended only for business owners. This issue could be exploited only by organization members with a personal access token (PAT) and required that secret scanning be enabled on user-owned repositories. This vulnerability affected GitHub Enterprise Server versions after 3.13.0 but prior to 3.14.0 and was fixed in version 3.13.2.</description><pubDate>Thu, 07 Nov 2024 21:25:39 +0000</pubDate></item><item><title>CVE-2024-50766 | SourceCodester Survey Application System 1.0 is vulnerable to SQL Injection in takeSurvey.php via the id parameter.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50766</link><description>SourceCodester Survey Application System 1.0 is vulnerable to SQL Injection in takeSurvey.php via the id parameter.</description><pubDate>Thu, 07 Nov 2024 21:25:39 +0000</pubDate></item><item><title>CVE-2024-10975 | Nomad Vulnerable To Cross-Namespace Volume Creation Abusing CSI Write Permission</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10975</link><description>Nomad Community and Nomad Enterprise ("Nomad") volume specification is vulnerable to arbitrary cross-namespace volume creation through unauthorized Container Storage Interface (CSI) volume writes. This vulnerability, identified as CVE-2024-10975, is fixed in Nomad Community Edition 1.9.2 and Nomad Enterprise 1.9.2, 1.8.7, and 1.7.15.</description><pubDate>Thu, 07 Nov 2024 21:25:40 +0000</pubDate></item><item><title>CVE-2024-50599 | A reflected Cross-Site Scripting (XSS) vulnerability has been identified in Zimbra Collaboration Suite (ZCS) 8.8.15, affecting one of the we...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50599</link><description>A reflected Cross-Site Scripting (XSS) vulnerability has been identified in Zimbra Collaboration Suite (ZCS) 8.8.15, affecting one of the webmail calendar endpoints. This arises from improper handling of user-supplied input, allowing an attacker to inject malicious code that is reflected back in the HTML response.</description><pubDate>Thu, 07 Nov 2024 21:25:41 +0000</pubDate></item><item><title>CVE-2024-10007 | Pre-Receive Hook Path Collision Vulnerability in GitHub Enterprise Server Allowing Privilege Escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10007</link><description>A path collision and arbitrary code execution vulnerability was identified in GitHub Enterprise Server that allowed container escape and privilege escalation to root via the ghe-firejail path. This vulnerability affected all versions of GitHub Enterprise prior to 3.15 and was fixed in versions 3.14.3, 3.13.6, 3.12.11, and 3.11.17. This vulnerability was reported via the GitHub Bug Bounty program.</description><pubDate>Thu, 07 Nov 2024 21:08:16 +0000</pubDate></item><item><title>CVE-2019-20472 | An issue was discovered on One2Track 2019-12-08 devices. Any SIM card used with the device cannot have a PIN configured. If a PIN is configu...</title><link>https://www.cve.org/CVERecord?id=CVE-2019-20472</link><description>An issue was discovered on One2Track 2019-12-08 devices. Any SIM card used with the device cannot have a PIN configured. If a PIN is configured, the device simply produces a "Remove PIN and restart!" message, and cannot be used. This makes it easier for an attacker to use the SIM card by stealing the device.</description><pubDate>Thu, 07 Nov 2024 20:52:13 +0000</pubDate></item><item><title>CVE-2019-20461 | An issue was discovered on Alecto IVM-100 2019-11-12 devices. The device uses a custom UDP protocol to start and control video and audio ser...</title><link>https://www.cve.org/CVERecord?id=CVE-2019-20461</link><description>An issue was discovered on Alecto IVM-100 2019-11-12 devices. The device uses a custom UDP protocol to start and control video and audio services. The protocol has been partially reverse engineered. Based upon the reverse engineering, no password or username is ever transferred over this protocol. Thus, one can set up the camera connection feed with only the encoded UID. It is possible to set up sessions with the camera over the Internet by using the encoded UID and the custom UDP protocol, because authentication happens at the client side.</description><pubDate>Thu, 07 Nov 2024 20:42:25 +0000</pubDate></item><item><title>CVE-2019-20462 | An issue was discovered on Alecto IVM-100 2019-11-12 devices. The device comes with a serial interface at the board level. By attaching to t...</title><link>https://www.cve.org/CVERecord?id=CVE-2019-20462</link><description>An issue was discovered on Alecto IVM-100 2019-11-12 devices. The device comes with a serial interface at the board level. By attaching to this serial interface and rebooting the device, a large amount of information is disclosed. This includes the view password and the password of the Wi-Fi access point that the device used.</description><pubDate>Thu, 07 Nov 2024 20:42:25 +0000</pubDate></item><item><title>CVE-2019-20469 | An issue was discovered on One2Track 2019-12-08 devices. Confidential information is needlessly stored on the smartwatch. Audio files are st...</title><link>https://www.cve.org/CVERecord?id=CVE-2019-20469</link><description>An issue was discovered on One2Track 2019-12-08 devices. Confidential information is needlessly stored on the smartwatch. Audio files are stored in .amr format, in the audior directory. An attacker who has physical access can retrieve all audio files by connecting via a USB cable.</description><pubDate>Thu, 07 Nov 2024 20:42:26 +0000</pubDate></item><item><title>CVE-2019-20460 | An issue was discovered on Epson Expression Home XP255 20.08.FM10I8 devices. POST requests don't require (anti-)CSRF tokens or other mechani...</title><link>https://www.cve.org/CVERecord?id=CVE-2019-20460</link><description>An issue was discovered on Epson Expression Home XP255 20.08.FM10I8 devices. POST requests don't require (anti-)CSRF tokens or other mechanisms for validating that the request is from a legitimate source. In addition, CSRF attacks can be used to send text directly to the RAW printer interface. For example, an attack could deliver a worrisome printout to an end user.</description><pubDate>Thu, 07 Nov 2024 20:32:17 +0000</pubDate></item><item><title>CVE-2024-10969 | 1000 Projects Bookstore Management System Login login_process.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10969</link><description>A vulnerability was found in 1000 Projects Bookstore Management System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file /admin/login_process.php of the component Login. The manipulation of the argument unm leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 07 Nov 2024 20:18:44 +0000</pubDate></item><item><title>CVE-2024-10968 | 1000 Projects Bookstore Management System contact_process.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10968</link><description>A vulnerability was found in 1000 Projects Bookstore Management System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /contact_process.php. The manipulation of the argument fnm leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 07 Nov 2024 19:36:55 +0000</pubDate></item><item><title>CVE-2024-10966 | TOTOLINK X18 cstecgi.cgi os command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10966</link><description>A vulnerability, which was classified as critical, has been found in TOTOLINK X18 9.1.0cu.2024_B20220329. Affected by this issue is some unknown functionality of the file /cgi-bin/cstecgi.cgi. The manipulation of the argument enable leads to os command injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 07 Nov 2024 18:12:58 +0000</pubDate></item><item><title>CVE-2024-10967 | code-projects E-Health Care System delete_user_appointment_request.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10967</link><description>A vulnerability was found in code-projects E-Health Care System 1.0. It has been classified as critical. Affected is an unknown function of the file /Doctor/delete_user_appointment_request.php. The manipulation of the argument id leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Thu, 07 Nov 2024 18:12:58 +0000</pubDate></item><item><title>CVE-2024-51993 | Password is stored in clear in the database in Combodo iTop</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51993</link><description>Combodo iTop is a web based IT Service Management tool. An attacker accessing a backup file or the database can read some passwords for misconfigured Users. This issue has been addressed in version 3.2.0 and all users are advised to upgrade. Users unable to upgrade are advised to encrypt their backups independently of the iTop application.

### Patches
Sanitize parameter

### References
N°7631 - Password is stored in clear in the database.</description><pubDate>Thu, 07 Nov 2024 18:12:58 +0000</pubDate></item><item><title>CVE-2024-51994 | Cross-site Scripting in portal picture upload in Combodo iTop</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51994</link><description>Combodo iTop is a web based IT Service Management tool. In affected versions uploading a text file containing some java script in the portal will trigger an Cross-site Scripting (XSS) vulnerability. This issue has been addressed in version 3.2.0 and all users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Thu, 07 Nov 2024 18:12:59 +0000</pubDate></item><item><title>CVE-2019-20457 | An issue was discovered on Brother MFC-J491DW C1806180757 devices. The printer's web-interface password hash can be retrieved without authen...</title><link>https://www.cve.org/CVERecord?id=CVE-2019-20457</link><description>An issue was discovered on Brother MFC-J491DW C1806180757 devices. The printer's web-interface password hash can be retrieved without authentication, because the response header of any failed login attempt returns an incomplete authorization cookie. The value of the authorization cookie is the MD5 hash of the password in hexadecimal. An attacker can easily derive the true MD5 hash from this, and use offline cracking attacks to obtain administrative access to the device.</description><pubDate>Thu, 07 Nov 2024 18:13:00 +0000</pubDate></item><item><title>CVE-2019-20458 | An issue was discovered on Epson Expression Home XP255 20.08.FM10I8 devices. By default, the device comes (and functions) without a password...</title><link>https://www.cve.org/CVERecord?id=CVE-2019-20458</link><description>An issue was discovered on Epson Expression Home XP255 20.08.FM10I8 devices. By default, the device comes (and functions) without a password. The user is at no point prompted to set up a password on the device (leaving a number of devices without a password). In this case, anyone connecting to the web admin panel is capable of becoming admin without using any credentials.</description><pubDate>Thu, 07 Nov 2024 18:13:00 +0000</pubDate></item><item><title>CVE-2019-20459 | An issue was discovered on Epson Expression Home XP255 20.08.FM10I8 devices. With the SNMPv1 public community, all values can be read, and w...</title><link>https://www.cve.org/CVERecord?id=CVE-2019-20459</link><description>An issue was discovered on Epson Expression Home XP255 20.08.FM10I8 devices. With the SNMPv1 public community, all values can be read, and with the epson community, all the changeable values can be written/updated, as demonstrated by permanently disabling the network card or changing the DNS servers.</description><pubDate>Thu, 07 Nov 2024 18:13:01 +0000</pubDate></item><item><title>CVE-2024-51989 | Cross-site Scripting (XSS) Vulnerability in PasswordPusher</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51989</link><description>Password Pusher is an open source application to communicate sensitive information over the web. A cross-site scripting (XSS) vulnerability was identified in the PasswordPusher application, affecting versions `v1.41.1` through and including `v.1.48.0`. The issue arises from an un-sanitized parameter which could allow attackers to inject malicious JavaScript into the application. Users who self-host and have the login system enabled are affected.  Exploitation of this vulnerability could expose user data, access to user sessions or take unintended actions on behalf of users. To exploit this vulnerability, an attacker would need to convince a user to click a malicious account confirmation link. It is highly recommended to update to version `v1.48.1` or later to mitigate this risk. There are no known workarounds for this vulnerability.

### Solution

Update to version `v1.48.1` or later where input sanitization has been applied to the account confirmation process.  If updating is not immediately possible,</description><pubDate>Thu, 07 Nov 2024 18:13:01 +0000</pubDate></item><item><title>CVE-2024-51995 | Logic bug in ajax.render.php allows for bypass of &amp;#x27;backOffice&amp;#x27; access control in Combodo iTop</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51995</link><description>Combodo iTop is a web based IT Service Management tool. An attacker can request any `route` we want as long as we specify an `operation` that is allowed. This issue has been addressed in version 3.2.0 by applying the same access control pattern as in `UI.php` to the `ajax.render.php` page which does not allow arbitrary `routes` to be dispatched. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Thu, 07 Nov 2024 18:13:01 +0000</pubDate></item><item><title>CVE-2020-11921 | An issue was discovered in Lush 2 through 2020-02-25. Due to the lack of Bluetooth traffic encryption, it is possible to hijack an ongoing B...</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11921</link><description>An issue was discovered in Lush 2 through 2020-02-25. Due to the lack of Bluetooth traffic encryption, it is possible to hijack an ongoing Bluetooth connection between the Lush 2 and a mobile phone. This allows an attacker to gain full control over the device.</description><pubDate>Thu, 07 Nov 2024 17:52:43 +0000</pubDate></item><item><title>CVE-2020-11926 | An issue was discovered in Luvion Grand Elite 3 Connect through 2020-02-25. Clients can authenticate themselves to the device using a userna...</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11926</link><description>An issue was discovered in Luvion Grand Elite 3 Connect through 2020-02-25. Clients can authenticate themselves to the device using a username and password. These credentials can be obtained through an unauthenticated web request, e.g., for a JavaScript file. Also, the disclosed information includes the SSID and WPA2 key for the Wi-Fi network the device is connected to.</description><pubDate>Thu, 07 Nov 2024 17:52:43 +0000</pubDate></item><item><title>CVE-2024-45794 | SQL Injection in CreateUser API in devtron</title><link>https://www.cve.org/CVERecord?id=CVE-2024-45794</link><description>devtron is an open source tool integration platform for Kubernetes. In affected versions an authenticated user (with minimum permission) could utilize and exploit SQL Injection to allow the execution of malicious SQL queries via CreateUser API (/orchestrator/user). This issue has been addressed in version 0.7.2 and all users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Thu, 07 Nov 2024 17:52:43 +0000</pubDate></item><item><title>CVE-2024-51758 | Exported files stored in default (`public`) filesystem if not reconfigured in filament</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51758</link><description>Filament is a collection of full-stack components for accelerated Laravel development. All Filament features that interact with storage use the `default_filesystem_disk` config option. This allows the user to easily swap their storage driver to something production-ready like `s3` when deploying their app, without having to touch multiple configuration options and potentially forgetting about some. The default disk is set to `public` when you first install Filament, since this allows users to quickly get started developing with a functional disk that allows features such as file upload previews locally without the need to set up an S3 disk with temporary URL support. However, some features of Filament such as exports also rely on storage, and the files that are stored contain data that should often not be public. This is not an issue for the many deployed applications, since many use a secure default disk such as S3 in production. However, [CWE-1188](https://cwe.mitre.org/data/definitions/1188.html) suggests that having the `public` disk as the default disk in Filament is a security vulnerability itself. As such, we have implemented a measure to protect users whereby if the `public` disk is set as the default disk, the exports feature will automatically swap it out for the `local` disk, if that exists. Users who set the default disk to `local` or `s3` already are not affected. If a user wants to continue to use the `public` disk for exports, they can by setting the export disk deliberately. This change has been included in the 3.2.123 release and all users who use the `public` disk are advised to upgrade.</description><pubDate>Thu, 07 Nov 2024 17:52:44 +0000</pubDate></item><item><title>CVE-2020-11916 | An issue was discovered in Siime Eye 14.1.00000001.3.330.0.0.3.14. The password for the root user is hashed using an old and deprecated hash...</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11916</link><description>An issue was discovered in Siime Eye 14.1.00000001.3.330.0.0.3.14. The password for the root user is hashed using an old and deprecated hashing technique. Because of this deprecated hashing, the success probability of an attacker in an offline cracking attack is greatly increased.</description><pubDate>Thu, 07 Nov 2024 17:42:40 +0000</pubDate></item><item><title>CVE-2020-11917 | An issue was discovered in Siime Eye 14.1.00000001.3.330.0.0.3.14. It uses a default SSID value, which makes it easier for remote attackers ...</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11917</link><description>An issue was discovered in Siime Eye 14.1.00000001.3.330.0.0.3.14. It uses a default SSID value, which makes it easier for remote attackers to discover the physical locations of many Siime Eye devices, violating the privacy of users who do not wish to disclose their ownership of this type of device. (Various resources such as wigle.net can be use for mapping of SSIDs to physical locations.)</description><pubDate>Thu, 07 Nov 2024 17:42:40 +0000</pubDate></item><item><title>CVE-2020-11918 | An issue was discovered in Siime Eye 14.1.00000001.3.330.0.0.3.14. When a backup file is created through the web interface, information on a...</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11918</link><description>An issue was discovered in Siime Eye 14.1.00000001.3.330.0.0.3.14. When a backup file is created through the web interface, information on all users, including passwords, can be found in cleartext in the backup file. An attacker capable of accessing the web interface can create the backup file.</description><pubDate>Thu, 07 Nov 2024 17:42:40 +0000</pubDate></item><item><title>CVE-2020-11919 | An issue was discovered in Siime Eye 14.1.00000001.3.330.0.0.3.14. There is no CSRF protection.</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11919</link><description>An issue was discovered in Siime Eye 14.1.00000001.3.330.0.0.3.14. There is no CSRF protection.</description><pubDate>Thu, 07 Nov 2024 17:42:41 +0000</pubDate></item><item><title>CVE-2024-47073 | Dataease arbitrary interface access vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-47073</link><description>DataEase is an open source data visualization analysis tool that helps users quickly analyze data and gain insights into business trends. In affected versions a the lack of signature verification of jwt tokens allows attackers to forge jwts which then allow access to any interface. The vulnerability has been fixed in v2.10.2 and all users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Thu, 07 Nov 2024 17:42:42 +0000</pubDate></item><item><title>CVE-2024-48290 | An issue in the Bluetooth Low Energy implementation of Realtek RTL8762E BLE SDK v1.4.0 allows attackers to cause a Denial of Service (DoS) v...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48290</link><description>An issue in the Bluetooth Low Energy implementation of Realtek RTL8762E BLE SDK v1.4.0 allows attackers to cause a Denial of Service (DoS) via supplying a crafted ll_terminate_ind packet.</description><pubDate>Thu, 07 Nov 2024 17:32:42 +0000</pubDate></item><item><title>CVE-2024-51428 | An issue in Espressif Esp idf v5.3.0 allows attackers to cause a Denial of Service (DoS) via a crafted data channel packet.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51428</link><description>An issue in Espressif Esp idf v5.3.0 allows attackers to cause a Denial of Service (DoS) via a crafted data channel packet.</description><pubDate>Thu, 07 Nov 2024 17:32:42 +0000</pubDate></item><item><title>CVE-2024-10964 | emqx neuron plugin_handle.c handle_add_plugin buffer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10964</link><description>A vulnerability classified as critical has been found in emqx neuron up to 2.10.0. Affected is the function handle_add_plugin in the library cmd.library of the file plugins/restful/plugin_handle.c. The manipulation leads to buffer overflow. It is possible to launch the attack remotely. It is recommended to apply a patch to fix this issue.</description><pubDate>Thu, 07 Nov 2024 17:20:03 +0000</pubDate></item><item><title>CVE-2024-10965 | emqx neuron JSON File schema information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10965</link><description>A vulnerability classified as problematic was found in emqx neuron up to 2.10.0. Affected by this vulnerability is an unknown functionality of the file /api/v2/schema of the component JSON File Handler. The manipulation leads to information disclosure. The attack can be launched remotely. The patch is named c9ce39747e0372aaa2157b2b56174914a12c06d8. It is recommended to apply a patch to fix this issue.</description><pubDate>Thu, 07 Nov 2024 17:20:03 +0000</pubDate></item><item><title>CVE-2024-48953 | An issue was discovered in Logpoint before 7.5.0. Endpoints for creating, editing, or deleting third-party authentication modules lacked pro...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48953</link><description>An issue was discovered in Logpoint before 7.5.0. Endpoints for creating, editing, or deleting third-party authentication modules lacked proper authorization checks. This allowed unauthenticated users to register their own authentication plugins in Logpoint, resulting in unauthorized access.</description><pubDate>Thu, 07 Nov 2024 17:20:04 +0000</pubDate></item><item><title>CVE-2024-48954 | An issue was discovered in Logpoint before 7.5.0. Unvalidated input during the EventHub Collector setup by an authenticated user leads to Re...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48954</link><description>An issue was discovered in Logpoint before 7.5.0. Unvalidated input during the EventHub Collector setup by an authenticated user leads to Remote Code execution.</description><pubDate>Thu, 07 Nov 2024 17:20:04 +0000</pubDate></item><item><title>CVE-2024-48951 | An issue was discovered in Logpoint before 7.5.0. Server-Side Request Forgery (SSRF) on SOAR can be used to leak Logpoint's API Token leadin...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48951</link><description>An issue was discovered in Logpoint before 7.5.0. Server-Side Request Forgery (SSRF) on SOAR can be used to leak Logpoint's API Token leading to authentication bypass.</description><pubDate>Thu, 07 Nov 2024 16:59:18 +0000</pubDate></item><item><title>CVE-2024-48952 | An issue was discovered in Logpoint before 7.5.0. SOAR uses a static JWT secret key to generate tokens that allow access to SOAR API endpoin...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48952</link><description>An issue was discovered in Logpoint before 7.5.0. SOAR uses a static JWT secret key to generate tokens that allow access to SOAR API endpoints without authentication. This static key vulnerability enables attackers to create custom JWT secret keys for unauthorized access to these endpoints.</description><pubDate>Thu, 07 Nov 2024 16:59:18 +0000</pubDate></item><item><title>CVE-2024-40715 | A vulnerability in Veeam Backup &amp; Replication Enterprise Manager has been identified, which allows attackers to perform authentication bypas...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-40715</link><description>A vulnerability in Veeam Backup &amp; Replication Enterprise Manager has been identified, which allows attackers to perform authentication bypass. Attackers must be able to perform Man-in-the-Middle (MITM) attack to exploit this vulnerability.</description><pubDate>Thu, 07 Nov 2024 16:49:38 +0000</pubDate></item><item><title>CVE-2024-48950 | An issue was discovered in Logpoint before 7.5.0. An endpoint used by Distributed Logpoint Setup was exposed, allowing unauthenticated attac...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48950</link><description>An issue was discovered in Logpoint before 7.5.0. An endpoint used by Distributed Logpoint Setup was exposed, allowing unauthenticated attackers to bypass CSRF protections and authentication.</description><pubDate>Thu, 07 Nov 2024 16:49:39 +0000</pubDate></item><item><title>CVE-2024-10963 | Pam: improper hostname interpretation in pam_access leads to access control bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10963</link><description>A vulnerability was found in pam_access due to the improper handling of tokens in access.conf, interpreted as hostnames. This flaw allows attackers to bypass access restrictions by spoofing hostnames, undermining configurations designed to limit access to specific TTYs or services. The flaw poses a risk in environments relying on these configurations for local access control.</description><pubDate>Thu, 07 Nov 2024 16:12:38 +0000</pubDate></item><item><title>CVE-2024-10668 | Auth Bypass in Quickshare</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10668</link><description>There exists an auth bypass in Google Quickshare where an attacker can upload an unknown file type to a victim. The root cause of the vulnerability lies in the fact that when a Payload Transfer frame of type FILE is sent to Quick Share, the file that is contained in this frame is written to disk in the Downloads folder. Quickshare normally deletes unkown files, however an attacker can send two Payload transfer frames of type FILE and the same payload ID. The deletion logic will only delete the first file and not the second. We recommend upgrading past commit 5d8b9156e0c339d82d3dab0849187e8819ad92c0 or Quick Share Windows v1.0.2002.2</description><pubDate>Thu, 07 Nov 2024 15:32:12 +0000</pubDate></item><item><title>CVE-2024-8378 | Safe SVG &amp;lt; 2.2.6 - Author+ SVG Sanitisation Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8378</link><description>The Safe SVG WordPress plugin before 2.2.6 has its sanitisation code is only running for paths that call wp_handle_upload, but not for example for code that uses wp_handle_sideload which is often used to upload attachments via raw POST data.</description><pubDate>Thu, 07 Nov 2024 15:32:13 +0000</pubDate></item><item><title>CVE-2024-9926 | Jetpack &amp;lt; 13.9.1 - Subscriber+ Arbitrary Feedback Access</title><link>https://www.cve.org/CVERecord?id=CVE-2024-9926</link><description>The Jetpack WordPress plugin does not have proper authorisation in one of its REST endpoint, allowing any authenticated users, such as subscriber to read arbitrary feedbacks data sent via the Jetpack Contact Form</description><pubDate>Thu, 07 Nov 2024 15:15:28 +0000</pubDate></item><item><title>CVE-2024-43436 | Moodle: site administration sql injection via xmldb editor</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43436</link><description>A SQL injection risk flaw was found in the XMLDB editor tool available to site administrators.</description><pubDate>Thu, 07 Nov 2024 13:40:18 +0000</pubDate></item><item><title>CVE-2024-43438 | Moodle: idor in feedback non-respondents report allows messaging arbitrary site users</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43438</link><description>A flaw was found in Feedback. Bulk messaging in the activity's non-respondents report did not verify message recipients belonging to the set of users returned by the report.</description><pubDate>Thu, 07 Nov 2024 13:40:18 +0000</pubDate></item><item><title>CVE-2024-43440 | Moodle: lfi vulnerability when restoring malformed block backups</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43440</link><description>A flaw was found in moodle. A local file may include risks when restoring block backups.</description><pubDate>Thu, 07 Nov 2024 13:40:19 +0000</pubDate></item><item><title>CVE-2024-43425 | Moodle: remote code execution via calculated question types</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43425</link><description>A flaw was found in Moodle. Additional restrictions are required to avoid a remote code execution risk in calculated question types. Note: This requires the capability to add/update questions.</description><pubDate>Thu, 07 Nov 2024 13:40:20 +0000</pubDate></item><item><title>CVE-2024-43426 | Moodle: arbitrary file read risk through pdftex</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43426</link><description>A flaw was found in pdfTeX. Insufficient sanitizing in the TeX notation filter resulted in an arbitrary file read risk on sites where pdfTeX is available, such as those with TeX Live installed.</description><pubDate>Thu, 07 Nov 2024 13:40:20 +0000</pubDate></item><item><title>CVE-2024-43428 | Moodle: cache poisoning via injection into storage</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43428</link><description>To address a cache poisoning risk in Moodle, additional validation for local storage was required.</description><pubDate>Thu, 07 Nov 2024 13:40:21 +0000</pubDate></item><item><title>CVE-2024-43431 | Moodle: idor in badges allows deletion of arbitrary badges</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43431</link><description>A vulnerability was found in Moodle. Insufficient capability checks made it possible to delete badges that a user does not have permission to access.</description><pubDate>Thu, 07 Nov 2024 13:40:21 +0000</pubDate></item><item><title>CVE-2024-43434 | Moodle: csrf risk in feedback non-respondents report</title><link>https://www.cve.org/CVERecord?id=CVE-2024-43434</link><description>The bulk message sending feature in Moodle's Feedback module's non-respondents report had an incorrect CSRF token check, leading to a CSRF vulnerability.</description><pubDate>Thu, 07 Nov 2024 13:40:22 +0000</pubDate></item><item><title>CVE-2024-8442 | Prime Slider - Addons For Elementor (Revolution of a slider, Hero Slider, Ecommerce Slider &amp;lt;= 3.15.18 - Authenticated (Contributor+) Stored Cross-Site Scripting via Blog Widget</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8442</link><description>The Prime Slider – Addons For Elementor (Revolution of a slider, Hero Slider, Ecommerce Slider) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Blog widget in all versions up to, and including, 3.15.18 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Thu, 07 Nov 2024 13:01:33 +0000</pubDate></item><item><title>CVE-2024-24914 | Authenticated Gaia users can inject code or commands by global variables through special HTTP requests. A Security fix that mitigates this v...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24914</link><description>Authenticated Gaia users can inject code or commands by global variables through special HTTP requests. A Security fix that mitigates this vulnerability is available.</description><pubDate>Thu, 07 Nov 2024 11:36:57 +0000</pubDate></item><item><title>CVE-2024-10526 | Rapid7 Velociraptor Local Privilege Escalation In Windows Velociraptor Service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10526</link><description>Rapid7 Velociraptor MSI Installer versions below 0.73.3 suffer from a vulnerability whereby it creates the installation directory with WRITE_DACL permission to the BUILTIN\\Users group. This allows local users who are not administrators to grant themselves the Full Control permission on Velociraptor's files. By modifying Velociraptor's files, local users can subvert the binary and cause the Velociraptor service to execute arbitrary code as the SYSTEM user, or to replace the Velociraptor binary completely.  This issue is fixed in version 0.73.3.</description><pubDate>Thu, 07 Nov 2024 10:33:22 +0000</pubDate></item><item><title>CVE-2023-1932 | Hibernate-validator: rendering of invalid html with safehtml leads to html injection and xss</title><link>https://www.cve.org/CVERecord?id=CVE-2023-1932</link><description>A flaw was found in hibernate-validator's 'isValid' method in the org.hibernate.validator.internal.constraintvalidators.hv.SafeHtmlValidator class, which can be bypassed by omitting the tag ending in a less-than character. Browsers may render an invalid html, allowing HTML injection or Cross-Site-Scripting (XSS) attacks.</description><pubDate>Thu, 07 Nov 2024 10:10:32 +0000</pubDate></item><item><title>CVE-2023-1973 | Undertow: unrestricted request storage leads to memory exhaustion</title><link>https://www.cve.org/CVERecord?id=CVE-2023-1973</link><description>A flaw was found in Undertow package. Using the FormAuthenticationMechanism, a malicious user could trigger a Denial of Service by sending crafted requests, leading the server to an OutofMemory error, exhausting the server's memory.</description><pubDate>Thu, 07 Nov 2024 10:10:32 +0000</pubDate></item><item><title>CVE-2024-51504 | Apache ZooKeeper: Authentication bypass with IP-based authentication in Admin Server</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51504</link><description>When using IPAuthenticationProvider in ZooKeeper Admin Server there is a possibility of Authentication Bypass by Spoofing -- this only impacts IP based authentication implemented in ZooKeeper Admin Server. Default configuration of client's IP address detection in IPAuthenticationProvider, which uses HTTP request headers, is weak and allows an attacker to bypass authentication via spoofing client's IP address in request headers. Default configuration honors X-Forwarded-For HTTP header to read client's IP address. X-Forwarded-For request header is mainly used by proxy servers to identify the client and can be easily spoofed by an attacker pretending that the request comes from a different IP address. Admin Server commands, such as snapshot and restore arbitrarily can be executed on successful exploitation which could potentially lead to information leakage or service availability issues. Users are recommended to upgrade to version 3.9.3, which fixes this issue.</description><pubDate>Thu, 07 Nov 2024 10:10:33 +0000</pubDate></item><item><title>CVE-2024-50139 | KVM: arm64: Fix shift-out-of-bounds bug</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50139</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: arm64: Fix shift-out-of-bounds bug

Fix a shift-out-of-bounds bug reported by UBSAN when running
VM with MTE enabled host kernel.

UBSAN: shift-out-of-bounds in arch/arm64/kvm/sys_regs.c:1988:14
shift exponent 33 is too large for 32-bit type 'int'
CPU: 26 UID: 0 PID: 7629 Comm: qemu-kvm Not tainted 6.12.0-rc2 #34
Hardware name: IEI NF5280R7/Mitchell MB, BIOS 00.00. 2024-10-12 09:28:54 10/14/2024
Call trace:
 dump_backtrace+0xa0/0x128
 show_stack+0x20/0x38
 dump_stack_lvl+0x74/0x90
 dump_stack+0x18/0x28
 __ubsan_handle_shift_out_of_bounds+0xf8/0x1e0
 reset_clidr+0x10c/0x1c8
 kvm_reset_sys_regs+0x50/0x1c8
 kvm_reset_vcpu+0xec/0x2b0
 __kvm_vcpu_set_target+0x84/0x158
 kvm_vcpu_set_target+0x138/0x168
 kvm_arch_vcpu_ioctl_vcpu_init+0x40/0x2b0
 kvm_arch_vcpu_ioctl+0x28c/0x4b8
 kvm_vcpu_ioctl+0x4bc/0x7a8
 __arm64_sys_ioctl+0xb4/0x100
 invoke_syscall+0x70/0x100
 el0_svc_common.constprop.0+0x48/0xf0
 do_el0_svc+0x24/0x38
 el0_svc+0x3c/0x158
 el0t_64_sync_handler+0x120/0x130
 el0t_64_sync+0x194/0x198</description><pubDate>Thu, 07 Nov 2024 09:42:46 +0000</pubDate></item><item><title>CVE-2024-50140 | sched/core: Disable page allocation in task_tick_mm_cid()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50140</link><description>In the Linux kernel, the following vulnerability has been resolved:

sched/core: Disable page allocation in task_tick_mm_cid()

With KASAN and PREEMPT_RT enabled, calling task_work_add() in
task_tick_mm_cid() may cause the following splat.

[   63.696416] BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:48
[   63.696416] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 610, name: modprobe
[   63.696416] preempt_count: 10001, expected: 0
[   63.696416] RCU nest depth: 1, expected: 1

This problem is caused by the following call trace.

  sched_tick() [ acquire rq-&gt;__lock ]
   -&gt; task_tick_mm_cid()
    -&gt; task_work_add()
     -&gt; __kasan_record_aux_stack()
      -&gt; kasan_save_stack()
       -&gt; stack_depot_save_flags()
        -&gt; alloc_pages_mpol_noprof()
         -&gt; __alloc_pages_noprof()
	  -&gt; get_page_from_freelist()
	   -&gt; rmqueue()
	    -&gt; rmqueue_pcplist()
	     -&gt; __rmqueue_pcplist()
	      -&gt; rmqueue_bulk()
	       -&gt; rt_spin_lock()

The rq lock is a raw_spinlock_t. We can't sleep while holding
it. IOW, we can't call alloc_pages() in stack_depot_save_flags().

The task_tick_mm_cid() function with its task_work_add() call was
introduced by commit 223baf9d17f2 ("sched: Fix performance regression
introduced by mm_cid") in v6.4 kernel.

Fortunately, there is a kasan_record_aux_stack_noalloc() variant that
calls stack_depot_save_flags() while not allowing it to allocate
new pages.  To allow task_tick_mm_cid() to use task_work without
page allocation, a new TWAF_NO_ALLOC flag is added to enable calling
kasan_record_aux_stack_noalloc() instead of kasan_record_aux_stack()
if set. The task_tick_mm_cid() function is modified to add this new flag.

The possible downside is the missing stack trace in a KASAN report due
to new page allocation required when task_work_add_noallloc() is called
which should be rare.</description><pubDate>Thu, 07 Nov 2024 09:42:47 +0000</pubDate></item><item><title>CVE-2024-50141 | ACPI: PRM: Find EFI_MEMORY_RUNTIME block for PRM handler and context</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50141</link><description>In the Linux kernel, the following vulnerability has been resolved:

ACPI: PRM: Find EFI_MEMORY_RUNTIME block for PRM handler and context

PRMT needs to find the correct type of block to translate the PA-VA
mapping for EFI runtime services.

The issue arises because the PRMT is finding a block of type
EFI_CONVENTIONAL_MEMORY, which is not appropriate for runtime services
as described in Section 2.2.2 (Runtime Services) of the UEFI
Specification [1]. Since the PRM handler is a type of runtime service,
this causes an exception when the PRM handler is called.

    [Firmware Bug]: Unable to handle paging request in EFI runtime service
    WARNING: CPU: 22 PID: 4330 at drivers/firmware/efi/runtime-wrappers.c:341
        __efi_queue_work+0x11c/0x170
    Call trace:

Let PRMT find a block with EFI_MEMORY_RUNTIME for PRM handler and PRM
context.

If no suitable block is found, a warning message will be printed, but
the procedure continues to manage the next PRM handler.

However, if the PRM handler is actually called without proper allocation,
it would result in a failure during error handling.

By using the correct memory types for runtime services, ensure that the
PRM handler and the context are properly mapped in the virtual address
space during runtime, preventing the paging request error.

The issue is really that only memory that has been remapped for runtime
by the firmware can be used by the PRM handler, and so the region needs
to have the EFI_MEMORY_RUNTIME attribute.

[ rjw: Subject and changelog edits ]</description><pubDate>Thu, 07 Nov 2024 09:42:47 +0000</pubDate></item><item><title>CVE-2024-50142 | xfrm: validate new SA&amp;#x27;s prefixlen using SA family when sel.family is unset</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50142</link><description>In the Linux kernel, the following vulnerability has been resolved:

xfrm: validate new SA's prefixlen using SA family when sel.family is unset

This expands the validation introduced in commit 07bf7908950a ("xfrm:
Validate address prefix lengths in the xfrm selector.")

syzbot created an SA with
    usersa.sel.family = AF_UNSPEC
    usersa.sel.prefixlen_s = 128
    usersa.family = AF_INET

Because of the AF_UNSPEC selector, verify_newsa_info doesn't put
limits on prefixlen_{s,d}. But then copy_from_user_state sets
x-&gt;sel.family to usersa.family (AF_INET). Do the same conversion in
verify_newsa_info before validating prefixlen_{s,d}, since that's how
prefixlen is going to be used later on.</description><pubDate>Thu, 07 Nov 2024 09:42:48 +0000</pubDate></item><item><title>CVE-2024-50143 | udf: fix uninit-value use in udf_get_fileshortad</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50143</link><description>In the Linux kernel, the following vulnerability has been resolved:

udf: fix uninit-value use in udf_get_fileshortad

Check for overflow when computing alen in udf_current_aext to mitigate
later uninit-value use in udf_get_fileshortad KMSAN bug[1].
After applying the patch reproducer did not trigger any issue[2].

[1] https://syzkaller.appspot.com/bug?extid=8901c4560b7ab5c2f9df
[2] https://syzkaller.appspot.com/x/log.txt?x=10242227980000</description><pubDate>Thu, 07 Nov 2024 09:42:48 +0000</pubDate></item><item><title>CVE-2024-50144 | drm/xe: fix unbalanced rpm put() with fence_fini()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50144</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/xe: fix unbalanced rpm put() with fence_fini()

Currently we can call fence_fini() twice if something goes wrong when
sending the GuC CT for the tlb request, since we signal the fence and
return an error, leading to the caller also calling fini() on the error
path in the case of stack version of the flow, which leads to an extra
rpm put() which might later cause device to enter suspend when it
shouldn't. It looks like we can just drop the fini() call since the
fence signaller side will already call this for us.

There are known mysterious splats with device going to sleep even with
an rpm ref, and this could be one candidate.

v2 (Matt B):
  - Prefer warning if we detect double fini()

(cherry picked from commit cfcbc0520d5055825f0647ab922b655688605183)</description><pubDate>Thu, 07 Nov 2024 09:42:48 +0000</pubDate></item><item><title>CVE-2024-50145 | octeon_ep: Add SKB allocation failures handling in __octep_oq_process_rx()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50145</link><description>In the Linux kernel, the following vulnerability has been resolved:

octeon_ep: Add SKB allocation failures handling in __octep_oq_process_rx()

build_skb() returns NULL in case of a memory allocation failure so handle
it inside __octep_oq_process_rx() to avoid NULL pointer dereference.

__octep_oq_process_rx() is called during NAPI polling by the driver. If
skb allocation fails, keep on pulling packets out of the Rx DMA queue: we
shouldn't break the polling immediately and thus falsely indicate to the
octep_napi_poll() that the Rx pressure is going down. As there is no
associated skb in this case, don't process the packets and don't push them
up the network stack - they are skipped.

Helper function is implemented to unmmap/flush all the fragment buffers
used by the dropped packet. 'alloc_failures' counter is incremented to
mark the skb allocation error in driver statistics.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Thu, 07 Nov 2024 09:42:49 +0000</pubDate></item><item><title>CVE-2024-50146 | net/mlx5e: Don&amp;#x27;t call cleanup on profile rollback failure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50146</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Don't call cleanup on profile rollback failure

When profile rollback fails in mlx5e_netdev_change_profile, the netdev
profile var is left set to NULL. Avoid a crash when unloading the driver
by not calling profile-&gt;cleanup in such a case.

This was encountered while testing, with the original trigger that
the wq rescuer thread creation got interrupted (presumably due to
Ctrl+C-ing modprobe), which gets converted to ENOMEM (-12) by
mlx5e_priv_init, the profile rollback also fails for the same reason
(signal still active) so the profile is left as NULL, leading to a crash
later in _mlx5e_remove.

 [  732.473932] mlx5_core 0000:08:00.1: E-Switch: Unload vfs: mode(OFFLOADS), nvfs(2), necvfs(0), active vports(2)
 [  734.525513] workqueue: Failed to create a rescuer kthread for wq "mlx5e": -EINTR
 [  734.557372] mlx5_core 0000:08:00.1: mlx5e_netdev_init_profile:6235:(pid 6086): mlx5e_priv_init failed, err=-12
 [  734.559187] mlx5_core 0000:08:00.1 eth3: mlx5e_netdev_change_profile: new profile init failed, -12
 [  734.560153] workqueue: Failed to create a rescuer kthread for wq "mlx5e": -EINTR
 [  734.589378] mlx5_core 0000:08:00.1: mlx5e_netdev_init_profile:6235:(pid 6086): mlx5e_priv_init failed, err=-12
 [  734.591136] mlx5_core 0000:08:00.1 eth3: mlx5e_netdev_change_profile: failed to rollback to orig profile, -12
 [  745.537492] BUG: kernel NULL pointer dereference, address: 0000000000000008
 [  745.538222] #PF: supervisor read access in kernel mode

 [  745.551290] Call Trace:
 [  745.551590]  
 [  745.551866]  ? __die+0x20/0x60
 [  745.552218]  ? page_fault_oops+0x150/0x400
 [  745.555307]  ? exc_page_fault+0x79/0x240
 [  745.555729]  ? asm_exc_page_fault+0x22/0x30
 [  745.556166]  ? mlx5e_remove+0x6b/0xb0 [mlx5_core]
 [  745.556698]  auxiliary_bus_remove+0x18/0x30
 [  745.557134]  device_release_driver_internal+0x1df/0x240
 [  745.557654]  bus_remove_device+0xd7/0x140
 [  745.558075]  device_del+0x15b/0x3c0
 [  745.558456]  mlx5_rescan_drivers_locked.part.0+0xb1/0x2f0 [mlx5_core]
 [  745.559112]  mlx5_unregister_device+0x34/0x50 [mlx5_core]
 [  745.559686]  mlx5_uninit_one+0x46/0xf0 [mlx5_core]
 [  745.560203]  remove_one+0x4e/0xd0 [mlx5_core]
 [  745.560694]  pci_device_remove+0x39/0xa0
 [  745.561112]  device_release_driver_internal+0x1df/0x240
 [  745.561631]  driver_detach+0x47/0x90
 [  745.562022]  bus_remove_driver+0x84/0x100
 [  745.562444]  pci_unregister_driver+0x3b/0x90
 [  745.562890]  mlx5_cleanup+0xc/0x1b [mlx5_core]
 [  745.563415]  __x64_sys_delete_module+0x14d/0x2f0
 [  745.563886]  ? kmem_cache_free+0x1b0/0x460
 [  745.564313]  ? lockdep_hardirqs_on_prepare+0xe2/0x190
 [  745.564825]  do_syscall_64+0x6d/0x140
 [  745.565223]  entry_SYSCALL_64_after_hwframe+0x4b/0x53
 [  745.565725] RIP: 0033:0x7f1579b1288b</description><pubDate>Thu, 07 Nov 2024 09:42:49 +0000</pubDate></item><item><title>CVE-2024-50147 | net/mlx5: Fix command bitmask initialization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50147</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix command bitmask initialization

Command bitmask have a dedicated bit for MANAGE_PAGES command, this bit
isn't Initialize during command bitmask Initialization, only during
MANAGE_PAGES.

In addition, mlx5_cmd_trigger_completions() is trying to trigger
completion for MANAGE_PAGES command as well.

Hence, in case health error occurred before any MANAGE_PAGES command
have been invoke (for example, during mlx5_enable_hca()),
mlx5_cmd_trigger_completions() will try to trigger completion for
MANAGE_PAGES command, which will result in null-ptr-deref error.[1]

Fix it by Initialize command bitmask correctly.

While at it, re-write the code for better understanding.

[1]
BUG: KASAN: null-ptr-deref in mlx5_cmd_trigger_completions+0x1db/0x600 [mlx5_core]
Write of size 4 at addr 0000000000000214 by task kworker/u96:2/12078
CPU: 10 PID: 12078 Comm: kworker/u96:2 Not tainted 6.9.0-rc2_for_upstream_debug_2024_04_07_19_01 #1
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
Workqueue: mlx5_health0000:08:00.0 mlx5_fw_fatal_reporter_err_work [mlx5_core]
Call Trace:
 
 dump_stack_lvl+0x7e/0xc0
 kasan_report+0xb9/0xf0
 kasan_check_range+0xec/0x190
 mlx5_cmd_trigger_completions+0x1db/0x600 [mlx5_core]
 mlx5_cmd_flush+0x94/0x240 [mlx5_core]
 enter_error_state+0x6c/0xd0 [mlx5_core]
 mlx5_fw_fatal_reporter_err_work+0xf3/0x480 [mlx5_core]
 process_one_work+0x787/0x1490
 ? lockdep_hardirqs_on_prepare+0x400/0x400
 ? pwq_dec_nr_in_flight+0xda0/0xda0
 ? assign_work+0x168/0x240
 worker_thread+0x586/0xd30
 ? rescuer_thread+0xae0/0xae0
 kthread+0x2df/0x3b0
 ? kthread_complete_and_exit+0x20/0x20
 ret_from_fork+0x2d/0x70
 ? kthread_complete_and_exit+0x20/0x20
 ret_from_fork_asm+0x11/0x20</description><pubDate>Thu, 07 Nov 2024 09:42:50 +0000</pubDate></item><item><title>CVE-2024-50148 | Bluetooth: bnep: fix wild-memory-access in proto_unregister</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50148</link><description>In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: bnep: fix wild-memory-access in proto_unregister

There's issue as follows:
  KASAN: maybe wild-memory-access in range [0xdead...108-0xdead...10f]
  CPU: 3 UID: 0 PID: 2805 Comm: rmmod Tainted: G        W
  RIP: 0010:proto_unregister+0xee/0x400
  Call Trace:
   
   __do_sys_delete_module+0x318/0x580
   do_syscall_64+0xc1/0x1d0
   entry_SYSCALL_64_after_hwframe+0x77/0x7f

As bnep_init() ignore bnep_sock_init()'s return value, and bnep_sock_init()
will cleanup all resource. Then when remove bnep module will call
bnep_sock_cleanup() to cleanup sock's resource.
To solve above issue just return bnep_sock_init()'s return value in
bnep_exit().</description><pubDate>Thu, 07 Nov 2024 09:42:50 +0000</pubDate></item><item><title>CVE-2024-50149 | drm/xe: Don&amp;#x27;t free job in TDR</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50149</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/xe: Don't free job in TDR

Freeing job in TDR is not safe as TDR can pass the run_job thread
resulting in UAF. It is only safe for free job to naturally be called by
the scheduler. Rather free job in TDR, add to pending list.

(cherry picked from commit ea2f6a77d0c40d97f4a4dc93fee4afe15d94926d)</description><pubDate>Thu, 07 Nov 2024 09:42:50 +0000</pubDate></item><item><title>CVE-2024-50150 | usb: typec: altmode should keep reference to parent</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50150</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: typec: altmode should keep reference to parent

The altmode device release refers to its parent device, but without keeping
a reference to it.

When registering the altmode, get a reference to the parent and put it in
the release function.

Before this fix, when using CONFIG_DEBUG_KOBJECT_RELEASE, we see issues
like this:

[   43.572860] kobject: 'port0.0' (ffff8880057ba008): kobject_release, parent 0000000000000000 (delayed 3000)
[   43.573532] kobject: 'port0.1' (ffff8880057bd008): kobject_release, parent 0000000000000000 (delayed 1000)
[   43.574407] kobject: 'port0' (ffff8880057b9008): kobject_release, parent 0000000000000000 (delayed 3000)
[   43.575059] kobject: 'port1.0' (ffff8880057ca008): kobject_release, parent 0000000000000000 (delayed 4000)
[   43.575908] kobject: 'port1.1' (ffff8880057c9008): kobject_release, parent 0000000000000000 (delayed 4000)
[   43.576908] kobject: 'typec' (ffff8880062dbc00): kobject_release, parent 0000000000000000 (delayed 4000)
[   43.577769] kobject: 'port1' (ffff8880057bf008): kobject_release, parent 0000000000000000 (delayed 3000)
[   46.612867] ==================================================================
[   46.613402] BUG: KASAN: slab-use-after-free in typec_altmode_release+0x38/0x129
[   46.614003] Read of size 8 at addr ffff8880057b9118 by task kworker/2:1/48
[   46.614538]
[   46.614668] CPU: 2 UID: 0 PID: 48 Comm: kworker/2:1 Not tainted 6.12.0-rc1-00138-gedbae730ad31 #535
[   46.615391] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04/01/2014
[   46.616042] Workqueue: events kobject_delayed_cleanup
[   46.616446] Call Trace:
[   46.616648]  
[   46.616820]  dump_stack_lvl+0x5b/0x7c
[   46.617112]  ? typec_altmode_release+0x38/0x129
[   46.617470]  print_report+0x14c/0x49e
[   46.617769]  ? rcu_read_unlock_sched+0x56/0x69
[   46.618117]  ? __virt_addr_valid+0x19a/0x1ab
[   46.618456]  ? kmem_cache_debug_flags+0xc/0x1d
[   46.618807]  ? typec_altmode_release+0x38/0x129
[   46.619161]  kasan_report+0x8d/0xb4
[   46.619447]  ? typec_altmode_release+0x38/0x129
[   46.619809]  ? process_scheduled_works+0x3cb/0x85f
[   46.620185]  typec_altmode_release+0x38/0x129
[   46.620537]  ? process_scheduled_works+0x3cb/0x85f
[   46.620907]  device_release+0xaf/0xf2
[   46.621206]  kobject_delayed_cleanup+0x13b/0x17a
[   46.621584]  process_scheduled_works+0x4f6/0x85f
[   46.621955]  ? __pfx_process_scheduled_works+0x10/0x10
[   46.622353]  ? hlock_class+0x31/0x9a
[   46.622647]  ? lock_acquired+0x361/0x3c3
[   46.622956]  ? move_linked_works+0x46/0x7d
[   46.623277]  worker_thread+0x1ce/0x291
[   46.623582]  ? __kthread_parkme+0xc8/0xdf
[   46.623900]  ? __pfx_worker_thread+0x10/0x10
[   46.624236]  kthread+0x17e/0x190
[   46.624501]  ? kthread+0xfb/0x190
[   46.624756]  ? __pfx_kthread+0x10/0x10
[   46.625015]  ret_from_fork+0x20/0x40
[   46.625268]  ? __pfx_kthread+0x10/0x10
[   46.625532]  ret_from_fork_asm+0x1a/0x30
[   46.625805]  
[   46.625953]
[   46.626056] Allocated by task 678:
[   46.626287]  kasan_save_stack+0x24/0x44
[   46.626555]  kasan_save_track+0x14/0x2d
[   46.626811]  __kasan_kmalloc+0x3f/0x4d
[   46.627049]  __kmalloc_noprof+0x1bf/0x1f0
[   46.627362]  typec_register_port+0x23/0x491
[   46.627698]  cros_typec_probe+0x634/0xbb6
[   46.628026]  platform_probe+0x47/0x8c
[   46.628311]  really_probe+0x20a/0x47d
[   46.628605]  device_driver_attach+0x39/0x72
[   46.628940]  bind_store+0x87/0xd7
[   46.629213]  kernfs_fop_write_iter+0x1aa/0x218
[   46.629574]  vfs_write+0x1d6/0x29b
[   46.629856]  ksys_write+0xcd/0x13b
[   46.630128]  do_syscall_64+0xd4/0x139
[   46.630420]  entry_SYSCALL_64_after_hwframe+0x76/0x7e
[   46.630820]
[   46.630946] Freed by task 48:
[   46.631182]  kasan_save_stack+0x24/0x44
[   46.631493]  kasan_save_track+0x14/0x2d
[   46.631799]  kasan_save_free_info+0x3f/0x4d
[   46.632144]  __kasan_slab_free+0x37/0x45
[   46.632474]
---truncated---</description><pubDate>Thu, 07 Nov 2024 09:42:51 +0000</pubDate></item><item><title>CVE-2024-50151 | smb: client: fix OOBs when building SMB2_IOCTL request</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50151</link><description>In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix OOBs when building SMB2_IOCTL request

When using encryption, either enforced by the server or when using
'seal' mount option, the client will squash all compound request buffers
down for encryption into a single iov in smb2_set_next_command().

SMB2_ioctl_init() allocates a small buffer (448 bytes) to hold the
SMB2_IOCTL request in the first iov, and if the user passes an input
buffer that is greater than 328 bytes, smb2_set_next_command() will
end up writing off the end of @rqst-&gt;iov[0].iov_base as shown below:

  mount.cifs //srv/share /mnt -o ...,seal
  ln -s $(perl -e "print('a')for 1..1024") /mnt/link

  BUG: KASAN: slab-out-of-bounds in
  smb2_set_next_command.cold+0x1d6/0x24c [cifs]
  Write of size 4116 at addr ffff8881148fcab8 by task ln/859

  CPU: 1 UID: 0 PID: 859 Comm: ln Not tainted 6.12.0-rc3 #1
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS
  1.16.3-2.fc40 04/01/2014
  Call Trace:
   
   dump_stack_lvl+0x5d/0x80
   ? smb2_set_next_command.cold+0x1d6/0x24c [cifs]
   print_report+0x156/0x4d9
   ? smb2_set_next_command.cold+0x1d6/0x24c [cifs]
   ? __virt_addr_valid+0x145/0x310
   ? __phys_addr+0x46/0x90
   ? smb2_set_next_command.cold+0x1d6/0x24c [cifs]
   kasan_report+0xda/0x110
   ? smb2_set_next_command.cold+0x1d6/0x24c [cifs]
   kasan_check_range+0x10f/0x1f0
   __asan_memcpy+0x3c/0x60
   smb2_set_next_command.cold+0x1d6/0x24c [cifs]
   smb2_compound_op+0x238c/0x3840 [cifs]
   ? kasan_save_track+0x14/0x30
   ? kasan_save_free_info+0x3b/0x70
   ? vfs_symlink+0x1a1/0x2c0
   ? do_symlinkat+0x108/0x1c0
   ? __pfx_smb2_compound_op+0x10/0x10 [cifs]
   ? kmem_cache_free+0x118/0x3e0
   ? cifs_get_writable_path+0xeb/0x1a0 [cifs]
   smb2_get_reparse_inode+0x423/0x540 [cifs]
   ? __pfx_smb2_get_reparse_inode+0x10/0x10 [cifs]
   ? rcu_is_watching+0x20/0x50
   ? __kmalloc_noprof+0x37c/0x480
   ? smb2_create_reparse_symlink+0x257/0x490 [cifs]
   ? smb2_create_reparse_symlink+0x38f/0x490 [cifs]
   smb2_create_reparse_symlink+0x38f/0x490 [cifs]
   ? __pfx_smb2_create_reparse_symlink+0x10/0x10 [cifs]
   ? find_held_lock+0x8a/0xa0
   ? hlock_class+0x32/0xb0
   ? __build_path_from_dentry_optional_prefix+0x19d/0x2e0 [cifs]
   cifs_symlink+0x24f/0x960 [cifs]
   ? __pfx_make_vfsuid+0x10/0x10
   ? __pfx_cifs_symlink+0x10/0x10 [cifs]
   ? make_vfsgid+0x6b/0xc0
   ? generic_permission+0x96/0x2d0
   vfs_symlink+0x1a1/0x2c0
   do_symlinkat+0x108/0x1c0
   ? __pfx_do_symlinkat+0x10/0x10
   ? strncpy_from_user+0xaa/0x160
   __x64_sys_symlinkat+0xb9/0xf0
   do_syscall_64+0xbb/0x1d0
   entry_SYSCALL_64_after_hwframe+0x77/0x7f
  RIP: 0033:0x7f08d75c13bb</description><pubDate>Thu, 07 Nov 2024 09:42:51 +0000</pubDate></item><item><title>CVE-2024-50152 | smb: client: fix possible double free in smb2_set_ea()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50152</link><description>In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix possible double free in smb2_set_ea()

Clang static checker(scan-build) warning：
fs/smb/client/smb2ops.c:1304:2: Attempt to free released memory.
 1304 |         kfree(ea);
      |         ^~~~~~~~~

There is a double free in such case:
'ea is initialized to NULL' -&gt; 'first successful memory allocation for
ea' -&gt; 'something failed, goto sea_exit' -&gt; 'first memory release for ea'
-&gt; 'goto replay_again' -&gt; 'second goto sea_exit before allocate memory
for ea' -&gt; 'second memory release for ea resulted in double free'.

Re-initialie 'ea' to NULL near to the replay_again label, it can fix this
double free problem.</description><pubDate>Thu, 07 Nov 2024 09:42:51 +0000</pubDate></item><item><title>CVE-2024-50153 | scsi: target: core: Fix null-ptr-deref in target_alloc_device()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50153</link><description>In the Linux kernel, the following vulnerability has been resolved:

scsi: target: core: Fix null-ptr-deref in target_alloc_device()

There is a null-ptr-deref issue reported by KASAN:

BUG: KASAN: null-ptr-deref in target_alloc_device+0xbc4/0xbe0 [target_core_mod]
...
 kasan_report+0xb9/0xf0
 target_alloc_device+0xbc4/0xbe0 [target_core_mod]
 core_dev_setup_virtual_lun0+0xef/0x1f0 [target_core_mod]
 target_core_init_configfs+0x205/0x420 [target_core_mod]
 do_one_initcall+0xdd/0x4e0
...
 entry_SYSCALL_64_after_hwframe+0x76/0x7e

In target_alloc_device(), if allocing memory for dev queues fails, then
dev will be freed by dev-&gt;transport-&gt;free_device(), but dev-&gt;transport
is not initialized at that time, which will lead to a null pointer
reference problem.

Fixing this bug by freeing dev with hba-&gt;backend-&gt;ops-&gt;free_device().</description><pubDate>Thu, 07 Nov 2024 09:42:52 +0000</pubDate></item><item><title>CVE-2024-50154 | tcp/dccp: Don&amp;#x27;t use timer_pending() in reqsk_queue_unlink().</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50154</link><description>In the Linux kernel, the following vulnerability has been resolved:

tcp/dccp: Don't use timer_pending() in reqsk_queue_unlink().

Martin KaFai Lau reported use-after-free [0] in reqsk_timer_handler().

  """
  We are seeing a use-after-free from a bpf prog attached to
  trace_tcp_retransmit_synack. The program passes the req-&gt;sk to the
  bpf_sk_storage_get_tracing kernel helper which does check for null
  before using it.
  """

The commit 83fccfc3940c ("inet: fix potential deadlock in
reqsk_queue_unlink()") added timer_pending() in reqsk_queue_unlink() not
to call del_timer_sync() from reqsk_timer_handler(), but it introduced a
small race window.

Before the timer is called, expire_timers() calls detach_timer(timer, true)
to clear timer-&gt;entry.pprev and marks it as not pending.

If reqsk_queue_unlink() checks timer_pending() just after expire_timers()
calls detach_timer(), TCP will miss del_timer_sync(); the reqsk timer will
continue running and send multiple SYN+ACKs until it expires.

The reported UAF could happen if req-&gt;sk is close()d earlier than the timer
expiration, which is 63s by default.

The scenario would be

  1. inet_csk_complete_hashdance() calls inet_csk_reqsk_queue_drop(),
     but del_timer_sync() is missed

  2. reqsk timer is executed and scheduled again

  3. req-&gt;sk is accept()ed and reqsk_put() decrements rsk_refcnt, but
     reqsk timer still has another one, and inet_csk_accept() does not
     clear req-&gt;sk for non-TFO sockets

  4. sk is close()d

  5. reqsk timer is executed again, and BPF touches req-&gt;sk

Let's not use timer_pending() by passing the caller context to
__inet_csk_reqsk_queue_drop().

Note that reqsk timer is pinned, so the issue does not happen in most
use cases. [1]

[0]
BUG: KFENCE: use-after-free read in bpf_sk_storage_get_tracing+0x2e/0x1b0

Use-after-free read at 0x00000000a891fb3a (in kfence-#1):
bpf_sk_storage_get_tracing+0x2e/0x1b0
bpf_prog_5ea3e95db6da0438_tcp_retransmit_synack+0x1d20/0x1dda
bpf_trace_run2+0x4c/0xc0
tcp_rtx_synack+0xf9/0x100
reqsk_timer_handler+0xda/0x3d0
run_timer_softirq+0x292/0x8a0
irq_exit_rcu+0xf5/0x320
sysvec_apic_timer_interrupt+0x6d/0x80
asm_sysvec_apic_timer_interrupt+0x16/0x20
intel_idle_irq+0x5a/0xa0
cpuidle_enter_state+0x94/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb

kfence-#1: 0x00000000a72cc7b6-0x00000000d97616d9, size=2376, cache=TCPv6

allocated by task 0 on cpu 9 at 260507.901592s:
sk_prot_alloc+0x35/0x140
sk_clone_lock+0x1f/0x3f0
inet_csk_clone_lock+0x15/0x160
tcp_create_openreq_child+0x1f/0x410
tcp_v6_syn_recv_sock+0x1da/0x700
tcp_check_req+0x1fb/0x510
tcp_v6_rcv+0x98b/0x1420
ipv6_list_rcv+0x2258/0x26e0
napi_complete_done+0x5b1/0x2990
mlx5e_napi_poll+0x2ae/0x8d0
net_rx_action+0x13e/0x590
irq_exit_rcu+0xf5/0x320
common_interrupt+0x80/0x90
asm_common_interrupt+0x22/0x40
cpuidle_enter_state+0xfb/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb

freed by task 0 on cpu 9 at 260507.927527s:
rcu_core_si+0x4ff/0xf10
irq_exit_rcu+0xf5/0x320
sysvec_apic_timer_interrupt+0x6d/0x80
asm_sysvec_apic_timer_interrupt+0x16/0x20
cpuidle_enter_state+0xfb/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb</description><pubDate>Thu, 07 Nov 2024 09:42:52 +0000</pubDate></item><item><title>CVE-2024-50155 | netdevsim: use cond_resched() in nsim_dev_trap_report_work()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50155</link><description>In the Linux kernel, the following vulnerability has been resolved:

netdevsim: use cond_resched() in nsim_dev_trap_report_work()

I am still seeing many syzbot reports hinting that syzbot
might fool nsim_dev_trap_report_work() with hundreds of ports [1]

Lets use cond_resched(), and system_unbound_wq
instead of implicit system_wq.

[1]
INFO: task syz-executor:20633 blocked for more than 143 seconds.
      Not tainted 6.12.0-rc2-syzkaller-00205-g1d227fcc7222 #0
"echo 0 &gt; /proc/sys/kernel/hung_task_timeout_secs" disables this message.
task:syz-executor    state:D stack:25856 pid:20633 tgid:20633 ppid:1      flags:0x00004006
...
NMI backtrace for cpu 1
CPU: 1 UID: 0 PID: 16760 Comm: kworker/1:0 Not tainted 6.12.0-rc2-syzkaller-00205-g1d227fcc7222 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024
Workqueue: events nsim_dev_trap_report_work
 RIP: 0010:__sanitizer_cov_trace_pc+0x0/0x70 kernel/kcov.c:210
Code: 89 fb e8 23 00 00 00 48 8b 3d 04 fb 9c 0c 48 89 de 5b e9 c3 c7 5d 00 0f 1f 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90  0f 1e fa 48 8b 04 24 65 48 8b 0c 25 c0 d7 03 00 65 8b 15 60 f0
RSP: 0018:ffffc90000a187e8 EFLAGS: 00000246
RAX: 0000000000000100 RBX: ffffc90000a188e0 RCX: ffff888027d3bc00
RDX: ffff888027d3bc00 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffff88804a2e6000 R08: ffffffff8a4bc495 R09: ffffffff89da3577
R10: 0000000000000004 R11: ffffffff8a4bc2b0 R12: dffffc0000000000
R13: ffff88806573b503 R14: dffffc0000000000 R15: ffff8880663cca00
FS:  0000000000000000(0000) GS:ffff8880b8700000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fc90a747f98 CR3: 000000000e734000 CR4: 00000000003526f0
DR0: 0000000000000000 DR1: 000000000000002b DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
Call Trace:
 
 
 
  __local_bh_enable_ip+0x1bb/0x200 kernel/softirq.c:382
  spin_unlock_bh include/linux/spinlock.h:396 [inline]
  nsim_dev_trap_report drivers/net/netdevsim/dev.c:820 [inline]
  nsim_dev_trap_report_work+0x75d/0xaa0 drivers/net/netdevsim/dev.c:850
  process_one_work kernel/workqueue.c:3229 [inline]
  process_scheduled_works+0xa63/0x1850 kernel/workqueue.c:3310
  worker_thread+0x870/0xd30 kernel/workqueue.c:3391
  kthread+0x2f0/0x390 kernel/kthread.c:389
  ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147
  ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244</description><pubDate>Thu, 07 Nov 2024 09:42:53 +0000</pubDate></item><item><title>CVE-2024-50156 | drm/msm: Avoid NULL dereference in msm_disp_state_print_regs()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50156</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm: Avoid NULL dereference in msm_disp_state_print_regs()

If the allocation in msm_disp_state_dump_regs() failed then
`block-&gt;state` can be NULL. The msm_disp_state_print_regs() function
_does_ have code to try to handle it with:

  if (*reg)
    dump_addr = *reg;

...but since "dump_addr" is initialized to NULL the above is actually
a noop. The code then goes on to dereference `dump_addr`.

Make the function print "Registers not stored" when it sees a NULL to
solve this. Since we're touching the code, fix
msm_disp_state_print_regs() not to pointlessly take a double-pointer
and properly mark the pointer as `const`.

Patchwork: https://patchwork.freedesktop.org/patch/619657/</description><pubDate>Thu, 07 Nov 2024 09:42:53 +0000</pubDate></item><item><title>CVE-2024-50157 | RDMA/bnxt_re: Avoid CPU lockups due fifo occupancy check loop</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50157</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/bnxt_re: Avoid CPU lockups due fifo occupancy check loop

Driver waits indefinitely for the fifo occupancy to go below a threshold
as soon as the pacing interrupt is received. This can cause soft lockup on
one of the processors, if the rate of DB is very high.

Add a loop count for FPGA and exit the __wait_for_fifo_occupancy_below_th
if the loop is taking more time. Pacing will be continuing until the
occupancy is below the threshold. This is ensured by the checks in
bnxt_re_pacing_timer_exp and further scheduling the work for pacing based
on the fifo occupancy.</description><pubDate>Thu, 07 Nov 2024 09:42:53 +0000</pubDate></item><item><title>CVE-2024-50158 | RDMA/bnxt_re: Fix out of bound check</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50158</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/bnxt_re: Fix out of bound check

Driver exports pacing stats only on GenP5 and P7 adapters. But while
parsing the pacing stats, driver has a check for "rdev-&gt;dbr_pacing".  This
caused a trace when KASAN is enabled.

BUG: KASAN: slab-out-of-bounds in bnxt_re_get_hw_stats+0x2b6a/0x2e00 [bnxt_re]
Write of size 8 at addr ffff8885942a6340 by task modprobe/4809</description><pubDate>Thu, 07 Nov 2024 09:42:54 +0000</pubDate></item><item><title>CVE-2024-50159 | firmware: arm_scmi: Fix the double free in scmi_debugfs_common_setup()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50159</link><description>In the Linux kernel, the following vulnerability has been resolved:

firmware: arm_scmi: Fix the double free in scmi_debugfs_common_setup()

Clang static checker(scan-build) throws below warning：
  |  drivers/firmware/arm_scmi/driver.c:line 2915, column 2
  |        Attempt to free released memory.

When devm_add_action_or_reset() fails, scmi_debugfs_common_cleanup()
will run twice which causes double free of 'dbg-&gt;name'.

Remove the redundant scmi_debugfs_common_cleanup() to fix this problem.</description><pubDate>Thu, 07 Nov 2024 09:42:54 +0000</pubDate></item><item><title>CVE-2024-50160 | ALSA: hda/cs8409: Fix possible NULL dereference</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50160</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: hda/cs8409: Fix possible NULL dereference

If snd_hda_gen_add_kctl fails to allocate memory and returns NULL, then
NULL pointer dereference will occur in the next line.

Since dolphin_fixups function is a hda_fixup function which is not supposed
to return any errors, add simple check before dereference, ignore the fail.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Thu, 07 Nov 2024 09:42:55 +0000</pubDate></item><item><title>CVE-2024-50161 | bpf: Check the remaining info_cnt before repeating btf fields</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50161</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Check the remaining info_cnt before repeating btf fields

When trying to repeat the btf fields for array of nested struct, it
doesn't check the remaining info_cnt. The following splat will be
reported when the value of ret * nelems is greater than BTF_FIELDS_MAX:

  ------------[ cut here ]------------
  UBSAN: array-index-out-of-bounds in ../kernel/bpf/btf.c:3951:49
  index 11 is out of range for type 'btf_field_info [11]'
  CPU: 6 UID: 0 PID: 411 Comm: test_progs ...... 6.11.0-rc4+ #1
  Tainted: [O]=OOT_MODULE
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ...
  Call Trace:
   
   dump_stack_lvl+0x57/0x70
   dump_stack+0x10/0x20
   ubsan_epilogue+0x9/0x40
   __ubsan_handle_out_of_bounds+0x6f/0x80
   ? kallsyms_lookup_name+0x48/0xb0
   btf_parse_fields+0x992/0xce0
   map_create+0x591/0x770
   __sys_bpf+0x229/0x2410
   __x64_sys_bpf+0x1f/0x30
   x64_sys_call+0x199/0x9f0
   do_syscall_64+0x3b/0xc0
   entry_SYSCALL_64_after_hwframe+0x4b/0x53
  RIP: 0033:0x7fea56f2cc5d
  ......
   
  ---[ end trace ]---

Fix it by checking the remaining info_cnt in btf_repeat_fields() before
repeating the btf fields.</description><pubDate>Thu, 07 Nov 2024 09:42:55 +0000</pubDate></item><item><title>CVE-2024-50162 | bpf: devmap: provide rxq after redirect</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50162</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: devmap: provide rxq after redirect

rxq contains a pointer to the device from where
the redirect happened. Currently, the BPF program
that was executed after a redirect via BPF_MAP_TYPE_DEVMAP*
does not have it set.

This is particularly bad since accessing ingress_ifindex, e.g.

SEC("xdp")
int prog(struct xdp_md *pkt)
{
        return bpf_redirect_map(&amp;amp;dev_redirect_map, 0, 0);
}

SEC("xdp/devmap")
int prog_after_redirect(struct xdp_md *pkt)
{
        bpf_printk("ifindex %i", pkt-&gt;ingress_ifindex);
        return XDP_PASS;
}

depends on access to rxq, so a NULL pointer gets dereferenced:

&lt;1&gt;[  574.475170] BUG: kernel NULL pointer dereference, address: 0000000000000000
&lt;1&gt;[  574.475188] #PF: supervisor read access in kernel mode
&lt;1&gt;[  574.475194] #PF: error_code(0x0000) - not-present page
&lt;6&gt;[  574.475199] PGD 0 P4D 0
&lt;4&gt;[  574.475207] Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI
&lt;4&gt;[  574.475217] CPU: 4 UID: 0 PID: 217 Comm: kworker/4:1 Not tainted 6.11.0-rc5-reduced-00859-g780801200300 #23
&lt;4&gt;[  574.475226] Hardware name: Intel(R) Client Systems NUC13ANHi7/NUC13ANBi7, BIOS ANRPL357.0026.2023.0314.1458 03/14/2023
&lt;4&gt;[  574.475231] Workqueue: mld mld_ifc_work
&lt;4&gt;[  574.475247] RIP: 0010:bpf_prog_5e13354d9cf5018a_prog_after_redirect+0x17/0x3c
&lt;4&gt;[  574.475257] Code: cc cc cc cc cc cc cc 80 00 00 00 cc cc cc cc cc cc cc cc f3 0f 1e fa 0f 1f 44 00 00 66 90 55 48 89 e5 f3 0f 1e fa 48 8b 57 20 &lt;48&gt; 8b 52 00 8b 92 e0 00 00 00 48 bf f8 a6 d5 c4 5d a0 ff ff be 0b
&lt;4&gt;[  574.475263] RSP: 0018:ffffa62440280c98 EFLAGS: 00010206
&lt;4&gt;[  574.475269] RAX: ffffa62440280cd8 RBX: 0000000000000001 RCX: 0000000000000000
&lt;4&gt;[  574.475274] RDX: 0000000000000000 RSI: ffffa62440549048 RDI: ffffa62440280ce0
&lt;4&gt;[  574.475278] RBP: ffffa62440280c98 R08: 0000000000000002 R09: 0000000000000001
&lt;4&gt;[  574.475281] R10: ffffa05dc8b98000 R11: ffffa05f577fca40 R12: ffffa05dcab24000
&lt;4&gt;[  574.475285] R13: ffffa62440280ce0 R14: ffffa62440549048 R15: ffffa62440549000
&lt;4&gt;[  574.475289] FS:  0000000000000000(0000) GS:ffffa05f4f700000(0000) knlGS:0000000000000000
&lt;4&gt;[  574.475294] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
&lt;4&gt;[  574.475298] CR2: 0000000000000000 CR3: 000000025522e000 CR4: 0000000000f50ef0
&lt;4&gt;[  574.475303] PKRU: 55555554
&lt;4&gt;[  574.475306] Call Trace:
&lt;4&gt;[  574.475313]  
&lt;4&gt;[  574.475318]  ? __die+0x23/0x70
&lt;4&gt;[  574.475329]  ? page_fault_oops+0x180/0x4c0
&lt;4&gt;[  574.475339]  ? skb_pp_cow_data+0x34c/0x490
&lt;4&gt;[  574.475346]  ? kmem_cache_free+0x257/0x280
&lt;4&gt;[  574.475357]  ? exc_page_fault+0x67/0x150
&lt;4&gt;[  574.475368]  ? asm_exc_page_fault+0x26/0x30
&lt;4&gt;[  574.475381]  ? bpf_prog_5e13354d9cf5018a_prog_after_redirect+0x17/0x3c
&lt;4&gt;[  574.475386]  bq_xmit_all+0x158/0x420
&lt;4&gt;[  574.475397]  __dev_flush+0x30/0x90
&lt;4&gt;[  574.475407]  veth_poll+0x216/0x250 [veth]
&lt;4&gt;[  574.475421]  __napi_poll+0x28/0x1c0
&lt;4&gt;[  574.475430]  net_rx_action+0x32d/0x3a0
&lt;4&gt;[  574.475441]  handle_softirqs+0xcb/0x2c0
&lt;4&gt;[  574.475451]  do_softirq+0x40/0x60
&lt;4&gt;[  574.475458]  
&lt;4&gt;[  574.475461]  
&lt;4&gt;[  574.475464]  __local_bh_enable_ip+0x66/0x70
&lt;4&gt;[  574.475471]  __dev_queue_xmit+0x268/0xe40
&lt;4&gt;[  574.475480]  ? selinux_ip_postroute+0x213/0x420
&lt;4&gt;[  574.475491]  ? alloc_skb_with_frags+0x4a/0x1d0
&lt;4&gt;[  574.475502]  ip6_finish_output2+0x2be/0x640
&lt;4&gt;[  574.475512]  ? nf_hook_slow+0x42/0xf0
&lt;4&gt;[  574.475521]  ip6_finish_output+0x194/0x300
&lt;4&gt;[  574.475529]  ? __pfx_ip6_finish_output+0x10/0x10
&lt;4&gt;[  574.475538]  mld_sendpack+0x17c/0x240
&lt;4&gt;[  574.475548]  mld_ifc_work+0x192/0x410
&lt;4&gt;[  574.475557]  process_one_work+0x15d/0x380
&lt;4&gt;[  574.475566]  worker_thread+0x29d/0x3a0
&lt;4&gt;[  574.475573]  ? __pfx_worker_thread+0x10/0x10
&lt;4&gt;[  574.475580]  ? __pfx_worker_thread+0x10/0x10
&lt;4&gt;[  574.475587]  kthread+0xcd/0x100
&lt;4&gt;[  574.475597]  ? __pfx_kthread+0x10/0x10
&lt;4&gt;[  574.475606]  ret_from_fork+0x31/0x50
&lt;4&gt;[  574.475615]  ? __pfx_kthread+0x10/0x10
&lt;4&gt;[  574.475623]  ret_from_fork_asm+0x1a/0x
---truncated---</description><pubDate>Thu, 07 Nov 2024 09:42:55 +0000</pubDate></item><item><title>CVE-2024-50163 | bpf: Make sure internal and UAPI bpf_redirect flags don&amp;#x27;t overlap</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50163</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Make sure internal and UAPI bpf_redirect flags don't overlap

The bpf_redirect_info is shared between the SKB and XDP redirect paths,
and the two paths use the same numeric flag values in the ri-&gt;flags
field (specifically, BPF_F_BROADCAST == BPF_F_NEXTHOP). This means that
if skb bpf_redirect_neigh() is used with a non-NULL params argument and,
subsequently, an XDP redirect is performed using the same
bpf_redirect_info struct, the XDP path will get confused and end up
crashing, which syzbot managed to trigger.

With the stack-allocated bpf_redirect_info, the structure is no longer
shared between the SKB and XDP paths, so the crash doesn't happen
anymore. However, different code paths using identically-numbered flag
values in the same struct field still seems like a bit of a mess, so
this patch cleans that up by moving the flag definitions together and
redefining the three flags in BPF_F_REDIRECT_INTERNAL to not overlap
with the flags used for XDP. It also adds a BUILD_BUG_ON() check to make
sure the overlap is not re-introduced by mistake.</description><pubDate>Thu, 07 Nov 2024 09:42:56 +0000</pubDate></item><item><title>CVE-2024-50164 | bpf: Fix overloading of MEM_UNINIT&amp;#x27;s meaning</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50164</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix overloading of MEM_UNINIT's meaning

Lonial reported an issue in the BPF verifier where check_mem_size_reg()
has the following code:

    if (!tnum_is_const(reg-&gt;var_off))
        /* For unprivileged variable accesses, disable raw
         * mode so that the program is required to
         * initialize all the memory that the helper could
         * just partially fill up.
         */
         meta = NULL;

This means that writes are not checked when the register containing the
size of the passed buffer has not a fixed size. Through this bug, a BPF
program can write to a map which is marked as read-only, for example,
.rodata global maps.

The problem is that MEM_UNINIT's initial meaning that "the passed buffer
to the BPF helper does not need to be initialized" which was added back
in commit 435faee1aae9 ("bpf, verifier: add ARG_PTR_TO_RAW_STACK type")
got overloaded over time with "the passed buffer is being written to".

The problem however is that checks such as the above which were added later
via 06c1c049721a ("bpf: allow helpers access to variable memory") set meta
to NULL in order force the user to always initialize the passed buffer to
the helper. Due to the current double meaning of MEM_UNINIT, this bypasses
verifier write checks to the memory (not boundary checks though) and only
assumes the latter memory is read instead.

Fix this by reverting MEM_UNINIT back to its original meaning, and having
MEM_WRITE as an annotation to BPF helpers in order to then trigger the
BPF verifier checks for writing to memory.

Some notes: check_arg_pair_ok() ensures that for ARG_CONST_SIZE{,_OR_ZERO}
we can access fn-&gt;arg_type[arg - 1] since it must contain a preceding
ARG_PTR_TO_MEM. For check_mem_reg() the meta argument can be removed
altogether since we do check both BPF_READ and BPF_WRITE. Same for the
equivalent check_kfunc_mem_size_reg().</description><pubDate>Thu, 07 Nov 2024 09:42:56 +0000</pubDate></item><item><title>CVE-2024-50165 | bpf: Preserve param-&amp;gt;string when parsing mount options</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50165</link><description>In the Linux kernel, the following vulnerability has been resolved:

bpf: Preserve param-&gt;string when parsing mount options

In bpf_parse_param(), keep the value of param-&gt;string intact so it can
be freed later. Otherwise, the kmalloc area pointed to by param-&gt;string
will be leaked as shown below:

unreferenced object 0xffff888118c46d20 (size 8):
  comm "new_name", pid 12109, jiffies 4295580214
  hex dump (first 8 bytes):
    61 6e 79 00 38 c9 5c 7e                          any.8.\~
  backtrace (crc e1b7f876):
    [&lt;00000000c6848ac7&gt;] kmemleak_alloc+0x4b/0x80
    [&lt;00000000de9f7d00&gt;] __kmalloc_node_track_caller_noprof+0x36e/0x4a0
    [&lt;000000003e29b886&gt;] memdup_user+0x32/0xa0
    [&lt;0000000007248326&gt;] strndup_user+0x46/0x60
    [&lt;0000000035b3dd29&gt;] __x64_sys_fsconfig+0x368/0x3d0
    [&lt;0000000018657927&gt;] x64_sys_call+0xff/0x9f0
    [&lt;00000000c0cabc95&gt;] do_syscall_64+0x3b/0xc0
    [&lt;000000002f331597&gt;] entry_SYSCALL_64_after_hwframe+0x4b/0x53</description><pubDate>Thu, 07 Nov 2024 09:42:56 +0000</pubDate></item><item><title>CVE-2024-50166 | fsl/fman: Fix refcount handling of fman-related devices</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50166</link><description>In the Linux kernel, the following vulnerability has been resolved:

fsl/fman: Fix refcount handling of fman-related devices

In mac_probe() there are multiple calls to of_find_device_by_node(),
fman_bind() and fman_port_bind() which takes references to of_dev-&gt;dev.
Not all references taken by these calls are released later on error path
in mac_probe() and in mac_remove() which lead to reference leaks.

Add references release.</description><pubDate>Thu, 07 Nov 2024 09:42:57 +0000</pubDate></item><item><title>CVE-2024-50167 | be2net: fix potential memory leak in be_xmit()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50167</link><description>In the Linux kernel, the following vulnerability has been resolved:

be2net: fix potential memory leak in be_xmit()

The be_xmit() returns NETDEV_TX_OK without freeing skb
in case of be_xmit_enqueue() fails, add dev_kfree_skb_any() to fix it.</description><pubDate>Thu, 07 Nov 2024 09:42:57 +0000</pubDate></item><item><title>CVE-2024-50168 | net/sun3_82586: fix potential memory leak in sun3_82586_send_packet()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50168</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/sun3_82586: fix potential memory leak in sun3_82586_send_packet()

The sun3_82586_send_packet() returns NETDEV_TX_OK without freeing skb
in case of skb-&gt;len being too long, add dev_kfree_skb() to fix it.</description><pubDate>Thu, 07 Nov 2024 09:42:57 +0000</pubDate></item><item><title>CVE-2024-50169 | vsock: Update rx_bytes on read_skb()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50169</link><description>In the Linux kernel, the following vulnerability has been resolved:

vsock: Update rx_bytes on read_skb()

Make sure virtio_transport_inc_rx_pkt() and virtio_transport_dec_rx_pkt()
calls are balanced (i.e. virtio_vsock_sock::rx_bytes doesn't lie) after
vsock_transport::read_skb().

While here, also inform the peer that we've freed up space and it has more
credit.

Failing to update rx_bytes after packet is dequeued leads to a warning on
SOCK_STREAM recv():

[  233.396654] rx_queue is empty, but rx_bytes is non-zero
[  233.396702] WARNING: CPU: 11 PID: 40601 at net/vmw_vsock/virtio_transport_common.c:589</description><pubDate>Thu, 07 Nov 2024 09:42:58 +0000</pubDate></item><item><title>CVE-2024-50170 | net: bcmasp: fix potential memory leak in bcmasp_xmit()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50170</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: bcmasp: fix potential memory leak in bcmasp_xmit()

The bcmasp_xmit() returns NETDEV_TX_OK without freeing skb
in case of mapping fails, add dev_kfree_skb() to fix it.</description><pubDate>Thu, 07 Nov 2024 09:42:58 +0000</pubDate></item><item><title>CVE-2024-50171 | net: systemport: fix potential memory leak in bcm_sysport_xmit()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50171</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: systemport: fix potential memory leak in bcm_sysport_xmit()

The bcm_sysport_xmit() returns NETDEV_TX_OK without freeing skb
in case of dma_map_single() fails, add dev_kfree_skb() to fix it.</description><pubDate>Thu, 07 Nov 2024 09:42:59 +0000</pubDate></item><item><title>CVE-2024-50172 | RDMA/bnxt_re: Fix a possible memory leak</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50172</link><description>In the Linux kernel, the following vulnerability has been resolved:

RDMA/bnxt_re: Fix a possible memory leak

In bnxt_re_setup_chip_ctx() when bnxt_qplib_map_db_bar() fails
driver is not freeing the memory allocated for "rdev-&gt;chip_ctx".</description><pubDate>Thu, 07 Nov 2024 09:42:59 +0000</pubDate></item><item><title>CVE-2024-10203 | Agent Arbitrary File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10203</link><description>Zohocorp ManageEngine EndPoint Central versions 11.3.2416.21 and below, 11.3.2428.9 and below are vulnerable to Arbitrary File Deletion in the agent installed machines.</description><pubDate>Thu, 07 Nov 2024 09:33:00 +0000</pubDate></item><item><title>CVE-2024-30142 | HCL BigFix Compliance is affected by a missing secure flag on a cookie</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30142</link><description>HCL BigFix Compliance is affected by a missing secure flag on a cookie.  If a secure flag is not set, cookies may be stolen by an attacker using XSS, resulting in unauthorized access or session cookies could be transferred over an unencrypted channel.</description><pubDate>Thu, 07 Nov 2024 09:20:07 +0000</pubDate></item><item><title>CVE-2024-30141 | HCL BigFix Compliance is vulnerable to the generation of error messages containing sensitive information</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30141</link><description>HCL BigFix Compliance is vulnerable to the generation of error messages containing sensitive information.  Detailed error messages can provide enticement information or expose information about its environment, users, or associated data.</description><pubDate>Thu, 07 Nov 2024 08:47:42 +0000</pubDate></item><item><title>CVE-2024-30140 | HCL BigFix Compliance is affected by unvalidated redirects and forwards</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30140</link><description>HCL BigFix Compliance is affected by unvalidated redirects and forwards.  The HOST header can be manipulated by an attacker and as a result, it can poison the web cache and provide back to users being served the page.</description><pubDate>Thu, 07 Nov 2024 08:33:22 +0000</pubDate></item><item><title>CVE-2024-38286 | Apache Tomcat: Denial of Service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-38286</link><description>Allocation of Resources Without Limits or Throttling vulnerability in Apache Tomcat.

This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.13 through 9.0.89. Older, unsupported versions may also be affected.


Users are recommended to upgrade to version 11.0.0-M21, 10.1.25, or 9.0.90, which fixes the issue.



Apache Tomcat, under certain configurations on any platform, allows an attacker to cause an OutOfMemoryError by abusing the TLS handshake process.</description><pubDate>Thu, 07 Nov 2024 07:42:05 +0000</pubDate></item><item><title>CVE-2024-10027 | WP Booking Calendar &amp;lt; 10.6.3 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10027</link><description>The WP Booking Calendar WordPress plugin before 10.6.3 does not sanitise and escape some of its Widgets settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description><pubDate>Thu, 07 Nov 2024 06:19:34 +0000</pubDate></item><item><title>CVE-2024-10946 | Guangzhou Tuchuang Computer Software Development Interlib Library Cluster Automation Management System SysLib sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10946</link><description>A vulnerability classified as critical has been found in Guangzhou Tuchuang Computer Software Development Interlib Library Cluster Automation Management System up to 2.0.1. This affects an unknown part of the file /interlib/admin/SysLib?cmdACT=inputLIBCODE&amp;amp;mod=batchXSL&amp;amp;xsl=editLIBCODE.xsl&amp;amp;libcodes=&amp;amp;ROWID=. The manipulation of the argument sql leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 07 Nov 2024 03:45:14 +0000</pubDate></item><item><title>CVE-2024-10947 | Guangzhou Tuchuang Computer Software Development Interlib Library Cluster Automation Management System BatchOrder sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10947</link><description>A vulnerability classified as critical was found in Guangzhou Tuchuang Computer Software Development Interlib Library Cluster Automation Management System up to 2.0.1. This vulnerability affects unknown code of the file /interlib/order/BatchOrder?cmdACT=admin_order&amp;amp;xsl=adminOrder_OrderList.xsl. The manipulation of the argument bookrecno leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Thu, 07 Nov 2024 03:45:15 +0000</pubDate></item><item><title>CVE-2024-10922 | Featured Posts Scroll &amp;lt;= 1.25 - Cross-Site Request Forgery to Stored Cross-Site Scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10922</link><description>The Featured Posts Scroll plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.25. This is due to missing or incorrect nonce validation on a function. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description><pubDate>Thu, 07 Nov 2024 02:36:01 +0000</pubDate></item><item><title>CVE-2024-51990 | Path traversal via crafted Git repositories in jj</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51990</link><description>jj, or Jujutsu, is a Git-compatible VCS written in rust. In affected versions specially crafted Git repositories can cause `jj` to write files outside the clone. This issue has been addressed in version 0.23.0. Users are advised to upgrade. Users unable to upgrade should avoid cloning repos from unknown sources.</description><pubDate>Thu, 07 Nov 2024 01:26:37 +0000</pubDate></item><item><title>CVE-2024-51409 | Buffer Overflow vulnerability in Tenda O3 v.1.0.0.5 allows a remote attacker to cause a denial of service via a network packet in a fixed fo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51409</link><description>Buffer Overflow vulnerability in Tenda O3 v.1.0.0.5 allows a remote attacker to cause a denial of service via a network packet in a fixed format to a router running the corresponding version of the firmware.</description><pubDate>Wed, 06 Nov 2024 23:11:03 +0000</pubDate></item><item><title>CVE-2024-48325 | Portabilis i-Educar 2.8.0 is vulnerable to SQL Injection in the "getDocuments" function of the "InstituicaoDocumentacaoController" class. Th...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-48325</link><description>Portabilis i-Educar 2.8.0 is vulnerable to SQL Injection in the "getDocuments" function of the "InstituicaoDocumentacaoController" class. The "instituicao_id" parameter in "/module/Api/InstituicaoDocumentacao?oper=get&amp;amp;resource=getDocuments&amp;amp;instituicao_id" is not properly sanitized, allowing an unauthenticated remote attacker to inject malicious SQL commands.</description><pubDate>Wed, 06 Nov 2024 22:53:16 +0000</pubDate></item><item><title>CVE-2024-10927 | MonoCMS Account Information Page account.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10927</link><description>A vulnerability was found in MonoCMS up to 20240528. It has been classified as problematic. Affected is an unknown function of the file /monofiles/account.php of the component Account Information Page. The manipulation of the argument userid leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Wed, 06 Nov 2024 22:43:27 +0000</pubDate></item><item><title>CVE-2024-10928 | MonoCMS Posts Page opensaved.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10928</link><description>A vulnerability was found in MonoCMS up to 20240528. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file /monofiles/opensaved.php of the component Posts Page. The manipulation of the argument filtcategory/filtstatus leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Wed, 06 Nov 2024 22:43:28 +0000</pubDate></item><item><title>CVE-2024-10926 | IBPhoenix ibWebAdmin Tabelas Section toggle_fold_panel.php cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10926</link><description>A vulnerability was found in IBPhoenix ibWebAdmin up to 1.0.2 and classified as problematic. This issue affects some unknown processing of the file /toggle_fold_panel.php of the component Tabelas Section. The manipulation of the argument p leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Wed, 06 Nov 2024 21:19:36 +0000</pubDate></item><item><title>CVE-2024-50340 | Ability to change environment from query in symfony/runtime</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50340</link><description>symfony/runtime is a module for the Symphony PHP framework which enables decoupling PHP applications from global state. When the `register_argv_argc` php directive is set to `on` , and users call any URL with a special crafted query string, they are able to change the environment or debug mode used by the kernel when handling the request. As of versions 5.4.46, 6.4.14, and 7.1.7 the `SymfonyRuntime` now ignores the `argv` values for non-SAPI PHP runtimes. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Wed, 06 Nov 2024 21:19:36 +0000</pubDate></item><item><title>CVE-2024-50341 | Security::login does not take into account custom user_checker in symfony/security-bundle</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50341</link><description>symfony/security-bundle is a module for the Symphony PHP framework which provides a tight integration of the Security component into the Symfony full-stack framework. The custom `user_checker` defined on a firewall is not called when Login Programmaticaly with the `Security::login` method, leading to  unwanted login. As of versions 6.4.10, 7.0.10 and 7.1.3 the `Security::login` method now ensure to call the configured `user_checker`. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Wed, 06 Nov 2024 21:19:37 +0000</pubDate></item><item><title>CVE-2024-50342 | Internal address and port enumeration allowed by NoPrivateNetworkHttpClient in symfony/http-client</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50342</link><description>symfony/http-client is a module for the Symphony PHP framework which provides powerful methods to fetch HTTP resources synchronously or asynchronously. When using the `NoPrivateNetworkHttpClient`, some internal information is still leaking during host resolution, which leads to possible IP/port enumeration. As of versions 5.4.46, 6.4.14, and 7.1.7 the `NoPrivateNetworkHttpClient` now filters blocked IPs earlier to prevent such leaks. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Wed, 06 Nov 2024 21:19:37 +0000</pubDate></item><item><title>CVE-2024-50343 | Incorrect response from Validator when input ends with `\n` in symfony/validator</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50343</link><description>symfony/validator is a module for the Symphony PHP framework which provides tools to validate values. It is possible to trick a `Validator` configured with a regular expression using the `$` metacharacters, with an input ending with `\n`. Symfony as of versions 5.4.43, 6.4.11, and 7.1.4 now uses the `D` regex modifier to match the entire input. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Wed, 06 Nov 2024 21:19:37 +0000</pubDate></item><item><title>CVE-2024-50345 | Open redirect via browser-sanitized URLs in symfony/http-foundation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50345</link><description>symfony/http-foundation is a module for the Symphony PHP framework which defines an object-oriented layer for the HTTP specification. The `Request` class, does not parse URI with special characters the same way browsers do. As a result, an attacker can trick a validator relying on the `Request` class to redirect users to another domain. The `Request::create` methods now assert the URI does not contain invalid characters as defined by https://url.spec.whatwg.org/. This issue has been patched in versions 5.4.46, 6.4.14, and 7.1.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Wed, 06 Nov 2024 21:19:38 +0000</pubDate></item><item><title>CVE-2024-51736 | Command execution hijack on Windows with Process class in symfony/process</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51736</link><description>Symphony process is a module for the Symphony PHP framework which executes commands in sub-processes. On Windows, when an executable file named `cmd.exe` is located in the current working directory it will be called by the `Process` class when preparing command arguments, leading to possible hijacking. This issue has been addressed in release versions 5.4.46, 6.4.14, and 7.1.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Wed, 06 Nov 2024 20:57:35 +0000</pubDate></item><item><title>CVE-2024-10941 | A malicious website could have included an iframe with an malformed URI resulting in a non-exploitable browser crash. This vulnerability aff...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10941</link><description>A malicious website could have included an iframe with an malformed URI resulting in a non-exploitable browser crash. This vulnerability affects Firefox &lt; 126.</description><pubDate>Wed, 06 Nov 2024 20:25:39 +0000</pubDate></item><item><title>CVE-2024-51754 | Unguarded calls to __toString() when nesting an object into an array in Twig</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51754</link><description>Twig is a template language for PHP. In a sandbox, an attacker can call `__toString()` on an object even if the `__toString()` method is not allowed by the security policy when the object is part of an array or an argument list (arguments to a function or a filter for instance). This issue has been patched in versions 3.11.2 and 3.14.1. All users are advised to upgrade. There are no known workarounds for this issue.</description><pubDate>Wed, 06 Nov 2024 19:40:21 +0000</pubDate></item><item><title>CVE-2024-51755 | Unguarded calls to __isset() and to array-accesses when the sandbox is enabled in Twig</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51755</link><description>Twig is a template language for PHP. In a sandbox, and attacker can access attributes of Array-like objects as they were not checked by the security policy. They are now checked via the property policy and the `__isset()` method is now called after the security check. This is a BC break. This issue has been patched in versions 3.11.2 and 3.14.1. All users are advised to upgrade. There are no known workarounds for this issue.</description><pubDate>Wed, 06 Nov 2024 19:40:21 +0000</pubDate></item><item><title>CVE-2024-51757 | Fixes security vulnerability that allowed for server side code to be executed by a &amp;lt;script&amp;gt; tag</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51757</link><description>happy-dom is a JavaScript implementation of a web browser without its graphical user interface. Versions of happy-dom prior to 15.10.1 may execute code on the host via a script tag. This would execute code in the user context of happy-dom. Users are advised to upgrade to version 15.10.1. There are no known workarounds for this vulnerability.</description><pubDate>Wed, 06 Nov 2024 19:30:23 +0000</pubDate></item><item><title>CVE-2024-51751 | Arbitrary file read with File and UploadButton components in Gradio</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51751</link><description>Gradio is an open-source Python package designed to enable quick builds of a demo or web application. If File or UploadButton components are used as a part of Gradio application to preview file content, an attacker with access to the application might abuse these components to read arbitrary files from the application server. This issue has been addressed in release version 5.5.0 and all users are advised to upgrade. There are no known workarounds for this vulnerability.</description><pubDate>Wed, 06 Nov 2024 19:20:08 +0000</pubDate></item><item><title>CVE-2024-51988 | HTTP API&amp;#x27;s queue deletion endpoint does not verify that the user has a required permission</title><link>https://www.cve.org/CVERecord?id=CVE-2024-51988</link><description>RabbitMQ is a feature rich, multi-protocol messaging and streaming broker. In affected versions queue deletion via the HTTP API was not verifying the `configure` permission of the user. Users who had all of the following: 1. Valid credentials, 2. Some permissions for the target virtual host &amp; 3. HTTP API access. could delete queues it had no (deletion) permissions for. This issue has been addressed in version 3.12.11 of the open source rabbitMQ release and in versions 1.5.2, 3.13.0, and 4.0.0 of the tanzu release. Users are advised to upgrade. Users unable to upgrade may disable management plugin and use, for example, Prometheus and Grafana for monitoring.</description><pubDate>Wed, 06 Nov 2024 19:20:09 +0000</pubDate></item><item><title>CVE-2024-20418 | Cisco Ultra-Reliable Wireless Backhaul Software Command Injection Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20418</link><description>A vulnerability in the web-based management interface of Cisco Unified Industrial Wireless Software for Cisco Ultra-Reliable Wireless Backhaul (URWB) Access Points could allow an unauthenticated, remote attacker to perform command injection attacks with root privileges on the underlying operating system.

This vulnerability is due to improper validation of input to the web-based management interface. An attacker could exploit this vulnerability by sending crafted HTTP requests to the web-based management interface of an affected system. A successful exploit could allow the attacker to execute arbitrary commands with root privileges on the underlying operating system of the affected device.</description><pubDate>Wed, 06 Nov 2024 17:19:25 +0000</pubDate></item><item><title>CVE-2024-10318 | NGINX OpenID Connect Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10318</link><description>A session fixation issue was discovered in the NGINX OpenID Connect reference implementation, where a nonce was not checked at login time. This flaw allows an attacker to fix a victim's session to an attacker-controlled account. As a result, although the attacker cannot log in as the victim, they can force the session to associate it with the attacker-controlled account, leading to potential misuse of the victim's session.</description><pubDate>Wed, 06 Nov 2024 16:58:25 +0000</pubDate></item><item><title>CVE-2024-20511 | Cisco Unified Communications Manager Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20511</link><description>A vulnerability in the web-based management interface of Cisco Unified Communications Manager (Unified CM) and Cisco Unified Communications Manager Session Management Edition (Unified CM SME) could allow an unauthenticated, remote attacker to conduct a cross-site scripting (XSS) attack against a user of the interface.

This vulnerability exists because the web-based management interface does not properly validate user-supplied input. An attacker could exploit this vulnerability by persuading a user of the interface to click a crafted link. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.</description><pubDate>Wed, 06 Nov 2024 16:48:56 +0000</pubDate></item><item><title>CVE-2024-20514 | Cisco Evolved Programmable Network Manager and Cisco Prime Infrastructure Stored Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20514</link><description>A vulnerability in the web-based management interface of Cisco Evolved Programmable Network Manager (EPNM) and Cisco Prime Infrastructure could allow an authenticated, low-privileged, remote attacker to conduct a stored cross-site scripting (XSS) attack against a user of the interface.

This vulnerability exists because the web-based management interface does not properly validate user-supplied input. An attacker could exploit this vulnerability by injecting malicious code into a specific page of the interface. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive browser-based information. To exploit this vulnerability, the attacker must have at least a low-privileged account on an affected device.</description><pubDate>Wed, 06 Nov 2024 16:48:56 +0000</pubDate></item><item><title>CVE-2024-20525 | Cisco Identity Services Engine Reflected Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20525</link><description>A vulnerability in the web-based management interface of Cisco ISE could allow an unauthenticated, remote attacker to conduct an XSS attack against a user of the interface.

This vulnerability exists because the web-based management interface does not properly validate user-supplied input. An attacker could exploit this vulnerability by persuading a user of the interface to click a crafted link. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.</description><pubDate>Wed, 06 Nov 2024 16:48:56 +0000</pubDate></item><item><title>CVE-2024-20527 | Cisco Identity Services Engine Arbitrary File Read and Delete Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20527</link><description>A vulnerability in the API of Cisco ISE could allow an authenticated, remote attacker to read and delete arbitrary files on an affected device. To exploit this vulnerability, the attacker would need valid Super Admin credentials.

This vulnerability is due to insufficient validation of user-supplied parameters in API requests. An attacker could exploit this vulnerability by sending a crafted API request to an affected device. A successful exploit could allow the attacker to read or delete arbitrary files on the underlying operating system.</description><pubDate>Wed, 06 Nov 2024 16:48:57 +0000</pubDate></item><item><title>CVE-2024-20528 | Cisco Identity Services Engine Path Traversal Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20528</link><description>A vulnerability in the API of Cisco ISE could allow an authenticated, remote attacker to upload files to arbitrary locations on the underlying operating system of an affected device. To exploit this vulnerability, an attacker would need valid Super&amp;nbsp;Admin credentials.

This vulnerability is due to insufficient validation of user-supplied parameters in API requests. An attacker could exploit this vulnerability by sending a crafted API request to an affected device. A successful exploit could allow the attacker to upload custom files to arbitrary locations on the underlying operating system, execute arbitrary code, and elevate privileges to root.</description><pubDate>Wed, 06 Nov 2024 16:48:57 +0000</pubDate></item><item><title>CVE-2024-20529 | Cisco Identity Services Engine Arbitrary File Read and Delete Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20529</link><description>A vulnerability in the API of Cisco ISE could allow an authenticated, remote attacker to read and delete arbitrary files on an affected device. To exploit this vulnerability, the attacker would need valid Super Admin credentials.

This vulnerability is due to insufficient validation of user-supplied parameters in API requests. An attacker could exploit this vulnerability by sending a crafted API request to an affected device. A successful exploit could allow the attacker to read or delete arbitrary files on the underlying operating system.</description><pubDate>Wed, 06 Nov 2024 16:48:57 +0000</pubDate></item><item><title>CVE-2024-20530 | Cisco Identity Services Engine Reflected Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20530</link><description>A vulnerability in the web-based management interface of Cisco ISE could allow an unauthenticated, remote attacker to conduct an XSS attack against a user of the interface.

This vulnerability exists because the web-based management interface does not properly validate user-supplied input. An attacker could exploit this vulnerability by persuading a user of the interface to click a crafted link. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.</description><pubDate>Wed, 06 Nov 2024 16:48:58 +0000</pubDate></item><item><title>CVE-2024-20531 | Cisco Identity Services Engine XML External Entity Injection Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20531</link><description>A vulnerability in the API of Cisco ISE could allow an authenticated, remote attacker to read arbitrary files on the underlying operating system of an affected device and conduct a server-side request forgery (SSRF) attack through an affected device. To exploit this vulnerability, the attacker would need valid Super Admin credentials.

This vulnerability is due to improper handling of XML External Entity (XXE) entries when parsing XML input. An attacker could exploit this vulnerability by sending a crafted API request to an affected device. A successful exploit could allow the attacker to read arbitrary files on the underlying operating system or conduct an SSRF attack through the affected device.</description><pubDate>Wed, 06 Nov 2024 16:48:58 +0000</pubDate></item><item><title>CVE-2024-20532 | Cisco Identity Services Engine Arbitrary File Read and Delete Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20532</link><description>A vulnerability in the API of Cisco ISE could allow an authenticated, remote attacker to read and delete arbitrary files on an affected device. To exploit this vulnerability, the attacker would need valid Super Admin credentials.

This vulnerability is due to insufficient validation of user-supplied parameters in API requests. An attacker could exploit this vulnerability by sending a crafted API request to an affected device. A successful exploit could allow the attacker to read or delete arbitrary files on the underlying operating system.</description><pubDate>Wed, 06 Nov 2024 16:48:58 +0000</pubDate></item><item><title>CVE-2024-20533 | Cisco IP Phone 6800, 7800, 8800, and 9800 Series with Multiplatform Firmware Stored Cross-Site Scripting Vulnerabilities</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20533</link><description>Multiple vulnerabilities in the web UI of Cisco Desk Phone 9800 Series, Cisco IP Phone 6800, 7800, and 8800 Series, and Cisco Video Phone 8875 with Cisco Multiplatform Firmware could allow an authenticated, remote attacker to conduct stored cross-site scripting (XSS) attacks against users.

These vulnerabilities exist because the web UI of an affected device does not properly validate user-supplied input. An attacker could exploit these vulnerabilities by injecting malicious code into specific pages of the interface. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.
Note: To exploit these vulnerabilities, Web Access must be enabled on the phone and the attacker must have Admin credentials on the device. Web Access is disabled by default.</description><pubDate>Wed, 06 Nov 2024 16:48:59 +0000</pubDate></item><item><title>CVE-2024-20534 | Cisco IP Phone 6800, 7800, 8800, and 9800 Series with Multiplatform Firmware Stored Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20534</link><description>Multiple vulnerabilities in the web UI of Cisco Desk Phone 9800 Series, Cisco IP Phone 6800, 7800, and 8800 Series, and Cisco Video Phone 8875 with Cisco Multiplatform Firmware could allow an authenticated, remote attacker to conduct stored cross-site scripting (XSS) attacks against users.

These vulnerabilities exist because the web UI of an affected device does not properly validate user-supplied input. An attacker could exploit these vulnerabilities by injecting malicious code into specific pages of the interface. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.
Note: To exploit these vulnerabilities, Web Access must be enabled on the phone and the attacker must have Admin credentials on the device. Web Access is disabled by default.</description><pubDate>Wed, 06 Nov 2024 16:48:59 +0000</pubDate></item><item><title>CVE-2024-20536 | Cisco Nexus Dashboard Fabric Controller SQL Injection Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20536</link><description>A vulnerability in a REST API endpoint and web-based management interface of Cisco Nexus Dashboard Fabric Controller (NDFC) could allow an authenticated, remote attacker with read-only privileges to execute arbitrary SQL commands on an affected device.

This vulnerability is due to insufficient validation of user-supplied input. An attacker could exploit this vulnerability by sending a crafted request to a specific REST API endpoint or web-based management interface. A successful exploit could allow the attacker to read, modify, or delete arbitrary data on an internal database, which could affect the availability of the device.&amp;nbsp;</description><pubDate>Wed, 06 Nov 2024 16:49:00 +0000</pubDate></item><item><title>CVE-2024-20537 | Cisco Identity Services Engine Authorization Bypass Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20537</link><description>A vulnerability in the web-based management interface of Cisco ISE could allow an authenticated, remote attacker to bypass the authorization mechanisms for specific administrative functions.

This vulnerability is due to a lack of server-side validation of Administrator permissions. An attacker could exploit this vulnerability by submitting a crafted HTTP request to an affected system. A successful exploit could allow the attacker to conduct administrative functions beyond their intended access level. To exploit this vulnerability, an attacker would need Read-Only Administrator credentials.</description><pubDate>Wed, 06 Nov 2024 16:49:00 +0000</pubDate></item><item><title>CVE-2024-20538 | Cisco Identity Services Engine Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20538</link><description>A vulnerability in the web-based management interface of Cisco ISE could allow an unauthenticated, remote attacker to conduct an XSS attack against a user of the interface.

This vulnerability exists because the web-based management interface does not sufficiently validate user-supplied input. An attacker could exploit this vulnerability by persuading a user of the interface on an affected system to click a crafted link. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.</description><pubDate>Wed, 06 Nov 2024 16:49:00 +0000</pubDate></item><item><title>CVE-2024-20539 | Cisco Identity Services Engine Stored Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20539</link><description>A vulnerability in the web-based management interface of Cisco ISE could allow an authenticated, remote attacker to conduct a stored XSS attack against a user of the interface.

This vulnerability exists because the web-based management interface does not sufficiently validate user-supplied input. An attacker could exploit this vulnerability by injecting malicious code into specific pages of the interface. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information. To exploit this vulnerability, the attacker would need valid administrative credentials on an affected device.</description><pubDate>Wed, 06 Nov 2024 16:49:01 +0000</pubDate></item><item><title>CVE-2024-20540 | Cisco Unified Contact Center Management Portal Stored Cross-Site Scripting Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20540</link><description>A vulnerability in the web-based management interface of Cisco Unified Contact Center Management Portal (Unified CCMP) could allow an authenticated, remote attacker with low privileges to conduct a stored cross-site scripting (XSS) attack against a user of the interface.

This vulnerability exists because the web-based management interface does not properly validate user-supplied input. An attacker could exploit this vulnerability by injecting malicious code into a specific page of the interface. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive browser-based information. To exploit this vulnerability, the attacker must have at least a Supervisor role on an affected device.</description><pubDate>Wed, 06 Nov 2024 16:49:01 +0000</pubDate></item><item><title>CVE-2024-50637 | UnoPim 0.1.3 and below is vulnerable to Cross Site Scripting (XSS) in the Create User function. ¶¶ The vulnerability allows attackers to per...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-50637</link><description>UnoPim 0.1.3 and below is vulnerable to Cross Site Scripting (XSS) in the Create User function. ¶¶ The vulnerability allows attackers to perform XSS in SVG file extension, which can be used to stealing cookies.</description><pubDate>Wed, 06 Nov 2024 16:49:01 +0000</pubDate></item><item><title>CVE-2024-20371 | Cisco Nexus 3550-F Switches Access Control List Programming Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20371</link><description>A vulnerability in the access control list (ACL) programming of Cisco Nexus 3550-F Switches could allow an unauthenticated, remote attacker to send traffic that should be blocked to the management interface of an affected device.&amp;nbsp;

This vulnerability exists because ACL deny rules are not properly enforced at the time of device reboot. An attacker could exploit this vulnerability by attempting to send traffic to the management interface of an affected device. A successful exploit could allow the attacker to send traffic to the management interface of the affected device.</description><pubDate>Wed, 06 Nov 2024 16:35:38 +0000</pubDate></item><item><title>CVE-2024-20445 | Cisco IP Phone 7800, 8800, and 9800 Series Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20445</link><description>A vulnerability in the web UI of Cisco Desk Phone 9800 Series, Cisco IP Phone 7800 and 8800 Series, and Cisco Video Phone 8875 could allow an unauthenticated, remote attacker to access sensitive information on an affected device.

This vulnerability is due to improper storage of sensitive information within the web UI of Session Initiation Protocol (SIP)-based phone loads. An attacker could exploit this vulnerability by browsing to the IP address of a device that has Web Access enabled. A successful exploit could allow the attacker to access sensitive information, including incoming and outgoing call records.
Note: Web Access is disabled by default.</description><pubDate>Wed, 06 Nov 2024 16:35:38 +0000</pubDate></item><item><title>CVE-2024-20457 | Cisco Unified Communications Manager IM &amp;amp; Presence Service Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20457</link><description>A vulnerability in the logging component of Cisco Unified Communications Manager IM &amp;amp; Presence Service (Unified CM IM&amp;amp;P) could allow an authenticated, remote attacker to view sensitive information in clear text on an affected system.

This vulnerability is due to the storage of unencrypted credentials in certain logs. An attacker could exploit this vulnerability by accessing the logs on an affected system and obtaining credentials that they may not normally have access to. A successful exploit could allow the attacker to access sensitive information from the device.</description><pubDate>Wed, 06 Nov 2024 16:35:39 +0000</pubDate></item><item><title>CVE-2024-20476 | Cisco Identity Services Engine Authorization Bypass Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20476</link><description>A vulnerability in the web-based management interface of Cisco ISE could allow an authenticated, remote attacker to bypass the authorization mechanisms for specific file management functions.

This vulnerability is due to lack of server-side validation of Administrator permissions. An attacker could exploit this vulnerability by submitting a crafted HTTP request to an affected system. A successful exploit could allow the attacker to upload files to a location that should be restricted. To exploit this vulnerability, an attacker would need valid Read-Only Administrator&amp;nbsp;credentials.</description><pubDate>Wed, 06 Nov 2024 16:35:39 +0000</pubDate></item><item><title>CVE-2024-20484 | Cisco Enterprise Chat and Email Denial of Service Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20484</link><description>A vulnerability in the External Agent Assignment Service (EAAS) feature of Cisco Enterprise Chat and Email (ECE) could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device.

This vulnerability is due to insufficient validation of Media Routing Peripheral Interface Manager (MR PIM) traffic that is received by an affected device. An attacker could exploit this vulnerability by sending crafted MR PIM traffic to an affected device. A successful exploit could allow the attacker to trigger a failure on the MR PIM connection between Cisco ECE and Cisco Unified Contact Center Enterprise (CCE), leading to a DoS condition on EAAS that would prevent customers from starting chat, callback, or delayed callback sessions. Note: When the attack traffic stops, the EAAS process must be manually restarted to restore normal operation. To restart the process in the System Console, choose Shared Resources &amp;gt; Services &amp;gt; Unified CCE &amp;gt; EAAS, then click Start.</description><pubDate>Wed, 06 Nov 2024 16:35:40 +0000</pubDate></item><item><title>CVE-2024-20487 | Cisco Identity Services Engine Stored Cross-Site Scripting Vulnerabiliy</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20487</link><description>A vulnerability in the web-based management interface of Cisco ISE could allow an authenticated, remote attacker to conduct a stored XSS attack against a user of the interface.

This vulnerability is due to insufficient validation of user-supplied input by the web-based management interface of an affected system. An attacker could exploit this vulnerability by injecting malicious code into specific pages of the interface. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information. To exploit this vulnerability, the attacker must have at least a low-privileged account on an affected device.</description><pubDate>Wed, 06 Nov 2024 16:35:40 +0000</pubDate></item><item><title>CVE-2024-20504 | Cisco Secure Email and Web Manager, Secure Email Gateway, and Secure Web Appliance Stored Cross-Site Scripting Vulnerabilities</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20504</link><description>A vulnerability in the web-based management interface of Cisco AsyncOS Software for Cisco Secure Email and Web Manager, Secure Email Gateway, and Secure Web Appliance could allow an authenticated, remote attacker to conduct a stored cross-site scripting (XSS) attack against a user of the interface.

This vulnerability is due to insufficient validation of user input. An attacker could exploit this vulnerability by persuading a user of an affected interface to click a crafted link. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.</description><pubDate>Wed, 06 Nov 2024 16:35:40 +0000</pubDate></item><item><title>CVE-2024-20507 | Cisco Meeting Management Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20507</link><description>A vulnerability in the logging subsystem of Cisco Meeting Management could allow an authenticated, remote attacker to view sensitive information in clear text on an affected system.

This vulnerability is due to improper storage of sensitive information within the web-based management interface of an affected device. An attacker could exploit this vulnerability by logging in to the web-based management interface. A successful exploit could allow the attacker to view sensitive data that is stored on the affected device.</description><pubDate>Wed, 06 Nov 2024 16:35:41 +0000</pubDate></item><item><title>CVE-2024-10826 | Use after free in Family Experiences in Google Chrome on Android prior to 130.0.6723.116 allowed a remote attacker to potentially exploit he...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10826</link><description>Use after free in Family Experiences in Google Chrome on Android prior to 130.0.6723.116 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 06 Nov 2024 16:35:42 +0000</pubDate></item><item><title>CVE-2024-10827 | Use after free in Serial in Google Chrome prior to 130.0.6723.116 allowed a remote attacker to potentially exploit heap corruption via a cra...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10827</link><description>Use after free in Serial in Google Chrome prior to 130.0.6723.116 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)</description><pubDate>Wed, 06 Nov 2024 16:35:42 +0000</pubDate></item><item><title>CVE-2024-10919 | didi Super-Jacoco triggerUnitCover os command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10919</link><description>A vulnerability has been found in didi Super-Jacoco 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file /cov/triggerUnitCover. The manipulation of the argument uuid leads to os command injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Wed, 06 Nov 2024 16:12:10 +0000</pubDate></item><item><title>CVE-2024-10920 | mariazevedo88 travels-java-api JWT Secret JwtAuthenticationTokenFilter.java doFilterInternal hard-coded key</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10920</link><description>A vulnerability was found in mariazevedo88 travels-java-api up to 5.0.1 and classified as problematic. Affected by this issue is the function doFilterInternal of the file travels-java-api-master\src\main\java\io\github\mariazevedo88\travelsjavaapi\filters\JwtAuthenticationTokenFilter.java of the component JWT Secret Handler. The manipulation leads to use of hard-coded cryptographic key&#13; . The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used.</description><pubDate>Wed, 06 Nov 2024 16:12:11 +0000</pubDate></item><item><title>CVE-2024-10916 | D-Link DNS-320/DNS-320LW/DNS-325/DNS-340L HTTP GET Request info.xml information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10916</link><description>A vulnerability classified as problematic has been found in D-Link DNS-320, DNS-320LW, DNS-325 and DNS-340L up to 20241028. This affects an unknown part of the file /xml/info.xml of the component HTTP GET Request Handler. The manipulation leads to information disclosure. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</description><pubDate>Wed, 06 Nov 2024 15:10:35 +0000</pubDate></item><item><title>CVE-2024-6861 | Foreman: foreman: oauth secret exposure via unauthenticated access to the graphql api</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6861</link><description>A disclosure of sensitive information flaw was found in foreman via the GraphQL API. If the introspection feature is enabled, it is possible for attackers to retrieve sensitive admin authentication keys which could result in a compromise of the entire product's API.</description><pubDate>Wed, 06 Nov 2024 15:10:36 +0000</pubDate></item><item><title>CVE-2024-10082 | CodeChecker is an analyzer tooling, defect database and viewer extension for the Clang Static Analyzer and Clang Tidy. 
Authentication metho...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10082</link><description>CodeChecker is an analyzer tooling, defect database and viewer extension for the Clang Static Analyzer and Clang Tidy. 
Authentication method confusion allows logging in as the built-in root user from an external service. The built-in root user up until 6.24.1 is generated in a weak manner, cannot be disabled, and has universal access.This vulnerability allows an attacker who can create an account on an enabled external authentication service, to log in as the root user, and access and control everything that can be controlled via the web interface. The attacker needs to acquire the username of the root user to be successful.

This issue affects CodeChecker: through 6.24.1.</description><pubDate>Wed, 06 Nov 2024 14:52:47 +0000</pubDate></item><item><title>CVE-2024-10081 | CodeChecker is an analyzer tooling, defect database and viewer extension for the Clang Static Analyzer and Clang Tidy. 
Authentication bypas...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10081</link><description>CodeChecker is an analyzer tooling, defect database and viewer extension for the Clang Static Analyzer and Clang Tidy. 
Authentication bypass occurs when the API URL ends with Authentication. This bypass allows superuser access to all API endpoints other than Authentication. These endpoints include the ability to add, edit, and remove products, among others. All endpoints, apart from the /Authentication is affected by the vulnerability.

This issue affects CodeChecker: through 6.24.1.</description><pubDate>Wed, 06 Nov 2024 14:42:46 +0000</pubDate></item><item><title>CVE-2024-35146 | IBM Maximo Application Suite cross-site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-35146</link><description>IBM Maximo Application Suite - Monitor Component 8.10.11, 8.11.8, and 9.0.0 is vulnerable to cross-site scripting. This vulnerability allows an unauthenticated attacker to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.</description><pubDate>Wed, 06 Nov 2024 14:29:52 +0000</pubDate></item><item><title>CVE-2020-11859 | Potential Cross Site Scripting vulnerability in OpenText iManager</title><link>https://www.cve.org/CVERecord?id=CVE-2020-11859</link><description>Improper Input Validation vulnerability in OpenText iManager allows Cross-Site Scripting (XSS). This issue affects iManager before 3.2.3</description><pubDate>Wed, 06 Nov 2024 14:29:53 +0000</pubDate></item><item><title>CVE-2024-10915 | D-Link DNS-320/DNS-320LW/DNS-325/DNS-340L account_mgr.cgi cgi_user_add os command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10915</link><description>A vulnerability was found in D-Link DNS-320, DNS-320LW, DNS-325 and DNS-340L up to 20241028. It has been rated as critical. Affected by this issue is the function cgi_user_add of the file /cgi-bin/account_mgr.cgi?cmd=cgi_user_add. The manipulation of the argument group leads to os command injection. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used.</description><pubDate>Wed, 06 Nov 2024 14:07:58 +0000</pubDate></item><item><title>CVE-2024-10914 | D-Link DNS-320/DNS-320LW/DNS-325/DNS-340L account_mgr.cgi cgi_user_add os command injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10914</link><description>A vulnerability was found in D-Link DNS-320, DNS-320LW, DNS-325 and DNS-340L up to 20241028. It has been declared as critical. Affected by this vulnerability is the function cgi_user_add of the file /cgi-bin/account_mgr.cgi?cmd=cgi_user_add. The manipulation of the argument name leads to os command injection. The attack can be launched remotely. The complexity of an attack is rather high. The exploitation appears to be difficult. The exploit has been disclosed to the public and may be used.</description><pubDate>Wed, 06 Nov 2024 13:41:56 +0000</pubDate></item><item><title>CVE-2024-10186 | Event Post &amp;lt;= 5.9.6 - Authenticated (Contributor+) Stored Cross-Site Scripting via events_cal Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10186</link><description>The Event post plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's events_cal shortcode in all versions up to, and including, 5.9.6 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 06 Nov 2024 13:03:05 +0000</pubDate></item><item><title>CVE-2024-10168 | Active Products Tables for WooCommerce. Use constructor to create tables &amp;lt;= 1.0.6.4 - Authenticated (Contributor+) Stored Cross-Site Scripting via woot_button Shortcode</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10168</link><description>The Active Products Tables for WooCommerce. Use constructor to create tables plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's woot_button shortcode in all versions up to, and including, 1.0.6.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 06 Nov 2024 11:37:11 +0000</pubDate></item><item><title>CVE-2024-8323 | Pricing Tables WordPress Plugin – Easy Pricing Tables &amp;lt;= 3.2.6 - Authenticated (Contributor+) Stored Cross-Site Scripting via fontFamily Attribute</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8323</link><description>The Pricing Tables WordPress Plugin – Easy Pricing Tables plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘fontFamily’ attribute in all versions up to, and including, 3.2.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 06 Nov 2024 11:37:12 +0000</pubDate></item><item><title>CVE-2024-10715 | MapPress Maps for WordPress &amp;lt;= 2.94.1 - Authenticated (Contributor+) Stored Cross-Site Scripting via Map Block</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10715</link><description>The MapPress Maps for WordPress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Map block in all versions up to, and including, 2.94.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 06 Nov 2024 11:13:07 +0000</pubDate></item><item><title>CVE-2024-9902 | Ansible-core: ansible-core user may read/write unauthorized content</title><link>https://www.cve.org/CVERecord?id=CVE-2024-9902</link><description>A flaw was found in Ansible. The ansible-core `user` module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the `user` module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</description><pubDate>Wed, 06 Nov 2024 10:09:13 +0000</pubDate></item><item><title>CVE-2024-8614 | WP JobSearch &amp;lt;= 2.6.7 - Authenticated (Subscriber+) Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8614</link><description>The JobSearch WP Job Board plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the jobsearch_wp_handle_upload() function in all versions up to, and including, 2.6.7. This makes it possible for authenticated attackers, with subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Wed, 06 Nov 2024 08:37:04 +0000</pubDate></item><item><title>CVE-2024-8615 | WP JobSearch &amp;lt;= 2.6.7 - Unauthenticated Arbitrary File Upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-8615</link><description>The JobSearch WP Job Board plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the jobsearch_location_load_excel_file_callback() function in all versions up to, and including, 2.6.7. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible.</description><pubDate>Wed, 06 Nov 2024 08:37:05 +0000</pubDate></item><item><title>CVE-2024-52043 | User enumeration in HubHub</title><link>https://www.cve.org/CVERecord?id=CVE-2024-52043</link><description>Observable Response Discrepancy vulnerability in HumHub GmbH &amp; Co. KG - HumHub on Linux allows: Excavation (user enumeration).This issue affects all released HumHub versions: through 1.16.2.</description><pubDate>Wed, 06 Nov 2024 08:15:28 +0000</pubDate></item><item><title>CVE-2024-9681 | HSTS subdomain overwrites parent cache entry</title><link>https://www.cve.org/CVERecord?id=CVE-2024-9681</link><description>When curl is asked to use HSTS, the expiry time for a subdomain might
overwrite a parent domain's cache entry, making it end sooner or later than
otherwise intended.

This affects curl using applications that enable HSTS and use URLs with the
insecure `HTTP://` scheme and perform transfers with hosts like
`x.example.com` as well as `example.com` where the first host is a subdomain
of the second host.

(The HSTS cache either needs to have been populated manually or there needs to
have been previous HTTPS accesses done as the cache needs to have entries for
the domains involved to trigger this problem.)

When `x.example.com` responds with `Strict-Transport-Security:` headers, this
bug can make the subdomain's expiry timeout *bleed over* and get set for the
parent domain `example.com` in curl's HSTS cache.

The result of a triggered bug is that HTTP accesses to `example.com` get
converted to HTTPS for a different period of time than what was asked for by
the origin server. If `example.com` for example stops supporting HTTPS at its
expiry time, curl might then fail to access `http://example.com` until the
(wrongly set) timeout expires. This bug can also expire the parent's entry
*earlier*, thus making curl inadvertently switch back to insecure HTTP earlier
than otherwise intended.</description><pubDate>Wed, 06 Nov 2024 07:53:26 +0000</pubDate></item><item><title>CVE-2024-10020 | Heateor Social Login WordPress &amp;lt;= 1.1.35 - Authentication Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10020</link><description>The Heateor Social Login WordPress plugin for WordPress is vulnerable to authentication bypass in all versions up to, and including, 1.1.35. This is due to insufficient verification on the user being returned by the social login token. This makes it possible for unauthenticated attackers to log in as any existing user on the site, if they have access to the email and the user does not have an already-existing account for the service returning the token. An attacker cannot authenticate as an administrator by default, but these accounts are also at risk if authentication for administrators has explicitly been allowed via the social login.</description><pubDate>Wed, 06 Nov 2024 06:51:13 +0000</pubDate></item><item><title>CVE-2024-10535 | Video Gallery for WooCommerce &amp;lt;= 1.31 - Missing Authorization to Unauthenticated Limited File Deletion</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10535</link><description>The Video Gallery for WooCommerce plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the remove_unused_thumbnails() function in all versions up to, and including, 1.31. This makes it possible for unauthenticated attackers to delete thumbnails in the video-wc-gallery-thumb directory.</description><pubDate>Wed, 06 Nov 2024 06:51:14 +0000</pubDate></item><item><title>CVE-2024-10543 | Tumult Hype Animations &amp;lt;= 1.9.14 - Missing Authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10543</link><description>The Tumult Hype Animations plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the hypeanimations_getcontent function in all versions up to, and including, 1.9.14. This makes it possible for authenticated attackers, with Subscriber-level access and above, to retrieve animation information.</description><pubDate>Wed, 06 Nov 2024 06:51:14 +0000</pubDate></item><item><title>CVE-2024-6626 | EleForms – All In One Form Integration including DB for Elementor &amp;lt;= 2.9.9.9 - Missing Authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-6626</link><description>The EleForms – All In One Form Integration including DB for Elementor plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on several functions in all versions up to, and including, 2.9.9.9. This makes it possible for unauthenticated attackers to view form submissions.</description><pubDate>Wed, 06 Nov 2024 06:51:15 +0000</pubDate></item><item><title>CVE-2024-9307 | mFolio Lite &amp;lt;= 1.2.1 - Missing Authorization to Authenticated (Author+) File Upload via EXE and SVG Files</title><link>https://www.cve.org/CVERecord?id=CVE-2024-9307</link><description>The mFolio Lite plugin for WordPress is vulnerable to file uploads due to a missing capability check in all versions up to, and including, 1.2.1. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file or upload arbitrary EXE files on the affected site's server which may make remote code execution possible if the attacker can also gain access to run the .exe file, or trick a site visitor into downloading and running the .exe file.</description><pubDate>Wed, 06 Nov 2024 06:51:15 +0000</pubDate></item><item><title>CVE-2024-9946 | Social Share, Social Login and Social Comments Plugin – Super Socializer &amp;lt;= 7.13.68 - Authentication Bypass</title><link>https://www.cve.org/CVERecord?id=CVE-2024-9946</link><description>The Social Share, Social Login and Social Comments Plugin – Super Socializer plugin for WordPress is vulnerable to authentication bypass in all versions up to, and including, 7.13.68. This is due to insufficient verification on the user being returned by the social login token. This makes it possible for unauthenticated attackers to log in as any existing user on the site, if they have access to the email and the user does not have an already-existing account for the service returning the token. An attacker cannot authenticate as an administrator by default, but these accounts are also at risk if authentication for administrators has explicitly been allowed via the social login. The vulnerability was partially patched in version 7.13.68.</description><pubDate>Wed, 06 Nov 2024 06:51:15 +0000</pubDate></item><item><title>CVE-2024-7879 | WP ULike &amp;lt; 4.7.5 - Admin+ Stored XSS via Widgets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-7879</link><description>The WP ULike  WordPress plugin before 4.7.5 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description><pubDate>Wed, 06 Nov 2024 06:17:23 +0000</pubDate></item><item><title>CVE-2024-9934 | Wp-ImageZoom &amp;lt;= 1.1.0 - Reflected XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-9934</link><description>The Wp-ImageZoom WordPress plugin through 1.1.0 does not sanitise and escape some parameters before outputting them back in a page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description><pubDate>Wed, 06 Nov 2024 06:17:23 +0000</pubDate></item><item><title>CVE-2024-34673 | Improper Input Validation in IpcProtocol in Modem prior to SMR Nov-2024 Release 1 allows local attackers to cause Denial-of-Service.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34673</link><description>Improper Input Validation in IpcProtocol in Modem prior to SMR Nov-2024 Release 1 allows local attackers to cause Denial-of-Service.</description><pubDate>Wed, 06 Nov 2024 02:40:08 +0000</pubDate></item><item><title>CVE-2024-34674 | Improper access control in Contacts prior to SMR Nov-2024 Release 1 allows physical attackers to access data across multiple user profiles.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34674</link><description>Improper access control in Contacts prior to SMR Nov-2024 Release 1 allows physical attackers to access data across multiple user profiles.</description><pubDate>Wed, 06 Nov 2024 02:40:09 +0000</pubDate></item><item><title>CVE-2024-34675 | Improper access control in Dex Mode prior to SMR Nov-2024 Release 1 allows physical attackers to temporarily access to unlocked screen.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34675</link><description>Improper access control in Dex Mode prior to SMR Nov-2024 Release 1 allows physical attackers to temporarily access to unlocked screen.</description><pubDate>Wed, 06 Nov 2024 02:40:09 +0000</pubDate></item><item><title>CVE-2024-34676 | Out-of-bounds write in parsing subtitle file in libsubextractor.so prior to SMR Nov-2024 Release 1 allows local attackers to cause memory co...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34676</link><description>Out-of-bounds write in parsing subtitle file in libsubextractor.so prior to SMR Nov-2024 Release 1 allows local attackers to cause memory corruption. User interaction is required for triggering this vulnerability.</description><pubDate>Wed, 06 Nov 2024 02:40:09 +0000</pubDate></item><item><title>CVE-2024-34677 | Exposure of sensitive information in System UI prior to SMR Nov-2024 Release 1 allow local attackers to make malicious apps appear as legiti...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34677</link><description>Exposure of sensitive information in System UI prior to SMR Nov-2024 Release 1 allow local attackers to make malicious apps appear as legitimate.</description><pubDate>Wed, 06 Nov 2024 02:40:10 +0000</pubDate></item><item><title>CVE-2024-34678 | Out-of-bounds write in libsapeextractor.so prior to SMR Nov-2024 Release 1 allows local attackers to cause memory corruption.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34678</link><description>Out-of-bounds write in libsapeextractor.so prior to SMR Nov-2024 Release 1 allows local attackers to cause memory corruption.</description><pubDate>Wed, 06 Nov 2024 02:40:10 +0000</pubDate></item><item><title>CVE-2024-34679 | Incorrect default permissions in Crane prior to SMR Nov-2024 Release 1 allows local attackers to access files with phone privilege.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34679</link><description>Incorrect default permissions in Crane prior to SMR Nov-2024 Release 1 allows local attackers to access files with phone privilege.</description><pubDate>Wed, 06 Nov 2024 02:40:11 +0000</pubDate></item><item><title>CVE-2024-34680 | Use of implicit intent for sensitive communication in WlanTest prior to SMR Nov-2024 Release 1 allows local attackers to get sensitive infor...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34680</link><description>Use of implicit intent for sensitive communication in WlanTest prior to SMR Nov-2024 Release 1 allows local attackers to get sensitive information.</description><pubDate>Wed, 06 Nov 2024 02:40:11 +0000</pubDate></item><item><title>CVE-2024-34681 | Improper input validation in BluetoothAdapter prior to SMR Nov-2024 Release 1 allows local attackers to cause local permanent denial of serv...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34681</link><description>Improper input validation in BluetoothAdapter prior to SMR Nov-2024 Release 1 allows local attackers to cause local permanent denial of service on Galaxy Watch.</description><pubDate>Wed, 06 Nov 2024 02:40:11 +0000</pubDate></item><item><title>CVE-2024-34682 | Improper authorization in Settings prior to SMR Nov-2024 Release 1 allows physical attackers to access stored WiFi password in Maintenance M...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-34682</link><description>Improper authorization in Settings prior to SMR Nov-2024 Release 1 allows physical attackers to access stored WiFi password in Maintenance Mode.</description><pubDate>Wed, 06 Nov 2024 02:40:12 +0000</pubDate></item><item><title>CVE-2024-49401 | Improper input validation in Settings Suggestions prior to SMR Nov-2024 Release 1 allows local attackers to launch privileged activities.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49401</link><description>Improper input validation in Settings Suggestions prior to SMR Nov-2024 Release 1 allows local attackers to launch privileged activities.</description><pubDate>Wed, 06 Nov 2024 02:40:12 +0000</pubDate></item><item><title>CVE-2024-49402 | Improper input validation in Dressroom prior to SMR Nov-2024 Release 1 allow physical attackers to access data across multiple user profiles...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49402</link><description>Improper input validation in Dressroom prior to SMR Nov-2024 Release 1 allow physical attackers to access data across multiple user profiles.</description><pubDate>Wed, 06 Nov 2024 02:40:13 +0000</pubDate></item><item><title>CVE-2024-49403 | Improper access control in Samsung Voice Recorder prior to version 21.5.40.37 allows physical attackers to access recording files on the loc...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49403</link><description>Improper access control in Samsung Voice Recorder prior to version 21.5.40.37 allows physical attackers to access recording files on the lock screen.</description><pubDate>Wed, 06 Nov 2024 02:40:13 +0000</pubDate></item><item><title>CVE-2024-49404 | Improper Access Control in Samsung Video Player prior to versions 7.3.29.1 in Android 12, 7.3.36.1 in Android 13, and 7.3.41.230 in Android ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49404</link><description>Improper Access Control in Samsung Video Player prior to versions 7.3.29.1 in Android 12, 7.3.36.1 in Android 13, and 7.3.41.230 in Android 14 allows physical attackers to access video file of other users.</description><pubDate>Wed, 06 Nov 2024 02:40:13 +0000</pubDate></item><item><title>CVE-2024-49405 | Improper authentication in Private Info in Samsung Pass in prior to version 4.4.04.7 allows physical attackers to access sensitive informati...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49405</link><description>Improper authentication in Private Info in Samsung Pass in prior to version 4.4.04.7 allows physical attackers to access sensitive information in a specific scenario.</description><pubDate>Wed, 06 Nov 2024 02:40:14 +0000</pubDate></item><item><title>CVE-2024-49406 | Improper validation of integrity check value in Blockchain Keystore prior to version 1.3.16 allows local attackers to modify transaction. Ro...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49406</link><description>Improper validation of integrity check value in Blockchain Keystore prior to version 1.3.16 allows local attackers to modify transaction. Root privilege is required for triggering this vulnerability.</description><pubDate>Wed, 06 Nov 2024 02:40:14 +0000</pubDate></item><item><title>CVE-2024-49407 | Improper access control in Samsung Flow prior to version 4.9.15.7 allows physical attackers to access data across multiple user profiles.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49407</link><description>Improper access control in Samsung Flow prior to version 4.9.15.7 allows physical attackers to access data across multiple user profiles.</description><pubDate>Wed, 06 Nov 2024 02:40:15 +0000</pubDate></item><item><title>CVE-2024-49408 | Out-of-bounds write in usb driver prior to Firmware update Sep-2024 Release on Galaxy S24 allows local attackers to write out-of-bounds memo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49408</link><description>Out-of-bounds write in usb driver prior to Firmware update Sep-2024 Release on Galaxy S24 allows local attackers to write out-of-bounds memory. System privilege is required for triggering this vulnerability.</description><pubDate>Wed, 06 Nov 2024 02:40:15 +0000</pubDate></item><item><title>CVE-2024-49409 | Out-of-bounds write in Battery Full Capacity node prior to Firmware update Sep-2024 Release on Galaxy S24 allows local attackers to write ou...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-49409</link><description>Out-of-bounds write in Battery Full Capacity node prior to Firmware update Sep-2024 Release on Galaxy S24 allows local attackers to write out-of-bounds memory. System privilege is required for triggering this vulnerability.</description><pubDate>Wed, 06 Nov 2024 02:40:15 +0000</pubDate></item><item><title>CVE-2024-10647 | WS Form LITE – Drag &amp;amp; Drop Contact Form Builder for WordPress &amp;lt;= 1.9.244 - Reflected Cross-Site Scripting via URL</title><link>https://www.cve.org/CVERecord?id=CVE-2024-10647</link><description>The WS Form LITE – Drag &amp; Drop Contact Form Builder for WordPress plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of remove_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.9.244. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description><pubDate>Wed, 06 Nov 2024 02:40:16 +0000</pubDate></item></channel></rss>