<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>New CVE from cve.org feed</title><link>https://github.com/test.xml</link><description>Last 2 days CVE feed!</description><atom:link href="https://github.com/test.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Wed, 03 Apr 2024 16:12:02 +0000</lastBuildDate><item><title>CVE-2023-44039 | In VeridiumID before 3.5.0, the WebAuthn API allows an internal unauthenticated attacker (who can pass enrollment verifications and is allow...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-44039</link><description>In VeridiumID before 3.5.0, the WebAuthn API allows an internal unauthenticated attacker (who can pass enrollment verifications and is allowed to enroll a FIDO key) to register their FIDO authenticator to a victimâ€™s account and consequently take over the account.</description><pubDate>Wed, 03 Apr 2024 16:12:04 +0000</pubDate></item><item><title>CVE-2024-31392 | If an insecure element was added to a page after a delay, Firefox would not replace the secure icon with a mixed content security status Thi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31392</link><description>If an insecure element was added to a page after a delay, Firefox would not replace the secure icon with a mixed content security status This vulnerability affects Firefox for iOS &lt; 124.</description><pubDate>Wed, 03 Apr 2024 15:27:56 +0000</pubDate></item><item><title>CVE-2024-31393 | Dragging Javascript URLs to the address bar could cause them to be loaded, bypassing restrictions and security protections This vulnerabilit...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31393</link><description>Dragging Javascript URLs to the address bar could cause them to be loaded, bypassing restrictions and security protections This vulnerability affects Firefox for iOS &lt; 124.</description><pubDate>Wed, 03 Apr 2024 15:27:57 +0000</pubDate></item><item><title>CVE-2023-52637 | can: j1939: Fix UAF in j1939_sk_match_filter during setsockopt(SO_J1939_FILTER)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52637</link><description>In the Linux kernel, the following vulnerability has been resolved:

can: j1939: Fix UAF in j1939_sk_match_filter during setsockopt(SO_J1939_FILTER)

Lock jsk-&gt;sk to prevent UAF when setsockopt(..., SO_J1939_FILTER, ...)
modifies jsk-&gt;filters while receiving packets.

Following trace was seen on affected system:
 ==================================================================
 BUG: KASAN: slab-use-after-free in j1939_sk_recv_match_one+0x1af/0x2d0 [can_j1939]
 Read of size 4 at addr ffff888012144014 by task j1939/350

 CPU: 0 PID: 350 Comm: j1939 Tainted: G        W  OE      6.5.0-rc5 #1
 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
 Call Trace:
  print_report+0xd3/0x620
  ? kasan_complete_mode_report_info+0x7d/0x200
  ? j1939_sk_recv_match_one+0x1af/0x2d0 [can_j1939]
  kasan_report+0xc2/0x100
  ? j1939_sk_recv_match_one+0x1af/0x2d0 [can_j1939]
  __asan_load4+0x84/0xb0
  j1939_sk_recv_match_one+0x1af/0x2d0 [can_j1939]
  j1939_sk_recv+0x20b/0x320 [can_j1939]
  ? __kasan_check_write+0x18/0x20
  ? __pfx_j1939_sk_recv+0x10/0x10 [can_j1939]
  ? j1939_simple_recv+0x69/0x280 [can_j1939]
  ? j1939_ac_recv+0x5e/0x310 [can_j1939]
  j1939_can_recv+0x43f/0x580 [can_j1939]
  ? __pfx_j1939_can_recv+0x10/0x10 [can_j1939]
  ? raw_rcv+0x42/0x3c0 [can_raw]
  ? __pfx_j1939_can_recv+0x10/0x10 [can_j1939]
  can_rcv_filter+0x11f/0x350 [can]
  can_receive+0x12f/0x190 [can]
  ? __pfx_can_rcv+0x10/0x10 [can]
  can_rcv+0xdd/0x130 [can]
  ? __pfx_can_rcv+0x10/0x10 [can]
  __netif_receive_skb_one_core+0x13d/0x150
  ? __pfx___netif_receive_skb_one_core+0x10/0x10
  ? __kasan_check_write+0x18/0x20
  ? _raw_spin_lock_irq+0x8c/0xe0
  __netif_receive_skb+0x23/0xb0
  process_backlog+0x107/0x260
  __napi_poll+0x69/0x310
  net_rx_action+0x2a1/0x580
  ? __pfx_net_rx_action+0x10/0x10
  ? __pfx__raw_spin_lock+0x10/0x10
  ? handle_irq_event+0x7d/0xa0
  __do_softirq+0xf3/0x3f8
  do_softirq+0x53/0x80
  &lt;/IRQ&gt;
  &lt;TASK&gt;
  __local_bh_enable_ip+0x6e/0x70
  netif_rx+0x16b/0x180
  can_send+0x32b/0x520 [can]
  ? __pfx_can_send+0x10/0x10 [can]
  ? __check_object_size+0x299/0x410
  raw_sendmsg+0x572/0x6d0 [can_raw]
  ? __pfx_raw_sendmsg+0x10/0x10 [can_raw]
  ? apparmor_socket_sendmsg+0x2f/0x40
  ? __pfx_raw_sendmsg+0x10/0x10 [can_raw]
  sock_sendmsg+0xef/0x100
  sock_write_iter+0x162/0x220
  ? __pfx_sock_write_iter+0x10/0x10
  ? __rtnl_unlock+0x47/0x80
  ? security_file_permission+0x54/0x320
  vfs_write+0x6ba/0x750
  ? __pfx_vfs_write+0x10/0x10
  ? __fget_light+0x1ca/0x1f0
  ? __rcu_read_unlock+0x5b/0x280
  ksys_write+0x143/0x170
  ? __pfx_ksys_write+0x10/0x10
  ? __kasan_check_read+0x15/0x20
  ? fpregs_assert_state_consistent+0x62/0x70
  __x64_sys_write+0x47/0x60
  do_syscall_64+0x60/0x90
  ? do_syscall_64+0x6d/0x90
  ? irqentry_exit+0x3f/0x50
  ? exc_page_fault+0x79/0xf0
  entry_SYSCALL_64_after_hwframe+0x6e/0xd8

 Allocated by task 348:
  kasan_save_stack+0x2a/0x50
  kasan_set_track+0x29/0x40
  kasan_save_alloc_info+0x1f/0x30
  __kasan_kmalloc+0xb5/0xc0
  __kmalloc_node_track_caller+0x67/0x160
  j1939_sk_setsockopt+0x284/0x450 [can_j1939]
  __sys_setsockopt+0x15c/0x2f0
  __x64_sys_setsockopt+0x6b/0x80
  do_syscall_64+0x60/0x90
  entry_SYSCALL_64_after_hwframe+0x6e/0xd8

 Freed by task 349:
  kasan_save_stack+0x2a/0x50
  kasan_set_track+0x29/0x40
  kasan_save_free_info+0x2f/0x50
  __kasan_slab_free+0x12e/0x1c0
  __kmem_cache_free+0x1b9/0x380
  kfree+0x7a/0x120
  j1939_sk_setsockopt+0x3b2/0x450 [can_j1939]
  __sys_setsockopt+0x15c/0x2f0
  __x64_sys_setsockopt+0x6b/0x80
  do_syscall_64+0x60/0x90
  entry_SYSCALL_64_after_hwframe+0x6e/0xd8</description><pubDate>Wed, 03 Apr 2024 15:08:14 +0000</pubDate></item><item><title>CVE-2023-52638 | can: j1939: prevent deadlock by changing j1939_socks_lock to rwlock</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52638</link><description>In the Linux kernel, the following vulnerability has been resolved:

can: j1939: prevent deadlock by changing j1939_socks_lock to rwlock

The following 3 locks would race against each other, causing the
deadlock situation in the Syzbot bug report:

- j1939_socks_lock
- active_session_list_lock
- sk_session_queue_lock

A reasonable fix is to change j1939_socks_lock to an rwlock, since in
the rare situations where a write lock is required for the linked list
that j1939_socks_lock is protecting, the code does not attempt to
acquire any more locks. This would break the circular lock dependency,
where, for example, the current thread already locks j1939_socks_lock
and attempts to acquire sk_session_queue_lock, and at the same time,
another thread attempts to acquire j1939_socks_lock while holding
sk_session_queue_lock.

NOTE: This patch along does not fix the unregister_netdevice bug
reported by Syzbot; instead, it solves a deadlock situation to prepare
for one or more further patches to actually fix the Syzbot bug, which
appears to be a reference counting problem within the j1939 codebase.

[mkl: remove unrelated newline change]</description><pubDate>Wed, 03 Apr 2024 15:08:14 +0000</pubDate></item><item><title>CVE-2023-52639 | KVM: s390: vsie: fix race during shadow creation</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52639</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: s390: vsie: fix race during shadow creation

Right now it is possible to see gmap-&gt;private being zero in
kvm_s390_vsie_gmap_notifier resulting in a crash.  This is due to the
fact that we add gmap-&gt;private == kvm after creation:

static int acquire_gmap_shadow(struct kvm_vcpu *vcpu,
                               struct vsie_page *vsie_page)
{
[...]
        gmap = gmap_shadow(vcpu-&gt;arch.gmap, asce, edat);
        if (IS_ERR(gmap))
                return PTR_ERR(gmap);
        gmap-&gt;private = vcpu-&gt;kvm;

Let children inherit the private field of the parent.</description><pubDate>Wed, 03 Apr 2024 15:08:15 +0000</pubDate></item><item><title>CVE-2024-26685 | nilfs2: fix potential bug in end_buffer_async_write</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26685</link><description>In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix potential bug in end_buffer_async_write

According to a syzbot report, end_buffer_async_write(), which handles the
completion of block device writes, may detect abnormal condition of the
buffer async_write flag and cause a BUG_ON failure when using nilfs2.

Nilfs2 itself does not use end_buffer_async_write().  But, the async_write
flag is now used as a marker by commit 7f42ec394156 ("nilfs2: fix issue
with race condition of competition between segments for dirty blocks") as
a means of resolving double list insertion of dirty blocks in
nilfs_lookup_dirty_data_buffers() and nilfs_lookup_node_buffers() and the
resulting crash.

This modification is safe as long as it is used for file data and b-tree
node blocks where the page caches are independent.  However, it was
irrelevant and redundant to also introduce async_write for segment summary
and super root blocks that share buffers with the backing device.  This
led to the possibility that the BUG_ON check in end_buffer_async_write
would fail as described above, if independent writebacks of the backing
device occurred in parallel.

The use of async_write for segment summary buffers has already been
removed in a previous change.

Fix this issue by removing the manipulation of the async_write flag for
the remaining super root block buffer.</description><pubDate>Wed, 03 Apr 2024 15:08:15 +0000</pubDate></item><item><title>CVE-2024-26686 | fs/proc: do_task_stat: use sig-&amp;gt;stats_lock to gather the threads/children stats</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26686</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs/proc: do_task_stat: use sig-&gt;stats_lock to gather the threads/children stats

lock_task_sighand() can trigger a hard lockup.  If NR_CPUS threads call
do_task_stat() at the same time and the process has NR_THREADS, it will
spin with irqs disabled O(NR_CPUS * NR_THREADS) time.

Change do_task_stat() to use sig-&gt;stats_lock to gather the statistics
outside of -&gt;siglock protected section, in the likely case this code will
run lockless.</description><pubDate>Wed, 03 Apr 2024 15:08:16 +0000</pubDate></item><item><title>CVE-2024-26687 | xen/events: close evtchn after mapping cleanup</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26687</link><description>In the Linux kernel, the following vulnerability has been resolved:

xen/events: close evtchn after mapping cleanup

shutdown_pirq and startup_pirq are not taking the
irq_mapping_update_lock because they can't due to lock inversion. Both
are called with the irq_desc-&gt;lock being taking. The lock order,
however, is first irq_mapping_update_lock and then irq_desc-&gt;lock.

This opens multiple races:
- shutdown_pirq can be interrupted by a function that allocates an event
  channel:

  CPU0                        CPU1
  shutdown_pirq {
    xen_evtchn_close(e)
                              __startup_pirq {
                                EVTCHNOP_bind_pirq
                                  -&gt; returns just freed evtchn e
                                set_evtchn_to_irq(e, irq)
                              }
    xen_irq_info_cleanup() {
      set_evtchn_to_irq(e, -1)
    }
  }

  Assume here event channel e refers here to the same event channel
  number.
  After this race the evtchn_to_irq mapping for e is invalid (-1).

- __startup_pirq races with __unbind_from_irq in a similar way. Because
  __startup_pirq doesn't take irq_mapping_update_lock it can grab the
  evtchn that __unbind_from_irq is currently freeing and cleaning up. In
  this case even though the event channel is allocated, its mapping can
  be unset in evtchn_to_irq.

The fix is to first cleanup the mappings and then close the event
channel. In this way, when an event channel gets allocated it's
potential previous evtchn_to_irq mappings are guaranteed to be unset already.
This is also the reverse order of the allocation where first the event
channel is allocated and then the mappings are setup.

On a 5.10 kernel prior to commit 3fcdaf3d7634 ("xen/events: modify internal
[un]bind interfaces"), we hit a BUG like the following during probing of NVMe
devices. The issue is that during nvme_setup_io_queues, pci_free_irq
is called for every device which results in a call to shutdown_pirq.
With many nvme devices it's therefore likely to hit this race during
boot because there will be multiple calls to shutdown_pirq and
startup_pirq are running potentially in parallel.

  ------------[ cut here ]------------
  blkfront: xvda: barrier or flush: disabled; persistent grants: enabled; indirect descriptors: enabled; bounce buffer: enabled
  kernel BUG at drivers/xen/events/events_base.c:499!
  invalid opcode: 0000 [#1] SMP PTI
  CPU: 44 PID: 375 Comm: kworker/u257:23 Not tainted 5.10.201-191.748.amzn2.x86_64 #1
  Hardware name: Xen HVM domU, BIOS 4.11.amazon 08/24/2006
  Workqueue: nvme-reset-wq nvme_reset_work
  RIP: 0010:bind_evtchn_to_cpu+0xdf/0xf0
  Code: 5d 41 5e c3 cc cc cc cc 44 89 f7 e8 2b 55 ad ff 49 89 c5 48 85 c0 0f 84 64 ff ff ff 4c 8b 68 30 41 83 fe ff 0f 85 60 ff ff ff &lt;0f&gt; 0b 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 0f 1f 44 00 00
  RSP: 0000:ffffc9000d533b08 EFLAGS: 00010046
  RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000006
  RDX: 0000000000000028 RSI: 00000000ffffffff RDI: 00000000ffffffff
  RBP: ffff888107419680 R08: 0000000000000000 R09: ffffffff82d72b00
  R10: 0000000000000000 R11: 0000000000000000 R12: 00000000000001ed
  R13: 0000000000000000 R14: 00000000ffffffff R15: 0000000000000002
  FS:  0000000000000000(0000) GS:ffff88bc8b500000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 0000000000000000 CR3: 0000000002610001 CR4: 00000000001706e0
  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
  Call Trace:
   ? show_trace_log_lvl+0x1c1/0x2d9
   ? show_trace_log_lvl+0x1c1/0x2d9
   ? set_affinity_irq+0xdc/0x1c0
   ? __die_body.cold+0x8/0xd
   ? die+0x2b/0x50
   ? do_trap+0x90/0x110
   ? bind_evtchn_to_cpu+0xdf/0xf0
   ? do_error_trap+0x65/0x80
   ? bind_evtchn_to_cpu+0xdf/0xf0
   ? exc_invalid_op+0x4e/0x70
   ? bind_evtchn_to_cpu+0xdf/0xf0
   ? asm_exc_invalid_op+0x12/0x20
   ? bind_evtchn_to_cpu+0xdf/0x
---truncated---</description><pubDate>Wed, 03 Apr 2024 15:08:16 +0000</pubDate></item><item><title>CVE-2024-26688 | fs,hugetlb: fix NULL pointer dereference in hugetlbs_fill_super</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26688</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs,hugetlb: fix NULL pointer dereference in hugetlbs_fill_super

When configuring a hugetlb filesystem via the fsconfig() syscall, there is
a possible NULL dereference in hugetlbfs_fill_super() caused by assigning
NULL to ctx-&gt;hstate in hugetlbfs_parse_param() when the requested pagesize
is non valid.

E.g: Taking the following steps:

     fd = fsopen("hugetlbfs", FSOPEN_CLOEXEC);
     fsconfig(fd, FSCONFIG_SET_STRING, "pagesize", "1024", 0);
     fsconfig(fd, FSCONFIG_CMD_CREATE, NULL, NULL, 0);

Given that the requested "pagesize" is invalid, ctxt-&gt;hstate will be replaced
with NULL, losing its previous value, and we will print an error:

 ...
 ...
 case Opt_pagesize:
 ps = memparse(param-&gt;string, &amp;rest);
 ctx-&gt;hstate = h;
 if (!ctx-&gt;hstate) {
         pr_err("Unsupported page size %lu MB\n", ps / SZ_1M);
         return -EINVAL;
 }
 return 0;
 ...
 ...

This is a problem because later on, we will dereference ctxt-&gt;hstate in
hugetlbfs_fill_super()

 ...
 ...
 sb-&gt;s_blocksize = huge_page_size(ctx-&gt;hstate);
 ...
 ...

Causing below Oops.

Fix this by replacing cxt-&gt;hstate value only when then pagesize is known
to be valid.

 kernel: hugetlbfs: Unsupported page size 0 MB
 kernel: BUG: kernel NULL pointer dereference, address: 0000000000000028
 kernel: #PF: supervisor read access in kernel mode
 kernel: #PF: error_code(0x0000) - not-present page
 kernel: PGD 800000010f66c067 P4D 800000010f66c067 PUD 1b22f8067 PMD 0
 kernel: Oops: 0000 [#1] PREEMPT SMP PTI
 kernel: CPU: 4 PID: 5659 Comm: syscall Tainted: G            E      6.8.0-rc2-default+ #22 5a47c3fef76212addcc6eb71344aabc35190ae8f
 kernel: Hardware name: Intel Corp. GROVEPORT/GROVEPORT, BIOS GVPRCRB1.86B.0016.D04.1705030402 05/03/2017
 kernel: RIP: 0010:hugetlbfs_fill_super+0xb4/0x1a0
 kernel: Code: 48 8b 3b e8 3e c6 ed ff 48 85 c0 48 89 45 20 0f 84 d6 00 00 00 48 b8 ff ff ff ff ff ff ff 7f 4c 89 e7 49 89 44 24 20 48 8b 03 &lt;8b&gt; 48 28 b8 00 10 00 00 48 d3 e0 49 89 44 24 18 48 8b 03 8b 40 28
 kernel: RSP: 0018:ffffbe9960fcbd48 EFLAGS: 00010246
 kernel: RAX: 0000000000000000 RBX: ffff9af5272ae780 RCX: 0000000000372004
 kernel: RDX: ffffffffffffffff RSI: ffffffffffffffff RDI: ffff9af555e9b000
 kernel: RBP: ffff9af52ee66b00 R08: 0000000000000040 R09: 0000000000370004
 kernel: R10: ffffbe9960fcbd48 R11: 0000000000000040 R12: ffff9af555e9b000
 kernel: R13: ffffffffa66b86c0 R14: ffff9af507d2f400 R15: ffff9af507d2f400
 kernel: FS:  00007ffbc0ba4740(0000) GS:ffff9b0bd7000000(0000) knlGS:0000000000000000
 kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 kernel: CR2: 0000000000000028 CR3: 00000001b1ee0000 CR4: 00000000001506f0
 kernel: Call Trace:
 kernel:  &lt;TASK&gt;
 kernel:  ? __die_body+0x1a/0x60
 kernel:  ? page_fault_oops+0x16f/0x4a0
 kernel:  ? search_bpf_extables+0x65/0x70
 kernel:  ? fixup_exception+0x22/0x310
 kernel:  ? exc_page_fault+0x69/0x150
 kernel:  ? asm_exc_page_fault+0x22/0x30
 kernel:  ? __pfx_hugetlbfs_fill_super+0x10/0x10
 kernel:  ? hugetlbfs_fill_super+0xb4/0x1a0
 kernel:  ? hugetlbfs_fill_super+0x28/0x1a0
 kernel:  ? __pfx_hugetlbfs_fill_super+0x10/0x10
 kernel:  vfs_get_super+0x40/0xa0
 kernel:  ? __pfx_bpf_lsm_capable+0x10/0x10
 kernel:  vfs_get_tree+0x25/0xd0
 kernel:  vfs_cmd_create+0x64/0xe0
 kernel:  __x64_sys_fsconfig+0x395/0x410
 kernel:  do_syscall_64+0x80/0x160
 kernel:  ? syscall_exit_to_user_mode+0x82/0x240
 kernel:  ? do_syscall_64+0x8d/0x160
 kernel:  ? syscall_exit_to_user_mode+0x82/0x240
 kernel:  ? do_syscall_64+0x8d/0x160
 kernel:  ? exc_page_fault+0x69/0x150
 kernel:  entry_SYSCALL_64_after_hwframe+0x6e/0x76
 kernel: RIP: 0033:0x7ffbc0cb87c9
 kernel: Code: 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d 97 96 0d 00 f7 d8 64 89 01 48
 kernel: RSP: 002b:00007ffc29d2f388 EFLAGS: 00000206 ORIG_RAX: 00000000000001af
 kernel: RAX: fffffffffff
---truncated---</description><pubDate>Wed, 03 Apr 2024 15:08:16 +0000</pubDate></item><item><title>CVE-2024-26689 | ceph: prevent use-after-free in encode_cap_msg()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26689</link><description>In the Linux kernel, the following vulnerability has been resolved:

ceph: prevent use-after-free in encode_cap_msg()

In fs/ceph/caps.c, in encode_cap_msg(), "use after free" error was
caught by KASAN at this line - 'ceph_buffer_get(arg-&gt;xattr_buf);'. This
implies before the refcount could be increment here, it was freed.

In same file, in "handle_cap_grant()" refcount is decremented by this
line - 'ceph_buffer_put(ci-&gt;i_xattrs.blob);'. It appears that a race
occurred and resource was freed by the latter line before the former
line could increment it.

encode_cap_msg() is called by __send_cap() and __send_cap() is called by
ceph_check_caps() after calling __prep_cap(). __prep_cap() is where
arg-&gt;xattr_buf is assigned to ci-&gt;i_xattrs.blob. This is the spot where
the refcount must be increased to prevent "use after free" error.</description><pubDate>Wed, 03 Apr 2024 15:08:17 +0000</pubDate></item><item><title>CVE-2024-26690 | net: stmmac: protect updates of 64-bit statistics counters</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26690</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: stmmac: protect updates of 64-bit statistics counters

As explained by a comment in &lt;linux/u64_stats_sync.h&gt;, write side of struct
u64_stats_sync must ensure mutual exclusion, or one seqcount update could
be lost on 32-bit platforms, thus blocking readers forever. Such lockups
have been observed in real world after stmmac_xmit() on one CPU raced with
stmmac_napi_poll_tx() on another CPU.

To fix the issue without introducing a new lock, split the statics into
three parts:

1. fields updated only under the tx queue lock,
2. fields updated only during NAPI poll,
3. fields updated only from interrupt context,

Updates to fields in the first two groups are already serialized through
other locks. It is sufficient to split the existing struct u64_stats_sync
so that each group has its own.

Note that tx_set_ic_bit is updated from both contexts. Split this counter
so that each context gets its own, and calculate their sum to get the total
value in stmmac_get_ethtool_stats().

For the third group, multiple interrupts may be processed by different CPUs
at the same time, but interrupts on the same CPU will not nest. Move fields
from this group to a newly created per-cpu struct stmmac_pcpu_stats.</description><pubDate>Wed, 03 Apr 2024 15:08:17 +0000</pubDate></item><item><title>CVE-2024-26691 | KVM: arm64: Fix circular locking dependency</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26691</link><description>In the Linux kernel, the following vulnerability has been resolved:

KVM: arm64: Fix circular locking dependency

The rule inside kvm enforces that the vcpu-&gt;mutex is taken *inside*
kvm-&gt;lock. The rule is violated by the pkvm_create_hyp_vm() which acquires
the kvm-&gt;lock while already holding the vcpu-&gt;mutex lock from
kvm_vcpu_ioctl(). Avoid the circular locking dependency altogether by
protecting the hyp vm handle with the config_lock, much like we already
do for other forms of VM-scoped data.</description><pubDate>Wed, 03 Apr 2024 15:08:17 +0000</pubDate></item><item><title>CVE-2024-26692 | smb: Fix regression in writes when non-standard maximum write size negotiated</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26692</link><description>In the Linux kernel, the following vulnerability has been resolved:

smb: Fix regression in writes when non-standard maximum write size negotiated

The conversion to netfs in the 6.3 kernel caused a regression when
maximum write size is set by the server to an unexpected value which is
not a multiple of 4096 (similarly if the user overrides the maximum
write size by setting mount parm "wsize", but sets it to a value that
is not a multiple of 4096).  When negotiated write size is not a
multiple of 4096 the netfs code can skip the end of the final
page when doing large sequential writes, causing data corruption.

This section of code is being rewritten/removed due to a large
netfs change, but until that point (ie for the 6.3 kernel until now)
we can not support non-standard maximum write sizes.

Add a warning if a user specifies a wsize on mount that is not
a multiple of 4096 (and round down), also add a change where we
round down the maximum write size if the server negotiates a value
that is not a multiple of 4096 (we also have to check to make sure that
we do not round it down to zero).</description><pubDate>Wed, 03 Apr 2024 15:08:18 +0000</pubDate></item><item><title>CVE-2024-26693 | wifi: iwlwifi: mvm: fix a crash when we run out of stations</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26693</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: mvm: fix a crash when we run out of stations

A DoS tool that injects loads of authentication frames made our AP
crash. The iwl_mvm_is_dup() function couldn't find the per-queue
dup_data which was not allocated.

The root cause for that is that we ran out of stations in the firmware
and we didn't really add the station to the firmware, yet we didn't
return an error to mac80211.
Mac80211 was thinking that we have the station and because of that,
sta_info::uploaded was set to 1. This allowed
ieee80211_find_sta_by_ifaddr() to return a valid station object, but
that ieee80211_sta didn't have any iwl_mvm_sta object initialized and
that caused the crash mentioned earlier when we got Rx on that station.</description><pubDate>Wed, 03 Apr 2024 15:08:18 +0000</pubDate></item><item><title>CVE-2024-26694 | wifi: iwlwifi: fix double-free bug</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26694</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: fix double-free bug

The storage for the TLV PC register data wasn't done like all
the other storage in the drv-&gt;fw area, which is cleared at the
end of deallocation. Therefore, the freeing must also be done
differently, explicitly NULL'ing it out after the free, since
otherwise there's a nasty double-free bug here if a file fails
to load after this has been parsed, and we get another free
later (e.g. because no other file exists.) Fix that by adding
the missing NULL assignment.</description><pubDate>Wed, 03 Apr 2024 15:08:18 +0000</pubDate></item><item><title>CVE-2024-26695 | crypto: ccp - Fix null pointer dereference in __sev_platform_shutdown_locked</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26695</link><description>In the Linux kernel, the following vulnerability has been resolved:

crypto: ccp - Fix null pointer dereference in __sev_platform_shutdown_locked

The SEV platform device can be shutdown with a null psp_master,
e.g., using DEBUG_TEST_DRIVER_REMOVE.  Found using KASAN:

[  137.148210] ccp 0000:23:00.1: enabling device (0000 -&gt; 0002)
[  137.162647] ccp 0000:23:00.1: no command queues available
[  137.170598] ccp 0000:23:00.1: sev enabled
[  137.174645] ccp 0000:23:00.1: psp enabled
[  137.178890] general protection fault, probably for non-canonical address 0xdffffc000000001e: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC KASAN NOPTI
[  137.182693] KASAN: null-ptr-deref in range [0x00000000000000f0-0x00000000000000f7]
[  137.182693] CPU: 93 PID: 1 Comm: swapper/0 Not tainted 6.8.0-rc1+ #311
[  137.182693] RIP: 0010:__sev_platform_shutdown_locked+0x51/0x180
[  137.182693] Code: 08 80 3c 08 00 0f 85 0e 01 00 00 48 8b 1d 67 b6 01 08 48 b8 00 00 00 00 00 fc ff df 48 8d bb f0 00 00 00 48 89 f9 48 c1 e9 03 &lt;80&gt; 3c 01 00 0f 85 fe 00 00 00 48 8b 9b f0 00 00 00 48 85 db 74 2c
[  137.182693] RSP: 0018:ffffc900000cf9b0 EFLAGS: 00010216
[  137.182693] RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 000000000000001e
[  137.182693] RDX: 0000000000000000 RSI: 0000000000000008 RDI: 00000000000000f0
[  137.182693] RBP: ffffc900000cf9c8 R08: 0000000000000000 R09: fffffbfff58f5a66
[  137.182693] R10: ffffc900000cf9c8 R11: ffffffffac7ad32f R12: ffff8881e5052c28
[  137.182693] R13: ffff8881e5052c28 R14: ffff8881758e43e8 R15: ffffffffac64abf8
[  137.182693] FS:  0000000000000000(0000) GS:ffff889de7000000(0000) knlGS:0000000000000000
[  137.182693] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  137.182693] CR2: 0000000000000000 CR3: 0000001cf7c7e000 CR4: 0000000000350ef0
[  137.182693] Call Trace:
[  137.182693]  &lt;TASK&gt;
[  137.182693]  ? show_regs+0x6c/0x80
[  137.182693]  ? __die_body+0x24/0x70
[  137.182693]  ? die_addr+0x4b/0x80
[  137.182693]  ? exc_general_protection+0x126/0x230
[  137.182693]  ? asm_exc_general_protection+0x2b/0x30
[  137.182693]  ? __sev_platform_shutdown_locked+0x51/0x180
[  137.182693]  sev_firmware_shutdown.isra.0+0x1e/0x80
[  137.182693]  sev_dev_destroy+0x49/0x100
[  137.182693]  psp_dev_destroy+0x47/0xb0
[  137.182693]  sp_destroy+0xbb/0x240
[  137.182693]  sp_pci_remove+0x45/0x60
[  137.182693]  pci_device_remove+0xaa/0x1d0
[  137.182693]  device_remove+0xc7/0x170
[  137.182693]  really_probe+0x374/0xbe0
[  137.182693]  ? srso_return_thunk+0x5/0x5f
[  137.182693]  __driver_probe_device+0x199/0x460
[  137.182693]  driver_probe_device+0x4e/0xd0
[  137.182693]  __driver_attach+0x191/0x3d0
[  137.182693]  ? __pfx___driver_attach+0x10/0x10
[  137.182693]  bus_for_each_dev+0x100/0x190
[  137.182693]  ? __pfx_bus_for_each_dev+0x10/0x10
[  137.182693]  ? __kasan_check_read+0x15/0x20
[  137.182693]  ? srso_return_thunk+0x5/0x5f
[  137.182693]  ? _raw_spin_unlock+0x27/0x50
[  137.182693]  driver_attach+0x41/0x60
[  137.182693]  bus_add_driver+0x2a8/0x580
[  137.182693]  driver_register+0x141/0x480
[  137.182693]  __pci_register_driver+0x1d6/0x2a0
[  137.182693]  ? srso_return_thunk+0x5/0x5f
[  137.182693]  ? esrt_sysfs_init+0x1cd/0x5d0
[  137.182693]  ? __pfx_sp_mod_init+0x10/0x10
[  137.182693]  sp_pci_init+0x22/0x30
[  137.182693]  sp_mod_init+0x14/0x30
[  137.182693]  ? __pfx_sp_mod_init+0x10/0x10
[  137.182693]  do_one_initcall+0xd1/0x470
[  137.182693]  ? __pfx_do_one_initcall+0x10/0x10
[  137.182693]  ? parameq+0x80/0xf0
[  137.182693]  ? srso_return_thunk+0x5/0x5f
[  137.182693]  ? __kmalloc+0x3b0/0x4e0
[  137.182693]  ? kernel_init_freeable+0x92d/0x1050
[  137.182693]  ? kasan_populate_vmalloc_pte+0x171/0x190
[  137.182693]  ? srso_return_thunk+0x5/0x5f
[  137.182693]  kernel_init_freeable+0xa64/0x1050
[  137.182693]  ? __pfx_kernel_init+0x10/0x10
[  137.182693]  kernel_init+0x24/0x160
[  137.182693]  ? __switch_to_asm+0x3e/0x70
[  137.182693]  ret_from_fork+0x40/0x80
[  137.182693]  ? __pfx_kernel_init+0x1
---truncated---</description><pubDate>Wed, 03 Apr 2024 15:08:19 +0000</pubDate></item><item><title>CVE-2024-26696 | nilfs2: fix hang in nilfs_lookup_dirty_data_buffers()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26696</link><description>In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix hang in nilfs_lookup_dirty_data_buffers()

Syzbot reported a hang issue in migrate_pages_batch() called by mbind()
and nilfs_lookup_dirty_data_buffers() called in the log writer of nilfs2.

While migrate_pages_batch() locks a folio and waits for the writeback to
complete, the log writer thread that should bring the writeback to
completion picks up the folio being written back in
nilfs_lookup_dirty_data_buffers() that it calls for subsequent log
creation and was trying to lock the folio.  Thus causing a deadlock.

In the first place, it is unexpected that folios/pages in the middle of
writeback will be updated and become dirty.  Nilfs2 adds a checksum to
verify the validity of the log being written and uses it for recovery at
mount, so data changes during writeback are suppressed.  Since this is
broken, an unclean shutdown could potentially cause recovery to fail.

Investigation revealed that the root cause is that the wait for writeback
completion in nilfs_page_mkwrite() is conditional, and if the backing
device does not require stable writes, data may be modified without
waiting.

Fix these issues by making nilfs_page_mkwrite() wait for writeback to
finish regardless of the stable write requirement of the backing device.</description><pubDate>Wed, 03 Apr 2024 15:08:19 +0000</pubDate></item><item><title>CVE-2024-26697 | nilfs2: fix data corruption in dsync block recovery for small block sizes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26697</link><description>In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix data corruption in dsync block recovery for small block sizes

The helper function nilfs_recovery_copy_block() of
nilfs_recovery_dsync_blocks(), which recovers data from logs created by
data sync writes during a mount after an unclean shutdown, incorrectly
calculates the on-page offset when copying repair data to the file's page
cache.  In environments where the block size is smaller than the page
size, this flaw can cause data corruption and leak uninitialized memory
bytes during the recovery process.

Fix these issues by correcting this byte offset calculation on the page.</description><pubDate>Wed, 03 Apr 2024 15:08:19 +0000</pubDate></item><item><title>CVE-2024-26698 | hv_netvsc: Fix race condition between netvsc_probe and netvsc_remove</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26698</link><description>In the Linux kernel, the following vulnerability has been resolved:

hv_netvsc: Fix race condition between netvsc_probe and netvsc_remove

In commit ac5047671758 ("hv_netvsc: Disable NAPI before closing the
VMBus channel"), napi_disable was getting called for all channels,
including all subchannels without confirming if they are enabled or not.

This caused hv_netvsc getting hung at napi_disable, when netvsc_probe()
has finished running but nvdev-&gt;subchan_work has not started yet.
netvsc_subchan_work() -&gt; rndis_set_subchannel() has not created the
sub-channels and because of that netvsc_sc_open() is not running.
netvsc_remove() calls cancel_work_sync(&amp;nvdev-&gt;subchan_work), for which
netvsc_subchan_work did not run.

netif_napi_add() sets the bit NAPI_STATE_SCHED because it ensures NAPI
cannot be scheduled. Then netvsc_sc_open() -&gt; napi_enable will clear the
NAPIF_STATE_SCHED bit, so it can be scheduled. napi_disable() does the
opposite.

Now during netvsc_device_remove(), when napi_disable is called for those
subchannels, napi_disable gets stuck on infinite msleep.

This fix addresses this problem by ensuring that napi_disable() is not
getting called for non-enabled NAPI struct.
But netif_napi_del() is still necessary for these non-enabled NAPI struct
for cleanup purpose.

Call trace:
[  654.559417] task:modprobe        state:D stack:    0 pid: 2321 ppid:  1091 flags:0x00004002
[  654.568030] Call Trace:
[  654.571221]  &lt;TASK&gt;
[  654.573790]  __schedule+0x2d6/0x960
[  654.577733]  schedule+0x69/0xf0
[  654.581214]  schedule_timeout+0x87/0x140
[  654.585463]  ? __bpf_trace_tick_stop+0x20/0x20
[  654.590291]  msleep+0x2d/0x40
[  654.593625]  napi_disable+0x2b/0x80
[  654.597437]  netvsc_device_remove+0x8a/0x1f0 [hv_netvsc]
[  654.603935]  rndis_filter_device_remove+0x194/0x1c0 [hv_netvsc]
[  654.611101]  ? do_wait_intr+0xb0/0xb0
[  654.615753]  netvsc_remove+0x7c/0x120 [hv_netvsc]
[  654.621675]  vmbus_remove+0x27/0x40 [hv_vmbus]</description><pubDate>Wed, 03 Apr 2024 15:08:20 +0000</pubDate></item><item><title>CVE-2024-26699 | drm/amd/display: Fix array-index-out-of-bounds in dcn35_clkmgr</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26699</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix array-index-out-of-bounds in dcn35_clkmgr

[Why]
There is a potential memory access violation while
iterating through array of dcn35 clks.

[How]
Limit iteration per array size.</description><pubDate>Wed, 03 Apr 2024 15:08:20 +0000</pubDate></item><item><title>CVE-2024-26700 | drm/amd/display: Fix MST Null Ptr for RV</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26700</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix MST Null Ptr for RV

The change try to fix below error specific to RV platform:

BUG: kernel NULL pointer dereference, address: 0000000000000008
PGD 0 P4D 0
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 4 PID: 917 Comm: sway Not tainted 6.3.9-arch1-1 #1 124dc55df4f5272ccb409f39ef4872fc2b3376a2
Hardware name: LENOVO 20NKS01Y00/20NKS01Y00, BIOS R12ET61W(1.31 ) 07/28/2022
RIP: 0010:drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper]
Code: 01 00 00 48 8b 85 60 05 00 00 48 63 80 88 00 00 00 3b 43 28 0f 8d 2e 01 00 00 48 8b 53 30 48 8d 04 80 48 8d 04 c2 48 8b 40 18 &lt;48&gt; 8&gt;
RSP: 0018:ffff960cc2df77d8 EFLAGS: 00010293
RAX: 0000000000000000 RBX: ffff8afb87e81280 RCX: 0000000000000224
RDX: ffff8afb9ee37c00 RSI: ffff8afb8da1a578 RDI: ffff8afb87e81280
RBP: ffff8afb83d67000 R08: 0000000000000001 R09: ffff8afb9652f850
R10: ffff960cc2df7908 R11: 0000000000000002 R12: 0000000000000000
R13: ffff8afb8d7688a0 R14: ffff8afb8da1a578 R15: 0000000000000224
FS:  00007f4dac35ce00(0000) GS:ffff8afe30b00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000008 CR3: 000000010ddc6000 CR4: 00000000003506e0
Call Trace:
 &lt;TASK&gt;
 ? __die+0x23/0x70
 ? page_fault_oops+0x171/0x4e0
 ? plist_add+0xbe/0x100
 ? exc_page_fault+0x7c/0x180
 ? asm_exc_page_fault+0x26/0x30
 ? drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]
 ? drm_dp_atomic_find_time_slots+0x28/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]
 compute_mst_dsc_configs_for_link+0x2ff/0xa40 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
 ? fill_plane_buffer_attributes+0x419/0x510 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
 compute_mst_dsc_configs_for_state+0x1e1/0x250 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
 amdgpu_dm_atomic_check+0xecd/0x1190 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
 drm_atomic_check_only+0x5c5/0xa40
 drm_mode_atomic_ioctl+0x76e/0xbc0
 ? _copy_to_user+0x25/0x30
 ? drm_ioctl+0x296/0x4b0
 ? __pfx_drm_mode_atomic_ioctl+0x10/0x10
 drm_ioctl_kernel+0xcd/0x170
 drm_ioctl+0x26d/0x4b0
 ? __pfx_drm_mode_atomic_ioctl+0x10/0x10
 amdgpu_drm_ioctl+0x4e/0x90 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
 __x64_sys_ioctl+0x94/0xd0
 do_syscall_64+0x60/0x90
 ? do_syscall_64+0x6c/0x90
 entry_SYSCALL_64_after_hwframe+0x72/0xdc
RIP: 0033:0x7f4dad17f76f
Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24 10 00 00 00 48 89 44 24 08 48 8d 44 24 20 48 89 44 24 10 b8 10 00 00 00 0f 05 &lt;89&gt; c&gt;
RSP: 002b:00007ffd9ae859f0 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 000055e255a55900 RCX: 00007f4dad17f76f
RDX: 00007ffd9ae85a90 RSI: 00000000c03864bc RDI: 000000000000000b
RBP: 00007ffd9ae85a90 R08: 0000000000000003 R09: 0000000000000003
R10: 0000000000000000 R11: 0000000000000246 R12: 00000000c03864bc
R13: 000000000000000b R14: 000055e255a7fc60 R15: 000055e255a01eb0
 &lt;/TASK&gt;
Modules linked in: rfcomm snd_seq_dummy snd_hrtimer snd_seq snd_seq_device ccm cmac algif_hash algif_skcipher af_alg joydev mousedev bnep &gt;
 typec libphy k10temp ipmi_msghandler roles i2c_scmi acpi_cpufreq mac_hid nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_mas&gt;
CR2: 0000000000000008
---[ end trace 0000000000000000 ]---
RIP: 0010:drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper]
Code: 01 00 00 48 8b 85 60 05 00 00 48 63 80 88 00 00 00 3b 43 28 0f 8d 2e 01 00 00 48 8b 53 30 48 8d 04 80 48 8d 04 c2 48 8b 40 18 &lt;48&gt; 8&gt;
RSP: 0018:ffff960cc2df77d8 EFLAGS: 00010293
RAX: 0000000000000000 RBX: ffff8afb87e81280 RCX: 0000000000000224
RDX: ffff8afb9ee37c00 RSI: ffff8afb8da1a578 RDI: ffff8afb87e81280
RBP: ffff8afb83d67000 R08: 0000000000000001 R09: ffff8afb9652f850
R10: ffff960cc2df7908 R11: 0000000000000002 R12: 0000000000000000
R13: ffff8afb8d7688a0 R14: ffff8afb8da1a578 R15: 0000000000000224
FS:  00007f4dac35ce00(0000) GS:ffff8afe30b00000(0000
---truncated---</description><pubDate>Wed, 03 Apr 2024 15:08:20 +0000</pubDate></item><item><title>CVE-2024-26702 | iio: magnetometer: rm3100: add boundary check for the value read from RM3100_REG_TMRC</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26702</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: magnetometer: rm3100: add boundary check for the value read from RM3100_REG_TMRC

Recently, we encounter kernel crash in function rm3100_common_probe
caused by out of bound access of array rm3100_samp_rates (because of
underlying hardware failures). Add boundary check to prevent out of
bound access.</description><pubDate>Wed, 03 Apr 2024 15:08:21 +0000</pubDate></item><item><title>CVE-2024-26703 | tracing/timerlat: Move hrtimer_init to timerlat_fd open()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26703</link><description>In the Linux kernel, the following vulnerability has been resolved:

tracing/timerlat: Move hrtimer_init to timerlat_fd open()

Currently, the timerlat's hrtimer is initialized at the first read of
timerlat_fd, and destroyed at close(). It works, but it causes an error
if the user program open() and close() the file without reading.

Here's an example:

 # echo NO_OSNOISE_WORKLOAD &gt; /sys/kernel/debug/tracing/osnoise/options
 # echo timerlat &gt; /sys/kernel/debug/tracing/current_tracer

 # cat &lt;&lt;EOF &gt; ./timerlat_load.py
 # !/usr/bin/env python3

 timerlat_fd = open("/sys/kernel/tracing/osnoise/per_cpu/cpu0/timerlat_fd", 'r')
 timerlat_fd.close();
 EOF

 # ./taskset -c 0 ./timerlat_load.py
&lt;BOOM&gt;

 BUG: kernel NULL pointer dereference, address: 0000000000000010
 #PF: supervisor read access in kernel mode
 #PF: error_code(0x0000) - not-present page
 PGD 0 P4D 0
 Oops: 0000 [#1] PREEMPT SMP NOPTI
 CPU: 1 PID: 2673 Comm: python3 Not tainted 6.6.13-200.fc39.x86_64 #1
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39 04/01/2014
 RIP: 0010:hrtimer_active+0xd/0x50
 Code: 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 0f 1f 44 00 00 48 8b 57 30 &lt;8b&gt; 42 10 a8 01 74 09 f3 90 8b 42 10 a8 01 75 f7 80 7f 38 00 75 1d
 RSP: 0018:ffffb031009b7e10 EFLAGS: 00010286
 RAX: 000000000002db00 RBX: ffff9118f786db08 RCX: 0000000000000000
 RDX: 0000000000000000 RSI: ffff9117a0e64400 RDI: ffff9118f786db08
 RBP: ffff9118f786db80 R08: ffff9117a0ddd420 R09: ffff9117804d4f70
 R10: 0000000000000000 R11: 0000000000000000 R12: ffff9118f786db08
 R13: ffff91178fdd5e20 R14: ffff9117840978c0 R15: 0000000000000000
 FS:  00007f2ffbab1740(0000) GS:ffff9118f7840000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 0000000000000010 CR3: 00000001b402e000 CR4: 0000000000750ee0
 PKRU: 55555554
 Call Trace:
  &lt;TASK&gt;
  ? __die+0x23/0x70
  ? page_fault_oops+0x171/0x4e0
  ? srso_alias_return_thunk+0x5/0x7f
  ? avc_has_extended_perms+0x237/0x520
  ? exc_page_fault+0x7f/0x180
  ? asm_exc_page_fault+0x26/0x30
  ? hrtimer_active+0xd/0x50
  hrtimer_cancel+0x15/0x40
  timerlat_fd_release+0x48/0xe0
  __fput+0xf5/0x290
  __x64_sys_close+0x3d/0x80
  do_syscall_64+0x60/0x90
  ? srso_alias_return_thunk+0x5/0x7f
  ? __x64_sys_ioctl+0x72/0xd0
  ? srso_alias_return_thunk+0x5/0x7f
  ? syscall_exit_to_user_mode+0x2b/0x40
  ? srso_alias_return_thunk+0x5/0x7f
  ? do_syscall_64+0x6c/0x90
  ? srso_alias_return_thunk+0x5/0x7f
  ? exit_to_user_mode_prepare+0x142/0x1f0
  ? srso_alias_return_thunk+0x5/0x7f
  ? syscall_exit_to_user_mode+0x2b/0x40
  ? srso_alias_return_thunk+0x5/0x7f
  ? do_syscall_64+0x6c/0x90
  entry_SYSCALL_64_after_hwframe+0x6e/0xd8
 RIP: 0033:0x7f2ffb321594
 Code: 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 80 3d d5 cd 0d 00 00 74 13 b8 03 00 00 00 0f 05 &lt;48&gt; 3d 00 f0 ff ff 77 3c c3 0f 1f 00 55 48 89 e5 48 83 ec 10 89 7d
 RSP: 002b:00007ffe8d8eef18 EFLAGS: 00000202 ORIG_RAX: 0000000000000003
 RAX: ffffffffffffffda RBX: 00007f2ffba4e668 RCX: 00007f2ffb321594
 RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000003
 RBP: 00007ffe8d8eef40 R08: 0000000000000000 R09: 0000000000000000
 R10: 55c926e3167eae79 R11: 0000000000000202 R12: 0000000000000003
 R13: 00007ffe8d8ef030 R14: 0000000000000000 R15: 00007f2ffba4e668
  &lt;/TASK&gt;
 CR2: 0000000000000010
 ---[ end trace 0000000000000000 ]---

Move hrtimer_init to timerlat_fd open() to avoid this problem.</description><pubDate>Wed, 03 Apr 2024 15:08:21 +0000</pubDate></item><item><title>CVE-2024-26704 | ext4: fix double-free of blocks due to wrong extents moved_len</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26704</link><description>In the Linux kernel, the following vulnerability has been resolved:

ext4: fix double-free of blocks due to wrong extents moved_len

In ext4_move_extents(), moved_len is only updated when all moves are
successfully executed, and only discards orig_inode and donor_inode
preallocations when moved_len is not zero. When the loop fails to exit
after successfully moving some extents, moved_len is not updated and
remains at 0, so it does not discard the preallocations.

If the moved extents overlap with the preallocated extents, the
overlapped extents are freed twice in ext4_mb_release_inode_pa() and
ext4_process_freed_data() (as described in commit 94d7c16cbbbd ("ext4:
Fix double-free of blocks with EXT4_IOC_MOVE_EXT")), and bb_free is
incremented twice. Hence when trim is executed, a zero-division bug is
triggered in mb_update_avg_fragment_size() because bb_free is not zero
and bb_fragments is zero.

Therefore, update move_len after each extent move to avoid the issue.</description><pubDate>Wed, 03 Apr 2024 15:08:21 +0000</pubDate></item><item><title>CVE-2024-26705 | parisc: BTLB: Fix crash when setting up BTLB at CPU bringup</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26705</link><description>In the Linux kernel, the following vulnerability has been resolved:

parisc: BTLB: Fix crash when setting up BTLB at CPU bringup

When using hotplug and bringing up a 32-bit CPU, ask the firmware about the
BTLB information to set up the static (block) TLB entries.

For that write access to the static btlb_info struct is needed, but
since it is marked __ro_after_init the kernel segfaults with missing
write permissions.

Fix the crash by dropping the __ro_after_init annotation.</description><pubDate>Wed, 03 Apr 2024 15:08:22 +0000</pubDate></item><item><title>CVE-2024-26706 | parisc: Fix random data corruption from exception handler</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26706</link><description>In the Linux kernel, the following vulnerability has been resolved:

parisc: Fix random data corruption from exception handler

The current exception handler implementation, which assists when accessing
user space memory, may exhibit random data corruption if the compiler decides
to use a different register than the specified register %r29 (defined in
ASM_EXCEPTIONTABLE_REG) for the error code. If the compiler choose another
register, the fault handler will nevertheless store -EFAULT into %r29 and thus
trash whatever this register is used for.
Looking at the assembly I found that this happens sometimes in emulate_ldd().

To solve the issue, the easiest solution would be if it somehow is
possible to tell the fault handler which register is used to hold the error
code. Using %0 or %1 in the inline assembly is not posssible as it will show
up as e.g. %r29 (with the "%r" prefix), which the GNU assembler can not
convert to an integer.

This patch takes another, better and more flexible approach:
We extend the __ex_table (which is out of the execution path) by one 32-word.
In this word we tell the compiler to insert the assembler instruction
"or %r0,%r0,%reg", where %reg references the register which the compiler
choosed for the error return code.
In case of an access failure, the fault handler finds the __ex_table entry and
can examine the opcode. The used register is encoded in the lowest 5 bits, and
the fault handler can then store -EFAULT into this register.

Since we extend the __ex_table to 3 words we can't use the BUILDTIME_TABLE_SORT
config option any longer.</description><pubDate>Wed, 03 Apr 2024 15:08:22 +0000</pubDate></item><item><title>CVE-2024-26707 | net: hsr: remove WARN_ONCE() in send_hsr_supervision_frame()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26707</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: hsr: remove WARN_ONCE() in send_hsr_supervision_frame()

Syzkaller reported [1] hitting a warning after failing to allocate
resources for skb in hsr_init_skb(). Since a WARN_ONCE() call will
not help much in this case, it might be prudent to switch to
netdev_warn_once(). At the very least it will suppress syzkaller
reports such as [1].

Just in case, use netdev_warn_once() in send_prp_supervision_frame()
for similar reasons.

[1]
HSR: Could not send supervision frame
WARNING: CPU: 1 PID: 85 at net/hsr/hsr_device.c:294 send_hsr_supervision_frame+0x60a/0x810 net/hsr/hsr_device.c:294
RIP: 0010:send_hsr_supervision_frame+0x60a/0x810 net/hsr/hsr_device.c:294
...
Call Trace:
 &lt;IRQ&gt;
 hsr_announce+0x114/0x370 net/hsr/hsr_device.c:382
 call_timer_fn+0x193/0x590 kernel/time/timer.c:1700
 expire_timers kernel/time/timer.c:1751 [inline]
 __run_timers+0x764/0xb20 kernel/time/timer.c:2022
 run_timer_softirq+0x58/0xd0 kernel/time/timer.c:2035
 __do_softirq+0x21a/0x8de kernel/softirq.c:553
 invoke_softirq kernel/softirq.c:427 [inline]
 __irq_exit_rcu kernel/softirq.c:632 [inline]
 irq_exit_rcu+0xb7/0x120 kernel/softirq.c:644
 sysvec_apic_timer_interrupt+0x95/0xb0 arch/x86/kernel/apic/apic.c:1076
 &lt;/IRQ&gt;
 &lt;TASK&gt;
 asm_sysvec_apic_timer_interrupt+0x1a/0x20 arch/x86/include/asm/idtentry.h:649
...

This issue is also found in older kernels (at least up to 5.10).</description><pubDate>Wed, 03 Apr 2024 15:08:22 +0000</pubDate></item><item><title>CVE-2024-26708 | mptcp: really cope with fastopen race</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26708</link><description>In the Linux kernel, the following vulnerability has been resolved:

mptcp: really cope with fastopen race

Fastopen and PM-trigger subflow shutdown can race, as reported by
syzkaller.

In my first attempt to close such race, I missed the fact that
the subflow status can change again before the subflow_state_change
callback is invoked.

Address the issue additionally copying with all the states directly
reachable from TCP_FIN_WAIT1.</description><pubDate>Wed, 03 Apr 2024 15:08:23 +0000</pubDate></item><item><title>CVE-2024-26709 | powerpc/iommu: Fix the missing iommu_group_put() during platform domain attach</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26709</link><description>In the Linux kernel, the following vulnerability has been resolved:

powerpc/iommu: Fix the missing iommu_group_put() during platform domain attach

The function spapr_tce_platform_iommu_attach_dev() is missing to call
iommu_group_put() when the domain is already set. This refcount leak
shows up with BUG_ON() during DLPAR remove operation as:

  KernelBug: Kernel bug in state 'None': kernel BUG at arch/powerpc/platforms/pseries/iommu.c:100!
  Oops: Exception in kernel mode, sig: 5 [#1]
  LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=8192 NUMA pSeries
  &lt;snip&gt;
  Hardware name: IBM,9080-HEX POWER10 (raw) 0x800200 0xf000006 of:IBM,FW1060.00 (NH1060_016) hv:phyp pSeries
  NIP:  c0000000000ff4d4 LR: c0000000000ff4cc CTR: 0000000000000000
  REGS: c0000013aed5f840 TRAP: 0700   Tainted: G          I         (6.8.0-rc3-autotest-g99bd3cb0d12e)
  MSR:  8000000000029033 &lt;SF,EE,ME,IR,DR,RI,LE&gt;  CR: 44002402  XER: 20040000
  CFAR: c000000000a0d170 IRQMASK: 0
  ...
  NIP iommu_reconfig_notifier+0x94/0x200
  LR  iommu_reconfig_notifier+0x8c/0x200
  Call Trace:
    iommu_reconfig_notifier+0x8c/0x200 (unreliable)
    notifier_call_chain+0xb8/0x19c
    blocking_notifier_call_chain+0x64/0x98
    of_reconfig_notify+0x44/0xdc
    of_detach_node+0x78/0xb0
    ofdt_write.part.0+0x86c/0xbb8
    proc_reg_write+0xf4/0x150
    vfs_write+0xf8/0x488
    ksys_write+0x84/0x140
    system_call_exception+0x138/0x330
    system_call_vectored_common+0x15c/0x2ec

The patch adds the missing iommu_group_put() call.</description><pubDate>Wed, 03 Apr 2024 15:08:23 +0000</pubDate></item><item><title>CVE-2024-26710 | powerpc/kasan: Limit KASAN thread size increase to 32KB</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26710</link><description>In the Linux kernel, the following vulnerability has been resolved:

powerpc/kasan: Limit KASAN thread size increase to 32KB

KASAN is seen to increase stack usage, to the point that it was reported
to lead to stack overflow on some 32-bit machines (see link).

To avoid overflows the stack size was doubled for KASAN builds in
commit 3e8635fb2e07 ("powerpc/kasan: Force thread size increase with
KASAN").

However with a 32KB stack size to begin with, the doubling leads to a
64KB stack, which causes build errors:
  arch/powerpc/kernel/switch.S:249: Error: operand out of range (0x000000000000fe50 is not between 0xffffffffffff8000 and 0x0000000000007fff)

Although the asm could be reworked, in practice a 32KB stack seems
sufficient even for KASAN builds - the additional usage seems to be in
the 2-3KB range for a 64-bit KASAN build.

So only increase the stack for KASAN if the stack size is &lt; 32KB.</description><pubDate>Wed, 03 Apr 2024 15:08:23 +0000</pubDate></item><item><title>CVE-2024-26711 | iio: adc: ad4130: zero-initialize clock init data</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26711</link><description>In the Linux kernel, the following vulnerability has been resolved:

iio: adc: ad4130: zero-initialize clock init data

The clk_init_data struct does not have all its members
initialized, causing issues when trying to expose the internal
clock on the CLK pin.

Fix this by zero-initializing the clk_init_data struct.</description><pubDate>Wed, 03 Apr 2024 15:08:24 +0000</pubDate></item><item><title>CVE-2024-26712 | powerpc/kasan: Fix addr error caused by page alignment</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26712</link><description>In the Linux kernel, the following vulnerability has been resolved:

powerpc/kasan: Fix addr error caused by page alignment

In kasan_init_region, when k_start is not page aligned, at the begin of
for loop, k_cur = k_start &amp; PAGE_MASK is less than k_start, and then
`va = block + k_cur - k_start` is less than block, the addr va is invalid,
because the memory address space from va to block is not alloced by
memblock_alloc, which will not be reserved by memblock_reserve later, it
will be used by other places.

As a result, memory overwriting occurs.

for example:
int __init __weak kasan_init_region(void *start, size_t size)
{
[...]
	/* if say block(dcd97000) k_start(feef7400) k_end(feeff3fe) */
	block = memblock_alloc(k_end - k_start, PAGE_SIZE);
	[...]
	for (k_cur = k_start &amp; PAGE_MASK; k_cur &lt; k_end; k_cur += PAGE_SIZE) {
		/* at the begin of for loop
		 * block(dcd97000) va(dcd96c00) k_cur(feef7000) k_start(feef7400)
		 * va(dcd96c00) is less than block(dcd97000), va is invalid
		 */
		void *va = block + k_cur - k_start;
		[...]
	}
[...]
}

Therefore, page alignment is performed on k_start before
memblock_alloc() to ensure the validity of the VA address.</description><pubDate>Wed, 03 Apr 2024 15:08:24 +0000</pubDate></item><item><title>CVE-2024-26713 | powerpc/pseries/iommu: Fix iommu initialisation during DLPAR add</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26713</link><description>In the Linux kernel, the following vulnerability has been resolved:

powerpc/pseries/iommu: Fix iommu initialisation during DLPAR add

When a PCI device is dynamically added, the kernel oopses with a NULL
pointer dereference:

  BUG: Kernel NULL pointer dereference on read at 0x00000030
  Faulting instruction address: 0xc0000000006bbe5c
  Oops: Kernel access of bad area, sig: 11 [#1]
  LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries
  Modules linked in: rpadlpar_io rpaphp rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache netfs xsk_diag bonding nft_compat nf_tables nfnetlink rfkill binfmt_misc dm_multipath rpcrdma sunrpc rdma_ucm ib_srpt ib_isert iscsi_target_mod target_core_mod ib_umad ib_iser libiscsi scsi_transport_iscsi ib_ipoib rdma_cm iw_cm ib_cm mlx5_ib ib_uverbs ib_core pseries_rng drm drm_panel_orientation_quirks xfs libcrc32c mlx5_core mlxfw sd_mod t10_pi sg tls ibmvscsi ibmveth scsi_transport_srp vmx_crypto pseries_wdt psample dm_mirror dm_region_hash dm_log dm_mod fuse
  CPU: 17 PID: 2685 Comm: drmgr Not tainted 6.7.0-203405+ #66
  Hardware name: IBM,9080-HEX POWER10 (raw) 0x800200 0xf000006 of:IBM,FW1060.00 (NH1060_008) hv:phyp pSeries
  NIP:  c0000000006bbe5c LR: c000000000a13e68 CTR: c0000000000579f8
  REGS: c00000009924f240 TRAP: 0300   Not tainted  (6.7.0-203405+)
  MSR:  8000000000009033 &lt;SF,EE,ME,IR,DR,RI,LE&gt;  CR: 24002220  XER: 20040006
  CFAR: c000000000a13e64 DAR: 0000000000000030 DSISR: 40000000 IRQMASK: 0
  ...
  NIP sysfs_add_link_to_group+0x34/0x94
  LR  iommu_device_link+0x5c/0x118
  Call Trace:
   iommu_init_device+0x26c/0x318 (unreliable)
   iommu_device_link+0x5c/0x118
   iommu_init_device+0xa8/0x318
   iommu_probe_device+0xc0/0x134
   iommu_bus_notifier+0x44/0x104
   notifier_call_chain+0xb8/0x19c
   blocking_notifier_call_chain+0x64/0x98
   bus_notify+0x50/0x7c
   device_add+0x640/0x918
   pci_device_add+0x23c/0x298
   of_create_pci_dev+0x400/0x884
   of_scan_pci_dev+0x124/0x1b0
   __of_scan_bus+0x78/0x18c
   pcibios_scan_phb+0x2a4/0x3b0
   init_phb_dynamic+0xb8/0x110
   dlpar_add_slot+0x170/0x3b8 [rpadlpar_io]
   add_slot_store.part.0+0xb4/0x130 [rpadlpar_io]
   kobj_attr_store+0x2c/0x48
   sysfs_kf_write+0x64/0x78
   kernfs_fop_write_iter+0x1b0/0x290
   vfs_write+0x350/0x4a0
   ksys_write+0x84/0x140
   system_call_exception+0x124/0x330
   system_call_vectored_common+0x15c/0x2ec

Commit a940904443e4 ("powerpc/iommu: Add iommu_ops to report capabilities
and allow blocking domains") broke DLPAR add of PCI devices.

The above added iommu_device structure to pci_controller. During
system boot, PCI devices are discovered and this newly added iommu_device
structure is initialized by a call to iommu_device_register().

During DLPAR add of a PCI device, a new pci_controller structure is
allocated but there are no calls made to iommu_device_register()
interface.

Fix is to register the iommu device during DLPAR add as well.

[mpe: Trim oops and tweak some change log wording]</description><pubDate>Wed, 03 Apr 2024 15:08:24 +0000</pubDate></item><item><title>CVE-2024-26714 | interconnect: qcom: sc8180x: Mark CO0 BCM keepalive</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26714</link><description>In the Linux kernel, the following vulnerability has been resolved:

interconnect: qcom: sc8180x: Mark CO0 BCM keepalive

The CO0 BCM needs to be up at all times, otherwise some hardware (like
the UFS controller) loses its connection to the rest of the SoC,
resulting in a hang of the platform, accompanied by a spectacular
logspam.

Mark it as keepalive to prevent such cases.</description><pubDate>Wed, 03 Apr 2024 15:08:25 +0000</pubDate></item><item><title>CVE-2024-26715 | usb: dwc3: gadget: Fix NULL pointer dereference in dwc3_gadget_suspend</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26715</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: dwc3: gadget: Fix NULL pointer dereference in dwc3_gadget_suspend

In current scenario if Plug-out and Plug-In performed continuously
there could be a chance while checking for dwc-&gt;gadget_driver in
dwc3_gadget_suspend, a NULL pointer dereference may occur.

Call Stack:

	CPU1:                           CPU2:
	gadget_unbind_driver            dwc3_suspend_common
	dwc3_gadget_stop                dwc3_gadget_suspend
                                        dwc3_disconnect_gadget

CPU1 basically clears the variable and CPU2 checks the variable.
Consider CPU1 is running and right before gadget_driver is cleared
and in parallel CPU2 executes dwc3_gadget_suspend where it finds
dwc-&gt;gadget_driver which is not NULL and resumes execution and then
CPU1 completes execution. CPU2 executes dwc3_disconnect_gadget where
it checks dwc-&gt;gadget_driver is already NULL because of which the
NULL pointer deference occur.</description><pubDate>Wed, 03 Apr 2024 15:08:25 +0000</pubDate></item><item><title>CVE-2024-26716 | usb: core: Prevent null pointer dereference in update_port_device_state</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26716</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: core: Prevent null pointer dereference in update_port_device_state

Currently, the function update_port_device_state gets the usb_hub from
udev-&gt;parent by calling usb_hub_to_struct_hub.
However, in case the actconfig or the maxchild is 0, the usb_hub would
be NULL and upon further accessing to get port_dev would result in null
pointer dereference.

Fix this by introducing an if check after the usb_hub is populated.</description><pubDate>Wed, 03 Apr 2024 15:08:25 +0000</pubDate></item><item><title>CVE-2024-26717 | HID: i2c-hid-of: fix NULL-deref on failed power up</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26717</link><description>In the Linux kernel, the following vulnerability has been resolved:

HID: i2c-hid-of: fix NULL-deref on failed power up

A while back the I2C HID implementation was split in an ACPI and OF
part, but the new OF driver never initialises the client pointer which
is dereferenced on power-up failures.</description><pubDate>Wed, 03 Apr 2024 15:08:26 +0000</pubDate></item><item><title>CVE-2024-26718 | dm-crypt, dm-verity: disable tasklets</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26718</link><description>In the Linux kernel, the following vulnerability has been resolved:

dm-crypt, dm-verity: disable tasklets

Tasklets have an inherent problem with memory corruption. The function
tasklet_action_common calls tasklet_trylock, then it calls the tasklet
callback and then it calls tasklet_unlock. If the tasklet callback frees
the structure that contains the tasklet or if it calls some code that may
free it, tasklet_unlock will write into free memory.

The commits 8e14f610159d and d9a02e016aaf try to fix it for dm-crypt, but
it is not a sufficient fix and the data corruption can still happen [1].
There is no fix for dm-verity and dm-verity will write into free memory
with every tasklet-processed bio.

There will be atomic workqueues implemented in the kernel 6.9 [2]. They
will have better interface and they will not suffer from the memory
corruption problem.

But we need something that stops the memory corruption now and that can be
backported to the stable kernels. So, I'm proposing this commit that
disables tasklets in both dm-crypt and dm-verity. This commit doesn't
remove the tasklet support, because the tasklet code will be reused when
atomic workqueues will be implemented.

[1] https://lore.kernel.org/all/d390d7ee-f142-44d3-822a-87949e14608b@suse.de/T/
[2] https://lore.kernel.org/lkml/20240130091300.2968534-1-tj@kernel.org/</description><pubDate>Wed, 03 Apr 2024 15:08:26 +0000</pubDate></item><item><title>CVE-2024-26719 | nouveau: offload fence uevents work to workqueue</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26719</link><description>In the Linux kernel, the following vulnerability has been resolved:

nouveau: offload fence uevents work to workqueue

This should break the deadlock between the fctx lock and the irq lock.

This offloads the processing off the work from the irq into a workqueue.</description><pubDate>Wed, 03 Apr 2024 15:08:26 +0000</pubDate></item><item><title>CVE-2024-26720 | mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26720</link><description>In the Linux kernel, the following vulnerability has been resolved:

mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again

(struct dirty_throttle_control *)-&gt;thresh is an unsigned long, but is
passed as the u32 divisor argument to div_u64().  On architectures where
unsigned long is 64 bytes, the argument will be implicitly truncated.

Use div64_u64() instead of div_u64() so that the value used in the "is
this a safe division" check is the same as the divisor.

Also, remove redundant cast of the numerator to u64, as that should happen
implicitly.

This would be difficult to exploit in memcg domain, given the ratio-based
arithmetic domain_drity_limits() uses, but is much easier in global
writeback domain with a BDI_CAP_STRICTLIMIT-backing device, using e.g. 
vm.dirty_bytes=(1&lt;&lt;32)*PAGE_SIZE so that dtc-&gt;thresh == (1&lt;&lt;32)</description><pubDate>Wed, 03 Apr 2024 15:08:27 +0000</pubDate></item><item><title>CVE-2024-26721 | drm/i915/dsc: Fix the macro that calculates DSCC_/DSCA_ PPS reg address</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26721</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/i915/dsc: Fix the macro that calculates DSCC_/DSCA_ PPS reg address

Commit bd077259d0a9 ("drm/i915/vdsc: Add function to read any PPS
register") defines a new macro to calculate the DSC PPS register
addresses with PPS number as an input. This macro correctly calculates
the addresses till PPS 11 since the addresses increment by 4. So in that
case the following macro works correctly to give correct register
address:

_MMIO(_DSCA_PPS_0 + (pps) * 4)

However after PPS 11, the register address for PPS 12 increments by 12
because of RC Buffer memory allocation in between. Because of this
discontinuity in the address space, the macro calculates wrong addresses
for PPS 12 - 16 resulting into incorrect DSC PPS parameter value
read/writes causing DSC corruption.

This fixes it by correcting this macro to add the offset of 12 for PPS
&gt;=12.

v3: Add correct paranthesis for pps argument (Jani Nikula)

(cherry picked from commit 6074be620c31dc2ae11af96a1a5ea95580976fb5)</description><pubDate>Wed, 03 Apr 2024 15:08:27 +0000</pubDate></item><item><title>CVE-2024-26722 | ASoC: rt5645: Fix deadlock in rt5645_jack_detect_work()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26722</link><description>In the Linux kernel, the following vulnerability has been resolved:

ASoC: rt5645: Fix deadlock in rt5645_jack_detect_work()

There is a path in rt5645_jack_detect_work(), where rt5645-&gt;jd_mutex
is left locked forever. That may lead to deadlock
when rt5645_jack_detect_work() is called for the second time.

Found by Linux Verification Center (linuxtesting.org) with SVACE.</description><pubDate>Wed, 03 Apr 2024 15:08:27 +0000</pubDate></item><item><title>CVE-2024-26723 | lan966x: Fix crash when adding interface under a lag</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26723</link><description>In the Linux kernel, the following vulnerability has been resolved:

lan966x: Fix crash when adding interface under a lag

There is a crash when adding one of the lan966x interfaces under a lag
interface. The issue can be reproduced like this:
ip link add name bond0 type bond miimon 100 mode balance-xor
ip link set dev eth0 master bond0

The reason is because when adding a interface under the lag it would go
through all the ports and try to figure out which other ports are under
that lag interface. And the issue is that lan966x can have ports that are
NULL pointer as they are not probed. So then iterating over these ports
it would just crash as they are NULL pointers.
The fix consists in actually checking for NULL pointers before accessing
something from the ports. Like we do in other places.</description><pubDate>Wed, 03 Apr 2024 15:08:28 +0000</pubDate></item><item><title>CVE-2024-26724 | net/mlx5: DPLL, Fix possible use after free after delayed work timer triggers</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26724</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: DPLL, Fix possible use after free after delayed work timer triggers

I managed to hit following use after free warning recently:

[ 2169.711665] ==================================================================
[ 2169.714009] BUG: KASAN: slab-use-after-free in __run_timers.part.0+0x179/0x4c0
[ 2169.716293] Write of size 8 at addr ffff88812b326a70 by task swapper/4/0

[ 2169.719022] CPU: 4 PID: 0 Comm: swapper/4 Not tainted 6.8.0-rc2jiri+ #2
[ 2169.720974] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
[ 2169.722457] Call Trace:
[ 2169.722756]  &lt;IRQ&gt;
[ 2169.723024]  dump_stack_lvl+0x58/0xb0
[ 2169.723417]  print_report+0xc5/0x630
[ 2169.723807]  ? __virt_addr_valid+0x126/0x2b0
[ 2169.724268]  kasan_report+0xbe/0xf0
[ 2169.724667]  ? __run_timers.part.0+0x179/0x4c0
[ 2169.725116]  ? __run_timers.part.0+0x179/0x4c0
[ 2169.725570]  __run_timers.part.0+0x179/0x4c0
[ 2169.726003]  ? call_timer_fn+0x320/0x320
[ 2169.726404]  ? lock_downgrade+0x3a0/0x3a0
[ 2169.726820]  ? kvm_clock_get_cycles+0x14/0x20
[ 2169.727257]  ? ktime_get+0x92/0x150
[ 2169.727630]  ? lapic_next_deadline+0x35/0x60
[ 2169.728069]  run_timer_softirq+0x40/0x80
[ 2169.728475]  __do_softirq+0x1a1/0x509
[ 2169.728866]  irq_exit_rcu+0x95/0xc0
[ 2169.729241]  sysvec_apic_timer_interrupt+0x6b/0x80
[ 2169.729718]  &lt;/IRQ&gt;
[ 2169.729993]  &lt;TASK&gt;
[ 2169.730259]  asm_sysvec_apic_timer_interrupt+0x16/0x20
[ 2169.730755] RIP: 0010:default_idle+0x13/0x20
[ 2169.731190] Code: c0 08 00 00 00 4d 29 c8 4c 01 c7 4c 29 c2 e9 72 ff ff ff cc cc cc cc 8b 05 9a 7f 1f 02 85 c0 7e 07 0f 00 2d cf 69 43 00 fb f4 &lt;fa&gt; c3 66 66 2e 0f 1f 84 00 00 00 00 00 65 48 8b 04 25 c0 93 04 00
[ 2169.732759] RSP: 0018:ffff888100dbfe10 EFLAGS: 00000242
[ 2169.733264] RAX: 0000000000000001 RBX: ffff888100d9c200 RCX: ffffffff8241bd62
[ 2169.733925] RDX: ffffed109a848b15 RSI: 0000000000000004 RDI: ffffffff8127ac55
[ 2169.734566] RBP: 0000000000000004 R08: 0000000000000000 R09: ffffed109a848b14
[ 2169.735200] R10: ffff8884d42458a3 R11: 000000000000ba7e R12: ffffffff83d7d3a0
[ 2169.735835] R13: 1ffff110201b7fc6 R14: 0000000000000000 R15: ffff888100d9c200
[ 2169.736478]  ? ct_kernel_exit.constprop.0+0xa2/0xc0
[ 2169.736954]  ? do_idle+0x285/0x290
[ 2169.737323]  default_idle_call+0x63/0x90
[ 2169.737730]  do_idle+0x285/0x290
[ 2169.738089]  ? arch_cpu_idle_exit+0x30/0x30
[ 2169.738511]  ? mark_held_locks+0x1a/0x80
[ 2169.738917]  ? lockdep_hardirqs_on_prepare+0x12e/0x200
[ 2169.739417]  cpu_startup_entry+0x30/0x40
[ 2169.739825]  start_secondary+0x19a/0x1c0
[ 2169.740229]  ? set_cpu_sibling_map+0xbd0/0xbd0
[ 2169.740673]  secondary_startup_64_no_verify+0x15d/0x16b
[ 2169.741179]  &lt;/TASK&gt;

[ 2169.741686] Allocated by task 1098:
[ 2169.742058]  kasan_save_stack+0x1c/0x40
[ 2169.742456]  kasan_save_track+0x10/0x30
[ 2169.742852]  __kasan_kmalloc+0x83/0x90
[ 2169.743246]  mlx5_dpll_probe+0xf5/0x3c0 [mlx5_dpll]
[ 2169.743730]  auxiliary_bus_probe+0x62/0xb0
[ 2169.744148]  really_probe+0x127/0x590
[ 2169.744534]  __driver_probe_device+0xd2/0x200
[ 2169.744973]  device_driver_attach+0x6b/0xf0
[ 2169.745402]  bind_store+0x90/0xe0
[ 2169.745761]  kernfs_fop_write_iter+0x1df/0x2a0
[ 2169.746210]  vfs_write+0x41f/0x790
[ 2169.746579]  ksys_write+0xc7/0x160
[ 2169.746947]  do_syscall_64+0x6f/0x140
[ 2169.747333]  entry_SYSCALL_64_after_hwframe+0x46/0x4e

[ 2169.748049] Freed by task 1220:
[ 2169.748393]  kasan_save_stack+0x1c/0x40
[ 2169.748789]  kasan_save_track+0x10/0x30
[ 2169.749188]  kasan_save_free_info+0x3b/0x50
[ 2169.749621]  poison_slab_object+0x106/0x180
[ 2169.750044]  __kasan_slab_free+0x14/0x50
[ 2169.750451]  kfree+0x118/0x330
[ 2169.750792]  mlx5_dpll_remove+0xf5/0x110 [mlx5_dpll]
[ 2169.751271]  auxiliary_bus_remove+0x2e/0x40
[ 2169.751694]  device_release_driver_internal+0x24b/0x2e0
[ 2169.752191]  unbind_store+0xa6/0xb0
[ 2169.752563]  kernfs_fo
---truncated---</description><pubDate>Wed, 03 Apr 2024 15:08:28 +0000</pubDate></item><item><title>CVE-2024-26725 | dpll: fix possible deadlock during netlink dump operation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26725</link><description>In the Linux kernel, the following vulnerability has been resolved:

dpll: fix possible deadlock during netlink dump operation

Recently, I've been hitting following deadlock warning during dpll pin
dump:

[52804.637962] ======================================================
[52804.638536] WARNING: possible circular locking dependency detected
[52804.639111] 6.8.0-rc2jiri+ #1 Not tainted
[52804.639529] ------------------------------------------------------
[52804.640104] python3/2984 is trying to acquire lock:
[52804.640581] ffff88810e642678 (nlk_cb_mutex-GENERIC){+.+.}-{3:3}, at: netlink_dump+0xb3/0x780
[52804.641417]
               but task is already holding lock:
[52804.642010] ffffffff83bde4c8 (dpll_lock){+.+.}-{3:3}, at: dpll_lock_dumpit+0x13/0x20
[52804.642747]
               which lock already depends on the new lock.

[52804.643551]
               the existing dependency chain (in reverse order) is:
[52804.644259]
               -&gt; #1 (dpll_lock){+.+.}-{3:3}:
[52804.644836]        lock_acquire+0x174/0x3e0
[52804.645271]        __mutex_lock+0x119/0x1150
[52804.645723]        dpll_lock_dumpit+0x13/0x20
[52804.646169]        genl_start+0x266/0x320
[52804.646578]        __netlink_dump_start+0x321/0x450
[52804.647056]        genl_family_rcv_msg_dumpit+0x155/0x1e0
[52804.647575]        genl_rcv_msg+0x1ed/0x3b0
[52804.648001]        netlink_rcv_skb+0xdc/0x210
[52804.648440]        genl_rcv+0x24/0x40
[52804.648831]        netlink_unicast+0x2f1/0x490
[52804.649290]        netlink_sendmsg+0x36d/0x660
[52804.649742]        __sock_sendmsg+0x73/0xc0
[52804.650165]        __sys_sendto+0x184/0x210
[52804.650597]        __x64_sys_sendto+0x72/0x80
[52804.651045]        do_syscall_64+0x6f/0x140
[52804.651474]        entry_SYSCALL_64_after_hwframe+0x46/0x4e
[52804.652001]
               -&gt; #0 (nlk_cb_mutex-GENERIC){+.+.}-{3:3}:
[52804.652650]        check_prev_add+0x1ae/0x1280
[52804.653107]        __lock_acquire+0x1ed3/0x29a0
[52804.653559]        lock_acquire+0x174/0x3e0
[52804.653984]        __mutex_lock+0x119/0x1150
[52804.654423]        netlink_dump+0xb3/0x780
[52804.654845]        __netlink_dump_start+0x389/0x450
[52804.655321]        genl_family_rcv_msg_dumpit+0x155/0x1e0
[52804.655842]        genl_rcv_msg+0x1ed/0x3b0
[52804.656272]        netlink_rcv_skb+0xdc/0x210
[52804.656721]        genl_rcv+0x24/0x40
[52804.657119]        netlink_unicast+0x2f1/0x490
[52804.657570]        netlink_sendmsg+0x36d/0x660
[52804.658022]        __sock_sendmsg+0x73/0xc0
[52804.658450]        __sys_sendto+0x184/0x210
[52804.658877]        __x64_sys_sendto+0x72/0x80
[52804.659322]        do_syscall_64+0x6f/0x140
[52804.659752]        entry_SYSCALL_64_after_hwframe+0x46/0x4e
[52804.660281]
               other info that might help us debug this:

[52804.661077]  Possible unsafe locking scenario:

[52804.661671]        CPU0                    CPU1
[52804.662129]        ----                    ----
[52804.662577]   lock(dpll_lock);
[52804.662924]                                lock(nlk_cb_mutex-GENERIC);
[52804.663538]                                lock(dpll_lock);
[52804.664073]   lock(nlk_cb_mutex-GENERIC);
[52804.664490]

The issue as follows: __netlink_dump_start() calls control-&gt;start(cb)
with nlk-&gt;cb_mutex held. In control-&gt;start(cb) the dpll_lock is taken.
Then nlk-&gt;cb_mutex is released and taken again in netlink_dump(), while
dpll_lock still being held. That leads to ABBA deadlock when another
CPU races with the same operation.

Fix this by moving dpll_lock taking into dumpit() callback which ensures
correct lock taking order.</description><pubDate>Wed, 03 Apr 2024 15:08:30 +0000</pubDate></item><item><title>CVE-2024-26726 | btrfs: don&amp;#x27;t drop extent_map for free space inode on write error</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26726</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: don't drop extent_map for free space inode on write error

While running the CI for an unrelated change I hit the following panic
with generic/648 on btrfs_holes_spacecache.

assertion failed: block_start != EXTENT_MAP_HOLE, in fs/btrfs/extent_io.c:1385
------------[ cut here ]------------
kernel BUG at fs/btrfs/extent_io.c:1385!
invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
CPU: 1 PID: 2695096 Comm: fsstress Kdump: loaded Tainted: G        W          6.8.0-rc2+ #1
RIP: 0010:__extent_writepage_io.constprop.0+0x4c1/0x5c0
Call Trace:
 &lt;TASK&gt;
 extent_write_cache_pages+0x2ac/0x8f0
 extent_writepages+0x87/0x110
 do_writepages+0xd5/0x1f0
 filemap_fdatawrite_wbc+0x63/0x90
 __filemap_fdatawrite_range+0x5c/0x80
 btrfs_fdatawrite_range+0x1f/0x50
 btrfs_write_out_cache+0x507/0x560
 btrfs_write_dirty_block_groups+0x32a/0x420
 commit_cowonly_roots+0x21b/0x290
 btrfs_commit_transaction+0x813/0x1360
 btrfs_sync_file+0x51a/0x640
 __x64_sys_fdatasync+0x52/0x90
 do_syscall_64+0x9c/0x190
 entry_SYSCALL_64_after_hwframe+0x6e/0x76

This happens because we fail to write out the free space cache in one
instance, come back around and attempt to write it again.  However on
the second pass through we go to call btrfs_get_extent() on the inode to
get the extent mapping.  Because this is a new block group, and with the
free space inode we always search the commit root to avoid deadlocking
with the tree, we find nothing and return a EXTENT_MAP_HOLE for the
requested range.

This happens because the first time we try to write the space cache out
we hit an error, and on an error we drop the extent mapping.  This is
normal for normal files, but the free space cache inode is special.  We
always expect the extent map to be correct.  Thus the second time
through we end up with a bogus extent map.

Since we're deprecating this feature, the most straightforward way to
fix this is to simply skip dropping the extent map range for this failed
range.

I shortened the test by using error injection to stress the area to make
it easier to reproduce.  With this patch in place we no longer panic
with my error injection test.</description><pubDate>Wed, 03 Apr 2024 15:08:30 +0000</pubDate></item><item><title>CVE-2024-26727 | btrfs: do not ASSERT() if the newly created subvolume already got read</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26727</link><description>In the Linux kernel, the following vulnerability has been resolved:

btrfs: do not ASSERT() if the newly created subvolume already got read

[BUG]
There is a syzbot crash, triggered by the ASSERT() during subvolume
creation:

 assertion failed: !anon_dev, in fs/btrfs/disk-io.c:1319
 ------------[ cut here ]------------
 kernel BUG at fs/btrfs/disk-io.c:1319!
 invalid opcode: 0000 [#1] PREEMPT SMP KASAN
 RIP: 0010:btrfs_get_root_ref.part.0+0x9aa/0xa60
  &lt;TASK&gt;
  btrfs_get_new_fs_root+0xd3/0xf0
  create_subvol+0xd02/0x1650
  btrfs_mksubvol+0xe95/0x12b0
  __btrfs_ioctl_snap_create+0x2f9/0x4f0
  btrfs_ioctl_snap_create+0x16b/0x200
  btrfs_ioctl+0x35f0/0x5cf0
  __x64_sys_ioctl+0x19d/0x210
  do_syscall_64+0x3f/0xe0
  entry_SYSCALL_64_after_hwframe+0x63/0x6b
 ---[ end trace 0000000000000000 ]---

[CAUSE]
During create_subvol(), after inserting root item for the newly created
subvolume, we would trigger btrfs_get_new_fs_root() to get the
btrfs_root of that subvolume.

The idea here is, we have preallocated an anonymous device number for
the subvolume, thus we can assign it to the new subvolume.

But there is really nothing preventing things like backref walk to read
the new subvolume.
If that happens before we call btrfs_get_new_fs_root(), the subvolume
would be read out, with a new anonymous device number assigned already.

In that case, we would trigger ASSERT(), as we really expect no one to
read out that subvolume (which is not yet accessible from the fs).
But things like backref walk is still possible to trigger the read on
the subvolume.

Thus our assumption on the ASSERT() is not correct in the first place.

[FIX]
Fix it by removing the ASSERT(), and just free the @anon_dev, reset it
to 0, and continue.

If the subvolume tree is read out by something else, it should have
already get a new anon_dev assigned thus we only need to free the
preallocated one.</description><pubDate>Wed, 03 Apr 2024 15:08:30 +0000</pubDate></item><item><title>CVE-2024-28275 | Puwell Cloud Tech Co, Ltd 360Eyes Pro v3.9.5.16(3090516) was discovered to transmit sensitive information in cleartext. This vulnerability a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28275</link><description>Puwell Cloud Tech Co, Ltd 360Eyes Pro v3.9.5.16(3090516) was discovered to transmit sensitive information in cleartext. This vulnerability allows attackers to intercept and access sensitive information, including users' credentials and password change requests.</description><pubDate>Wed, 03 Apr 2024 15:08:30 +0000</pubDate></item><item><title>CVE-2024-31420 | Cnv: dos through repeatedly calling vm-dump-metrics until virt handler crashes</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31420</link><description>A NULL pointer dereference flaw was found in KubeVirt. This flaw allows an attacker who has access to a virtual machine guest on a node with DownwardMetrics enabled to cause a denial of service by issuing a high number of calls to vm-dump-metrics --virtio.</description><pubDate>Wed, 03 Apr 2024 14:15:59 +0000</pubDate></item><item><title>CVE-2024-21870 | A file write vulnerability exists in the OAS Engine Tags Configuration functionality of Open Automation Software OAS Platform V19.00.0057. A...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21870</link><description>A file write vulnerability exists in the OAS Engine Tags Configuration functionality of Open Automation Software OAS Platform V19.00.0057. A specially crafted series of network requests can lead to arbitrary file creation or overwrite. An attacker can send a sequence of requests to trigger this vulnerability.</description><pubDate>Wed, 03 Apr 2024 14:01:16 +0000</pubDate></item><item><title>CVE-2024-22178 | A file write vulnerability exists in the OAS Engine Save Security Configuration functionality of Open Automation Software OAS Platform V19.0...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22178</link><description>A file write vulnerability exists in the OAS Engine Save Security Configuration functionality of Open Automation Software OAS Platform V19.00.0057. A specially crafted series of network requests can lead to arbitrary file creation or overwrite. An attacker can send a sequence of requests to trigger this vulnerability.</description><pubDate>Wed, 03 Apr 2024 14:01:17 +0000</pubDate></item><item><title>CVE-2024-24976 | A denial of service vulnerability exists in the OAS Engine File Data Source Configuration functionality of Open Automation Software OAS Plat...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24976</link><description>A denial of service vulnerability exists in the OAS Engine File Data Source Configuration functionality of Open Automation Software OAS Platform V19.00.0057. A specially crafted series of network requests can cause the running program to stop. An attacker can send a sequence of requests to trigger this vulnerability.</description><pubDate>Wed, 03 Apr 2024 14:01:17 +0000</pubDate></item><item><title>CVE-2024-27201 | An improper input validation vulnerability exists in the OAS Engine User Configuration functionality of Open Automation Software OAS Platfor...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27201</link><description>An improper input validation vulnerability exists in the OAS Engine User Configuration functionality of Open Automation Software OAS Platform V19.00.0057. A specially crafted series of network requests can lead to unexpected data in the configuration. An attacker can send a sequence of requests to trigger this vulnerability.</description><pubDate>Wed, 03 Apr 2024 14:01:17 +0000</pubDate></item><item><title>CVE-2024-31419 | Cnv: information disclosure through the usage of vm-dump-metrics</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31419</link><description>An information disclosure flaw was found in OpenShift Virtualization. The DownwardMetrics feature was introduced to expose host metrics to virtual machine guests and is enabled by default. This issue could expose limited host metrics of a node to any guest in any namespace without being explicitly enabled by an administrator.</description><pubDate>Wed, 03 Apr 2024 14:01:18 +0000</pubDate></item><item><title>CVE-2024-0394 | Rapid7 Minerva Armor Privilege Escalation</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0394</link><description>Rapid7 Minerva Armor versions below 4.5.5 suffer from a privilege escalation vulnerability whereby an authenticated attacker can elevate privileges and execute arbitrary code with SYSTEM privilege.Â  The vulnerability is caused by the product's implementation of OpenSSL's`OPENSSLDIR` parameter where it is set to a path accessible to low-privileged users.Â  The vulnerability has been remediated and fixed in version 4.5.5.</description><pubDate>Wed, 03 Apr 2024 13:40:18 +0000</pubDate></item><item><title>CVE-2024-3259 | SourceCodester Internship Portal Management System delete_activity.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3259</link><description>A vulnerability was found in SourceCodester Internship Portal Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file admin/delete_activity.php. The manipulation of the argument activity_id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-259108.</description><pubDate>Wed, 03 Apr 2024 13:32:52 +0000</pubDate></item><item><title>CVE-2024-3257 | SourceCodester Internship Portal Management System edit_activity_query.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3257</link><description>A vulnerability was found in SourceCodester Internship Portal Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file admin/edit_activity_query.php. The manipulation of the argument title/description/start/end leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-259106 is the identifier assigned to this vulnerability.</description><pubDate>Wed, 03 Apr 2024 13:15:22 +0000</pubDate></item><item><title>CVE-2024-3258 | SourceCodester Internship Portal Management System add_activity.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3258</link><description>A vulnerability was found in SourceCodester Internship Portal Management System 1.0. It has been classified as critical. This affects an unknown part of the file admin/add_activity.php. The manipulation of the argument title/description/start/end leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-259107.</description><pubDate>Wed, 03 Apr 2024 13:15:22 +0000</pubDate></item><item><title>CVE-2023-38729 | IBM Db2 for Linux, UNIX and Windows information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-38729</link><description>IBM Db2 for Linux, UNIX and Windows (includes Db2 Connect Server)10.5, 11.1, and 11.5 is vulnerable to sensitive information disclosure when using ADMIN_CMD with IMPORT or EXPORT.  IBM X-Force ID:  262259.</description><pubDate>Wed, 03 Apr 2024 12:46:30 +0000</pubDate></item><item><title>CVE-2023-52296 | IBM Db2 for Linux, UNIX and Windows denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52296</link><description>IBM DB2 for Linux, UNIX and Windows (includes Db2 Connect Server) 11.5 is vulnerable to denial of service when querying a specific UDF built-in function concurrently.  IBM X-Force ID:  278547.</description><pubDate>Wed, 03 Apr 2024 12:46:31 +0000</pubDate></item><item><title>CVE-2024-22360 | IBM Db2 for Linux, UNIX and Windows denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22360</link><description>IBM Db2 for Linux, UNIX and Windows (includes Db2 Connect Server) 11.5 is vulnerable to a denial of service with a specially crafted query on certain columnar tables.  IBM X-Force ID:  280905.</description><pubDate>Wed, 03 Apr 2024 12:46:31 +0000</pubDate></item><item><title>CVE-2024-27254 | IBM Db2 for Linux, UNIX and Windows denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27254</link><description>IBM Db2 for Linux, UNIX and Windows (includes DB2 Connect Server) 10.5, 11.1, and 11.5 federated server is vulnerable to denial of service with a specially crafted query under certain conditions.  IBM X-Force ID:  283813.</description><pubDate>Wed, 03 Apr 2024 12:46:31 +0000</pubDate></item><item><title>CVE-2024-30568 | Netgear R6850 1.1.0.88 was discovered to contain a command injection vulnerability via the c4-IPAddr parameter.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30568</link><description>Netgear R6850 1.1.0.88 was discovered to contain a command injection vulnerability via the c4-IPAddr parameter.</description><pubDate>Wed, 03 Apr 2024 12:46:32 +0000</pubDate></item><item><title>CVE-2024-30569 | An information leak in currentsetting.htm of Netgear R6850 v1.1.0.88 allows attackers to obtain sensitive information without any authentica...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30569</link><description>An information leak in currentsetting.htm of Netgear R6850 v1.1.0.88 allows attackers to obtain sensitive information without any authentication required.</description><pubDate>Wed, 03 Apr 2024 12:46:32 +0000</pubDate></item><item><title>CVE-2024-30570 | An information leak in debuginfo.htm of Netgear R6850 v1.1.0.88 allows attackers to obtain sensitive information without any authentication ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30570</link><description>An information leak in debuginfo.htm of Netgear R6850 v1.1.0.88 allows attackers to obtain sensitive information without any authentication required.</description><pubDate>Wed, 03 Apr 2024 12:46:33 +0000</pubDate></item><item><title>CVE-2024-30571 | An information leak in the BRS_top.html component of Netgear R6850 v1.1.0.88 allows attackers to obtain sensitive information without any au...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30571</link><description>An information leak in the BRS_top.html component of Netgear R6850 v1.1.0.88 allows attackers to obtain sensitive information without any authentication required.</description><pubDate>Wed, 03 Apr 2024 12:46:33 +0000</pubDate></item><item><title>CVE-2024-30572 | Netgear R6850 1.1.0.88 was discovered to contain a command injection vulnerability via the ntp_server parameter.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30572</link><description>Netgear R6850 1.1.0.88 was discovered to contain a command injection vulnerability via the ntp_server parameter.</description><pubDate>Wed, 03 Apr 2024 12:46:33 +0000</pubDate></item><item><title>CVE-2024-3256 | SourceCodester Internship Portal Management System edit_activity.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3256</link><description>A vulnerability has been found in SourceCodester Internship Portal Management System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file admin/edit_activity.php. The manipulation of the argument activity_id leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-259105 was assigned to this vulnerability.</description><pubDate>Wed, 03 Apr 2024 12:46:34 +0000</pubDate></item><item><title>CVE-2023-25699 | WordPress VideoWhisper Live Streaming Integration plugin &amp;lt;= 5.5.15 - Remote Code Execution (RCE)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-25699</link><description>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in VideoWhisper.Com VideoWhisper Live Streaming Integration allows OS Command Injection.This issue affects VideoWhisper Live Streaming Integration: from n/a through 5.5.15.</description><pubDate>Wed, 03 Apr 2024 12:27:53 +0000</pubDate></item><item><title>CVE-2024-24707 | WordPress Cwicly plugin &amp;lt;= 1.4.0.2 - Auth. Remote Code Execution (RCE) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24707</link><description>Improper Control of Generation of Code ('Code Injection') vulnerability in Cwicly Builder, SL. Cwicly allows Code Injection.This issue affects Cwicly: from n/a through 1.4.0.2.</description><pubDate>Wed, 03 Apr 2024 12:27:54 +0000</pubDate></item><item><title>CVE-2024-25030 | IBM Db2 for Linux, UNIX and Windows (includes Db2 Connect Server) 11.1 stores potentially sensitive information in log files that could be r...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25030</link><description>IBM Db2 for Linux, UNIX and Windows (includes Db2 Connect Server) 11.1 stores potentially sensitive information in log files that could be read by a local user.  IBM X-Force ID:  281677.</description><pubDate>Wed, 03 Apr 2024 12:27:54 +0000</pubDate></item><item><title>CVE-2024-25046 | IBM Db2 for Linux, UNIX and Windows denial of service</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25046</link><description>IBM Db2 for Linux, UNIX and Windows (includes Db2 Connect Server) 11.1 and 11.5 is vulnerable to a denial of service by an authenticated user using a specially crafted query.  IBM X-Force ID:  282953.</description><pubDate>Wed, 03 Apr 2024 12:27:54 +0000</pubDate></item><item><title>CVE-2024-25096 | WordPress canto plugin &amp;lt;= 3.0.7 - Unauth. Remote Code Execution (RCE) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25096</link><description>Improper Control of Generation of Code ('Code Injection') vulnerability in Canto Inc. Canto allows Code Injection.This issue affects Canto: from n/a through 3.0.7.</description><pubDate>Wed, 03 Apr 2024 12:27:55 +0000</pubDate></item><item><title>CVE-2024-25918 | WordPress InstaWP Connect plugin &amp;lt;= 0.1.0.8 - Auth. Remote Code Execution (RCE) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25918</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in InstaWP Team InstaWP Connect allows Code Injection.This issue affects InstaWP Connect: from n/a through 0.1.0.8.</description><pubDate>Wed, 03 Apr 2024 12:27:55 +0000</pubDate></item><item><title>CVE-2024-27191 | WordPress Slivery Extender plugin &amp;lt;= 1.0.2 - Auth. Remote Code Execution (RCE) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27191</link><description>Improper Control of Generation of Code ('Code Injection') vulnerability in Inpersttion Slivery Extender allows Code Injection.This issue affects Slivery Extender: from n/a through 1.0.2.</description><pubDate>Wed, 03 Apr 2024 12:27:56 +0000</pubDate></item><item><title>CVE-2024-28782 | IBM QRadar Suite Software information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28782</link><description>IBM QRadar Suite Software 1.10.12.0 through 1.10.18.0 and IBM Cloud Pak for Security 1.10.0.0 through 1.10.11.0 stores user credentials in plain clear text which can be read by an authenticated user.  IBM X-Force ID:  285698.</description><pubDate>Wed, 03 Apr 2024 12:27:56 +0000</pubDate></item><item><title>CVE-2024-3254 | SourceCodester Internship Portal Management System edit_admin.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3254</link><description>A vulnerability, which was classified as critical, has been found in SourceCodester Internship Portal Management System 1.0. This issue affects some unknown processing of the file admin/edit_admin.php. The manipulation of the argument admin_id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-259103.</description><pubDate>Wed, 03 Apr 2024 12:27:57 +0000</pubDate></item><item><title>CVE-2024-3255 | SourceCodester Internship Portal Management System edit_admin_query.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3255</link><description>A vulnerability, which was classified as critical, was found in SourceCodester Internship Portal Management System 1.0. Affected is an unknown function of the file admin/edit_admin_query.php. The manipulation of the argument username/password/name/admin_id leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-259104.</description><pubDate>Wed, 03 Apr 2024 12:27:57 +0000</pubDate></item><item><title>CVE-2024-27951 | WordPress Multiple Page Generator Plugin &amp;lt;= 3.4.0 - Auth. Remote Code Execution (RCE) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27951</link><description>Unrestricted Upload of File with Dangerous Type vulnerability in Themeisle Multiple Page Generator Plugin â€“ MPG allows Upload a Web Shell to a Web Server.This issue affects Multiple Page Generator Plugin â€“ MPG: from n/a through 3.4.0.</description><pubDate>Wed, 03 Apr 2024 12:00:03 +0000</pubDate></item><item><title>CVE-2024-27972 | WordPress WP Fusion Lite plugin &amp;lt;= 3.41.24 - Auth. Remote Code Execution (RCE) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27972</link><description>Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in Very Good Plugins WP Fusion Lite allows Command Injection.This issue affects WP Fusion Lite: from n/a through 3.41.24.</description><pubDate>Wed, 03 Apr 2024 12:00:03 +0000</pubDate></item><item><title>CVE-2024-29477 | Lack of sanitization during Installation Process in Dolibarr ERP CRM up to version 19.0.0 allows an attacker with adjacent access to the net...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29477</link><description>Lack of sanitization during Installation Process in Dolibarr ERP CRM up to version 19.0.0 allows an attacker with adjacent access to the network to execute arbitrary code via a specifically crafted input.</description><pubDate>Wed, 03 Apr 2024 12:00:04 +0000</pubDate></item><item><title>CVE-2024-31380 | WordPress Oxygen plugin &amp;lt;= 4.8.1 - Auth. Remote Code Execution (RCE) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31380</link><description>Improper Control of Generation of Code ('Code Injection') vulnerability in Soflyy Oxygen Builder allows Code Injection.This issue affects Oxygen Builder: from n/a through 4.8.1.</description><pubDate>Wed, 03 Apr 2024 11:46:04 +0000</pubDate></item><item><title>CVE-2024-31390 | WordPress Breakdance plugin &amp;lt;= 1.7.0 - Authenticated Remote Code Execution (RCE) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31390</link><description>Improper Control of Generation of Code ('Code Injection') vulnerability in Soflyy Breakdance allows Code Injection.This issue affects Breakdance: from n/a through 1.7.0.</description><pubDate>Wed, 03 Apr 2024 11:46:05 +0000</pubDate></item><item><title>CVE-2024-3253 | SourceCodester Internship Portal Management System add_admin.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3253</link><description>A vulnerability classified as critical was found in SourceCodester Internship Portal Management System 1.0. This vulnerability affects unknown code of the file admin/add_admin.php. The manipulation of the argument name/username/password leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-259102 is the identifier assigned to this vulnerability.</description><pubDate>Wed, 03 Apr 2024 11:07:10 +0000</pubDate></item><item><title>CVE-2024-3251 | SourceCodester Computer Laboratory Management System sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3251</link><description>A vulnerability was found in SourceCodester Computer Laboratory Management System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file /admin/?page=borrow/view_borrow. The manipulation of the argument id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-259100.</description><pubDate>Wed, 03 Apr 2024 10:08:09 +0000</pubDate></item><item><title>CVE-2024-3252 | SourceCodester Internship Portal Management System check_admin.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3252</link><description>A vulnerability classified as critical has been found in SourceCodester Internship Portal Management System 1.0. This affects an unknown part of the file admin/check_admin.php. The manipulation of the argument username/password leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-259101 was assigned to this vulnerability.</description><pubDate>Wed, 03 Apr 2024 10:08:10 +0000</pubDate></item><item><title>CVE-2024-0172 | Dell PowerEdge Server BIOS and Dell Precision Rack BIOS contain an improper privilege management security vulnerability. An unauthenticated ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0172</link><description>Dell PowerEdge Server BIOS and Dell Precision Rack BIOS contain an improper privilege management security vulnerability. An unauthenticated local attacker could potentially exploit this vulnerability, leading to privilege escalation.</description><pubDate>Wed, 03 Apr 2024 09:26:05 +0000</pubDate></item><item><title>CVE-2023-34423 | Survey Maker prior to 3.6.4 contains a stored cross-site scripting vulnerability. If this vulnerability is exploited, an arbitrary script ma...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-34423</link><description>Survey Maker prior to 3.6.4 contains a stored cross-site scripting vulnerability. If this vulnerability is exploited, an arbitrary script may be executed on the web browser of the user who is logging in to the website using the product with the administrative privilege.</description><pubDate>Wed, 03 Apr 2024 07:19:12 +0000</pubDate></item><item><title>CVE-2023-35764 | Insufficient verification of data authenticity issue in Survey Maker prior to 3.6.4 allows a remote unauthenticated attacker to spoof an IP ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-35764</link><description>Insufficient verification of data authenticity issue in Survey Maker prior to 3.6.4 allows a remote unauthenticated attacker to spoof an IP address when posting.</description><pubDate>Wed, 03 Apr 2024 07:19:13 +0000</pubDate></item><item><title>CVE-2024-28589 | An issue was discovered in Axigen Mail Server for Windows versions 10.5.18 and before, allows local low-privileged attackers to execute arbi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28589</link><description>An issue was discovered in Axigen Mail Server for Windows versions 10.5.18 and before, allows local low-privileged attackers to execute arbitrary code and escalate privileges via insecure DLL loading from a world-writable directory during service initialization.</description><pubDate>Wed, 03 Apr 2024 07:19:13 +0000</pubDate></item><item><title>CVE-2024-29734 | Uncontrolled search path element issue exists in SonicDICOM Media Viewer 2.3.2 and earlier, which may lead to insecurely loading Dynamic Lin...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29734</link><description>Uncontrolled search path element issue exists in SonicDICOM Media Viewer 2.3.2 and earlier, which may lead to insecurely loading Dynamic Link Libraries. As a result, arbitrary code may be executed with the privileges of the running application.</description><pubDate>Wed, 03 Apr 2024 07:19:13 +0000</pubDate></item><item><title>CVE-2024-24506 | Cross Site Scripting (XSS) vulnerability in Lime Survey Community Edition Version v.5.3.32+220817, allows remote attackers to execute arbitr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24506</link><description>Cross Site Scripting (XSS) vulnerability in Lime Survey Community Edition Version v.5.3.32+220817, allows remote attackers to execute arbitrary code via the Administrator email address parameter in the General Setting function.</description><pubDate>Wed, 03 Apr 2024 06:41:15 +0000</pubDate></item><item><title>CVE-2024-28515 | Buffer Overflow vulnerability in CSAPP_Lab CSAPP Lab3 15-213 Fall 20xx allows a remote attacker to execute arbitrary code via the lab3 of cs...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28515</link><description>Buffer Overflow vulnerability in CSAPP_Lab CSAPP Lab3 15-213 Fall 20xx allows a remote attacker to execute arbitrary code via the lab3 of csapp,lab3/buflab-update.pl component.</description><pubDate>Wed, 03 Apr 2024 06:26:35 +0000</pubDate></item><item><title>CVE-2024-30998 | SQL Injection vulnerability in PHPGurukul Men Salon Management System v.2.0, allows remote attackers to execute arbitrary code and obtain se...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30998</link><description>SQL Injection vulnerability in PHPGurukul Men Salon Management System v.2.0, allows remote attackers to execute arbitrary code and obtain sensitive information via the email parameter in the index.php component.</description><pubDate>Wed, 03 Apr 2024 06:09:00 +0000</pubDate></item><item><title>CVE-2021-27312 | Server Side Request Forgery (SSRF) vulnerability in Gleez Cms 1.2.0, allows remote attackers to execute arbitrary code and obtain sensitive ...</title><link>https://www.cve.org/CVERecord?id=CVE-2021-27312</link><description>Server Side Request Forgery (SSRF) vulnerability in Gleez Cms 1.2.0, allows remote attackers to execute arbitrary code and obtain sensitive information via modules/gleez/classes/request.php.</description><pubDate>Wed, 03 Apr 2024 05:47:41 +0000</pubDate></item><item><title>CVE-2024-31008 | An issue was discovered in WUZHICMS version 4.1.0, allows an attacker to execute arbitrary code and obtain sensitive information via the ind...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31008</link><description>An issue was discovered in WUZHICMS version 4.1.0, allows an attacker to execute arbitrary code and obtain sensitive information via the index.php file.</description><pubDate>Wed, 03 Apr 2024 05:33:46 +0000</pubDate></item><item><title>CVE-2024-2322 | WooCommerce Cart Abandonment Recovery &amp;lt; 1.2.27 - Templates/Abandoned Orders Deletion via CSRF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2322</link><description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description><pubDate>Wed, 03 Apr 2024 05:11:14 +0000</pubDate></item><item><title>CVE-2024-31011 | Arbitrary file write vulnerability in beescms v.4.0, allows a remote attacker to execute arbitrary code via a file path that was not isolate...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31011</link><description>Arbitrary file write vulnerability in beescms v.4.0, allows a remote attacker to execute arbitrary code via a file path that was not isolated and the suffix was not verified in admin_template.php.</description><pubDate>Wed, 03 Apr 2024 04:28:49 +0000</pubDate></item><item><title>CVE-2024-31012 | An issue was discovered in SEMCMS v.4.8, allows remote attackers to execute arbitrary code, escalate privileges, and obtain sensitive inform...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31012</link><description>An issue was discovered in SEMCMS v.4.8, allows remote attackers to execute arbitrary code, escalate privileges, and obtain sensitive information via the upload.php file.</description><pubDate>Wed, 03 Apr 2024 04:15:20 +0000</pubDate></item><item><title>CVE-2024-31013 | Cross Site Scripting (XSS) vulnerability in emlog version Pro 2.3, allow remote attackers to execute arbitrary code via a crafted payload to...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31013</link><description>Cross Site Scripting (XSS) vulnerability in emlog version Pro 2.3, allow remote attackers to execute arbitrary code via a crafted payload to the bottom of the homepage in footer_info parameter.</description><pubDate>Wed, 03 Apr 2024 03:58:14 +0000</pubDate></item><item><title>CVE-2024-31010 | SQL injection vulnerability in SEMCMS v.4.8, allows a remote attacker to obtain sensitive information via the ID parameter in Banner.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31010</link><description>SQL injection vulnerability in SEMCMS v.4.8, allows a remote attacker to obtain sensitive information via the ID parameter in Banner.php.</description><pubDate>Wed, 03 Apr 2024 03:58:15 +0000</pubDate></item><item><title>CVE-2024-31009 | SQL injection vulnerability in SEMCMS v.4.8, allows a remote attacker to obtain sensitive information via lgid parameter in Banner.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31009</link><description>SQL injection vulnerability in SEMCMS v.4.8, allows a remote attacker to obtain sensitive information via lgid parameter in Banner.php.</description><pubDate>Wed, 03 Apr 2024 03:37:43 +0000</pubDate></item><item><title>CVE-2024-2879 | The LayerSlider plugin for WordPress is vulnerable to SQL Injection via the ls_get_popup_markup action in versions 7.9.11 and 7.10.0 due to ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2879</link><description>The LayerSlider plugin for WordPress is vulnerable to SQL Injection via the ls_get_popup_markup action in versions 7.9.11 and 7.10.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description><pubDate>Wed, 03 Apr 2024 03:30:35 +0000</pubDate></item><item><title>CVE-2024-24724 | Gibbon through 26.0.00 allows /modules/School%20Admin/messengerSettings.php Server Side Template Injection leading to Remote Code Execution ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24724</link><description>Gibbon through 26.0.00 allows /modules/School%20Admin/messengerSettings.php Server Side Template Injection leading to Remote Code Execution because input is passed to the Twig template engine (messengerSettings.php) without sanitization.</description><pubDate>Wed, 03 Apr 2024 03:23:35 +0000</pubDate></item><item><title>CVE-2024-25864 | Server Side Request Forgery (SSRF) vulnerability in Friendica versions after v.2023.12, allows a remote attacker to execute arbitrary code a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25864</link><description>Server Side Request Forgery (SSRF) vulnerability in Friendica versions after v.2023.12, allows a remote attacker to execute arbitrary code and obtain sensitive information via the fpostit.php component.</description><pubDate>Wed, 03 Apr 2024 03:23:35 +0000</pubDate></item><item><title>CVE-2024-26495 | Cross Site Scripting (XSS) vulnerability in Friendica versions after v.2023.12, allows a remote attacker to execute arbitrary code and obtai...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26495</link><description>Cross Site Scripting (XSS) vulnerability in Friendica versions after v.2023.12, allows a remote attacker to execute arbitrary code and obtain sensitive information via the BBCode tags in the post content and post comments function.</description><pubDate>Wed, 03 Apr 2024 03:23:36 +0000</pubDate></item><item><title>CVE-2024-1327 | The Jeg Elementor Kit plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's image box widget in all versions up...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1327</link><description>The Jeg Elementor Kit plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's image box widget in all versions up to, and including, 2.6.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 03 Apr 2024 02:35:34 +0000</pubDate></item><item><title>CVE-2024-28219 | In _imagingcms.c in Pillow before 10.3.0, a buffer overflow exists because strcpy is used instead of strncpy.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28219</link><description>In _imagingcms.c in Pillow before 10.3.0, a buffer overflow exists because strcpy is used instead of strncpy.</description><pubDate>Wed, 03 Apr 2024 02:35:34 +0000</pubDate></item><item><title>CVE-2024-3162 | The Jeg Elementor Kit plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Testimonial Widget Attributes in all version...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3162</link><description>The Jeg Elementor Kit plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Testimonial Widget Attributes in all versions up to, and including, 2.6.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor access or higher, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Wed, 03 Apr 2024 02:35:35 +0000</pubDate></item><item><title>CVE-2024-3227 | Panwei eoffice OA Backend save_image.php path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3227</link><description>A vulnerability was found in Panwei eoffice OA up to 9.5. It has been declared as critical. This vulnerability affects unknown code of the file /general/system/interface/theme_set/save_image.php of the component Backend. The manipulation of the argument image_type leads to path traversal: '../filedir'. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-259072.</description><pubDate>Wed, 03 Apr 2024 02:35:35 +0000</pubDate></item><item><title>CVE-2024-28836 | An issue was discovered in Mbed TLS 3.5.x before 3.6.0. When negotiating the TLS version on the server side, it can fall back to the TLS 1.2...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28836</link><description>An issue was discovered in Mbed TLS 3.5.x before 3.6.0. When negotiating the TLS version on the server side, it can fall back to the TLS 1.2 implementation of the protocol if it is disabled. If the TLS 1.2 implementation was disabled at build time, a TLS 1.2 client could put a TLS 1.3-only server into an infinite loop processing a TLS 1.2 ClientHello, resulting in a denial of service. If the TLS 1.2 implementation was disabled at runtime, a TLS 1.2 client can successfully establish a TLS 1.2 connection with the server.</description><pubDate>Wed, 03 Apr 2024 02:35:36 +0000</pubDate></item><item><title>CVE-2024-30166 | In Mbed TLS 3.3.0 through 3.5.2 before 3.6.0, a malicious client can cause information disclosure or a denial of service because of a stack ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30166</link><description>In Mbed TLS 3.3.0 through 3.5.2 before 3.6.0, a malicious client can cause information disclosure or a denial of service because of a stack buffer over-read (of less than 256 bytes) in a TLS 1.3 server via a TLS 3.1 ClientHello.</description><pubDate>Wed, 03 Apr 2024 02:35:36 +0000</pubDate></item><item><title>CVE-2024-28755 | An issue was discovered in Mbed TLS 3.5.x before 3.6.0. When an SSL context was reset with the mbedtls_ssl_session_reset() API, the maximum ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28755</link><description>An issue was discovered in Mbed TLS 3.5.x before 3.6.0. When an SSL context was reset with the mbedtls_ssl_session_reset() API, the maximum TLS version to be negotiated was not restored to the configured one. An attacker was able to prevent an Mbed TLS server from establishing any TLS 1.3 connection, potentially resulting in a Denial of Service or forced version downgrade from TLS 1.3 to TLS 1.2.</description><pubDate>Wed, 03 Apr 2024 02:27:27 +0000</pubDate></item><item><title>CVE-2024-3225 | SourceCodester PHP Task Management System edit-task.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3225</link><description>A vulnerability was found in SourceCodester PHP Task Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file edit-task.php. The manipulation of the argument task_id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-259070 is the identifier assigned to this vulnerability.</description><pubDate>Wed, 03 Apr 2024 02:27:28 +0000</pubDate></item><item><title>CVE-2024-3226 | Campcodes Online Patient Record Management System login.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3226</link><description>A vulnerability was found in Campcodes Online Patient Record Management System 1.0. It has been classified as critical. This affects an unknown part of the file /admin/login.php. The manipulation of the argument password leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-259071.</description><pubDate>Wed, 03 Apr 2024 02:27:28 +0000</pubDate></item><item><title>CVE-2024-3224 | SourceCodester PHP Task Management System task-details.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3224</link><description>A vulnerability has been found in SourceCodester PHP Task Management System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file task-details.php. The manipulation of the argument task_id leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-259069 was assigned to this vulnerability.</description><pubDate>Wed, 03 Apr 2024 02:06:37 +0000</pubDate></item><item><title>CVE-2024-3223 | SourceCodester PHP Task Management System admin-manage-user.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3223</link><description>A vulnerability, which was classified as critical, was found in SourceCodester PHP Task Management System 1.0. Affected is an unknown function of the file admin-manage-user.php. The manipulation of the argument admin_id leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-259068.</description><pubDate>Wed, 03 Apr 2024 01:33:01 +0000</pubDate></item><item><title>CVE-2024-3221 | SourceCodester PHP Task Management System attendance-info.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3221</link><description>A vulnerability classified as critical was found in SourceCodester PHP Task Management System 1.0. This vulnerability affects unknown code of the file attendance-info.php. The manipulation of the argument user_id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-259066 is the identifier assigned to this vulnerability.</description><pubDate>Wed, 03 Apr 2024 00:29:39 +0000</pubDate></item><item><title>CVE-2024-3222 | SourceCodester PHP Task Management System admin-password-change.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3222</link><description>A vulnerability, which was classified as critical, has been found in SourceCodester PHP Task Management System 1.0. This issue affects some unknown processing of the file admin-password-change.php. The manipulation of the argument admin_id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-259067.</description><pubDate>Wed, 03 Apr 2024 00:29:39 +0000</pubDate></item><item><title>CVE-2024-3218 | Shibang Communications IP Network Intercom Broadcasting System busyscreenshotpush.php path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3218</link><description>A vulnerability classified as critical has been found in Shibang Communications IP Network Intercom Broadcasting System 1.0. This affects an unknown part of the file /php/busyscreenshotpush.php. The manipulation of the argument jsondata[callee]/jsondata[imagename] leads to path traversal: '../filedir'. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-259065 was assigned to this vulnerability.</description><pubDate>Tue, 02 Apr 2024 23:33:49 +0000</pubDate></item><item><title>CVE-2024-3209 | UPX bele.h get_ne64 heap-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3209</link><description>A vulnerability was found in UPX up to 4.2.2. It has been rated as critical. This issue affects the function get_ne64 of the file bele.h. The manipulation leads to heap-based buffer overflow. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-259055. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 23:19:11 +0000</pubDate></item><item><title>CVE-2024-3248 | Stack overflow in Xpdf 4.05 due to object loop in attachments</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3248</link><description>In Xpdf 4.05 (and earlier), a PDF object loop in the attachments leads to infinite recursion and a stack overflow.</description><pubDate>Tue, 02 Apr 2024 23:19:12 +0000</pubDate></item><item><title>CVE-2024-3247 | Stack overflow in Xpdf 4.05 due to object loop in PDF object stream</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3247</link><description>In Xpdf 4.05 (and earlier), a PDF object loop in an object stream leads to infinite recursion and a stack overflow.</description><pubDate>Tue, 02 Apr 2024 23:01:49 +0000</pubDate></item><item><title>CVE-2024-3205 | yaml libyaml emitter.c yaml_emitter_emit_flow_sequence_item heap-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3205</link><description>A vulnerability was found in yaml libyaml up to 0.2.5 and classified as critical. Affected by this issue is the function yaml_emitter_emit_flow_sequence_item of the file /src/libyaml/src/emitter.c. The manipulation leads to heap-based buffer overflow. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-259052. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 22:40:10 +0000</pubDate></item><item><title>CVE-2024-3207 | ermig1979 Simd SimdMemoryStream.h ReadUnsigned heap-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3207</link><description>A vulnerability was found in ermig1979 Simd up to 6.0.134. It has been declared as critical. This vulnerability affects the function ReadUnsigned of the file src/Simd/SimdMemoryStream.h. The manipulation leads to heap-based buffer overflow. The exploit has been disclosed to the public and may be used. VDB-259054 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 22:40:10 +0000</pubDate></item><item><title>CVE-2024-3203 | c-blosc2 ndlz8x8.c ndlz8_decompress heap-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3203</link><description>A vulnerability, which was classified as critical, was found in c-blosc2 up to 2.13.2. Affected is the function ndlz8_decompress of the file /src/c-blosc2/plugins/codecs/ndlz/ndlz8x8.c. The manipulation leads to heap-based buffer overflow. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-259050 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 22:07:39 +0000</pubDate></item><item><title>CVE-2024-3204 | c-blosc2 ndlz4x4.c ndlz4_decompress heap-based overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3204</link><description>A vulnerability has been found in c-blosc2 up to 2.13.2 and classified as critical. Affected by this vulnerability is the function ndlz4_decompress of the file /src/c-blosc2/plugins/codecs/ndlz/ndlz4x4.c. The manipulation leads to heap-based buffer overflow. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-259051. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 22:07:40 +0000</pubDate></item><item><title>CVE-2024-3202 | codelyfe Stupid Simple CMS Login Page excessive authentication</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3202</link><description>A vulnerability, which was classified as problematic, has been found in codelyfe Stupid Simple CMS 1.2.4. This issue affects some unknown processing of the component Login Page. The manipulation leads to improper restriction of excessive authentication attempts. The attack may be initiated remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. The identifier VDB-259049 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 21:40:58 +0000</pubDate></item><item><title>CVE-2024-29434 | An issue in the system image upload interface of Alldata v0.4.6 allows attackers to execute a directory traversal when uploading a file.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29434</link><description>An issue in the system image upload interface of Alldata v0.4.6 allows attackers to execute a directory traversal when uploading a file.</description><pubDate>Tue, 02 Apr 2024 21:19:59 +0000</pubDate></item><item><title>CVE-2024-27604 | Alldata V0.4.6 is vulnerable to Command execution vulnerability. System commands can be deserialized.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27604</link><description>Alldata V0.4.6 is vulnerable to Command execution vulnerability. System commands can be deserialized.</description><pubDate>Tue, 02 Apr 2024 20:56:44 +0000</pubDate></item><item><title>CVE-2024-29432 | Alldata v0.4.6 was discovered to contain a SQL injection vulnerability via the tablename parameter at /data/masterdata/datas.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29432</link><description>Alldata v0.4.6 was discovered to contain a SQL injection vulnerability via the tablename parameter at /data/masterdata/datas.</description><pubDate>Tue, 02 Apr 2024 20:56:44 +0000</pubDate></item><item><title>CVE-2024-27602 | Alldata V0.4.6 is vulnerable to Incorrect Access Control. A total of many modules interface documents have been leaked.For example, the /api...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27602</link><description>Alldata V0.4.6 is vulnerable to Incorrect Access Control. A total of many modules interface documents have been leaked.For example, the /api/system/v2/api-docs module.</description><pubDate>Tue, 02 Apr 2024 20:49:45 +0000</pubDate></item><item><title>CVE-2024-27605 | Alldata V0.4.6 is vulnerable to Insecure Permissions. Using users (test) can query information about the users in the system.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27605</link><description>Alldata V0.4.6 is vulnerable to Insecure Permissions. Using users (test) can query information about the users in the system.</description><pubDate>Tue, 02 Apr 2024 20:49:46 +0000</pubDate></item><item><title>CVE-2024-25075 | An issue was discovered in Softing uaToolkit Embedded before 1.41.1. When a subscription with a very low MaxNotificationPerPublish parameter...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25075</link><description>An issue was discovered in Softing uaToolkit Embedded before 1.41.1. When a subscription with a very low MaxNotificationPerPublish parameter is created, a publish response is mishandled, leading to memory consumption. When that happens often enough, the device will be out of memory, i.e., a denial of service.</description><pubDate>Tue, 02 Apr 2024 20:42:47 +0000</pubDate></item><item><title>CVE-2024-30367 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30367</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-23013.</description><pubDate>Tue, 02 Apr 2024 20:36:00 +0000</pubDate></item><item><title>CVE-2024-30370 | RARLAB WinRAR Mark-Of-The-Web Bypass Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30370</link><description>RARLAB WinRAR Mark-Of-The-Web Bypass Vulnerability. This vulnerability allows remote attackers to bypass the Mark-Of-The-Web protection mechanism on affected installations of RARLAB WinRAR. User interaction is required to exploit this vulnerability in that the target must perform a specific action on a malicious page.

The specific flaw exists within the archive extraction functionality. A crafted archive entry can cause the creation of an arbitrary file without the Mark-Of-The-Web. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current user. Was ZDI-CAN-23156.</description><pubDate>Tue, 02 Apr 2024 20:36:00 +0000</pubDate></item><item><title>CVE-2024-30371 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30371</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-23355.</description><pubDate>Tue, 02 Apr 2024 20:36:00 +0000</pubDate></item><item><title>CVE-2024-30344 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30344</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Acroforms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22733.</description><pubDate>Tue, 02 Apr 2024 20:21:25 +0000</pubDate></item><item><title>CVE-2024-30345 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30345</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects in AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22742.</description><pubDate>Tue, 02 Apr 2024 20:21:25 +0000</pubDate></item><item><title>CVE-2024-30346 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30346</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects in AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22745.</description><pubDate>Tue, 02 Apr 2024 20:21:26 +0000</pubDate></item><item><title>CVE-2024-30347 | Foxit PDF Reader U3D File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30347</link><description>Foxit PDF Reader U3D File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of U3D files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22910.</description><pubDate>Tue, 02 Apr 2024 20:21:26 +0000</pubDate></item><item><title>CVE-2024-30348 | Foxit PDF Reader U3D File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30348</link><description>Foxit PDF Reader U3D File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of U3D files. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22911.</description><pubDate>Tue, 02 Apr 2024 20:21:26 +0000</pubDate></item><item><title>CVE-2024-30349 | Foxit PDF Reader U3D File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30349</link><description>Foxit PDF Reader U3D File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of U3D files. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22912.</description><pubDate>Tue, 02 Apr 2024 20:21:27 +0000</pubDate></item><item><title>CVE-2024-30350 | Foxit PDF Reader Annotation Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30350</link><description>Foxit PDF Reader Annotation Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Annotation objects. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22708.</description><pubDate>Tue, 02 Apr 2024 20:21:27 +0000</pubDate></item><item><title>CVE-2024-30351 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30351</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects in AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22799.</description><pubDate>Tue, 02 Apr 2024 20:21:27 +0000</pubDate></item><item><title>CVE-2024-30352 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30352</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22800.</description><pubDate>Tue, 02 Apr 2024 20:21:28 +0000</pubDate></item><item><title>CVE-2024-30353 | Foxit PDF Reader AcroForm Out-Of-Bounds Read Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30353</link><description>Foxit PDF Reader AcroForm Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects in AcroForms. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22807.</description><pubDate>Tue, 02 Apr 2024 20:21:28 +0000</pubDate></item><item><title>CVE-2024-30354 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30354</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects in AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22808.</description><pubDate>Tue, 02 Apr 2024 20:21:28 +0000</pubDate></item><item><title>CVE-2024-30355 | Foxit PDF Reader AcroForm Out-Of-Bounds Write Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30355</link><description>Foxit PDF Reader AcroForm Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects in AcroForms. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22809.</description><pubDate>Tue, 02 Apr 2024 20:21:29 +0000</pubDate></item><item><title>CVE-2024-30356 | Foxit PDF Reader AcroForm Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30356</link><description>Foxit PDF Reader AcroForm Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects in AcroForms. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22811.</description><pubDate>Tue, 02 Apr 2024 20:21:29 +0000</pubDate></item><item><title>CVE-2024-30357 | Foxit PDF Reader AcroForm Annotation Type Confusion Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30357</link><description>Foxit PDF Reader AcroForm Annotation Type Confusion Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Annotation objects in AcroForms. The issue results from the lack of proper validation of user-supplied data, which can result in a type confusion condition. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22818.</description><pubDate>Tue, 02 Apr 2024 20:21:29 +0000</pubDate></item><item><title>CVE-2024-30358 | Foxit PDF Reader AcroForm User-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30358</link><description>Foxit PDF Reader AcroForm User-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22821.</description><pubDate>Tue, 02 Apr 2024 20:21:30 +0000</pubDate></item><item><title>CVE-2024-30359 | Foxit PDF Reader AcroForm 3D Out-Of-Bounds Read Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30359</link><description>Foxit PDF Reader AcroForm 3D Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of 3D objects in AcroForms. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22888.</description><pubDate>Tue, 02 Apr 2024 20:21:30 +0000</pubDate></item><item><title>CVE-2024-30360 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30360</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22797.</description><pubDate>Tue, 02 Apr 2024 20:21:30 +0000</pubDate></item><item><title>CVE-2024-30361 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30361</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22877.</description><pubDate>Tue, 02 Apr 2024 20:21:31 +0000</pubDate></item><item><title>CVE-2024-30362 | Foxit PDF Reader PDF File Parsing Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30362</link><description>Foxit PDF Reader PDF File Parsing Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of PDF files. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22798.</description><pubDate>Tue, 02 Apr 2024 20:21:31 +0000</pubDate></item><item><title>CVE-2024-30363 | Foxit PDF Reader U3D File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30363</link><description>Foxit PDF Reader U3D File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of U3D files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-23008.</description><pubDate>Tue, 02 Apr 2024 20:21:31 +0000</pubDate></item><item><title>CVE-2024-30364 | Foxit PDF Reader U3D File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30364</link><description>Foxit PDF Reader U3D File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of U3D files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-23009.</description><pubDate>Tue, 02 Apr 2024 20:21:32 +0000</pubDate></item><item><title>CVE-2024-30365 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30365</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22947.</description><pubDate>Tue, 02 Apr 2024 20:21:32 +0000</pubDate></item><item><title>CVE-2024-30336 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30336</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects in AcroForms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22642.</description><pubDate>Tue, 02 Apr 2024 20:21:33 +0000</pubDate></item><item><title>CVE-2024-30337 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30337</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Acroforms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22704.</description><pubDate>Tue, 02 Apr 2024 20:21:33 +0000</pubDate></item><item><title>CVE-2024-30338 | Foxit PDF Reader Doc Object Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30338</link><description>Foxit PDF Reader Doc Object Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22705.</description><pubDate>Tue, 02 Apr 2024 20:21:33 +0000</pubDate></item><item><title>CVE-2024-30339 | Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30339</link><description>Foxit PDF Reader AcroForm Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Acroforms. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22706.</description><pubDate>Tue, 02 Apr 2024 20:21:34 +0000</pubDate></item><item><title>CVE-2024-30340 | Foxit PDF Reader Annotation Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30340</link><description>Foxit PDF Reader Annotation Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Annotation objects. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22707.</description><pubDate>Tue, 02 Apr 2024 20:21:34 +0000</pubDate></item><item><title>CVE-2024-30341 | Foxit PDF Reader Doc Object Out-Of-Bounds Read Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30341</link><description>Foxit PDF Reader Doc Object Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Doc objects. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22709.</description><pubDate>Tue, 02 Apr 2024 20:21:34 +0000</pubDate></item><item><title>CVE-2024-30342 | Foxit PDF Reader Annotation Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30342</link><description>Foxit PDF Reader Annotation Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Annotation objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22720.</description><pubDate>Tue, 02 Apr 2024 20:21:35 +0000</pubDate></item><item><title>CVE-2024-30343 | Foxit PDF Reader Annotation Use-After-Free Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30343</link><description>Foxit PDF Reader Annotation Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Annotation objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22721.</description><pubDate>Tue, 02 Apr 2024 20:21:35 +0000</pubDate></item><item><title>CVE-2024-29834 | Apache Pulsar: Improper Authorization For Namespace and Topic Management Endpoints</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29834</link><description>This vulnerability allows authenticated users with produce or consume permissions to perform unauthorized operations on partitioned topics, such as unloading topics and triggering compaction. These management operations should be restricted to users with the tenant admin role or superuser role. An authenticated user with produce permission can create subscriptions and update subscription properties on partitioned topics, even though this should be limited to users with consume permissions. This impact analysis assumes that Pulsar has been configured with the default authorization provider. For custom authorization providers, the impact could be slightly different. Additionally, the vulnerability allows an authenticated user to read, create, modify, and delete namespace properties in any namespace in any tenant. In Pulsar, namespace properties are reserved for user provided metadata about the namespace.

This issue affects Apache Pulsar versions from 2.7.1 to 2.10.6, from 2.11.0 to 2.11.4, from 3.0.0 to 3.0.3, from 3.1.0 to 3.1.3, and from 3.2.0 to 3.2.1. 

3.0 Apache Pulsar users should upgrade to at least 3.0.4.
3.1 and 3.2 Apache Pulsar users should upgrade to at least 3.2.2.

Users operating versions prior to those listed above should upgrade to the aforementioned patched versions or newer versions.</description><pubDate>Tue, 02 Apr 2024 19:36:00 +0000</pubDate></item><item><title>CVE-2024-30531 | WordPress Nelio Content plugin &amp;lt;= 3.2.0 - Server Side Request Forgery (SSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30531</link><description>Server-Side Request Forgery (SSRF) vulnerability in Nelio Software Nelio Content.This issue affects Nelio Content: from n/a through 3.2.0.</description><pubDate>Tue, 02 Apr 2024 18:47:55 +0000</pubDate></item><item><title>CVE-2024-24888 | WordPress Gutenberg Blocks by Kadence Blocks plugin &amp;lt;= 3.2.25 - Server Side Request Forgery (SSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24888</link><description>Server-Side Request Forgery (SSRF) vulnerability in Kadence WP Gutenberg Blocks by Kadence Blocks.This issue affects Gutenberg Blocks by Kadence Blocks: from n/a through 3.2.25.</description><pubDate>Tue, 02 Apr 2024 18:26:51 +0000</pubDate></item><item><title>CVE-2024-30532 | WordPress Builderall Builder for WordPress plugin &amp;lt;= 2.0.1 - Server Side Request Forgery (SSRF) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30532</link><description>Server-Side Request Forgery (SSRF) vulnerability in Builderall Team Builderall Builder for WordPress.This issue affects Builderall Builder for WordPress: from n/a through 2.0.1.</description><pubDate>Tue, 02 Apr 2024 18:26:52 +0000</pubDate></item><item><title>CVE-2024-30335 | Foxit PDF Reader AcroForm Annotation Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30335</link><description>Foxit PDF Reader AcroForm Annotation Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of Annotation objects. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22641.</description><pubDate>Tue, 02 Apr 2024 17:54:54 +0000</pubDate></item><item><title>CVE-2024-31105 | WordPress Tax Rate Upload plugin &amp;lt;= 2.4.5 - CSRF leading to Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31105</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Adam Bowen Tax Rate Upload allows Reflected XSS.This issue affects Tax Rate Upload: from n/a through 2.4.5.</description><pubDate>Tue, 02 Apr 2024 17:41:04 +0000</pubDate></item><item><title>CVE-2024-30806 | An issue was discovered in Bento4 v1.6.0-641-2-g1529b83. There is a heap overflow in AP4_Dec3Atom::AP4_Dec3Atom at Ap4Dec3Atom.cpp, leading ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30806</link><description>An issue was discovered in Bento4 v1.6.0-641-2-g1529b83. There is a heap overflow in AP4_Dec3Atom::AP4_Dec3Atom at Ap4Dec3Atom.cpp, leading to a Denial of Service (DoS), as demonstrated by mp42aac.</description><pubDate>Tue, 02 Apr 2024 17:34:17 +0000</pubDate></item><item><title>CVE-2024-30807 | An issue was discovered in Bento4 v1.6.0-641-2-g1529b83. There is a heap-use-after-free in AP4_UnknownAtom::~AP4_UnknownAtom at Ap4Atom.cpp,...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30807</link><description>An issue was discovered in Bento4 v1.6.0-641-2-g1529b83. There is a heap-use-after-free in AP4_UnknownAtom::~AP4_UnknownAtom at Ap4Atom.cpp, leading to a Denial of Service (DoS), as demonstrated by mp42ts.</description><pubDate>Tue, 02 Apr 2024 17:34:17 +0000</pubDate></item><item><title>CVE-2024-30808 | An issue was discovered in Bento4 v1.6.0-641-2-g1529b83. There is a heap-use-after-free in AP4_SubStream::~AP4_SubStream at Ap4ByteStream.cp...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30808</link><description>An issue was discovered in Bento4 v1.6.0-641-2-g1529b83. There is a heap-use-after-free in AP4_SubStream::~AP4_SubStream at Ap4ByteStream.cpp, leading to a Denial of Service (DoS), as demonstrated by mp42ts.</description><pubDate>Tue, 02 Apr 2024 17:34:18 +0000</pubDate></item><item><title>CVE-2024-30809 | An issue was discovered in Bento4 v1.6.0-641-2-g1529b83. There is a heap-use-after-free in Ap4Sample.h in AP4_Sample::GetOffset() const, lea...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30809</link><description>An issue was discovered in Bento4 v1.6.0-641-2-g1529b83. There is a heap-use-after-free in Ap4Sample.h in AP4_Sample::GetOffset() const, leading to a Denial of Service (DoS), as demonstrated by mp42ts.</description><pubDate>Tue, 02 Apr 2024 17:34:18 +0000</pubDate></item><item><title>CVE-2024-31109 | WordPress Woocommerce Social Media Share Buttons plugin &amp;lt;= 1.3.0 - CSRF to Cross Site Scripting (XSS) vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31109</link><description>Cross-Site Request Forgery (CSRF) vulnerability in Toastie Studio Woocommerce Social Media Share Buttons allows Stored XSS.This issue affects Woocommerce Social Media Share Buttons: from n/a through 1.3.0.</description><pubDate>Tue, 02 Apr 2024 17:34:18 +0000</pubDate></item><item><title>CVE-2024-3151 | Bdtask Multi-Store Inventory Management System Stock Movement Page cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3151</link><description>A vulnerability, which was classified as problematic, was found in Bdtask Multi-Store Inventory Management System up to 20240325. Affected is an unknown function of the file /stockmovment/stockmovment/delete/ of the component Stock Movement Page. The manipulation leads to cross-site request forgery. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-258924. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 17:13:10 +0000</pubDate></item><item><title>CVE-2024-2435 | Stored XSS in Timeline View</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2435</link><description>For an attacker with pre-existing access to send a signal to a workflow, the attacker can make the signal name a script that executes when a victim views that signal. The XSS is in the timeline page displaying the workflow execution details of the workflow that was sent the crafted signal.
Access to send a signal to a workflow is determined by how you configured the authorizer on your server. This includes any entity with permission to directly call SignalWorkflowExecution or SignalWithStartWorkflowExecution, or any entity can deploy a worker that has access to call workflow progress APIs (specifically RespondWorkflowTaskCompleted).</description><pubDate>Tue, 02 Apr 2024 16:51:21 +0000</pubDate></item><item><title>CVE-2024-28287 | A DOM-based open redirection in the returnUrl parameter of INSTINCT UI Web Client 6.5.0 allows attackers to redirect users to malicious site...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28287</link><description>A DOM-based open redirection in the returnUrl parameter of INSTINCT UI Web Client 6.5.0 allows attackers to redirect users to malicious sites via a crafted URL.</description><pubDate>Tue, 02 Apr 2024 16:44:26 +0000</pubDate></item><item><title>CVE-2024-22246 | VMware SD-WAN Edge contains an unauthenticated command injection vulnerability potentially leading to remote code execution.

A malicious ac...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22246</link><description>VMware SD-WAN Edge contains an unauthenticated command injection vulnerability potentially leading to remote code execution.

A malicious actor with local access to the Edge Router UI during 
activation may be able to perform a command injection attack that could 
lead to full control of the router.</description><pubDate>Tue, 02 Apr 2024 15:55:21 +0000</pubDate></item><item><title>CVE-2024-22247 | VMware SD-WAN Edge contains a missing authentication and protection mechanism vulnerability.

A malicious actor with physical access to the ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22247</link><description>VMware SD-WAN Edge contains a missing authentication and protection mechanism vulnerability.

A malicious actor with physical access to the SD-WAN Edge appliance 
during activation can potentially exploit this vulnerability to access 
the BIOS configuration. In addition, the malicious actor may be able to 
exploit the default boot priority configured.</description><pubDate>Tue, 02 Apr 2024 15:55:21 +0000</pubDate></item><item><title>CVE-2024-22248 | VMware SD-WAN Orchestrator contains an open redirect vulnerability.

A malicious actor may be able to redirect a victim to an attacker 
cont...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22248</link><description>VMware SD-WAN Orchestrator contains an open redirect vulnerability.

A malicious actor may be able to redirect a victim to an attacker 
controlled domain due to improper path handling leading to sensitive 
information disclosure.</description><pubDate>Tue, 02 Apr 2024 15:55:21 +0000</pubDate></item><item><title>CVE-2024-30248 | Piccolo Admin&amp;#x27;s raw SVG loading may lead to complete data compromise from admin page</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30248</link><description>Piccolo Admin is an admin interface/content management system for Python, built on top of Piccolo. Piccolo's admin panel allows media files to be uploaded. As a default, SVG is an allowed file type for upload. An attacker can upload an SVG which when loaded can allow arbitrary access to the admin page. This vulnerability was patched in version 1.3.2.</description><pubDate>Tue, 02 Apr 2024 15:03:15 +0000</pubDate></item><item><title>CVE-2024-22780 | Cross Site Scripting vulnerability in CA17 TeamsACS v.1.0.1 allows a remote attacker to execute arbitrary code via a crafted script to the e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22780</link><description>Cross Site Scripting vulnerability in CA17 TeamsACS v.1.0.1 allows a remote attacker to execute arbitrary code via a crafted script to the errmsg parameter.</description><pubDate>Tue, 02 Apr 2024 14:26:12 +0000</pubDate></item><item><title>CVE-2024-30620 | Tenda AX1803 v1.0.0.1 contains a stack overflow via the serviceName parameter in the function fromAdvSetMacMtuWan.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30620</link><description>Tenda AX1803 v1.0.0.1 contains a stack overflow via the serviceName parameter in the function fromAdvSetMacMtuWan.</description><pubDate>Tue, 02 Apr 2024 13:38:21 +0000</pubDate></item><item><title>CVE-2024-30621 | Tenda AX1803 v1.0.0.1 contains a stack overflow via the serverName parameter in the function fromAdvSetMacMtuWan.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30621</link><description>Tenda AX1803 v1.0.0.1 contains a stack overflow via the serverName parameter in the function fromAdvSetMacMtuWan.</description><pubDate>Tue, 02 Apr 2024 13:31:35 +0000</pubDate></item><item><title>CVE-2024-30965 | DedeCMS v5.7 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /src/dede/member_scores.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30965</link><description>DedeCMS v5.7 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /src/dede/member_scores.php.</description><pubDate>Tue, 02 Apr 2024 13:24:29 +0000</pubDate></item><item><title>CVE-2024-30946 | DedeCMS v5.7 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /src/dede/co_do.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30946</link><description>DedeCMS v5.7 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /src/dede/co_do.php.</description><pubDate>Tue, 02 Apr 2024 13:15:30 +0000</pubDate></item><item><title>CVE-2023-50313 | IBM WebSphere Application Server information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2023-50313</link><description>IBM WebSphere Application Server 8.5 and 9.0 could provide weaker than expected security for outbound TLS connections caused by a failure to honor user configuration.  IBM X-Force ID:  274812.</description><pubDate>Tue, 02 Apr 2024 12:59:20 +0000</pubDate></item><item><title>CVE-2024-29514 | File Upload vulnerability in lepton v.7.1.0 allows a remote authenticated attackers to execute arbitrary code via uploading a crafted PHP fi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29514</link><description>File Upload vulnerability in lepton v.7.1.0 allows a remote authenticated attackers to execute arbitrary code via uploading a crafted PHP file.</description><pubDate>Tue, 02 Apr 2024 12:59:21 +0000</pubDate></item><item><title>CVE-2024-2389 | Flowmon Unauthenticated Command Injection Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2389</link><description>In Flowmon versions prior to 11.1.14 and 12.3.5, an operating system command injection vulnerability has been identified.Â  An unauthenticated userÂ can gain entry to the system via the Flowmon management interface, allowing for the execution of arbitrary system commands.</description><pubDate>Tue, 02 Apr 2024 12:30:34 +0000</pubDate></item><item><title>CVE-2024-29947 | There is a NULL dereference pointer vulnerability in some Hikvision NVRs. Due to an insufficient validation of a parameter in a message, an ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29947</link><description>There is a NULL dereference pointer vulnerability in some Hikvision NVRs. Due to an insufficient validation of a parameter in a message, an attacker may send specially crafted messages to an affected product, causing a process abnormality.</description><pubDate>Tue, 02 Apr 2024 11:09:48 +0000</pubDate></item><item><title>CVE-2024-29948 | There is an out-of-bounds read vulnerability in some Hikvision NVRs. An authenticated attacker could exploit this vulnerability by sending s...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29948</link><description>There is an out-of-bounds read vulnerability in some Hikvision NVRs. An authenticated attacker could exploit this vulnerability by sending specially crafted messages to a vulnerable device, causing a service abnormality.</description><pubDate>Tue, 02 Apr 2024 11:09:48 +0000</pubDate></item><item><title>CVE-2024-29949 | There is a command injection vulnerability in some Hikvision NVRs. This could allow an authenticated user with administrative rights to exec...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29949</link><description>There is a command injection vulnerability in some Hikvision NVRs. This could allow an authenticated user with administrative rights to execute arbitrary commands.</description><pubDate>Tue, 02 Apr 2024 11:09:48 +0000</pubDate></item><item><title>CVE-2023-51452 | A Improper Input Validation issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attack...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51452</link><description>A Improper Input Validation issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attacker to cause a crash of the service through a crafted payload triggering a missing input size check in the pull_file_v2_proc function implemented in the libv2_sdk.so library used by the dji_vtwo_sdk binary implementing the service, compromising it in a term of availability and producing a denial-of-service attack. Affected models are Mavic 3 Pro until v01.01.0300, Mavic 3 until v01.00.1200, Mavic 3 Classic until v01.00.0500, Mavic 3 Enterprise until v07.01.10.03, Matrice 300 until v57.00.01.00, Matrice M30 until v07.01.0022 and Mini 3 Pro until v01.00.0620.</description><pubDate>Tue, 02 Apr 2024 10:36:22 +0000</pubDate></item><item><title>CVE-2023-51453 | A Improper Input Validation issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attack...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51453</link><description>A Improper Input Validation issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attacker to cause a crash of the service through a crafted payload triggering a missing input size check in the process_push_file function implemented in the libv2_sdk.so library used by the dji_vtwo_sdk binary implementing the service, compromising it in a term of availability and producing a denial-of-service attack. Affected models are Mavic 3 Pro until v01.01.0300, Mavic 3 until v01.00.1200, Mavic 3 Classic until v01.00.0500, Mavic 3 Enterprise until v07.01.10.03, Matrice 300 until v57.00.01.00, Matrice M30 until v07.01.0022 and Mini 3 Pro until v01.00.0620.</description><pubDate>Tue, 02 Apr 2024 10:36:23 +0000</pubDate></item><item><title>CVE-2023-51454 | A Out-of-bounds Write issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attacker to ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51454</link><description>A Out-of-bounds Write issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attacker to overwrite a pointer in the process memory through a crafted payload triggering an unsafe memory write operation in the my_tcp_receive function implemented in the libv2_sdk.so library used by the dji_vtwo_sdk binary implementing the service, potentially leading to a memory information leak or to an arbitrary code execution. Affected models are Mavic 3 Pro until v01.01.0300, Mavic 3 until v01.00.1200, Mavic 3 Classic until v01.00.0500, Mavic 3 Enterprise until v07.01.10.03, Matrice 300 until v57.00.01.00, Matrice M30 until v07.01.0022 and Mini 3 Pro until v01.00.0620.</description><pubDate>Tue, 02 Apr 2024 10:36:23 +0000</pubDate></item><item><title>CVE-2023-51455 | A Improper Validation of Array Index issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51455</link><description>A Improper Validation of Array Index issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attacker to corrupt a controlled memory location due to a missing input validation in the on_receive_session_packet_ack function implemented in the libv2_sdk.so library used by the dji_vtwo_sdk binary implementing the service, potentially leading to a memory information leak or to an arbitrary code execution. Affected models are Mavic 3 Pro until v01.01.0300, Mavic 3 until v01.00.1200, Mavic 3 Classic until v01.00.0500, Mavic 3 Enterprise until v07.01.10.03, Matrice 300 until v57.00.01.00, Matrice M30 until v07.01.0022 and Mini 3 Pro until v01.00.0620.</description><pubDate>Tue, 02 Apr 2024 10:36:24 +0000</pubDate></item><item><title>CVE-2023-51456 | A Improper Input Validation issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attack...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51456</link><description>A Improper Input Validation issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attacker to trigger an out-of-bound read/write into the process memory through a crafted payload due to a missing input sanity check in the v2_pack_array_to_msg function implemented in the libv2_sdk.so library imported by the v2_sdk_service binary implementing the service, potentially leading to a memory information leak or an arbitrary code execution. Affected models are Mavic 3 Pro until v01.01.0300, Mavic 3 until v01.00.1200, Mavic 3 Classic until v01.00.0500, Mavic 3 Enterprise until v07.01.10.03, Matrice 300 until v57.00.01.00, Matrice M30 until v07.01.0022 and Mini 3 Pro until v01.00.0620.</description><pubDate>Tue, 02 Apr 2024 10:36:24 +0000</pubDate></item><item><title>CVE-2023-6948 | A Buffer Copy without Checking Size of Input issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 coul...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6948</link><description>A Buffer Copy without Checking Size of Input issue affecting the v2_sdk_service running on a set of DJI drone devices on the port 10000 could allow an attacker to cause a crash of the service through a crafted payload triggering a missing input size check in the sdk_printf function implemented in the libv2_sdk.so library used by the dji_vtwo_sdk binary implementing the service, compromising it in a term of availability and producing a denial-of-service attack. Affected models are Mavic 3 Pro until v01.01.0300, Mavic 3 until v01.00.1200, Mavic 3 Classic until v01.00.0500, Mavic 3 Enterprise until v07.01.10.03, Matrice 300 until v57.00.01.00, Matrice M30 until v07.01.0022 and Mini 3 Pro until v01.00.0620.</description><pubDate>Tue, 02 Apr 2024 10:36:24 +0000</pubDate></item><item><title>CVE-2023-6949 | A Missing Authentication for Critical Function issue affecting the HTTP service running on the DJI Mavic Mini 3 Pro on the standard port 80 ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6949</link><description>A Missing Authentication for Critical Function issue affecting the HTTP service running on the DJI Mavic Mini 3 Pro on the standard port 80 could allow an attacker to enumerate and download videos and pictures saved on the drone internal or external memory without requiring any kind of authentication.</description><pubDate>Tue, 02 Apr 2024 10:36:25 +0000</pubDate></item><item><title>CVE-2023-6950 | An Improper Input Validation vulnerability affecting the FTP service running on the DJI Mavic Mini 3 Pro could allow an attacker to craft a ...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6950</link><description>An Improper Input Validation vulnerability affecting the FTP service running on the DJI Mavic Mini 3 Pro could allow an attacker to craft a malicious packet containing a malformed path provided to the FTP SIZE command that leads to a denial-of-service attack of the FTP service itself.</description><pubDate>Tue, 02 Apr 2024 10:36:25 +0000</pubDate></item><item><title>CVE-2023-6951 | A Use of Weak Credentials vulnerability affecting the Wi-Fi network generated by a set of DJI drones could allow a remote attacker to derive...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6951</link><description>A Use of Weak Credentials vulnerability affecting the Wi-Fi network generated by a set of DJI drones could allow a remote attacker to derive the WPA2 PSK key and authenticate without permission to the droneâ€™s Wi- Fi network. This, in turn, allows the attacker to perform unauthorized interaction with the network services exposed by the drone and to potentially decrypt the Wi-Fi traffic exchanged between the drone and the Android/IOS device of the legitimate user during QuickTransfer mode. Affected models are Mavic 3 Pro until v01.01.0300, Mavic 3 until v01.00.1200, Mavic 3 Classic until v01.00.0500, Mavic 3 Enterprise until v07.01.10.03, Matrice 300 until v57.00.01.00, Matrice M30 until v07.01.0022 and Mini 3 Pro until v01.00.0620.</description><pubDate>Tue, 02 Apr 2024 10:36:25 +0000</pubDate></item><item><title>CVE-2024-2745 | Rapid7 InsightVM Sensitive Information Exposure via URL</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2745</link><description>Rapid7's InsightVM maintenance mode login page suffers from a sensitive information exposure vulnerability whereby, sensitive information is exposed through query strings in the URL when login is attempted before the page is fully loaded.Â  This vulnerability allows attackers to acquire sensitive information such as passwords, auth tokens, usernames etc.Â Â 
Â 
The vulnerability is remediated in version 6.6.244.</description><pubDate>Tue, 02 Apr 2024 09:58:22 +0000</pubDate></item><item><title>CVE-2024-1732 | The Sharkdropship for AliExpress Dropshipping and Affiliate plugin for WordPress is vulnerable to unauthorized loss of data due to a missing...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1732</link><description>The Sharkdropship for AliExpress Dropshipping and Affiliate plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the wads_removeProductFromShop() function in all versions up to, and including, 2.2.4. This makes it possible for unauthenticated attackers to delete arbitrary posts.</description><pubDate>Tue, 02 Apr 2024 09:37:42 +0000</pubDate></item><item><title>CVE-2024-1807 | The Product Sort and Display for WooCommerce plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capabi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1807</link><description>The Product Sort and Display for WooCommerce plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the psad_update_product_cat_custom_meta_ajax function in all versions up to, and including, 2.4.1. This makes it possible for unauthenticated attackers to hide product categories.</description><pubDate>Tue, 02 Apr 2024 09:37:42 +0000</pubDate></item><item><title>CVE-2024-1946 | The Genesis Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the block content in all versions up to, and includ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1946</link><description>The Genesis Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the block content in all versions up to, and including, 3.1.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 02 Apr 2024 09:37:43 +0000</pubDate></item><item><title>CVE-2024-2931 | The WPFront User Role Editor plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 3.2....</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2931</link><description>The WPFront User Role Editor plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 3.2.1.11184 via the wpfront_user_role_editor_assign_roles_user_autocomplete AJAX action. This makes it possible for authenticated attackers, with subscriber-level access and above, to extract retrieve a list of all user email addresses who are registered on the site.</description><pubDate>Tue, 02 Apr 2024 08:37:35 +0000</pubDate></item><item><title>CVE-2024-20799 | AMS XSS - /libs/dam/gui/coral/components/commons/navigationpanel/clientlibs/navigationpanel/js/navigationpanel.js</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20799</link><description>Adobe Experience Manager versions 6.5.19 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victimâ€™s browser when they browse to the page containing the vulnerable field.</description><pubDate>Tue, 02 Apr 2024 08:19:19 +0000</pubDate></item><item><title>CVE-2024-31004 | An issue in Bento4 Bento v.1.6.0-641 allows a remote attacker to execute arbitrary code via the Ap4StsdAtom.cpp,AP4_StsdAtom::AP4_StsdAtom,m...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31004</link><description>An issue in Bento4 Bento v.1.6.0-641 allows a remote attacker to execute arbitrary code via the Ap4StsdAtom.cpp,AP4_StsdAtom::AP4_StsdAtom,mp4fragment.</description><pubDate>Tue, 02 Apr 2024 07:46:06 +0000</pubDate></item><item><title>CVE-2024-31005 | An issue in Bento4 Bento v.1.6.0-641 allows a remote attacker to execute arbitrary code via the Ap4MdhdAtom.cpp,AP4_MdhdAtom::AP4_MdhdAtom,m...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31005</link><description>An issue in Bento4 Bento v.1.6.0-641 allows a remote attacker to execute arbitrary code via the Ap4MdhdAtom.cpp,AP4_MdhdAtom::AP4_MdhdAtom,mp4fragment</description><pubDate>Tue, 02 Apr 2024 07:46:07 +0000</pubDate></item><item><title>CVE-2024-1300 | Io.vertx:vertx-core: memory leak when a tcp server is configured with tls and sni support</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1300</link><description>A vulnerability in the Eclipse Vert.x toolkit causes a memory leak in TCP servers configured with TLS and SNI support. When processing an unknown SNI server name assigned the default certificate instead of a mapped certificate, the SSL context is erroneously cached in the server name map, leading to memory exhaustion. This flaw allows attackers to send TLS client hello messages with fake server names, triggering a JVM out-of-memory error.</description><pubDate>Tue, 02 Apr 2024 07:39:13 +0000</pubDate></item><item><title>CVE-2024-31002 | Buffer Overflow vulnerability in Bento4 Bento v.1.6.0-641 allows a remote attacker to execute arbitrary code via the AP4 BitReader::ReadCach...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31002</link><description>Buffer Overflow vulnerability in Bento4 Bento v.1.6.0-641 allows a remote attacker to execute arbitrary code via the AP4 BitReader::ReadCache() at Ap4Utils.cpp component.</description><pubDate>Tue, 02 Apr 2024 07:39:13 +0000</pubDate></item><item><title>CVE-2024-31003 | Buffer Overflow vulnerability in Bento4 Bento v.1.6.0-641 allows a remote attacker to execute arbitrary code via the AP4_MemoryByteStream::W...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31003</link><description>Buffer Overflow vulnerability in Bento4 Bento v.1.6.0-641 allows a remote attacker to execute arbitrary code via the AP4_MemoryByteStream::WritePartial at Ap4ByteStream.cpp.</description><pubDate>Tue, 02 Apr 2024 07:39:13 +0000</pubDate></item><item><title>CVE-2023-52636 | libceph: just wait for more data to be available on the socket</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52636</link><description>In the Linux kernel, the following vulnerability has been resolved:

libceph: just wait for more data to be available on the socket

A short read may occur while reading the message footer from the
socket.  Later, when the socket is ready for another read, the
messenger invokes all read_partial_*() handlers, including
read_partial_sparse_msg_data().  The expectation is that
read_partial_sparse_msg_data() would bail, allowing the messenger to
invoke read_partial() for the footer and pick up where it left off.

However read_partial_sparse_msg_data() violates that and ends up
calling into the state machine in the OSD client.  The sparse-read
state machine assumes that it's a new op and interprets some piece of
the footer as the sparse-read header and returns bogus extents/data
length, etc.

To determine whether read_partial_sparse_msg_data() should bail, let's
reuse cursor-&gt;total_resid.  Because once it reaches to zero that means
all the extents and data have been successfully received in last read,
else it could break out when partially reading any of the extents and
data.  And then osd_sparse_read() could continue where it left off.

[ idryomov: changelog ]</description><pubDate>Tue, 02 Apr 2024 07:16:07 +0000</pubDate></item><item><title>CVE-2024-26674 | x86/lib: Revert to _ASM_EXTABLE_UA() for {get,put}_user() fixups</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26674</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/lib: Revert to _ASM_EXTABLE_UA() for {get,put}_user() fixups

During memory error injection test on kernels &gt;= v6.4, the kernel panics
like below. However, this issue couldn't be reproduced on kernels &lt;= v6.3.

  mce: [Hardware Error]: CPU 296: Machine Check Exception: f Bank 1: bd80000000100134
  mce: [Hardware Error]: RIP 10:&lt;ffffffff821b9776&gt; {__get_user_nocheck_4+0x6/0x20}
  mce: [Hardware Error]: TSC 411a93533ed ADDR 346a8730040 MISC 86
  mce: [Hardware Error]: PROCESSOR 0:a06d0 TIME 1706000767 SOCKET 1 APIC 211 microcode 80001490
  mce: [Hardware Error]: Run the above through 'mcelog --ascii'
  mce: [Hardware Error]: Machine check: Data load in unrecoverable area of kernel
  Kernel panic - not syncing: Fatal local machine check

The MCA code can recover from an in-kernel #MC if the fixup type is
EX_TYPE_UACCESS, explicitly indicating that the kernel is attempting to
access userspace memory. However, if the fixup type is EX_TYPE_DEFAULT
the only thing that is raised for an in-kernel #MC is a panic.

ex_handler_uaccess() would warn if users gave a non-canonical addresses
(with bit 63 clear) to {get, put}_user(), which was unexpected.

Therefore, commit

  b19b74bc99b1 ("x86/mm: Rework address range check in get_user() and put_user()")

replaced _ASM_EXTABLE_UA() with _ASM_EXTABLE() for {get, put}_user()
fixups. However, the new fixup type EX_TYPE_DEFAULT results in a panic.

Commit

  6014bc27561f ("x86-64: make access_ok() independent of LAM")

added the check gp_fault_address_ok() right before the WARN_ONCE() in
ex_handler_uaccess() to not warn about non-canonical user addresses due
to LAM.

With that in place, revert back to _ASM_EXTABLE_UA() for {get,put}_user()
exception fixups in order to be able to handle in-kernel MCEs correctly
again.

  [ bp: Massage commit message. ]</description><pubDate>Tue, 02 Apr 2024 07:16:08 +0000</pubDate></item><item><title>CVE-2024-26675 | ppp_async: limit MRU to 64K</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26675</link><description>In the Linux kernel, the following vulnerability has been resolved:

ppp_async: limit MRU to 64K

syzbot triggered a warning [1] in __alloc_pages():

WARN_ON_ONCE_GFP(order &gt; MAX_PAGE_ORDER, gfp)

Willem fixed a similar issue in commit c0a2a1b0d631 ("ppp: limit MRU to 64K")

Adopt the same sanity check for ppp_async_ioctl(PPPIOCSMRU)

[1]:

 WARNING: CPU: 1 PID: 11 at mm/page_alloc.c:4543 __alloc_pages+0x308/0x698 mm/page_alloc.c:4543
Modules linked in:
CPU: 1 PID: 11 Comm: kworker/u4:0 Not tainted 6.8.0-rc2-syzkaller-g41bccc98fb79 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023
Workqueue: events_unbound flush_to_ldisc
pstate: 204000c5 (nzCv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : __alloc_pages+0x308/0x698 mm/page_alloc.c:4543
 lr : __alloc_pages+0xc8/0x698 mm/page_alloc.c:4537
sp : ffff800093967580
x29: ffff800093967660 x28: ffff8000939675a0 x27: dfff800000000000
x26: ffff70001272ceb4 x25: 0000000000000000 x24: ffff8000939675c0
x23: 0000000000000000 x22: 0000000000060820 x21: 1ffff0001272ceb8
x20: ffff8000939675e0 x19: 0000000000000010 x18: ffff800093967120
x17: ffff800083bded5c x16: ffff80008ac97500 x15: 0000000000000005
x14: 1ffff0001272cebc x13: 0000000000000000 x12: 0000000000000000
x11: ffff70001272cec1 x10: 1ffff0001272cec0 x9 : 0000000000000001
x8 : ffff800091c91000 x7 : 0000000000000000 x6 : 000000000000003f
x5 : 00000000ffffffff x4 : 0000000000000000 x3 : 0000000000000020
x2 : 0000000000000008 x1 : 0000000000000000 x0 : ffff8000939675e0
Call trace:
  __alloc_pages+0x308/0x698 mm/page_alloc.c:4543
  __alloc_pages_node include/linux/gfp.h:238 [inline]
  alloc_pages_node include/linux/gfp.h:261 [inline]
  __kmalloc_large_node+0xbc/0x1fc mm/slub.c:3926
  __do_kmalloc_node mm/slub.c:3969 [inline]
  __kmalloc_node_track_caller+0x418/0x620 mm/slub.c:4001
  kmalloc_reserve+0x17c/0x23c net/core/skbuff.c:590
  __alloc_skb+0x1c8/0x3d8 net/core/skbuff.c:651
  __netdev_alloc_skb+0xb8/0x3e8 net/core/skbuff.c:715
  netdev_alloc_skb include/linux/skbuff.h:3235 [inline]
  dev_alloc_skb include/linux/skbuff.h:3248 [inline]
  ppp_async_input drivers/net/ppp/ppp_async.c:863 [inline]
  ppp_asynctty_receive+0x588/0x186c drivers/net/ppp/ppp_async.c:341
  tty_ldisc_receive_buf+0x12c/0x15c drivers/tty/tty_buffer.c:390
  tty_port_default_receive_buf+0x74/0xac drivers/tty/tty_port.c:37
  receive_buf drivers/tty/tty_buffer.c:444 [inline]
  flush_to_ldisc+0x284/0x6e4 drivers/tty/tty_buffer.c:494
  process_one_work+0x694/0x1204 kernel/workqueue.c:2633
  process_scheduled_works kernel/workqueue.c:2706 [inline]
  worker_thread+0x938/0xef4 kernel/workqueue.c:2787
  kthread+0x288/0x310 kernel/kthread.c:388
  ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:860</description><pubDate>Tue, 02 Apr 2024 07:16:08 +0000</pubDate></item><item><title>CVE-2024-26676 | af_unix: Call kfree_skb() for dead unix_(sk)-&amp;gt;oob_skb in GC.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26676</link><description>In the Linux kernel, the following vulnerability has been resolved:

af_unix: Call kfree_skb() for dead unix_(sk)-&gt;oob_skb in GC.

syzbot reported a warning [0] in __unix_gc() with a repro, which
creates a socketpair and sends one socket's fd to itself using the
peer.

  socketpair(AF_UNIX, SOCK_STREAM, 0, [3, 4]) = 0
  sendmsg(4, {msg_name=NULL, msg_namelen=0, msg_iov=[{iov_base="\360", iov_len=1}],
          msg_iovlen=1, msg_control=[{cmsg_len=20, cmsg_level=SOL_SOCKET,
                                      cmsg_type=SCM_RIGHTS, cmsg_data=[3]}],
          msg_controllen=24, msg_flags=0}, MSG_OOB|MSG_PROBE|MSG_DONTWAIT|MSG_ZEROCOPY) = 1

This forms a self-cyclic reference that GC should finally untangle
but does not due to lack of MSG_OOB handling, resulting in memory
leak.

Recently, commit 11498715f266 ("af_unix: Remove io_uring code for
GC.") removed io_uring's dead code in GC and revealed the problem.

The code was executed at the final stage of GC and unconditionally
moved all GC candidates from gc_candidates to gc_inflight_list.
That papered over the reported problem by always making the following
WARN_ON_ONCE(!list_empty(&amp;gc_candidates)) false.

The problem has been there since commit 2aab4b969002 ("af_unix: fix
struct pid leaks in OOB support") added full scm support for MSG_OOB
while fixing another bug.

To fix this problem, we must call kfree_skb() for unix_sk(sk)-&gt;oob_skb
if the socket still exists in gc_candidates after purging collected skb.

Then, we need to set NULL to oob_skb before calling kfree_skb() because
it calls last fput() and triggers unix_release_sock(), where we call
duplicate kfree_skb(u-&gt;oob_skb) if not NULL.

Note that the leaked socket remained being linked to a global list, so
kmemleak also could not detect it.  We need to check /proc/net/protocol
to notice the unfreed socket.

[0]:
WARNING: CPU: 0 PID: 2863 at net/unix/garbage.c:345 __unix_gc+0xc74/0xe80 net/unix/garbage.c:345
Modules linked in:
CPU: 0 PID: 2863 Comm: kworker/u4:11 Not tainted 6.8.0-rc1-syzkaller-00583-g1701940b1a02 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024
Workqueue: events_unbound __unix_gc
RIP: 0010:__unix_gc+0xc74/0xe80 net/unix/garbage.c:345
Code: 8b 5c 24 50 e9 86 f8 ff ff e8 f8 e4 22 f8 31 d2 48 c7 c6 30 6a 69 89 4c 89 ef e8 97 ef ff ff e9 80 f9 ff ff e8 dd e4 22 f8 90 &lt;0f&gt; 0b 90 e9 7b fd ff ff 48 89 df e8 5c e7 7c f8 e9 d3 f8 ff ff e8
RSP: 0018:ffffc9000b03fba0 EFLAGS: 00010293
RAX: 0000000000000000 RBX: ffffc9000b03fc10 RCX: ffffffff816c493e
RDX: ffff88802c02d940 RSI: ffffffff896982f3 RDI: ffffc9000b03fb30
RBP: ffffc9000b03fce0 R08: 0000000000000001 R09: fffff52001607f66
R10: 0000000000000003 R11: 0000000000000002 R12: dffffc0000000000
R13: ffffc9000b03fc10 R14: ffffc9000b03fc10 R15: 0000000000000001
FS:  0000000000000000(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00005559c8677a60 CR3: 000000000d57a000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 &lt;TASK&gt;
 process_one_work+0x889/0x15e0 kernel/workqueue.c:2633
 process_scheduled_works kernel/workqueue.c:2706 [inline]
 worker_thread+0x8b9/0x12a0 kernel/workqueue.c:2787
 kthread+0x2c6/0x3b0 kernel/kthread.c:388
 ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1b/0x30 arch/x86/entry/entry_64.S:242
 &lt;/TASK&gt;</description><pubDate>Tue, 02 Apr 2024 07:16:08 +0000</pubDate></item><item><title>CVE-2024-26677 | rxrpc: Fix delayed ACKs to not set the reference serial number</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26677</link><description>In the Linux kernel, the following vulnerability has been resolved:

rxrpc: Fix delayed ACKs to not set the reference serial number

Fix the construction of delayed ACKs to not set the reference serial number
as they can't be used as an RTT reference.</description><pubDate>Tue, 02 Apr 2024 07:16:09 +0000</pubDate></item><item><title>CVE-2024-26678 | x86/efistub: Use 1:1 file:memory mapping for PE/COFF .compat section</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26678</link><description>In the Linux kernel, the following vulnerability has been resolved:

x86/efistub: Use 1:1 file:memory mapping for PE/COFF .compat section

The .compat section is a dummy PE section that contains the address of
the 32-bit entrypoint of the 64-bit kernel image if it is bootable from
32-bit firmware (i.e., CONFIG_EFI_MIXED=y)

This section is only 8 bytes in size and is only referenced from the
loader, and so it is placed at the end of the memory view of the image,
to avoid the need for padding it to 4k, which is required for sections
appearing in the middle of the image.

Unfortunately, this violates the PE/COFF spec, and even if most EFI
loaders will work correctly (including the Tianocore reference
implementation), PE loaders do exist that reject such images, on the
basis that both the file and memory views of the file contents should be
described by the section headers in a monotonically increasing manner
without leaving any gaps.

So reorganize the sections to avoid this issue. This results in a slight
padding overhead (&lt; 4k) which can be avoided if desired by disabling
CONFIG_EFI_MIXED (which is only needed in rare cases these days)</description><pubDate>Tue, 02 Apr 2024 07:16:09 +0000</pubDate></item><item><title>CVE-2024-26679 | inet: read sk-&amp;gt;sk_family once in inet_recv_error()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26679</link><description>In the Linux kernel, the following vulnerability has been resolved:

inet: read sk-&gt;sk_family once in inet_recv_error()

inet_recv_error() is called without holding the socket lock.

IPv6 socket could mutate to IPv4 with IPV6_ADDRFORM
socket option and trigger a KCSAN warning.</description><pubDate>Tue, 02 Apr 2024 07:16:09 +0000</pubDate></item><item><title>CVE-2024-26680 | net: atlantic: Fix DMA mapping for PTP hwts ring</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26680</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: atlantic: Fix DMA mapping for PTP hwts ring

Function aq_ring_hwts_rx_alloc() maps extra AQ_CFG_RXDS_DEF bytes
for PTP HWTS ring but then generic aq_ring_free() does not take this
into account.
Create and use a specific function to free HWTS ring to fix this
issue.

Trace:
[  215.351607] ------------[ cut here ]------------
[  215.351612] DMA-API: atlantic 0000:4b:00.0: device driver frees DMA memory with different size [device address=0x00000000fbdd0000] [map size=34816 bytes] [unmap size=32768 bytes]
[  215.351635] WARNING: CPU: 33 PID: 10759 at kernel/dma/debug.c:988 check_unmap+0xa6f/0x2360
...
[  215.581176] Call Trace:
[  215.583632]  &lt;TASK&gt;
[  215.585745]  ? show_trace_log_lvl+0x1c4/0x2df
[  215.590114]  ? show_trace_log_lvl+0x1c4/0x2df
[  215.594497]  ? debug_dma_free_coherent+0x196/0x210
[  215.599305]  ? check_unmap+0xa6f/0x2360
[  215.603147]  ? __warn+0xca/0x1d0
[  215.606391]  ? check_unmap+0xa6f/0x2360
[  215.610237]  ? report_bug+0x1ef/0x370
[  215.613921]  ? handle_bug+0x3c/0x70
[  215.617423]  ? exc_invalid_op+0x14/0x50
[  215.621269]  ? asm_exc_invalid_op+0x16/0x20
[  215.625480]  ? check_unmap+0xa6f/0x2360
[  215.629331]  ? mark_lock.part.0+0xca/0xa40
[  215.633445]  debug_dma_free_coherent+0x196/0x210
[  215.638079]  ? __pfx_debug_dma_free_coherent+0x10/0x10
[  215.643242]  ? slab_free_freelist_hook+0x11d/0x1d0
[  215.648060]  dma_free_attrs+0x6d/0x130
[  215.651834]  aq_ring_free+0x193/0x290 [atlantic]
[  215.656487]  aq_ptp_ring_free+0x67/0x110 [atlantic]
...
[  216.127540] ---[ end trace 6467e5964dd2640b ]---
[  216.132160] DMA-API: Mapped at:
[  216.132162]  debug_dma_alloc_coherent+0x66/0x2f0
[  216.132165]  dma_alloc_attrs+0xf5/0x1b0
[  216.132168]  aq_ring_hwts_rx_alloc+0x150/0x1f0 [atlantic]
[  216.132193]  aq_ptp_ring_alloc+0x1bb/0x540 [atlantic]
[  216.132213]  aq_nic_init+0x4a1/0x760 [atlantic]</description><pubDate>Tue, 02 Apr 2024 07:16:10 +0000</pubDate></item><item><title>CVE-2024-26681 | netdevsim: avoid potential loop in nsim_dev_trap_report_work()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26681</link><description>In the Linux kernel, the following vulnerability has been resolved:

netdevsim: avoid potential loop in nsim_dev_trap_report_work()

Many syzbot reports include the following trace [1]

If nsim_dev_trap_report_work() can not grab the mutex,
it should rearm itself at least one jiffie later.

[1]
Sending NMI from CPU 1 to CPUs 0:
NMI backtrace for cpu 0
CPU: 0 PID: 32383 Comm: kworker/0:2 Not tainted 6.8.0-rc2-syzkaller-00031-g861c0981648f #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023
Workqueue: events nsim_dev_trap_report_work
 RIP: 0010:bytes_is_nonzero mm/kasan/generic.c:89 [inline]
 RIP: 0010:memory_is_nonzero mm/kasan/generic.c:104 [inline]
 RIP: 0010:memory_is_poisoned_n mm/kasan/generic.c:129 [inline]
 RIP: 0010:memory_is_poisoned mm/kasan/generic.c:161 [inline]
 RIP: 0010:check_region_inline mm/kasan/generic.c:180 [inline]
 RIP: 0010:kasan_check_range+0x101/0x190 mm/kasan/generic.c:189
Code: 07 49 39 d1 75 0a 45 3a 11 b8 01 00 00 00 7c 0b 44 89 c2 e8 21 ed ff ff 83 f0 01 5b 5d 41 5c c3 48 85 d2 74 4f 48 01 ea eb 09 &lt;48&gt; 83 c0 01 48 39 d0 74 41 80 38 00 74 f2 eb b6 41 bc 08 00 00 00
RSP: 0018:ffffc90012dcf998 EFLAGS: 00000046
RAX: fffffbfff258af1e RBX: fffffbfff258af1f RCX: ffffffff8168eda3
RDX: fffffbfff258af1f RSI: 0000000000000004 RDI: ffffffff92c578f0
RBP: fffffbfff258af1e R08: 0000000000000000 R09: fffffbfff258af1e
R10: ffffffff92c578f3 R11: ffffffff8acbcbc0 R12: 0000000000000002
R13: ffff88806db38400 R14: 1ffff920025b9f42 R15: ffffffff92c578e8
FS:  0000000000000000(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000000c00994e078 CR3: 000000002c250000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 &lt;NMI&gt;
 &lt;/NMI&gt;
 &lt;TASK&gt;
  instrument_atomic_read include/linux/instrumented.h:68 [inline]
  atomic_read include/linux/atomic/atomic-instrumented.h:32 [inline]
  queued_spin_is_locked include/asm-generic/qspinlock.h:57 [inline]
  debug_spin_unlock kernel/locking/spinlock_debug.c:101 [inline]
  do_raw_spin_unlock+0x53/0x230 kernel/locking/spinlock_debug.c:141
  __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:150 [inline]
  _raw_spin_unlock_irqrestore+0x22/0x70 kernel/locking/spinlock.c:194
  debug_object_activate+0x349/0x540 lib/debugobjects.c:726
  debug_work_activate kernel/workqueue.c:578 [inline]
  insert_work+0x30/0x230 kernel/workqueue.c:1650
  __queue_work+0x62e/0x11d0 kernel/workqueue.c:1802
  __queue_delayed_work+0x1bf/0x270 kernel/workqueue.c:1953
  queue_delayed_work_on+0x106/0x130 kernel/workqueue.c:1989
  queue_delayed_work include/linux/workqueue.h:563 [inline]
  schedule_delayed_work include/linux/workqueue.h:677 [inline]
  nsim_dev_trap_report_work+0x9c0/0xc80 drivers/net/netdevsim/dev.c:842
  process_one_work+0x886/0x15d0 kernel/workqueue.c:2633
  process_scheduled_works kernel/workqueue.c:2706 [inline]
  worker_thread+0x8b9/0x1290 kernel/workqueue.c:2787
  kthread+0x2c6/0x3a0 kernel/kthread.c:388
  ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147
  ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:242
 &lt;/TASK&gt;</description><pubDate>Tue, 02 Apr 2024 07:16:10 +0000</pubDate></item><item><title>CVE-2024-26682 | wifi: mac80211: improve CSA/ECSA connection refusal</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26682</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: improve CSA/ECSA connection refusal

As mentioned in the previous commit, we pretty quickly found
that some APs have ECSA elements stuck in their probe response,
so using that to not attempt to connect while CSA is happening
we never connect to such an AP.

Improve this situation by checking more carefully and ignoring
the ECSA if cfg80211 has previously detected the ECSA element
being stuck in the probe response.

Additionally, allow connecting to an AP that's switching to a
channel it's already using, unless it's using quiet mode. In
this case, we may just have to adjust bandwidth later. If it's
actually switching channels, it's better not to try to connect
in the middle of that.</description><pubDate>Tue, 02 Apr 2024 07:16:10 +0000</pubDate></item><item><title>CVE-2024-26683 | wifi: cfg80211: detect stuck ECSA element in probe resp</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26683</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: cfg80211: detect stuck ECSA element in probe resp

We recently added some validation that we don't try to
connect to an AP that is currently in a channel switch
process, since that might want the channel to be quiet
or we might not be able to connect in time to hear the
switching in a beacon. This was in commit c09c4f31998b
("wifi: mac80211: don't connect to an AP while it's in
a CSA process").

However, we promptly got a report that this caused new
connection failures, and it turns out that the AP that
we now cannot connect to is permanently advertising an
extended channel switch announcement, even with quiet.
The AP in question was an Asus RT-AC53, with firmware
3.0.0.4.380_10760-g21a5898.

As a first step, attempt to detect that we're dealing
with such a situation, so mac80211 can use this later.</description><pubDate>Tue, 02 Apr 2024 07:16:11 +0000</pubDate></item><item><title>CVE-2024-26684 | net: stmmac: xgmac: fix handling of DPP safety error for DMA channels</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26684</link><description>In the Linux kernel, the following vulnerability has been resolved:

net: stmmac: xgmac: fix handling of DPP safety error for DMA channels

Commit 56e58d6c8a56 ("net: stmmac: Implement Safety Features in
XGMAC core") checks and reports safety errors, but leaves the
Data Path Parity Errors for each channel in DMA unhandled at all, lead to
a storm of interrupt.
Fix it by checking and clearing the DMA_DPP_Interrupt_Status register.</description><pubDate>Tue, 02 Apr 2024 07:16:11 +0000</pubDate></item><item><title>CVE-2024-29276 | An issue was discovered in seeyonOA version 8, allows remote attackers to execute arbitrary code via the importProcess method in WorkFlowDes...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29276</link><description>An issue was discovered in seeyonOA version 8, allows remote attackers to execute arbitrary code via the importProcess method in WorkFlowDesignerController.class component.</description><pubDate>Tue, 02 Apr 2024 07:16:11 +0000</pubDate></item><item><title>CVE-2024-26673 | netfilter: nft_ct: sanitize layer 3 and 4 protocol number in custom expectations</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26673</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nft_ct: sanitize layer 3 and 4 protocol number in custom expectations

- Disallow families other than NFPROTO_{IPV4,IPV6,INET}.
- Disallow layer 4 protocol with no ports, since destination port is a
  mandatory attribute for this object.</description><pubDate>Tue, 02 Apr 2024 07:00:10 +0000</pubDate></item><item><title>CVE-2023-52632 | drm/amdkfd: Fix lock dependency warning with srcu</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52632</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdkfd: Fix lock dependency warning with srcu

======================================================
WARNING: possible circular locking dependency detected
6.5.0-kfd-yangp #2289 Not tainted
------------------------------------------------------
kworker/0:2/996 is trying to acquire lock:
        (srcu){.+.+}-{0:0}, at: __synchronize_srcu+0x5/0x1a0

but task is already holding lock:
        ((work_completion)(&amp;svms-&gt;deferred_list_work)){+.+.}-{0:0}, at:
	process_one_work+0x211/0x560

which lock already depends on the new lock.

the existing dependency chain (in reverse order) is:

-&gt; #3 ((work_completion)(&amp;svms-&gt;deferred_list_work)){+.+.}-{0:0}:
        __flush_work+0x88/0x4f0
        svm_range_list_lock_and_flush_work+0x3d/0x110 [amdgpu]
        svm_range_set_attr+0xd6/0x14c0 [amdgpu]
        kfd_ioctl+0x1d1/0x630 [amdgpu]
        __x64_sys_ioctl+0x88/0xc0

-&gt; #2 (&amp;info-&gt;lock#2){+.+.}-{3:3}:
        __mutex_lock+0x99/0xc70
        amdgpu_amdkfd_gpuvm_restore_process_bos+0x54/0x740 [amdgpu]
        restore_process_helper+0x22/0x80 [amdgpu]
        restore_process_worker+0x2d/0xa0 [amdgpu]
        process_one_work+0x29b/0x560
        worker_thread+0x3d/0x3d0

-&gt; #1 ((work_completion)(&amp;(&amp;process-&gt;restore_work)-&gt;work)){+.+.}-{0:0}:
        __flush_work+0x88/0x4f0
        __cancel_work_timer+0x12c/0x1c0
        kfd_process_notifier_release_internal+0x37/0x1f0 [amdgpu]
        __mmu_notifier_release+0xad/0x240
        exit_mmap+0x6a/0x3a0
        mmput+0x6a/0x120
        do_exit+0x322/0xb90
        do_group_exit+0x37/0xa0
        __x64_sys_exit_group+0x18/0x20
        do_syscall_64+0x38/0x80

-&gt; #0 (srcu){.+.+}-{0:0}:
        __lock_acquire+0x1521/0x2510
        lock_sync+0x5f/0x90
        __synchronize_srcu+0x4f/0x1a0
        __mmu_notifier_release+0x128/0x240
        exit_mmap+0x6a/0x3a0
        mmput+0x6a/0x120
        svm_range_deferred_list_work+0x19f/0x350 [amdgpu]
        process_one_work+0x29b/0x560
        worker_thread+0x3d/0x3d0

other info that might help us debug this:
Chain exists of:
  srcu --&gt; &amp;info-&gt;lock#2 --&gt; (work_completion)(&amp;svms-&gt;deferred_list_work)

Possible unsafe locking scenario:

        CPU0                    CPU1
        ----                    ----
        lock((work_completion)(&amp;svms-&gt;deferred_list_work));
                        lock(&amp;info-&gt;lock#2);
			lock((work_completion)(&amp;svms-&gt;deferred_list_work));
        sync(srcu);</description><pubDate>Tue, 02 Apr 2024 06:53:20 +0000</pubDate></item><item><title>CVE-2023-52633 | um: time-travel: fix time corruption</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52633</link><description>In the Linux kernel, the following vulnerability has been resolved:

um: time-travel: fix time corruption

In 'basic' time-travel mode (without =inf-cpu or =ext), we
still get timer interrupts. These can happen at arbitrary
points in time, i.e. while in timer_read(), which pushes
time forward just a little bit. Then, if we happen to get
the interrupt after calculating the new time to push to,
but before actually finishing that, the interrupt will set
the time to a value that's incompatible with the forward,
and we'll crash because time goes backwards when we do the
forwarding.

Fix this by reading the time_travel_time, calculating the
adjustment, and doing the adjustment all with interrupts
disabled.</description><pubDate>Tue, 02 Apr 2024 06:53:20 +0000</pubDate></item><item><title>CVE-2023-52634 | drm/amd/display: Fix disable_otg_wa logic</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52634</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix disable_otg_wa logic

[Why]
When switching to another HDMI mode, we are unnecesarilly
disabling/enabling FIFO causing both HPO and DIG registers to be set at
the same time when only HPO is supposed to be set.

This can lead to a system hang the next time we change refresh rates as
there are cases when we don't disable OTG/FIFO but FIFO is enabled when
it isn't supposed to be.

[How]
Removing the enable/disable FIFO entirely.</description><pubDate>Tue, 02 Apr 2024 06:53:21 +0000</pubDate></item><item><title>CVE-2023-52635 | PM / devfreq: Synchronize devfreq_monitor_[start/stop]</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52635</link><description>In the Linux kernel, the following vulnerability has been resolved:

PM / devfreq: Synchronize devfreq_monitor_[start/stop]

There is a chance if a frequent switch of the governor
done in a loop result in timer list corruption where
timer cancel being done from two place one from
cancel_delayed_work_sync() and followed by expire_timers()
can be seen from the traces[1].

while true
do
        echo "simple_ondemand" &gt; /sys/class/devfreq/1d84000.ufshc/governor
        echo "performance" &gt; /sys/class/devfreq/1d84000.ufshc/governor
done

It looks to be issue with devfreq driver where
device_monitor_[start/stop] need to synchronized so that
delayed work should get corrupted while it is either
being queued or running or being cancelled.

Let's use polling flag and devfreq lock to synchronize the
queueing the timer instance twice and work data being
corrupted.

[1]
...
..
&lt;idle&gt;-0    [003]   9436.209662:  timer_cancel   timer=0xffffff80444f0428
&lt;idle&gt;-0    [003]   9436.209664:  timer_expire_entry   timer=0xffffff80444f0428  now=0x10022da1c  function=__typeid__ZTSFvP10timer_listE_global_addr  baseclk=0x10022da1c
&lt;idle&gt;-0    [003]   9436.209718:  timer_expire_exit   timer=0xffffff80444f0428
kworker/u16:6-14217    [003]   9436.209863:  timer_start   timer=0xffffff80444f0428  function=__typeid__ZTSFvP10timer_listE_global_addr  expires=0x10022da2b  now=0x10022da1c  flags=182452227
vendor.xxxyyy.ha-1593    [004]   9436.209888:  timer_cancel   timer=0xffffff80444f0428
vendor.xxxyyy.ha-1593    [004]   9436.216390:  timer_init   timer=0xffffff80444f0428
vendor.xxxyyy.ha-1593    [004]   9436.216392:  timer_start   timer=0xffffff80444f0428  function=__typeid__ZTSFvP10timer_listE_global_addr  expires=0x10022da2c  now=0x10022da1d  flags=186646532
vendor.xxxyyy.ha-1593    [005]   9436.220992:  timer_cancel   timer=0xffffff80444f0428
xxxyyyTraceManag-7795    [004]   9436.261641:  timer_cancel   timer=0xffffff80444f0428

[2]

 9436.261653][    C4] Unable to handle kernel paging request at virtual address dead00000000012a
[ 9436.261664][    C4] Mem abort info:
[ 9436.261666][    C4]   ESR = 0x96000044
[ 9436.261669][    C4]   EC = 0x25: DABT (current EL), IL = 32 bits
[ 9436.261671][    C4]   SET = 0, FnV = 0
[ 9436.261673][    C4]   EA = 0, S1PTW = 0
[ 9436.261675][    C4] Data abort info:
[ 9436.261677][    C4]   ISV = 0, ISS = 0x00000044
[ 9436.261680][    C4]   CM = 0, WnR = 1
[ 9436.261682][    C4] [dead00000000012a] address between user and kernel address ranges
[ 9436.261685][    C4] Internal error: Oops: 96000044 [#1] PREEMPT SMP
[ 9436.261701][    C4] Skip md ftrace buffer dump for: 0x3a982d0
...

[ 9436.262138][    C4] CPU: 4 PID: 7795 Comm: TraceManag Tainted: G S      W  O      5.10.149-android12-9-o-g17f915d29d0c #1
[ 9436.262141][    C4] Hardware name: Qualcomm Technologies, Inc.  (DT)
[ 9436.262144][    C4] pstate: 22400085 (nzCv daIf +PAN -UAO +TCO BTYPE=--)
[ 9436.262161][    C4] pc : expire_timers+0x9c/0x438
[ 9436.262164][    C4] lr : expire_timers+0x2a4/0x438
[ 9436.262168][    C4] sp : ffffffc010023dd0
[ 9436.262171][    C4] x29: ffffffc010023df0 x28: ffffffd0636fdc18
[ 9436.262178][    C4] x27: ffffffd063569dd0 x26: ffffffd063536008
[ 9436.262182][    C4] x25: 0000000000000001 x24: ffffff88f7c69280
[ 9436.262185][    C4] x23: 00000000000000e0 x22: dead000000000122
[ 9436.262188][    C4] x21: 000000010022da29 x20: ffffff8af72b4e80
[ 9436.262191][    C4] x19: ffffffc010023e50 x18: ffffffc010025038
[ 9436.262195][    C4] x17: 0000000000000240 x16: 0000000000000201
[ 9436.262199][    C4] x15: ffffffffffffffff x14: ffffff889f3c3100
[ 9436.262203][    C4] x13: ffffff889f3c3100 x12: 00000000049f56b8
[ 9436.262207][    C4] x11: 00000000049f56b8 x10: 00000000ffffffff
[ 9436.262212][    C4] x9 : ffffffc010023e50 x8 : dead000000000122
[ 9436.262216][    C4] x7 : ffffffffffffffff x6 : ffffffc0100239d8
[ 9436.262220][    C4] x5 : 0000000000000000 x4 : 0000000000000101
[ 9436.262223][    C4] x3 : 0000000000000080 x2 : ffffff8
---truncated---</description><pubDate>Tue, 02 Apr 2024 06:53:21 +0000</pubDate></item><item><title>CVE-2024-26671 | blk-mq: fix IO hang from sbitmap wakeup race</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26671</link><description>In the Linux kernel, the following vulnerability has been resolved:

blk-mq: fix IO hang from sbitmap wakeup race

In blk_mq_mark_tag_wait(), __add_wait_queue() may be re-ordered
with the following blk_mq_get_driver_tag() in case of getting driver
tag failure.

Then in __sbitmap_queue_wake_up(), waitqueue_active() may not observe
the added waiter in blk_mq_mark_tag_wait() and wake up nothing, meantime
blk_mq_mark_tag_wait() can't get driver tag successfully.

This issue can be reproduced by running the following test in loop, and
fio hang can be observed in &lt; 30min when running it on my test VM
in laptop.

	modprobe -r scsi_debug
	modprobe scsi_debug delay=0 dev_size_mb=4096 max_queue=1 host_max_queue=1 submit_queues=4
	dev=`ls -d /sys/bus/pseudo/drivers/scsi_debug/adapter*/host*/target*/*/block/* | head -1 | xargs basename`
	fio --filename=/dev/"$dev" --direct=1 --rw=randrw --bs=4k --iodepth=1 \
       		--runtime=100 --numjobs=40 --time_based --name=test \
        	--ioengine=libaio

Fix the issue by adding one explicit barrier in blk_mq_mark_tag_wait(), which
is just fine in case of running out of tag.</description><pubDate>Tue, 02 Apr 2024 06:53:21 +0000</pubDate></item><item><title>CVE-2024-26672 | drm/amdgpu: Fix variable &amp;#x27;mca_funcs&amp;#x27; dereferenced before NULL check in &amp;#x27;amdgpu_mca_smu_get_mca_entry()&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26672</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix variable 'mca_funcs' dereferenced before NULL check in 'amdgpu_mca_smu_get_mca_entry()'

Fixes the below:

drivers/gpu/drm/amd/amdgpu/amdgpu_mca.c:377 amdgpu_mca_smu_get_mca_entry() warn: variable dereferenced before check 'mca_funcs' (see line 368)

357 int amdgpu_mca_smu_get_mca_entry(struct amdgpu_device *adev,
				     enum amdgpu_mca_error_type type,
358                                  int idx, struct mca_bank_entry *entry)
359 {
360         const struct amdgpu_mca_smu_funcs *mca_funcs =
						adev-&gt;mca.mca_funcs;
361         int count;
362
363         switch (type) {
364         case AMDGPU_MCA_ERROR_TYPE_UE:
365                 count = mca_funcs-&gt;max_ue_count;

mca_funcs is dereferenced here.

366                 break;
367         case AMDGPU_MCA_ERROR_TYPE_CE:
368                 count = mca_funcs-&gt;max_ce_count;

mca_funcs is dereferenced here.

369                 break;
370         default:
371                 return -EINVAL;
372         }
373
374         if (idx &gt;= count)
375                 return -EINVAL;
376
377         if (mca_funcs &amp;&amp; mca_funcs-&gt;mca_get_mca_entry)
	        ^^^^^^^^^

Checked too late!</description><pubDate>Tue, 02 Apr 2024 06:53:22 +0000</pubDate></item><item><title>CVE-2024-2839 | The Colibri Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'colibri_post_title' shortcode i...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2839</link><description>The Colibri Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'colibri_post_title' shortcode in all versions up to, and including, 1.0.263 due to insufficient input sanitization and output escaping on user supplied attributes such as 'heading_type'. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 02 Apr 2024 06:53:22 +0000</pubDate></item><item><title>CVE-2024-2925 | The Beaver Builder â€“ WordPress Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Button Widget...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2925</link><description>The Beaver Builder â€“ WordPress Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Button Widget in all versions up to, and including, 2.8.0.5 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 02 Apr 2024 06:53:22 +0000</pubDate></item><item><title>CVE-2024-26668 | netfilter: nft_limit: reject configurations that cause integer overflow</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26668</link><description>In the Linux kernel, the following vulnerability has been resolved:

netfilter: nft_limit: reject configurations that cause integer overflow

Reject bogus configs where internal token counter wraps around.
This only occurs with very very large requests, such as 17gbyte/s.

Its better to reject this rather than having incorrect ratelimit.</description><pubDate>Tue, 02 Apr 2024 06:46:29 +0000</pubDate></item><item><title>CVE-2024-26669 | net/sched: flower: Fix chain template offload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26669</link><description>In the Linux kernel, the following vulnerability has been resolved:

net/sched: flower: Fix chain template offload

When a qdisc is deleted from a net device the stack instructs the
underlying driver to remove its flow offload callback from the
associated filter block using the 'FLOW_BLOCK_UNBIND' command. The stack
then continues to replay the removal of the filters in the block for
this driver by iterating over the chains in the block and invoking the
'reoffload' operation of the classifier being used. In turn, the
classifier in its 'reoffload' operation prepares and emits a
'FLOW_CLS_DESTROY' command for each filter.

However, the stack does not do the same for chain templates and the
underlying driver never receives a 'FLOW_CLS_TMPLT_DESTROY' command when
a qdisc is deleted. This results in a memory leak [1] which can be
reproduced using [2].

Fix by introducing a 'tmplt_reoffload' operation and have the stack
invoke it with the appropriate arguments as part of the replay.
Implement the operation in the sole classifier that supports chain
templates (flower) by emitting the 'FLOW_CLS_TMPLT_{CREATE,DESTROY}'
command based on whether a flow offload callback is being bound to a
filter block or being unbound from one.

As far as I can tell, the issue happens since cited commit which
reordered tcf_block_offload_unbind() before tcf_block_flush_all_chains()
in __tcf_block_put(). The order cannot be reversed as the filter block
is expected to be freed after flushing all the chains.

[1]
unreferenced object 0xffff888107e28800 (size 2048):
  comm "tc", pid 1079, jiffies 4294958525 (age 3074.287s)
  hex dump (first 32 bytes):
    b1 a6 7c 11 81 88 ff ff e0 5b b3 10 81 88 ff ff  ..|......[......
    01 00 00 00 00 00 00 00 e0 aa b0 84 ff ff ff ff  ................
  backtrace:
    [&lt;ffffffff81c06a68&gt;] __kmem_cache_alloc_node+0x1e8/0x320
    [&lt;ffffffff81ab374e&gt;] __kmalloc+0x4e/0x90
    [&lt;ffffffff832aec6d&gt;] mlxsw_sp_acl_ruleset_get+0x34d/0x7a0
    [&lt;ffffffff832bc195&gt;] mlxsw_sp_flower_tmplt_create+0x145/0x180
    [&lt;ffffffff832b2e1a&gt;] mlxsw_sp_flow_block_cb+0x1ea/0x280
    [&lt;ffffffff83a10613&gt;] tc_setup_cb_call+0x183/0x340
    [&lt;ffffffff83a9f85a&gt;] fl_tmplt_create+0x3da/0x4c0
    [&lt;ffffffff83a22435&gt;] tc_ctl_chain+0xa15/0x1170
    [&lt;ffffffff838a863c&gt;] rtnetlink_rcv_msg+0x3cc/0xed0
    [&lt;ffffffff83ac87f0&gt;] netlink_rcv_skb+0x170/0x440
    [&lt;ffffffff83ac6270&gt;] netlink_unicast+0x540/0x820
    [&lt;ffffffff83ac6e28&gt;] netlink_sendmsg+0x8d8/0xda0
    [&lt;ffffffff83793def&gt;] ____sys_sendmsg+0x30f/0xa80
    [&lt;ffffffff8379d29a&gt;] ___sys_sendmsg+0x13a/0x1e0
    [&lt;ffffffff8379d50c&gt;] __sys_sendmsg+0x11c/0x1f0
    [&lt;ffffffff843b9ce0&gt;] do_syscall_64+0x40/0xe0
unreferenced object 0xffff88816d2c0400 (size 1024):
  comm "tc", pid 1079, jiffies 4294958525 (age 3074.287s)
  hex dump (first 32 bytes):
    40 00 00 00 00 00 00 00 57 f6 38 be 00 00 00 00  @.......W.8.....
    10 04 2c 6d 81 88 ff ff 10 04 2c 6d 81 88 ff ff  ..,m......,m....
  backtrace:
    [&lt;ffffffff81c06a68&gt;] __kmem_cache_alloc_node+0x1e8/0x320
    [&lt;ffffffff81ab36c1&gt;] __kmalloc_node+0x51/0x90
    [&lt;ffffffff81a8ed96&gt;] kvmalloc_node+0xa6/0x1f0
    [&lt;ffffffff82827d03&gt;] bucket_table_alloc.isra.0+0x83/0x460
    [&lt;ffffffff82828d2b&gt;] rhashtable_init+0x43b/0x7c0
    [&lt;ffffffff832aed48&gt;] mlxsw_sp_acl_ruleset_get+0x428/0x7a0
    [&lt;ffffffff832bc195&gt;] mlxsw_sp_flower_tmplt_create+0x145/0x180
    [&lt;ffffffff832b2e1a&gt;] mlxsw_sp_flow_block_cb+0x1ea/0x280
    [&lt;ffffffff83a10613&gt;] tc_setup_cb_call+0x183/0x340
    [&lt;ffffffff83a9f85a&gt;] fl_tmplt_create+0x3da/0x4c0
    [&lt;ffffffff83a22435&gt;] tc_ctl_chain+0xa15/0x1170
    [&lt;ffffffff838a863c&gt;] rtnetlink_rcv_msg+0x3cc/0xed0
    [&lt;ffffffff83ac87f0&gt;] netlink_rcv_skb+0x170/0x440
    [&lt;ffffffff83ac6270&gt;] netlink_unicast+0x540/0x820
    [&lt;ffffffff83ac6e28&gt;] netlink_sendmsg+0x8d8/0xda0
    [&lt;ffffffff83793def&gt;] ____sys_sendmsg+0x30f/0xa80

[2]
 # tc qdisc add dev swp1 clsact
 # tc chain add dev swp1 ingress proto ip chain 1 flower dst_ip 0.0.0.0/32
 # tc qdisc del dev
---truncated---</description><pubDate>Tue, 02 Apr 2024 06:46:29 +0000</pubDate></item><item><title>CVE-2024-26670 | arm64: entry: fix ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26670</link><description>In the Linux kernel, the following vulnerability has been resolved:

arm64: entry: fix ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD

Currently the ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD workaround isn't
quite right, as it is supposed to be applied after the last explicit
memory access, but is immediately followed by an LDR.

The ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD workaround is used to
handle Cortex-A520 erratum 2966298 and Cortex-A510 erratum 3117295,
which are described in:

* https://developer.arm.com/documentation/SDEN2444153/0600/?lang=en
* https://developer.arm.com/documentation/SDEN1873361/1600/?lang=en

In both cases the workaround is described as:

| If pagetable isolation is disabled, the context switch logic in the
| kernel can be updated to execute the following sequence on affected
| cores before exiting to EL0, and after all explicit memory accesses:
|
| 1. A non-shareable TLBI to any context and/or address, including
|    unused contexts or addresses, such as a `TLBI VALE1 Xzr`.
|
| 2. A DSB NSH to guarantee completion of the TLBI.

The important part being that the TLBI+DSB must be placed "after all
explicit memory accesses".

Unfortunately, as-implemented, the TLBI+DSB is immediately followed by
an LDR, as we have:

| alternative_if ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD
| 	tlbi	vale1, xzr
| 	dsb	nsh
| alternative_else_nop_endif
| alternative_if_not ARM64_UNMAP_KERNEL_AT_EL0
| 	ldr	lr, [sp, #S_LR]
| 	add	sp, sp, #PT_REGS_SIZE		// restore sp
| 	eret
| alternative_else_nop_endif
|
| [ ... KPTI exception return path ... ]

This patch fixes this by reworking the logic to place the TLBI+DSB
immediately before the ERET, after all explicit memory accesses.

The ERET is currently in a separate alternative block, and alternatives
cannot be nested. To account for this, the alternative block for
ARM64_UNMAP_KERNEL_AT_EL0 is replaced with a single alternative branch
to skip the KPTI logic, with the new shape of the logic being:

| alternative_insn "b .L_skip_tramp_exit_\@", nop, ARM64_UNMAP_KERNEL_AT_EL0
| 	[ ... KPTI exception return path ... ]
| .L_skip_tramp_exit_\@:
|
| 	ldr	lr, [sp, #S_LR]
| 	add	sp, sp, #PT_REGS_SIZE		// restore sp
|
| alternative_if ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD
| 	tlbi	vale1, xzr
| 	dsb	nsh
| alternative_else_nop_endif
| 	eret

The new structure means that the workaround is only applied when KPTI is
not in use; this is fine as noted in the documented implications of the
erratum:

| Pagetable isolation between EL0 and higher level ELs prevents the
| issue from occurring.

... and as per the workaround description quoted above, the workaround
is only necessary "If pagetable isolation is disabled".</description><pubDate>Tue, 02 Apr 2024 06:46:29 +0000</pubDate></item><item><title>CVE-2023-52630 | blk-iocost: Fix an UBSAN shift-out-of-bounds warning</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52630</link><description>In the Linux kernel, the following vulnerability has been resolved:

blk-iocost: Fix an UBSAN shift-out-of-bounds warning

When iocg_kick_delay() is called from a CPU different than the one which set
the delay, @now may be in the past of @iocg-&gt;delay_at leading to the
following warning:

  UBSAN: shift-out-of-bounds in block/blk-iocost.c:1359:23
  shift exponent 18446744073709 is too large for 64-bit type 'u64' (aka 'unsigned long long')
  ...
  Call Trace:
   &lt;TASK&gt;
   dump_stack_lvl+0x79/0xc0
   __ubsan_handle_shift_out_of_bounds+0x2ab/0x300
   iocg_kick_delay+0x222/0x230
   ioc_rqos_merge+0x1d7/0x2c0
   __rq_qos_merge+0x2c/0x80
   bio_attempt_back_merge+0x83/0x190
   blk_attempt_plug_merge+0x101/0x150
   blk_mq_submit_bio+0x2b1/0x720
   submit_bio_noacct_nocheck+0x320/0x3e0
   __swap_writepage+0x2ab/0x9d0

The underflow itself doesn't really affect the behavior in any meaningful
way; however, the past timestamp may exaggerate the delay amount calculated
later in the code, which shouldn't be a material problem given the nature of
the delay mechanism.

If @now is in the past, this CPU is racing another CPU which recently set up
the delay and there's nothing this CPU can contribute w.r.t. the delay.
Let's bail early from iocg_kick_delay() in such cases.</description><pubDate>Tue, 02 Apr 2024 06:31:15 +0000</pubDate></item><item><title>CVE-2023-52631 | fs/ntfs3: Fix an NULL dereference bug</title><link>https://www.cve.org/CVERecord?id=CVE-2023-52631</link><description>In the Linux kernel, the following vulnerability has been resolved:

fs/ntfs3: Fix an NULL dereference bug

The issue here is when this is called from ntfs_load_attr_list().  The
"size" comes from le32_to_cpu(attr-&gt;res.data_size) so it can't overflow
on a 64bit systems but on 32bit systems the "+ 1023" can overflow and
the result is zero.  This means that the kmalloc will succeed by
returning the ZERO_SIZE_PTR and then the memcpy() will crash with an
Oops on the next line.</description><pubDate>Tue, 02 Apr 2024 06:31:16 +0000</pubDate></item><item><title>CVE-2024-21834 | Arkui has a type confusion vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21834</link><description>in OpenHarmony v3.2.4 and prior versions allow a local attacker cause apps crash through type confusion.</description><pubDate>Tue, 02 Apr 2024 06:31:16 +0000</pubDate></item><item><title>CVE-2024-22092 | Bundlemanager has an authentication bypass vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22092</link><description>in OpenHarmony v3.2.4 and prior versions allow a remote attacker bypass permission verification to install apps, although these require user action.</description><pubDate>Tue, 02 Apr 2024 06:31:16 +0000</pubDate></item><item><title>CVE-2024-22098 | AVSession has a use after free vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22098</link><description>in OpenHarmony v3.2.4 and prior versions allow a local attacker arbitrary code execution in any apps through use after free.</description><pubDate>Tue, 02 Apr 2024 06:31:17 +0000</pubDate></item><item><title>CVE-2024-22177 | Audio has an improper preservation of permissions vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22177</link><description>in OpenHarmony v3.2.4 and prior versions allow a local attacker cause apps crash through get permission.</description><pubDate>Tue, 02 Apr 2024 06:31:17 +0000</pubDate></item><item><title>CVE-2024-22180 | Camera has a use after free vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-22180</link><description>in OpenHarmony v4.0.0 and prior versions allow a local attacker cause DOS through use after free.</description><pubDate>Tue, 02 Apr 2024 06:31:17 +0000</pubDate></item><item><title>CVE-2024-24581 | Arkcompiler runtime has an out-of-bounds write vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-24581</link><description>in OpenHarmony v4.0.0 and prior versions allow a local attacker arbitrary code execution through out-of-bounds write.</description><pubDate>Tue, 02 Apr 2024 06:31:18 +0000</pubDate></item><item><title>CVE-2024-26658 | bcachefs: grab s_umount only if snapshotting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26658</link><description>In the Linux kernel, the following vulnerability has been resolved:

bcachefs: grab s_umount only if snapshotting

When I was testing mongodb over bcachefs with compression,
there is a lockdep warning when snapshotting mongodb data volume.

$ cat test.sh
prog=bcachefs

$prog subvolume create /mnt/data
$prog subvolume create /mnt/data/snapshots

while true;do
    $prog subvolume snapshot /mnt/data /mnt/data/snapshots/$(date +%s)
    sleep 1s
done

$ cat /etc/mongodb.conf
systemLog:
  destination: file
  logAppend: true
  path: /mnt/data/mongod.log

storage:
  dbPath: /mnt/data/

lockdep reports:
[ 3437.452330] ======================================================
[ 3437.452750] WARNING: possible circular locking dependency detected
[ 3437.453168] 6.7.0-rc7-custom+ #85 Tainted: G            E
[ 3437.453562] ------------------------------------------------------
[ 3437.453981] bcachefs/35533 is trying to acquire lock:
[ 3437.454325] ffffa0a02b2b1418 (sb_writers#10){.+.+}-{0:0}, at: filename_create+0x62/0x190
[ 3437.454875]
               but task is already holding lock:
[ 3437.455268] ffffa0a02b2b10e0 (&amp;type-&gt;s_umount_key#48){.+.+}-{3:3}, at: bch2_fs_file_ioctl+0x232/0xc90 [bcachefs]
[ 3437.456009]
               which lock already depends on the new lock.

[ 3437.456553]
               the existing dependency chain (in reverse order) is:
[ 3437.457054]
               -&gt; #3 (&amp;type-&gt;s_umount_key#48){.+.+}-{3:3}:
[ 3437.457507]        down_read+0x3e/0x170
[ 3437.457772]        bch2_fs_file_ioctl+0x232/0xc90 [bcachefs]
[ 3437.458206]        __x64_sys_ioctl+0x93/0xd0
[ 3437.458498]        do_syscall_64+0x42/0xf0
[ 3437.458779]        entry_SYSCALL_64_after_hwframe+0x6e/0x76
[ 3437.459155]
               -&gt; #2 (&amp;c-&gt;snapshot_create_lock){++++}-{3:3}:
[ 3437.459615]        down_read+0x3e/0x170
[ 3437.459878]        bch2_truncate+0x82/0x110 [bcachefs]
[ 3437.460276]        bchfs_truncate+0x254/0x3c0 [bcachefs]
[ 3437.460686]        notify_change+0x1f1/0x4a0
[ 3437.461283]        do_truncate+0x7f/0xd0
[ 3437.461555]        path_openat+0xa57/0xce0
[ 3437.461836]        do_filp_open+0xb4/0x160
[ 3437.462116]        do_sys_openat2+0x91/0xc0
[ 3437.462402]        __x64_sys_openat+0x53/0xa0
[ 3437.462701]        do_syscall_64+0x42/0xf0
[ 3437.462982]        entry_SYSCALL_64_after_hwframe+0x6e/0x76
[ 3437.463359]
               -&gt; #1 (&amp;sb-&gt;s_type-&gt;i_mutex_key#15){+.+.}-{3:3}:
[ 3437.463843]        down_write+0x3b/0xc0
[ 3437.464223]        bch2_write_iter+0x5b/0xcc0 [bcachefs]
[ 3437.464493]        vfs_write+0x21b/0x4c0
[ 3437.464653]        ksys_write+0x69/0xf0
[ 3437.464839]        do_syscall_64+0x42/0xf0
[ 3437.465009]        entry_SYSCALL_64_after_hwframe+0x6e/0x76
[ 3437.465231]
               -&gt; #0 (sb_writers#10){.+.+}-{0:0}:
[ 3437.465471]        __lock_acquire+0x1455/0x21b0
[ 3437.465656]        lock_acquire+0xc6/0x2b0
[ 3437.465822]        mnt_want_write+0x46/0x1a0
[ 3437.465996]        filename_create+0x62/0x190
[ 3437.466175]        user_path_create+0x2d/0x50
[ 3437.466352]        bch2_fs_file_ioctl+0x2ec/0xc90 [bcachefs]
[ 3437.466617]        __x64_sys_ioctl+0x93/0xd0
[ 3437.466791]        do_syscall_64+0x42/0xf0
[ 3437.466957]        entry_SYSCALL_64_after_hwframe+0x6e/0x76
[ 3437.467180]
               other info that might help us debug this:

[ 3437.469670] 2 locks held by bcachefs/35533:
               other info that might help us debug this:

[ 3437.467507] Chain exists of:
                 sb_writers#10 --&gt; &amp;c-&gt;snapshot_create_lock --&gt; &amp;type-&gt;s_umount_key#48

[ 3437.467979]  Possible unsafe locking scenario:

[ 3437.468223]        CPU0                    CPU1
[ 3437.468405]        ----                    ----
[ 3437.468585]   rlock(&amp;type-&gt;s_umount_key#48);
[ 3437.468758]                                lock(&amp;c-&gt;snapshot_create_lock);
[ 3437.469030]                                lock(&amp;type-&gt;s_umount_key#48);
[ 3437.469291]   rlock(sb_writers#10);
[ 3437.469434]
                *** DEADLOCK ***

[ 3437.469
---truncated---</description><pubDate>Tue, 02 Apr 2024 06:31:18 +0000</pubDate></item><item><title>CVE-2024-26659 | xhci: handle isoc Babble and Buffer Overrun events properly</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26659</link><description>In the Linux kernel, the following vulnerability has been resolved:

xhci: handle isoc Babble and Buffer Overrun events properly

xHCI 4.9 explicitly forbids assuming that the xHC has released its
ownership of a multi-TRB TD when it reports an error on one of the
early TRBs. Yet the driver makes such assumption and releases the TD,
allowing the remaining TRBs to be freed or overwritten by new TDs.

The xHC should also report completion of the final TRB due to its IOC
flag being set by us, regardless of prior errors. This event cannot
be recognized if the TD has already been freed earlier, resulting in
"Transfer event TRB DMA ptr not part of current TD" error message.

Fix this by reusing the logic for processing isoc Transaction Errors.
This also handles hosts which fail to report the final completion.

Fix transfer length reporting on Babble errors. They may be caused by
device malfunction, no guarantee that the buffer has been filled.</description><pubDate>Tue, 02 Apr 2024 06:31:19 +0000</pubDate></item><item><title>CVE-2024-26660 | drm/amd/display: Implement bounds check for stream encoder creation in DCN301</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26660</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Implement bounds check for stream encoder creation in DCN301

'stream_enc_regs' array is an array of dcn10_stream_enc_registers
structures. The array is initialized with four elements, corresponding
to the four calls to stream_enc_regs() in the array initializer. This
means that valid indices for this array are 0, 1, 2, and 3.

The error message 'stream_enc_regs' 4 &lt;= 5 below, is indicating that
there is an attempt to access this array with an index of 5, which is
out of bounds. This could lead to undefined behavior

Here, eng_id is used as an index to access the stream_enc_regs array. If
eng_id is 5, this would result in an out-of-bounds access on the
stream_enc_regs array.

Thus fixing Buffer overflow error in dcn301_stream_encoder_create
reported by Smatch:
drivers/gpu/drm/amd/amdgpu/../display/dc/resource/dcn301/dcn301_resource.c:1011 dcn301_stream_encoder_create() error: buffer overflow 'stream_enc_regs' 4 &lt;= 5</description><pubDate>Tue, 02 Apr 2024 06:31:19 +0000</pubDate></item><item><title>CVE-2024-26661 | drm/amd/display: Add NULL test for &amp;#x27;timing generator&amp;#x27; in &amp;#x27;dcn21_set_pipe()&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26661</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add NULL test for 'timing generator' in 'dcn21_set_pipe()'

In "u32 otg_inst = pipe_ctx-&gt;stream_res.tg-&gt;inst;"
pipe_ctx-&gt;stream_res.tg could be NULL, it is relying on the caller to
ensure the tg is not NULL.</description><pubDate>Tue, 02 Apr 2024 06:31:19 +0000</pubDate></item><item><title>CVE-2024-26662 | drm/amd/display: Fix &amp;#x27;panel_cntl&amp;#x27; could be null in &amp;#x27;dcn21_set_backlight_level()&amp;#x27;</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26662</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix 'panel_cntl' could be null in 'dcn21_set_backlight_level()'

'panel_cntl' structure used to control the display panel could be null,
dereferencing it could lead to a null pointer access.

Fixes the below:
drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn21/dcn21_hwseq.c:269 dcn21_set_backlight_level() error: we previously assumed 'panel_cntl' could be null (see line 250)</description><pubDate>Tue, 02 Apr 2024 06:31:20 +0000</pubDate></item><item><title>CVE-2024-26663 | tipc: Check the bearer type before calling tipc_udp_nl_bearer_add()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26663</link><description>In the Linux kernel, the following vulnerability has been resolved:

tipc: Check the bearer type before calling tipc_udp_nl_bearer_add()

syzbot reported the following general protection fault [1]:

general protection fault, probably for non-canonical address 0xdffffc0000000010: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000080-0x0000000000000087]
...
RIP: 0010:tipc_udp_is_known_peer+0x9c/0x250 net/tipc/udp_media.c:291
...
Call Trace:
 &lt;TASK&gt;
 tipc_udp_nl_bearer_add+0x212/0x2f0 net/tipc/udp_media.c:646
 tipc_nl_bearer_add+0x21e/0x360 net/tipc/bearer.c:1089
 genl_family_rcv_msg_doit+0x1fc/0x2e0 net/netlink/genetlink.c:972
 genl_family_rcv_msg net/netlink/genetlink.c:1052 [inline]
 genl_rcv_msg+0x561/0x800 net/netlink/genetlink.c:1067
 netlink_rcv_skb+0x16b/0x440 net/netlink/af_netlink.c:2544
 genl_rcv+0x28/0x40 net/netlink/genetlink.c:1076
 netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]
 netlink_unicast+0x53b/0x810 net/netlink/af_netlink.c:1367
 netlink_sendmsg+0x8b7/0xd70 net/netlink/af_netlink.c:1909
 sock_sendmsg_nosec net/socket.c:730 [inline]
 __sock_sendmsg+0xd5/0x180 net/socket.c:745
 ____sys_sendmsg+0x6ac/0x940 net/socket.c:2584
 ___sys_sendmsg+0x135/0x1d0 net/socket.c:2638
 __sys_sendmsg+0x117/0x1e0 net/socket.c:2667
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0x40/0x110 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x63/0x6b

The cause of this issue is that when tipc_nl_bearer_add() is called with
the TIPC_NLA_BEARER_UDP_OPTS attribute, tipc_udp_nl_bearer_add() is called
even if the bearer is not UDP.

tipc_udp_is_known_peer() called by tipc_udp_nl_bearer_add() assumes that
the media_ptr field of the tipc_bearer has an udp_bearer type object, so
the function goes crazy for non-UDP bearers.

This patch fixes the issue by checking the bearer type before calling
tipc_udp_nl_bearer_add() in tipc_nl_bearer_add().</description><pubDate>Tue, 02 Apr 2024 06:31:20 +0000</pubDate></item><item><title>CVE-2024-26664 | hwmon: (coretemp) Fix out-of-bounds memory access</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26664</link><description>In the Linux kernel, the following vulnerability has been resolved:

hwmon: (coretemp) Fix out-of-bounds memory access

Fix a bug that pdata-&gt;cpu_map[] is set before out-of-bounds check.
The problem might be triggered on systems with more than 128 cores per
package.</description><pubDate>Tue, 02 Apr 2024 06:31:21 +0000</pubDate></item><item><title>CVE-2024-26665 | tunnels: fix out of bounds access when building IPv6 PMTU error</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26665</link><description>In the Linux kernel, the following vulnerability has been resolved:

tunnels: fix out of bounds access when building IPv6 PMTU error

If the ICMPv6 error is built from a non-linear skb we get the following
splat,

  BUG: KASAN: slab-out-of-bounds in do_csum+0x220/0x240
  Read of size 4 at addr ffff88811d402c80 by task netperf/820
  CPU: 0 PID: 820 Comm: netperf Not tainted 6.8.0-rc1+ #543
  ...
   kasan_report+0xd8/0x110
   do_csum+0x220/0x240
   csum_partial+0xc/0x20
   skb_tunnel_check_pmtu+0xeb9/0x3280
   vxlan_xmit_one+0x14c2/0x4080
   vxlan_xmit+0xf61/0x5c00
   dev_hard_start_xmit+0xfb/0x510
   __dev_queue_xmit+0x7cd/0x32a0
   br_dev_queue_push_xmit+0x39d/0x6a0

Use skb_checksum instead of csum_partial who cannot deal with non-linear
SKBs.</description><pubDate>Tue, 02 Apr 2024 06:31:21 +0000</pubDate></item><item><title>CVE-2024-26666 | wifi: mac80211: fix RCU use in TDLS fast-xmit</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26666</link><description>In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: fix RCU use in TDLS fast-xmit

This looks up the link under RCU protection, but isn't
guaranteed to actually have protection. Fix that.</description><pubDate>Tue, 02 Apr 2024 06:31:21 +0000</pubDate></item><item><title>CVE-2024-26667 | drm/msm/dpu: check for valid hw_pp in dpu_encoder_helper_phys_cleanup</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26667</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/msm/dpu: check for valid hw_pp in dpu_encoder_helper_phys_cleanup

The commit 8b45a26f2ba9 ("drm/msm/dpu: reserve cdm blocks for writeback
in case of YUV output") introduced a smatch warning about another
conditional block in dpu_encoder_helper_phys_cleanup() which had assumed
hw_pp will always be valid which may not necessarily be true.

Lets fix the other conditional block by making sure hw_pp is valid
before dereferencing it.

Patchwork: https://patchwork.freedesktop.org/patch/574878/</description><pubDate>Tue, 02 Apr 2024 06:31:22 +0000</pubDate></item><item><title>CVE-2024-28226 | Fs has an improper input validation vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28226</link><description>in OpenHarmony v4.0.0 and prior versions allow a remote attacker cause DOS through improper input.</description><pubDate>Tue, 02 Apr 2024 06:31:22 +0000</pubDate></item><item><title>CVE-2024-28951 | Arkcompiler runtime has a use after free vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28951</link><description>in OpenHarmony v4.0.0 and prior versions allow a local attacker arbitrary code execution in pre-installed apps through use after free.</description><pubDate>Tue, 02 Apr 2024 06:31:23 +0000</pubDate></item><item><title>CVE-2024-29074 | Telephony has an improper input validation vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29074</link><description>in OpenHarmony v3.2.4 and prior versions allow a local attacker arbitrary code execution in any apps through improper input.</description><pubDate>Tue, 02 Apr 2024 06:31:23 +0000</pubDate></item><item><title>CVE-2024-29086 | Arkcompiler runtime has a stack overflow svulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29086</link><description>in OpenHarmony v3.2.4 and prior versions allow a local attacker cause DOS through stack overflow.</description><pubDate>Tue, 02 Apr 2024 06:31:23 +0000</pubDate></item><item><title>CVE-2024-26656 | drm/amdgpu: fix use-after-free bug</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26656</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: fix use-after-free bug

The bug can be triggered by sending a single amdgpu_gem_userptr_ioctl
to the AMDGPU DRM driver on any ASICs with an invalid address and size.
The bug was reported by Joonkyo Jung &lt;joonkyoj@yonsei.ac.kr&gt;.
For example the following code:

static void Syzkaller1(int fd)
{
	struct drm_amdgpu_gem_userptr arg;
	int ret;

	arg.addr = 0xffffffffffff0000;
	arg.size = 0x80000000; /*2 Gb*/
	arg.flags = 0x7;
	ret = drmIoctl(fd, 0xc1186451/*amdgpu_gem_userptr_ioctl*/, &amp;arg);
}

Due to the address and size are not valid there is a failure in
amdgpu_hmm_register-&gt;mmu_interval_notifier_insert-&gt;__mmu_interval_notifier_insert-&gt;
check_shl_overflow, but we even the amdgpu_hmm_register failure we still call
amdgpu_hmm_unregister into  amdgpu_gem_object_free which causes access to a bad address.
The following stack is below when the issue is reproduced when Kazan is enabled:

[  +0.000014] Hardware name: ASUS System Product Name/ROG STRIX B550-F GAMING (WI-FI), BIOS 1401 12/03/2020
[  +0.000009] RIP: 0010:mmu_interval_notifier_remove+0x327/0x340
[  +0.000017] Code: ff ff 49 89 44 24 08 48 b8 00 01 00 00 00 00 ad de 4c 89 f7 49 89 47 40 48 83 c0 22 49 89 47 48 e8 ce d1 2d 01 e9 32 ff ff ff &lt;0f&gt; 0b e9 16 ff ff ff 4c 89 ef e8 fa 14 b3 ff e9 36 ff ff ff e8 80
[  +0.000014] RSP: 0018:ffffc90002657988 EFLAGS: 00010246
[  +0.000013] RAX: 0000000000000000 RBX: 1ffff920004caf35 RCX: ffffffff8160565b
[  +0.000011] RDX: dffffc0000000000 RSI: 0000000000000004 RDI: ffff8881a9f78260
[  +0.000010] RBP: ffffc90002657a70 R08: 0000000000000001 R09: fffff520004caf25
[  +0.000010] R10: 0000000000000003 R11: ffffffff8161d1d6 R12: ffff88810e988c00
[  +0.000010] R13: ffff888126fb5a00 R14: ffff88810e988c0c R15: ffff8881a9f78260
[  +0.000011] FS:  00007ff9ec848540(0000) GS:ffff8883cc880000(0000) knlGS:0000000000000000
[  +0.000012] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  +0.000010] CR2: 000055b3f7e14328 CR3: 00000001b5770000 CR4: 0000000000350ef0
[  +0.000010] Call Trace:
[  +0.000006]  &lt;TASK&gt;
[  +0.000007]  ? show_regs+0x6a/0x80
[  +0.000018]  ? __warn+0xa5/0x1b0
[  +0.000019]  ? mmu_interval_notifier_remove+0x327/0x340
[  +0.000018]  ? report_bug+0x24a/0x290
[  +0.000022]  ? handle_bug+0x46/0x90
[  +0.000015]  ? exc_invalid_op+0x19/0x50
[  +0.000016]  ? asm_exc_invalid_op+0x1b/0x20
[  +0.000017]  ? kasan_save_stack+0x26/0x50
[  +0.000017]  ? mmu_interval_notifier_remove+0x23b/0x340
[  +0.000019]  ? mmu_interval_notifier_remove+0x327/0x340
[  +0.000019]  ? mmu_interval_notifier_remove+0x23b/0x340
[  +0.000020]  ? __pfx_mmu_interval_notifier_remove+0x10/0x10
[  +0.000017]  ? kasan_save_alloc_info+0x1e/0x30
[  +0.000018]  ? srso_return_thunk+0x5/0x5f
[  +0.000014]  ? __kasan_kmalloc+0xb1/0xc0
[  +0.000018]  ? srso_return_thunk+0x5/0x5f
[  +0.000013]  ? __kasan_check_read+0x11/0x20
[  +0.000020]  amdgpu_hmm_unregister+0x34/0x50 [amdgpu]
[  +0.004695]  amdgpu_gem_object_free+0x66/0xa0 [amdgpu]
[  +0.004534]  ? __pfx_amdgpu_gem_object_free+0x10/0x10 [amdgpu]
[  +0.004291]  ? do_syscall_64+0x5f/0xe0
[  +0.000023]  ? srso_return_thunk+0x5/0x5f
[  +0.000017]  drm_gem_object_free+0x3b/0x50 [drm]
[  +0.000489]  amdgpu_gem_userptr_ioctl+0x306/0x500 [amdgpu]
[  +0.004295]  ? __pfx_amdgpu_gem_userptr_ioctl+0x10/0x10 [amdgpu]
[  +0.004270]  ? srso_return_thunk+0x5/0x5f
[  +0.000014]  ? __this_cpu_preempt_check+0x13/0x20
[  +0.000015]  ? srso_return_thunk+0x5/0x5f
[  +0.000013]  ? sysvec_apic_timer_interrupt+0x57/0xc0
[  +0.000020]  ? srso_return_thunk+0x5/0x5f
[  +0.000014]  ? asm_sysvec_apic_timer_interrupt+0x1b/0x20
[  +0.000022]  ? drm_ioctl_kernel+0x17b/0x1f0 [drm]
[  +0.000496]  ? __pfx_amdgpu_gem_userptr_ioctl+0x10/0x10 [amdgpu]
[  +0.004272]  ? drm_ioctl_kernel+0x190/0x1f0 [drm]
[  +0.000492]  drm_ioctl_kernel+0x140/0x1f0 [drm]
[  +0.000497]  ? __pfx_amdgpu_gem_userptr_ioctl+0x10/0x10 [amdgpu]
[  +0.004297]  ? __pfx_drm_ioctl_kernel+0x10/0x10 [d
---truncated---</description><pubDate>Tue, 02 Apr 2024 06:19:51 +0000</pubDate></item><item><title>CVE-2024-26657 | drm/sched: fix null-ptr-deref in init entity</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26657</link><description>In the Linux kernel, the following vulnerability has been resolved:

drm/sched: fix null-ptr-deref in init entity

The bug can be triggered by sending an amdgpu_cs_wait_ioctl
to the AMDGPU DRM driver on any ASICs with valid context.
The bug was reported by Joonkyo Jung &lt;joonkyoj@yonsei.ac.kr&gt;.
For example the following code:

    static void Syzkaller2(int fd)
    {
	union drm_amdgpu_ctx arg1;
	union drm_amdgpu_wait_cs arg2;

	arg1.in.op = AMDGPU_CTX_OP_ALLOC_CTX;
	ret = drmIoctl(fd, 0x140106442 /* amdgpu_ctx_ioctl */, &amp;arg1);

	arg2.in.handle = 0x0;
	arg2.in.timeout = 0x2000000000000;
	arg2.in.ip_type = AMD_IP_VPE /* 0x9 */;
	arg2-&gt;in.ip_instance = 0x0;
	arg2.in.ring = 0x0;
	arg2.in.ctx_id = arg1.out.alloc.ctx_id;

	drmIoctl(fd, 0xc0206449 /* AMDGPU_WAIT_CS * /, &amp;arg2);
    }

The ioctl AMDGPU_WAIT_CS without previously submitted job could be assumed that
the error should be returned, but the following commit 1decbf6bb0b4dc56c9da6c5e57b994ebfc2be3aa
modified the logic and allowed to have sched_rq equal to NULL.

As a result when there is no job the ioctl AMDGPU_WAIT_CS returns success.
The change fixes null-ptr-deref in init entity and the stack below demonstrates
the error condition:

[  +0.000007] BUG: kernel NULL pointer dereference, address: 0000000000000028
[  +0.007086] #PF: supervisor read access in kernel mode
[  +0.005234] #PF: error_code(0x0000) - not-present page
[  +0.005232] PGD 0 P4D 0
[  +0.002501] Oops: 0000 [#1] PREEMPT SMP KASAN NOPTI
[  +0.005034] CPU: 10 PID: 9229 Comm: amd_basic Tainted: G    B   W    L     6.7.0+ #4
[  +0.007797] Hardware name: ASUS System Product Name/ROG STRIX B550-F GAMING (WI-FI), BIOS 1401 12/03/2020
[  +0.009798] RIP: 0010:drm_sched_entity_init+0x2d3/0x420 [gpu_sched]
[  +0.006426] Code: 80 00 00 00 00 00 00 00 e8 1a 81 82 e0 49 89 9c 24 c0 00 00 00 4c 89 ef e8 4a 80 82 e0 49 8b 5d 00 48 8d 7b 28 e8 3d 80 82 e0 &lt;48&gt; 83 7b 28 00 0f 84 28 01 00 00 4d 8d ac 24 98 00 00 00 49 8d 5c
[  +0.019094] RSP: 0018:ffffc90014c1fa40 EFLAGS: 00010282
[  +0.005237] RAX: 0000000000000001 RBX: 0000000000000000 RCX: ffffffff8113f3fa
[  +0.007326] RDX: fffffbfff0a7889d RSI: 0000000000000008 RDI: ffffffff853c44e0
[  +0.007264] RBP: ffffc90014c1fa80 R08: 0000000000000001 R09: fffffbfff0a7889c
[  +0.007266] R10: ffffffff853c44e7 R11: 0000000000000001 R12: ffff8881a719b010
[  +0.007263] R13: ffff88810d412748 R14: 0000000000000002 R15: 0000000000000000
[  +0.007264] FS:  00007ffff7045540(0000) GS:ffff8883cc900000(0000) knlGS:0000000000000000
[  +0.008236] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  +0.005851] CR2: 0000000000000028 CR3: 000000011912e000 CR4: 0000000000350ef0
[  +0.007175] Call Trace:
[  +0.002561]  &lt;TASK&gt;
[  +0.002141]  ? show_regs+0x6a/0x80
[  +0.003473]  ? __die+0x25/0x70
[  +0.003124]  ? page_fault_oops+0x214/0x720
[  +0.004179]  ? preempt_count_sub+0x18/0xc0
[  +0.004093]  ? __pfx_page_fault_oops+0x10/0x10
[  +0.004590]  ? srso_return_thunk+0x5/0x5f
[  +0.004000]  ? vprintk_default+0x1d/0x30
[  +0.004063]  ? srso_return_thunk+0x5/0x5f
[  +0.004087]  ? vprintk+0x5c/0x90
[  +0.003296]  ? drm_sched_entity_init+0x2d3/0x420 [gpu_sched]
[  +0.005807]  ? srso_return_thunk+0x5/0x5f
[  +0.004090]  ? _printk+0xb3/0xe0
[  +0.003293]  ? __pfx__printk+0x10/0x10
[  +0.003735]  ? asm_sysvec_apic_timer_interrupt+0x1b/0x20
[  +0.005482]  ? do_user_addr_fault+0x345/0x770
[  +0.004361]  ? exc_page_fault+0x64/0xf0
[  +0.003972]  ? asm_exc_page_fault+0x27/0x30
[  +0.004271]  ? add_taint+0x2a/0xa0
[  +0.003476]  ? drm_sched_entity_init+0x2d3/0x420 [gpu_sched]
[  +0.005812]  amdgpu_ctx_get_entity+0x3f9/0x770 [amdgpu]
[  +0.009530]  ? finish_task_switch.isra.0+0x129/0x470
[  +0.005068]  ? __pfx_amdgpu_ctx_get_entity+0x10/0x10 [amdgpu]
[  +0.010063]  ? __kasan_check_write+0x14/0x20
[  +0.004356]  ? srso_return_thunk+0x5/0x5f
[  +0.004001]  ? mutex_unlock+0x81/0xd0
[  +0.003802]  ? srso_return_thunk+0x5/0x5f
[  +0.004096]  amdgpu_cs_wait_ioctl+0xf6/0x270 [amdgpu]
[  +0.009355]  ? __pfx_
---truncated---</description><pubDate>Tue, 02 Apr 2024 06:19:52 +0000</pubDate></item><item><title>CVE-2024-1504 | The SecuPress Free â€” WordPress Security plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and includin...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1504</link><description>The SecuPress Free â€” WordPress Security plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 2.2.5.1. This is due to missing or incorrect nonce validation on the secupress_blackhole_ban_ip() function. This makes it possible for unauthenticated attackers to block a user's IP via a forged request granted they can trick the user into performing an action such as clicking on a link.</description><pubDate>Tue, 02 Apr 2024 05:39:11 +0000</pubDate></item><item><title>CVE-2024-2791 | The Metform Elementor Contact Form Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2791</link><description>The Metform Elementor Contact Form Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all versions up to, and including, 3.8.5 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 02 Apr 2024 05:39:12 +0000</pubDate></item><item><title>CVE-2024-2924 | The Creative Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all versions...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2924</link><description>The Creative Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all versions up to, and including, 1.5.12 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><pubDate>Tue, 02 Apr 2024 05:39:12 +0000</pubDate></item><item><title>CVE-2024-1274 | My Calendar &amp;lt; 3.4.24 - Authenticated Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1274</link><description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description><pubDate>Tue, 02 Apr 2024 05:25:22 +0000</pubDate></item><item><title>CVE-2024-2369 | Page Builder Gutenberg Blocks &amp;lt; 3.1.7 - Contributor+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2369</link><description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description><pubDate>Tue, 02 Apr 2024 05:12:40 +0000</pubDate></item><item><title>CVE-2024-25187 | Server Side Request Forgery (SSRF) vulnerability in 71cms v1.0.0, allows remote unauthenticated attackers to obtain sensitive information vi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25187</link><description>Server Side Request Forgery (SSRF) vulnerability in 71cms v1.0.0, allows remote unauthenticated attackers to obtain sensitive information via getweather.html.</description><pubDate>Tue, 02 Apr 2024 03:30:14 +0000</pubDate></item><item><title>CVE-2024-20842 | Improper Input Validation vulnerability in handling apdu of libsec-ril prior to SMR Apr-2024 Release 1 allows local privileged attackers to ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20842</link><description>Improper Input Validation vulnerability in handling apdu of libsec-ril prior to SMR Apr-2024 Release 1 allows local privileged attackers to write out-of-bounds memory.</description><pubDate>Tue, 02 Apr 2024 03:08:29 +0000</pubDate></item><item><title>CVE-2024-20843 | Out-of-bound write vulnerability in command parsing implementation of libIfaaCa prior to SMR Apr-2024 Release 1 allows local privileged atta...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20843</link><description>Out-of-bound write vulnerability in command parsing implementation of libIfaaCa prior to SMR Apr-2024 Release 1 allows local privileged attackers to execute arbitrary code.</description><pubDate>Tue, 02 Apr 2024 03:08:30 +0000</pubDate></item><item><title>CVE-2024-20844 | Out-of-bounds write vulnerability while parsing remaining codewords in libsavsac.so prior to SMR Apr-2024 Release 1 allows local attacker to...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20844</link><description>Out-of-bounds write vulnerability while parsing remaining codewords in libsavsac.so prior to SMR Apr-2024 Release 1 allows local attacker to execute arbitrary code.</description><pubDate>Tue, 02 Apr 2024 03:08:30 +0000</pubDate></item><item><title>CVE-2024-20845 | Out-of-bounds write vulnerability while releasing memory in libsavsac.so prior to SMR Apr-2024 Release 1 allows local attacker to execute ar...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20845</link><description>Out-of-bounds write vulnerability while releasing memory in libsavsac.so prior to SMR Apr-2024 Release 1 allows local attacker to execute arbitrary code.</description><pubDate>Tue, 02 Apr 2024 03:08:30 +0000</pubDate></item><item><title>CVE-2024-20846 | Out-of-bounds write vulnerability while decoding hcr of libsavsac.so prior to SMR Apr-2024 Release 1 allows local attacker to execute arbitr...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20846</link><description>Out-of-bounds write vulnerability while decoding hcr of libsavsac.so prior to SMR Apr-2024 Release 1 allows local attacker to execute arbitrary code.</description><pubDate>Tue, 02 Apr 2024 03:08:31 +0000</pubDate></item><item><title>CVE-2024-20847 | Improper Access Control vulnerability in StorageManagerService prior to SMR Apr-2024 Release 1 allows local attackers to read sdcard informa...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20847</link><description>Improper Access Control vulnerability in StorageManagerService prior to SMR Apr-2024 Release 1 allows local attackers to read sdcard information.</description><pubDate>Tue, 02 Apr 2024 03:08:31 +0000</pubDate></item><item><title>CVE-2024-20848 | Out-of-bound Write vulnerability in text parsing implementation of libsdffextractor prior to SMR Apr-2023 Release 1 allows local attackers t...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20848</link><description>Out-of-bound Write vulnerability in text parsing implementation of libsdffextractor prior to SMR Apr-2023 Release 1 allows local attackers to execute arbitrary code.</description><pubDate>Tue, 02 Apr 2024 03:08:32 +0000</pubDate></item><item><title>CVE-2024-20849 | Out-of-bound Write vulnerability in chunk parsing implementation of libsdffextractor prior to SMR Apr-2023 Release 1 allows local attackers ...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20849</link><description>Out-of-bound Write vulnerability in chunk parsing implementation of libsdffextractor prior to SMR Apr-2023 Release 1 allows local attackers to execute arbitrary code.</description><pubDate>Tue, 02 Apr 2024 03:08:32 +0000</pubDate></item><item><title>CVE-2024-20850 | Use of Implicit Intent for Sensitive Communication in Samsung Pay prior to version 5.4.99 allows local attackers to access information of Sa...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20850</link><description>Use of Implicit Intent for Sensitive Communication in Samsung Pay prior to version 5.4.99 allows local attackers to access information of Samsung Pay.</description><pubDate>Tue, 02 Apr 2024 03:08:32 +0000</pubDate></item><item><title>CVE-2024-20851 | Improper access control vulnerability in Samsung Data Store prior to version 5.3.00.4 allows local attackers to launch arbitrary activity wi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20851</link><description>Improper access control vulnerability in Samsung Data Store prior to version 5.3.00.4 allows local attackers to launch arbitrary activity with Samsung Data Store privilege.</description><pubDate>Tue, 02 Apr 2024 03:08:33 +0000</pubDate></item><item><title>CVE-2024-20852 | Improper verification of intent by broadcast receiver vulnerability in SmartThings prior to version 1.8.13.22 allows local attackers to acce...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20852</link><description>Improper verification of intent by broadcast receiver vulnerability in SmartThings prior to version 1.8.13.22 allows local attackers to access testing configuration.</description><pubDate>Tue, 02 Apr 2024 03:08:33 +0000</pubDate></item><item><title>CVE-2024-20853 | Improper verification of intent by broadcast receiver vulnerability in ThemeStore prior to 5.3.05.2 allows local attackers to write arbitrar...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20853</link><description>Improper verification of intent by broadcast receiver vulnerability in ThemeStore prior to 5.3.05.2 allows local attackers to write arbitrary files to sandbox of ThemeStore.</description><pubDate>Tue, 02 Apr 2024 03:08:33 +0000</pubDate></item><item><title>CVE-2024-20854 | Improper handling of insufficient privileges vulnerability in Samsung Camera prior to versions 12.1.0.31 in Android 12, 13.1.02.07 in Androi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20854</link><description>Improper handling of insufficient privileges vulnerability in Samsung Camera prior to versions 12.1.0.31 in Android 12, 13.1.02.07 in Android 13, and 14.0.01.06 in Android 14 allows local attackers to access image data.</description><pubDate>Tue, 02 Apr 2024 03:08:34 +0000</pubDate></item><item><title>CVE-2024-3160 | Intelbras HDCVI 1016 HTTP GET Request cap.js information disclosure</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3160</link><description>** DISPUTED ** A vulnerability, which was classified as problematic, was found in Intelbras MHDX 1004, MHDX 1008, MHDX 1016, MHDX 5016, HDCVI 1008 and HDCVI 1016 up to 20240401. This affects an unknown part of the file /cap.js of the component HTTP GET Request Handler. The manipulation leads to information disclosure. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The identifier VDB-258933 was assigned to this vulnerability. NOTE: The vendor explains that they do not classify the information shown as sensitive and therefore there is no vulnerability which is about to harm the user.</description><pubDate>Tue, 02 Apr 2024 02:40:28 +0000</pubDate></item><item><title>CVE-2024-3148 | DedeCMS makehtml_archives_action.php sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3148</link><description>A vulnerability, which was classified as critical, has been found in DedeCMS 5.7.112. This issue affects some unknown processing of the file dede/makehtml_archives_action.php. The manipulation leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-258923. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 02:14:55 +0000</pubDate></item><item><title>CVE-2024-3146 | DedeCMS makehtml_rss_action.php cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3146</link><description>A vulnerability classified as problematic has been found in DedeCMS 5.7. This affects an unknown part of the file /src/dede/makehtml_rss_action.php. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-258921 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 02:14:55 +0000</pubDate></item><item><title>CVE-2024-3147 | DedeCMS makehtml_map.php cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3147</link><description>A vulnerability classified as problematic was found in DedeCMS 5.7. This vulnerability affects unknown code of the file /src/dede/makehtml_map.php. The manipulation leads to cross-site request forgery. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-258922 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 02:14:56 +0000</pubDate></item><item><title>CVE-2024-3144 | DedeCMS makehtml_spec.php cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3144</link><description>A vulnerability was found in DedeCMS 5.7. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file /src/dede/makehtml_spec.php. The manipulation leads to cross-site request forgery. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-258919. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 01:41:59 +0000</pubDate></item><item><title>CVE-2024-3145 | DedeCMS makehtml_js_action.php cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3145</link><description>A vulnerability was found in DedeCMS 5.7. It has been rated as problematic. Affected by this issue is some unknown functionality of the file /src/dede/makehtml_js_action.php. The manipulation leads to cross-site request forgery. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-258920. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 01:42:00 +0000</pubDate></item><item><title>CVE-2024-3137 | Improper Privilege Management in uvdesk/community-skeleton</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3137</link><description>Improper Privilege Management in uvdesk/community-skeleton</description><pubDate>Tue, 02 Apr 2024 00:48:04 +0000</pubDate></item><item><title>CVE-2024-3142 | Clavister E10/E80 Setting cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3142</link><description>A vulnerability was found in Clavister E10 and E80 up to 14.00.10 and classified as problematic. This issue affects some unknown processing of the component Setting Handler. The manipulation leads to cross-site request forgery. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 14.00.11 is able to address this issue. It is recommended to upgrade the affected component. The identifier VDB-258917 was assigned to this vulnerability.</description><pubDate>Tue, 02 Apr 2024 00:48:04 +0000</pubDate></item><item><title>CVE-2024-3143 | DedeCMS member_rank.php cross-site request forgery</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3143</link><description>A vulnerability was found in DedeCMS 5.7. It has been classified as problematic. Affected is an unknown function of the file /src/dede/member_rank.php. The manipulation leads to cross-site request forgery. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-258918 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Tue, 02 Apr 2024 00:48:04 +0000</pubDate></item><item><title>CVE-2024-27334 | Kofax Power PDF JPG File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27334</link><description>Kofax Power PDF JPG File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of JPG files.
The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-21978.</description><pubDate>Mon, 01 Apr 2024 23:21:51 +0000</pubDate></item><item><title>CVE-2024-27333 | Kofax Power PDF GIF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27333</link><description>Kofax Power PDF GIF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of GIF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-21976.</description><pubDate>Mon, 01 Apr 2024 23:07:36 +0000</pubDate></item><item><title>CVE-2024-3140 | SourceCodester Computer Laboratory Management System cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3140</link><description>A vulnerability, which was classified as problematic, was found in SourceCodester Computer Laboratory Management System 1.0. This affects an unknown part of the file /classes/Users.php?f=save. The manipulation of the argument middlename leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-258915.</description><pubDate>Mon, 01 Apr 2024 23:07:36 +0000</pubDate></item><item><title>CVE-2024-3141 | Clavister E10/E80 Misc Settings Page MiscSettings cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3141</link><description>A vulnerability has been found in Clavister E10 and E80 up to 14.00.10 and classified as problematic. This vulnerability affects unknown code of the file /?Page=Node&amp;OBJ=/System/AdvancedSettings/DeviceSettings/MiscSettings of the component Misc Settings Page. The manipulation of the argument WatchdogTimerTime/BufFloodRebootTime/MaxPipeUsers/AVCache Lifetime/HTTPipeliningMaxReq/Reassembly MaxConnections/Reassembly MaxProcessingMem/ScrSaveTime leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 14.00.11 is able to address this issue. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-258916.</description><pubDate>Mon, 01 Apr 2024 23:07:37 +0000</pubDate></item><item><title>CVE-2024-3139 | SourceCodester Computer Laboratory Management System save_users improper authorization</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3139</link><description>A vulnerability, which was classified as critical, has been found in SourceCodester Computer Laboratory Management System 1.0. Affected by this issue is the function save_users of the file /classes/Users.php?f=save. The manipulation of the argument id leads to improper authorization. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-258914 is the identifier assigned to this vulnerability.</description><pubDate>Mon, 01 Apr 2024 22:40:36 +0000</pubDate></item><item><title>CVE-2024-3138 | francoisjacquet RosarioSIS Add Portal Note cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3138</link><description>** DISPUTED ** A vulnerability was found in francoisjacquet RosarioSIS 11.5.1. It has been rated as problematic. This issue affects some unknown processing of the component Add Portal Note. The manipulation leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The associated identifier of this vulnerability is VDB-258911. NOTE: The vendor explains that the PDF is opened by the browser app in a sandbox, so no data from the website should be accessible.</description><pubDate>Mon, 01 Apr 2024 22:13:12 +0000</pubDate></item><item><title>CVE-2024-27327 | PDF-XChange Editor PDF File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27327</link><description>PDF-XChange Editor PDF File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of PDF files. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22277.</description><pubDate>Mon, 01 Apr 2024 21:59:04 +0000</pubDate></item><item><title>CVE-2024-27328 | PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27328</link><description>PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the handling of EMF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22280.</description><pubDate>Mon, 01 Apr 2024 21:59:05 +0000</pubDate></item><item><title>CVE-2024-27329 | PDF-XChange Editor XPS File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27329</link><description>PDF-XChange Editor XPS File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of XPS files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22285.</description><pubDate>Mon, 01 Apr 2024 21:59:05 +0000</pubDate></item><item><title>CVE-2024-27330 | PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27330</link><description>PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of EMF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22286.</description><pubDate>Mon, 01 Apr 2024 21:59:05 +0000</pubDate></item><item><title>CVE-2024-27331 | PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27331</link><description>PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of EMF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22287.</description><pubDate>Mon, 01 Apr 2024 21:59:05 +0000</pubDate></item><item><title>CVE-2024-27332 | PDF-XChange Editor JPG File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27332</link><description>PDF-XChange Editor JPG File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of JPG files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22288.</description><pubDate>Mon, 01 Apr 2024 21:59:06 +0000</pubDate></item><item><title>CVE-2024-0637 | Centreon updateDirectory SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-0637</link><description>Centreon updateDirectory SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.

The specific flaw exists within the updateDirectory function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22294.</description><pubDate>Mon, 01 Apr 2024 21:51:55 +0000</pubDate></item><item><title>CVE-2024-1179 | TP-Link Omada ER605 DHCPv6 Client Options Stack-based Buffer Overflow Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1179</link><description>TP-Link Omada ER605 DHCPv6 Client Options Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the handling of DHCP options. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22420.</description><pubDate>Mon, 01 Apr 2024 21:51:55 +0000</pubDate></item><item><title>CVE-2024-1863 | Sante PACS Server Token Endpoint SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1863</link><description>Sante PACS Server Token Endpoint SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Sante PACS Server. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the processing of HTTP requests on port 3000. When parsing the token parameter, the process does not properly validate a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of NETWORK SERVICE. Was ZDI-CAN-21539.</description><pubDate>Mon, 01 Apr 2024 21:51:56 +0000</pubDate></item><item><title>CVE-2024-23115 | Centreon updateGroups SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23115</link><description>Centreon updateGroups SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.

The specific flaw exists within the updateGroups function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22295.</description><pubDate>Mon, 01 Apr 2024 21:51:56 +0000</pubDate></item><item><title>CVE-2024-23116 | Centreon updateLCARelation SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23116</link><description>Centreon updateLCARelation SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.

The specific flaw exists within the updateLCARelation function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22296.</description><pubDate>Mon, 01 Apr 2024 21:51:56 +0000</pubDate></item><item><title>CVE-2024-23117 | Centreon updateContactServiceCommands SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23117</link><description>Centreon updateContactServiceCommands SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.

The specific flaw exists within the updateContactServiceCommands function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22297.</description><pubDate>Mon, 01 Apr 2024 21:51:57 +0000</pubDate></item><item><title>CVE-2024-23118 | Centreon updateContactHostCommands SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23118</link><description>Centreon updateContactHostCommands SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.

The specific flaw exists within the updateContactHostCommands function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22298.</description><pubDate>Mon, 01 Apr 2024 21:51:57 +0000</pubDate></item><item><title>CVE-2024-23119 | Centreon insertGraphTemplate SQL Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-23119</link><description>Centreon insertGraphTemplate SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.

The specific flaw exists within the insertGraphTemplate function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22339.</description><pubDate>Mon, 01 Apr 2024 21:51:57 +0000</pubDate></item><item><title>CVE-2024-27323 | PDF-XChange Editor Updater Improper Certificate Validation Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27323</link><description>PDF-XChange Editor Updater Improper Certificate Validation Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is not required to exploit this vulnerability.

The specific flaw exists within the update functionality. The issue results from the lack of proper validation of the certificate presented by the server. An attacker can leverage this vulnerability to execute code in the context of the current user. Was ZDI-CAN-22224.</description><pubDate>Mon, 01 Apr 2024 21:51:58 +0000</pubDate></item><item><title>CVE-2024-27324 | PDF-XChange Editor TIF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27324</link><description>PDF-XChange Editor TIF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of TIF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22270.</description><pubDate>Mon, 01 Apr 2024 21:51:58 +0000</pubDate></item><item><title>CVE-2024-27325 | PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27325</link><description>PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of EMF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22275.</description><pubDate>Mon, 01 Apr 2024 21:51:58 +0000</pubDate></item><item><title>CVE-2024-27326 | PDF-XChange Editor XPS File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-27326</link><description>PDF-XChange Editor XPS File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.

The specific flaw exists within the parsing of XPS files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22276.</description><pubDate>Mon, 01 Apr 2024 21:51:59 +0000</pubDate></item><item><title>CVE-2024-3165 | Database Credential Exposure in the Logs</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3165</link><description>System-&gt;Maintenance-&gt; Log Files in dotCMS dashboard is providing the username/password for database connections in the log output. Nevertheless, this is a moderate issue as it requires a backend admin as well as that dbs are locked down by environment. Â 

OWASP Top 10 - A05) Insecure Design

OWASP Top 10 - A05) Security Misconfiguration

OWASP Top 10 - A09) Security Logging and Monitoring Failure</description><pubDate>Mon, 01 Apr 2024 21:44:58 +0000</pubDate></item><item><title>CVE-2024-3164 | In dotCMS dashboard, the Tools and Log Files tabs under System â†’ Maintenance Portlet, which is and always has been an Admin portlet, is acce...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3164</link><description>In dotCMS dashboard, the Tools and Log Files tabs under System â†’ Maintenance Portlet, which is and always has been an Admin portlet, is accessible to anyone with that portlet and not just to CMS Admins. Users that get site admin but not a system admin, should not have access to the System Maintenance â†’ Tools portlet. This would share database username and password under Log Files and download DB Dump and other dotCMS Content under Tools. Nothing in the System â†’ Maintenance should be displayed for users with site admin role. Only system admins must have access to System Maintenance.

OWASP Top 10 - A01) Broken Access Control

OWASP Top 10 - A04) Insecure Design</description><pubDate>Mon, 01 Apr 2024 21:38:06 +0000</pubDate></item><item><title>CVE-2023-51570 | Voltronic Power ViewPower Pro Deserialization of Untrusted Data Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51570</link><description>Voltronic Power ViewPower Pro Deserialization of Untrusted Data Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Voltronic Power ViewPower Pro. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the RMI interface, which listens on TCP port 41009 by default. The issue results from the lack of proper validation of user-supplied data, which can result in deserialization of untrusted data. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-21012.</description><pubDate>Mon, 01 Apr 2024 21:24:07 +0000</pubDate></item><item><title>CVE-2023-51571 | Voltronic Power ViewPower Pro SocketService Missing Authentication Denial-of-Service Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51571</link><description>Voltronic Power ViewPower Pro SocketService Missing Authentication Denial-of-Service Vulnerability. This vulnerability allows remote attackers to create a denial-of-service condition on affected installations of Voltronic Power ViewPower Pro. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the SocketService module, which listens on UDP port 41222 by default. The issue results from the lack of authentication prior to allowing access to functionality. An attacker can leverage this vulnerability to create a denial-of-service condition on the system. Was ZDI-CAN-21162.</description><pubDate>Mon, 01 Apr 2024 21:24:08 +0000</pubDate></item><item><title>CVE-2023-51572 | Voltronic Power ViewPower Pro getMacAddressByIp Command Injection Remote Code Execution Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51572</link><description>Voltronic Power ViewPower Pro getMacAddressByIp Command Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Voltronic Power ViewPower Pro. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the getMacAddressByIP function. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-21163.</description><pubDate>Mon, 01 Apr 2024 21:24:08 +0000</pubDate></item><item><title>CVE-2023-51573 | Voltronic Power ViewPower Pro updateManagerPassword Exposed Dangerous Function Authentication Bypass Vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2023-51573</link><description>Voltronic Power ViewPower Pro updateManagerPassword Exposed Dangerous Function Authentication Bypass Vulnerability. This vulnerability allows remote attackers to bypass authentication on affected installations of Voltronic Power ViewPower Pro. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the updateManagerPassword function. The issue results from the exposure of a dangerous function. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-21203.</description><pubDate>Mon, 01 Apr 2024 21:24:08 +0000</pubDate></item><item><title>CVE-2024-29433 | A deserialization vulnerability in the FASTJSON component of Alldata v0.4.6 allows attackers to execute arbitrary commands via supplying cra...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29433</link><description>A deserialization vulnerability in the FASTJSON component of Alldata v0.4.6 allows attackers to execute arbitrary commands via supplying crafted data.</description><pubDate>Mon, 01 Apr 2024 20:10:28 +0000</pubDate></item><item><title>CVE-2024-29435 | An issue discovered in Alldata v0.4.6 allows attacker to run arbitrary commands via the processId parameter.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-29435</link><description>An issue discovered in Alldata v0.4.6 allows attacker to run arbitrary commands via the processId parameter.</description><pubDate>Mon, 01 Apr 2024 20:10:28 +0000</pubDate></item><item><title>CVE-2023-48906 | Stack Overflow vulnerability in Btstack 1.6 and earlier allows attackers to cause a denial of service via crafted input to the char_for_nibb...</title><link>https://www.cve.org/CVERecord?id=CVE-2023-48906</link><description>Stack Overflow vulnerability in Btstack 1.6 and earlier allows attackers to cause a denial of service via crafted input to the char_for_nibble function.</description><pubDate>Mon, 01 Apr 2024 19:28:05 +0000</pubDate></item><item><title>CVE-2024-3135 | Cross Site Request Forgery to denial of service or credit loss in LocalAI</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3135</link><description>The web server lacked CSRF tokens allowing an attacker to host malicious JavaScript on a host that when visited by a LocalAI user, could allow the attacker to fill disk space to deny service or abuse credits.</description><pubDate>Mon, 01 Apr 2024 18:54:09 +0000</pubDate></item><item><title>CVE-2024-28232 | Username Enumeration in CasaOS via bypass of CVE-2024-24766</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28232</link><description>Go package IceWhaleTech/CasaOS-UserService provides user management functionalities to CasaOS. The Casa OS Login page has disclosed the username enumeration vulnerability in the login page which was patched in version 0.4.7. This issue in CVE-2024-28232 has been patched in version 0.4.8 but that version has not yet been uploaded to Go's package manager.</description><pubDate>Mon, 01 Apr 2024 16:42:35 +0000</pubDate></item><item><title>CVE-2024-3131 | SourceCodester Computer Laboratory Management System sql injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3131</link><description>A vulnerability was found in SourceCodester Computer Laboratory Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file /classes/Master.php?f=save_category. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-258874 is the identifier assigned to this vulnerability.</description><pubDate>Mon, 01 Apr 2024 16:42:36 +0000</pubDate></item><item><title>CVE-2024-25574 | Delta Electronics DIAEnergie SQL Injection</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25574</link><description>SQL injection vulnerability exists in GetDIAE_usListParameters.</description><pubDate>Mon, 01 Apr 2024 16:19:38 +0000</pubDate></item><item><title>CVE-2024-3129 | SourceCodester Image Accordion Gallery App add-image.php unrestricted upload</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3129</link><description>A vulnerability was found in SourceCodester Image Accordion Gallery App 1.0. It has been classified as critical. This affects an unknown part of the file /endpoint/add-image.php. The manipulation of the argument image_name leads to unrestricted upload. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-258873 was assigned to this vulnerability.</description><pubDate>Mon, 01 Apr 2024 16:19:39 +0000</pubDate></item><item><title>CVE-2024-30858 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/edit_fire_wall.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30858</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/edit_fire_wall.php.</description><pubDate>Mon, 01 Apr 2024 15:32:27 +0000</pubDate></item><item><title>CVE-2024-30859 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/config_ISCGroupSSLCert.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30859</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/config_ISCGroupSSLCert.php.</description><pubDate>Mon, 01 Apr 2024 15:32:27 +0000</pubDate></item><item><title>CVE-2024-30861 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/configguide/ipsec_guide_1.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30861</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/configguide/ipsec_guide_1.php.</description><pubDate>Mon, 01 Apr 2024 15:32:28 +0000</pubDate></item><item><title>CVE-2024-30860 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/export_excel_user.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30860</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/export_excel_user.php.</description><pubDate>Mon, 01 Apr 2024 15:32:28 +0000</pubDate></item><item><title>CVE-2024-30862 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /3g/index.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30862</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /3g/index.php.</description><pubDate>Mon, 01 Apr 2024 15:32:29 +0000</pubDate></item><item><title>CVE-2024-30863 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /WebPages/history.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30863</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /WebPages/history.php.</description><pubDate>Mon, 01 Apr 2024 15:32:29 +0000</pubDate></item><item><title>CVE-2024-30867 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/edit_virtual_site_info.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30867</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/edit_virtual_site_info.php.</description><pubDate>Mon, 01 Apr 2024 15:25:21 +0000</pubDate></item><item><title>CVE-2023-28547 | Buffer Copy Without Checking Size of Input in SPS Applications</title><link>https://www.cve.org/CVERecord?id=CVE-2023-28547</link><description>Memory corruption in SPS Application while requesting for public key in sorter TA.</description><pubDate>Mon, 01 Apr 2024 15:15:09 +0000</pubDate></item><item><title>CVE-2023-33023 | Buffer Copy without Checking Size of Input (`Classic Buffer Overflow`) in SPS-Applications</title><link>https://www.cve.org/CVERecord?id=CVE-2023-33023</link><description>Memory corruption while processing finish_sign command to pass a rsp buffer.</description><pubDate>Mon, 01 Apr 2024 15:15:09 +0000</pubDate></item><item><title>CVE-2023-33099 | Improper Input Validation in Multi-Mode Call Processor</title><link>https://www.cve.org/CVERecord?id=CVE-2023-33099</link><description>Transient DOS while processing SMS container of non-standard size received in DL NAS transport in NR.</description><pubDate>Mon, 01 Apr 2024 15:15:09 +0000</pubDate></item><item><title>CVE-2023-33100 | Improper input validation in Multi-Mode Call Processor</title><link>https://www.cve.org/CVERecord?id=CVE-2023-33100</link><description>Transient DOS while processing DL NAS Transport message when message ID is not defined in the 3GPP specification.</description><pubDate>Mon, 01 Apr 2024 15:15:09 +0000</pubDate></item><item><title>CVE-2023-33101 | Incorrect Type Conversion or Cast in Multi-Mode Call Processor</title><link>https://www.cve.org/CVERecord?id=CVE-2023-33101</link><description>Transient DOS while processing DL NAS TRANSPORT message with payload length 0.</description><pubDate>Mon, 01 Apr 2024 15:15:10 +0000</pubDate></item><item><title>CVE-2023-33111 | Improper Validation of Array Index in Audio</title><link>https://www.cve.org/CVERecord?id=CVE-2023-33111</link><description>Information disclosure when VI calibration state set by ADSP is greater than MAX_FBSP_STATE in the response payload to AFE calibration command.</description><pubDate>Mon, 01 Apr 2024 15:15:10 +0000</pubDate></item><item><title>CVE-2023-33115 | Buffer Over-read in Trusted Execution Environment</title><link>https://www.cve.org/CVERecord?id=CVE-2023-33115</link><description>Memory corruption while processing buffer initialization, when trusted report for certain report types are generated.</description><pubDate>Mon, 01 Apr 2024 15:15:10 +0000</pubDate></item><item><title>CVE-2023-43515 | Buffer copy without checking size of input (Classic buffer overflow) in HLOS</title><link>https://www.cve.org/CVERecord?id=CVE-2023-43515</link><description>Memory corruption in HLOS while running kernel address sanitizers (syzkaller) on tmecom with DEBUG_FS enabled.</description><pubDate>Mon, 01 Apr 2024 15:15:11 +0000</pubDate></item><item><title>CVE-2024-21452 | Improper Input Validation in Automotive Telematics</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21452</link><description>Transient DOS while decoding an ASN.1 OER message containing a SEQUENCE of unknown extensions.</description><pubDate>Mon, 01 Apr 2024 15:15:11 +0000</pubDate></item><item><title>CVE-2024-21453 | Improper Input Validation in Automotive Telematics</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21453</link><description>Transient DOS while decoding message of size that exceeds the available system memory.</description><pubDate>Mon, 01 Apr 2024 15:15:11 +0000</pubDate></item><item><title>CVE-2024-21454 | Integer Overflow to Buffer Overflow in Automotive Telematics</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21454</link><description>Transient DOS while decoding the ToBeSignedMessage in Automotive Telematics.</description><pubDate>Mon, 01 Apr 2024 15:15:12 +0000</pubDate></item><item><title>CVE-2024-21463 | Buffer Copy Without Checking Size of Input in Audio</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21463</link><description>Memory corruption while processing Codec2 during v13k decoder pitch synthesis.</description><pubDate>Mon, 01 Apr 2024 15:15:12 +0000</pubDate></item><item><title>CVE-2024-21468 | Use After Free in Kernel</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21468</link><description>Memory corruption when there is failed unmap operation in GPU.</description><pubDate>Mon, 01 Apr 2024 15:15:12 +0000</pubDate></item><item><title>CVE-2024-21470 | Integer Overflow to Buffer Overflow in Graphics Windows</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21470</link><description>Memory corruption while allocating memory for graphics.</description><pubDate>Mon, 01 Apr 2024 15:15:13 +0000</pubDate></item><item><title>CVE-2024-21472 | Use After Free in Kernel</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21472</link><description>Memory corruption in Kernel while handling GPU operations.</description><pubDate>Mon, 01 Apr 2024 15:15:13 +0000</pubDate></item><item><title>CVE-2024-21473 | Improper Input Validation in WIN SON</title><link>https://www.cve.org/CVERecord?id=CVE-2024-21473</link><description>Memory corruption while redirecting log file to any file location with any file name.</description><pubDate>Mon, 01 Apr 2024 15:15:13 +0000</pubDate></item><item><title>CVE-2024-30864 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/config_ISCGroupTimePolicy.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30864</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/config_ISCGroupTimePolicy.php.</description><pubDate>Mon, 01 Apr 2024 15:15:14 +0000</pubDate></item><item><title>CVE-2024-30865 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/edit_user_login.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30865</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/edit_user_login.php.</description><pubDate>Mon, 01 Apr 2024 15:15:14 +0000</pubDate></item><item><title>CVE-2024-30866 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /3g/menu.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30866</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /3g/menu.php.</description><pubDate>Mon, 01 Apr 2024 15:15:14 +0000</pubDate></item><item><title>CVE-2024-26655 | Fix memory leak in posix_clock_open()</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26655</link><description>In the Linux kernel, the following vulnerability has been resolved:

Fix memory leak in posix_clock_open()

If the clk ops.open() function returns an error, we don't release the
pccontext we allocated for this clock.

Re-organize the code slightly to make it all more obvious.</description><pubDate>Mon, 01 Apr 2024 15:15:15 +0000</pubDate></item><item><title>CVE-2024-3128 | Replify-Messenger Backup File androidmanifest.xml backup</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3128</link><description>** UNSUPPORTED WHEN ASSIGNED ** A vulnerability, which was classified as problematic, has been found in Replify-Messenger 1.0 on Android. This issue affects some unknown processing of the file androidmanifest.xml of the component Backup File Handler. The manipulation leads to exposure of backup file to an unauthorized control sphere. It is possible to launch the attack on the physical device. The exploit has been disclosed to the public and may be used. The identifier VDB-258869 was assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer. NOTE: The vendor was contacted early and responded very quickly. He does not intend to maintain the app anymore and will revoke the availability in the Google Play Store.</description><pubDate>Mon, 01 Apr 2024 14:39:36 +0000</pubDate></item><item><title>CVE-2024-31099 | WordPress Phlox Core Elements plugin &amp;lt;= 2.15.5 - Broken Access Control vulnerability</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31099</link><description>Missing Authorization vulnerability in Averta Shortcodes and extra features for Phlox theme.This issue affects Shortcodes and extra features for Phlox theme: from n/a through 2.15.5.</description><pubDate>Mon, 01 Apr 2024 14:24:54 +0000</pubDate></item><item><title>CVE-2024-3125 | Zebra ZTC GK420d Alert Setup Page settings cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3125</link><description>A vulnerability classified as problematic was found in Zebra ZTC GK420d 1.0. This vulnerability affects unknown code of the file /settings of the component Alert Setup Page. The manipulation of the argument Address leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-258868. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.</description><pubDate>Mon, 01 Apr 2024 14:11:10 +0000</pubDate></item><item><title>CVE-2024-30868 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/add_getlogin.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30868</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/add_getlogin.php.</description><pubDate>Mon, 01 Apr 2024 12:44:28 +0000</pubDate></item><item><title>CVE-2024-30870 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/address_interpret.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30870</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /admin/address_interpret.php.</description><pubDate>Mon, 01 Apr 2024 12:44:29 +0000</pubDate></item><item><title>CVE-2024-30871 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /WebPages/applyhardware.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30871</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /WebPages/applyhardware.php.</description><pubDate>Mon, 01 Apr 2024 12:44:29 +0000</pubDate></item><item><title>CVE-2024-30872 | netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /include/authrp.php.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-30872</link><description>netentsec NS-ASG 6.3 is vulnerable to SQL Injection via /include/authrp.php.</description><pubDate>Mon, 01 Apr 2024 12:44:29 +0000</pubDate></item><item><title>CVE-2024-3124 | fridgecow smartalarm Backup File androidmanifest.xml backup</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3124</link><description>A vulnerability classified as problematic has been found in fridgecow smartalarm 1.8.1 on Android. This affects an unknown part of the file androidmanifest.xml of the component Backup File Handler. The manipulation leads to exposure of backup file to an unauthorized control sphere. It is possible to launch the attack on the physical device. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-258867.</description><pubDate>Mon, 01 Apr 2024 12:44:30 +0000</pubDate></item><item><title>CVE-2022-4966 | sequentech admin-console Election Description cross site scripting</title><link>https://www.cve.org/CVERecord?id=CVE-2022-4966</link><description>A vulnerability was found in sequentech admin-console up to 6.1.7 and classified as problematic. Affected by this issue is some unknown functionality of the component Election Description Handler. The manipulation leads to cross site scripting. The attack may be launched remotely. Upgrading to version 7.0.0-beta.1 is able to address this issue. The patch is identified as 0043a6b1e6e0f5abc9557e73f9ffc524fc5d609d. It is recommended to upgrade the affected component. VDB-258782 is the identifier assigned to this vulnerability.</description><pubDate>Mon, 01 Apr 2024 12:18:37 +0000</pubDate></item><item><title>CVE-2023-6154 | Local privilege escalation in Bitdefender Total Security (VA-11168)</title><link>https://www.cve.org/CVERecord?id=CVE-2023-6154</link><description>A configuration setting issue in seccenter.exe as used in Bitdefender Total Security, Bitdefender Internet Security, Bitdefender Antivirus Plus, Bitdefender Antivirus Free allows an attacker to change the product's expected behavior and potentially load a third-party library upon execution. This issue affects Total Security: 27.0.25.114; Internet Security: 27.0.25.114; Antivirus Plus: 27.0.25.114; Antivirus Free: 27.0.25.114.</description><pubDate>Mon, 01 Apr 2024 10:18:09 +0000</pubDate></item><item><title>CVE-2024-3130 |  Insecure Data Storage leading to sensitive Information disclosure.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-3130</link><description>Hard-coded CredentialsÂ in CoolKit eWeLlink app are before 5.4.x on Android and IOS allows local attacker toÂ unauthorized access to sensitive data via Decryption algorithm and key obtained after decompiling app</description><pubDate>Mon, 01 Apr 2024 09:15:42 +0000</pubDate></item><item><title>CVE-2024-25080 | WebMail in Axigen 10.x before 10.3.3.62 allows XSS via the image attachment viewer.</title><link>https://www.cve.org/CVERecord?id=CVE-2024-25080</link><description>WebMail in Axigen 10.x before 10.3.3.62 allows XSS via the image attachment viewer.</description><pubDate>Mon, 01 Apr 2024 08:45:35 +0000</pubDate></item><item><title>CVE-2024-26653 | usb: misc: ljca: Fix double free in error handling path</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26653</link><description>In the Linux kernel, the following vulnerability has been resolved:

usb: misc: ljca: Fix double free in error handling path

When auxiliary_device_add() returns error and then calls
auxiliary_device_uninit(), callback function ljca_auxdev_release
calls kfree(auxdev-&gt;dev.platform_data) to free the parameter data
of the function ljca_new_client_device. The callers of
ljca_new_client_device shouldn't call kfree() again
in the error handling path to free the platform data.

Fix this by cleaning up the redundant kfree() in all callers and
adding kfree() the passed in platform_data on errors which happen
before auxiliary_device_init() succeeds .</description><pubDate>Mon, 01 Apr 2024 08:38:44 +0000</pubDate></item><item><title>CVE-2024-26654 | ALSA: sh: aica: reorder cleanup operations to avoid UAF bugs</title><link>https://www.cve.org/CVERecord?id=CVE-2024-26654</link><description>In the Linux kernel, the following vulnerability has been resolved:

ALSA: sh: aica: reorder cleanup operations to avoid UAF bugs

The dreamcastcard-&gt;timer could schedule the spu_dma_work and the
spu_dma_work could also arm the dreamcastcard-&gt;timer.

When the snd_pcm_substream is closing, the aica_channel will be
deallocated. But it could still be dereferenced in the worker
thread. The reason is that del_timer() will return directly
regardless of whether the timer handler is running or not and
the worker could be rescheduled in the timer handler. As a result,
the UAF bug will happen. The racy situation is shown below:

      (Thread 1)                 |      (Thread 2)
snd_aicapcm_pcm_close()          |
 ...                             |  run_spu_dma() //worker
                                 |    mod_timer()
  flush_work()                   |
  del_timer()                    |  aica_period_elapsed() //timer
  kfree(dreamcastcard-&gt;channel)  |    schedule_work()
                                 |  run_spu_dma() //worker
  ...                            |    dreamcastcard-&gt;channel-&gt; //USE

In order to mitigate this bug and other possible corner cases,
call mod_timer() conditionally in run_spu_dma(), then implement
PCM sync_stop op to cancel both the timer and worker. The sync_stop
op will be called from PCM core appropriately when needed.</description><pubDate>Mon, 01 Apr 2024 08:38:44 +0000</pubDate></item><item><title>CVE-2016-15038 | NUUO NVRmini 2 deletefile.php path traversal</title><link>https://www.cve.org/CVERecord?id=CVE-2016-15038</link><description>A vulnerability, which was classified as critical, was found in NUUO NVRmini 2 up to 3.0.8. Affected is an unknown function of the file /deletefile.php. The manipulation of the argument filename leads to path traversal. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-258780.</description><pubDate>Mon, 01 Apr 2024 05:42:35 +0000</pubDate></item><item><title>CVE-2024-1526 | Hubbub Lite &amp;lt; 1.33.1 - Unauthenticated Password Protected Posts Access</title><link>https://www.cve.org/CVERecord?id=CVE-2024-1526</link><description>The Hubbub Lite  WordPress plugin before 1.33.1 does not ensure that user have access to password protected post before displaying its content in a meta tag.</description><pubDate>Mon, 01 Apr 2024 05:13:26 +0000</pubDate></item><item><title>CVE-2024-2262 | WooCommerce Product Filter &amp;lt; 1.4.4 - Filter Deletion via CSRF</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2262</link><description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description><pubDate>Mon, 01 Apr 2024 05:13:26 +0000</pubDate></item><item><title>CVE-2024-2263 | WooCommerce Product Filter &amp;lt; 1.4.4 - Reflected XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2263</link><description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description><pubDate>Mon, 01 Apr 2024 05:13:26 +0000</pubDate></item><item><title>CVE-2024-2278 | WooCommerce Product Filter &amp;lt; 1.4.4 - Admin+ Stored XSS</title><link>https://www.cve.org/CVERecord?id=CVE-2024-2278</link><description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape some of its Filters settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description><pubDate>Mon, 01 Apr 2024 05:13:27 +0000</pubDate></item><item><title>CVE-2024-20039 | In modem protocol, there is a possible out of bounds write due to a missing bounds check. This could lead to remote code execution with no a...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20039</link><description>In modem protocol, there is a possible out of bounds write due to a missing bounds check. This could lead to remote code execution with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: MOLY01240012; Issue ID: MSV-1215.</description><pubDate>Mon, 01 Apr 2024 02:46:19 +0000</pubDate></item><item><title>CVE-2024-20040 | In wlan firmware, there is a possible out of bounds write due to improper input validation. This could lead to remote escalation of privileg...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20040</link><description>In wlan firmware, there is a possible out of bounds write due to improper input validation. This could lead to remote escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08360153 (for MT6XXX chipsets) / WCNCR00363530 (for MT79XX chipsets); Issue ID: MSV-979.</description><pubDate>Mon, 01 Apr 2024 02:46:19 +0000</pubDate></item><item><title>CVE-2024-20041 | In da, there is a possible out of bounds read due to a missing bounds check. This could lead to local information disclosure with System exe...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20041</link><description>In da, there is a possible out of bounds read due to a missing bounds check. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541746; Issue ID: ALPS08541746.</description><pubDate>Mon, 01 Apr 2024 02:46:19 +0000</pubDate></item><item><title>CVE-2024-20042 | In da, there is a possible out of bounds write due to a missing bounds check. This could lead to local escalation of privilege with System e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20042</link><description>In da, there is a possible out of bounds write due to a missing bounds check. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541780; Issue ID: ALPS08541780.</description><pubDate>Mon, 01 Apr 2024 02:46:20 +0000</pubDate></item><item><title>CVE-2024-20043 | In da, there is a possible out of bounds write due to a missing bounds check. This could lead to local escalation of privilege with System e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20043</link><description>In da, there is a possible out of bounds write due to a missing bounds check. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541781; Issue ID: ALPS08541781.</description><pubDate>Mon, 01 Apr 2024 02:46:20 +0000</pubDate></item><item><title>CVE-2024-20044 | In da, there is a possible out of bounds write due to a missing bounds check. This could lead to local escalation of privilege with System e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20044</link><description>In da, there is a possible out of bounds write due to a missing bounds check. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541784; Issue ID: ALPS08541784.</description><pubDate>Mon, 01 Apr 2024 02:46:20 +0000</pubDate></item><item><title>CVE-2024-20045 | In audio, there is a possible out of bounds read due to an incorrect calculation of buffer size. This could lead to local information disclo...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20045</link><description>In audio, there is a possible out of bounds read due to an incorrect calculation of buffer size. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08024748; Issue ID: ALPS08029526.</description><pubDate>Mon, 01 Apr 2024 02:46:21 +0000</pubDate></item><item><title>CVE-2024-20046 | In battery, there is a possible escalation of privilege due to an integer overflow. This could lead to local escalation of privilege with Sy...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20046</link><description>In battery, there is a possible escalation of privilege due to an integer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08485622; Issue ID: ALPS08485622.</description><pubDate>Mon, 01 Apr 2024 02:46:21 +0000</pubDate></item><item><title>CVE-2024-20047 | In battery, there is a possible out of bounds read due to an integer overflow. This could lead to local information disclosure with System e...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20047</link><description>In battery, there is a possible out of bounds read due to an integer overflow. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08587865; Issue ID: ALPS08486807.</description><pubDate>Mon, 01 Apr 2024 02:46:21 +0000</pubDate></item><item><title>CVE-2024-20048 | In flashc, there is a possible information disclosure due to an uncaught exception. This could lead to local information disclosure with Sys...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20048</link><description>In flashc, there is a possible information disclosure due to an uncaught exception. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541769; Issue ID: ALPS08541769.</description><pubDate>Mon, 01 Apr 2024 02:46:22 +0000</pubDate></item><item><title>CVE-2024-20049 | In flashc, there is a possible information disclosure due to an uncaught exception. This could lead to local information disclosure with Sys...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20049</link><description>In flashc, there is a possible information disclosure due to an uncaught exception. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541765; Issue ID: ALPS08541765.</description><pubDate>Mon, 01 Apr 2024 02:46:22 +0000</pubDate></item><item><title>CVE-2024-20050 | In flashc, there is a possible information disclosure due to an uncaught exception. This could lead to local information disclosure with Sys...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20050</link><description>In flashc, there is a possible information disclosure due to an uncaught exception. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541757; Issue ID: ALPS08541757.</description><pubDate>Mon, 01 Apr 2024 02:46:22 +0000</pubDate></item><item><title>CVE-2024-20051 | In flashc, there is a possible system crash due to an uncaught exception. This could lead to local denial of service with System execution p...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20051</link><description>In flashc, there is a possible system crash due to an uncaught exception. This could lead to local denial of service with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541757; Issue ID: ALPS08541758.</description><pubDate>Mon, 01 Apr 2024 02:46:23 +0000</pubDate></item><item><title>CVE-2024-20052 | In flashc, there is a possible information disclosure due to an uncaught exception. This could lead to local information disclosure with Sys...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20052</link><description>In flashc, there is a possible information disclosure due to an uncaught exception. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541757; Issue ID: ALPS08541761.</description><pubDate>Mon, 01 Apr 2024 02:46:23 +0000</pubDate></item><item><title>CVE-2024-20053 | In flashc, there is a possible out of bounds write due to an uncaught exception. This could lead to local escalation of privilege with Syste...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20053</link><description>In flashc, there is a possible out of bounds write due to an uncaught exception. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08541757; Issue ID: ALPS08541764.</description><pubDate>Mon, 01 Apr 2024 02:46:23 +0000</pubDate></item><item><title>CVE-2024-20054 | In gnss, there is a possible escalation of privilege due to a missing bounds check. This could lead to local escalation of privilege with Sy...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20054</link><description>In gnss, there is a possible escalation of privilege due to a missing bounds check. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS08580200; Issue ID: ALPS08580200.</description><pubDate>Mon, 01 Apr 2024 02:46:24 +0000</pubDate></item><item><title>CVE-2024-20055 | In imgsys, there is a possible information disclosure due to a missing bounds check. This could lead to local information disclosure with Sy...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-20055</link><description>In imgsys, there is a possible information disclosure due to a missing bounds check. This could lead to local information disclosure with System execution privileges needed. User interaction is needed for exploitation Patch ID: ALPS08518692; Issue ID: MSV-1012.</description><pubDate>Mon, 01 Apr 2024 02:46:24 +0000</pubDate></item><item><title>CVE-2024-31033 | JJWT (aka Java JWT) through 0.12.5 ignores certain characters and thus a user might falsely conclude that they have a strong key. The impact...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-31033</link><description>JJWT (aka Java JWT) through 0.12.5 ignores certain characters and thus a user might falsely conclude that they have a strong key. The impacted code is the setSigningKey() method within the DefaultJwtParser class and the signWith() method within the DefaultJwtBuilder class. NOTE: the vendor disputes this because the "ignores" behavior cannot occur (in any version) unless there is a user error in how JJWT is used, and because the version that was actually tested must have been more than six years out of date.</description><pubDate>Mon, 01 Apr 2024 02:20:58 +0000</pubDate></item><item><title>CVE-2024-28895 | 'Yahoo! JAPAN' App for Android v2.3.1 to v3.161.1 and 'Yahoo! JAPAN' App for iOS v3.2.2 to v4.109.0 contain a cross-site scripting vulnerabi...</title><link>https://www.cve.org/CVERecord?id=CVE-2024-28895</link><description>'Yahoo! JAPAN' App for Android v2.3.1 to v3.161.1 and 'Yahoo! JAPAN' App for iOS v3.2.2 to v4.109.0 contain a cross-site scripting vulnerability. If this vulnerability is exploited, an arbitrary script may be executed on the WebView of 'Yahoo! JAPAN' App via other app installed on the user's device.</description><pubDate>Mon, 01 Apr 2024 00:53:03 +0000</pubDate></item></channel></rss>